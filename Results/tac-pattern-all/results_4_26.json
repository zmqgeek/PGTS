{"options": {"method": "ours", "eval_id": "tac-pattern-all", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 26, "proj_idx": 4, "filter": null, "path": "runs/tac/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 49, "tac_vocab_file": "tac_vocab_no_unk.pickle", "cutoff_len": 3}, "results": [{"filename": "../data/disel/Examples/Calculator/CalculatorServerLib.json", "proof_name": "tryrecv_req_act_obligation_1", "success": false, "proof_gt": ["by case/andP:H=>/eqP->; rewrite domPt inE/=."], "proof_pred": ["elim cls.", "elim l.", "elim cs.", "elim f.", "intros.", "elim f.", "elim f.", "elim f.", "elim f.", "elim f.", "elim l0.", "intros.", "elim f.", "elim f.", "elim f.", "elim f."], "time": 147.87104320526123, "num_tactics": 300, "proof_tree": {"current_proof_state": "tryrecv_req_act_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim cls.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim cs.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction a.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction a.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction a.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Hs.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction a.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction a.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim l0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/CalculatorServerLib.json", "proof_name": "tryrecv_req_obligation_1", "success": false, "proof_gt": ["apply: ghC=>i1 ps E1 C1.", "apply: act_rule=>i2 R1; split=>//=; first by apply: (proj2 (rely_coh R1)).", "move=>r i3 i4[_]/=St R3.", "case: St=>C2; case.", "-", "by move=>[]?->Z; subst i3;rewrite (rely_loc' _ R3) (rely_loc' _ R1).", "case=>k[m][tms][from][rt][pf'][[F]]H1 H2 H3/andP[/eqP Z]H4/= Z'->; subst k i3.", "move: rt pf' (coh_s l C2) H1 H2 H3 H4 R3.", "rewrite prEq=>rt pf' cohs H1 H2 H3 H4 R3.", "case: H1 H4; last by case=>//=->.", "move=>Z _; subst rt; move: H3; rewrite /msg_wf/=/sr_wf=>->; split=>//.", "set d := (getStatelet i2 l).", "have P1: valid (dstate d) by apply: (cohVl cohs).", "have P2: valid i2 by apply: (cohS (proj2 (rely_coh R1))).", "have P3: l \\in dom i2 by rewrite -(cohD(proj2(rely_coh R1)))domPt inE/=.", "rewrite -(rely_loc' _ R1) in E1.", "-", "by rewrite (rely_loc' _ R3)/= locE//=/sr_step Hs/= (getStK cohs E1).", "case: (cohs)=>Cs _ _ _.", "move/esym: F=> F.", "by case: Cs=>_/(_ _ _ F); rewrite /cohMsg/= H2/=; case."], "proof_pred": ["clear.", "hnf.", "intros.", "destruct H.", "destruct H.", "destruct f.", "auto.", "destruct x.", "destruct n.", "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "destruct d.", "destruct prog_of.", "destruct cls.", "destruct cs.", "destruct f.", "destruct s.", "destruct l.", "tauto.", "clear i0.", "tauto.", "simpl.", "clear.", "exfalso.", "revert i0.", "clear.", "revert s0.", "case f.", "contradict set_of.", "intros.", "elim s.", "intros."], "time": 113.28316974639893, "num_tactics": 300, "proof_tree": {"current_proof_state": "tryrecv_req_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct sv.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion l.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion l.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "destruct n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct sv.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct d.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct i0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct prog_of.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct set_of.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct cls.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct set_of.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct cs.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct set_of.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct i0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct set_of.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct s.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct i0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct set_of.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct p0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct l.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct i0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct set_of.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct p0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in i0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "tauto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear i0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "tauto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in i0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in i0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0 in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert i0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of sv ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of l ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of i0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of set_of ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of s0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i0 sv ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i0 l ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of s ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of prec ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( s0 sv ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( s0 l ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i0 i0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i0 set_of ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( s0 i0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict i0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of sv ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of l ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of set_of ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( set_of f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert s0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case set_of.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.tryrecv_req_act in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorServerLib.tryrecv_req_act in *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "contradict set_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim set_of.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim s.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim set_of.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/CalculatorServerLib.json", "proof_name": "receive_req_loop_obligation_1", "success": false, "proof_gt": ["by apply: with_spec x."], "proof_pred": ["clear.", "destruct cls.", "destruct cs.", "destruct f.", "auto.", "destruct l.", "destruct n.", "destruct sv.", "clear.", "destruct prec.", "clear prec.", "induction f.", "elim f.", "clear.", "intros.", "contradict a.", "intros.", "destruct a."], "time": 31.678858041763306, "num_tactics": 300, "proof_tree": {"current_proof_state": "receive_req_loop_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct cls.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct cs.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct prec.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in sv.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.tryrecv_req_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_3 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorServerLib.tryrecv_req in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct sv.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct prec.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert prec.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "clear prec.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorServerLib.tryrecv_req_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorServerLib.tryrecv_req in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( a a ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict a.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorServerLib.tryrecv_req_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct a.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/CalculatorServerLib.json", "proof_name": "receive_req_loop_obligation_2", "success": false, "proof_gt": ["by move:H; rewrite /receive_req_loop_inv (rely_loc' _ H0)."], "proof_pred": ["destruct H0.", "destruct cls.", "destruct cs.", "destruct b.", "destruct p.", "destruct H.", "destruct H.", "destruct H2.", "destruct l.", "destruct H1.", "destruct x.", "destruct H0.", "destruct H0.", "destruct H.", "destruct H0.", "destruct H1.", "destruct f.", "auto.", "destruct i.", "simpl.", "destruct cls.", "simpl in H3.", "split.", "symmetry.", "clear.", "destruct l.", "destruct sv.", "destruct a.", "destruct n.", "simpl in l.", "clear.", "symmetry."], "time": 79.6300539970398, "num_tactics": 300, "proof_tree": {"current_proof_state": "receive_req_loop_obligation_2", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct cls.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct cs.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct b.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct p.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H2.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct l.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct x.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in H3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H4 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H3 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold Huniq in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold prec in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.tryrecv_req_obligation_1 in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H3.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct i.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct cls.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Huniq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Hs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply sv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold sv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in sv.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "destruct l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct sv.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct sv.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct a.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct s0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold sv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorServerLib.tryrecv_req.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/CalculatorServerLib.json", "proof_name": "send_ans_act_obligation_1", "success": false, "proof_gt": ["by rewrite /cal_sends /InMem/=; left."], "proof_pred": ["clear.", "exfalso.", "revert cls.", "intuition.", "revert cls.", "intros.", "revert cs.", "induction H."], "time": 19.41343116760254, "num_tactics": 300, "proof_tree": {"current_proof_state": "send_ans_act_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f cs ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f prec ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cs ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cs ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "PROVING", "used_tactic": "revert cls.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "induction cs.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.CalculatorServerLib.receive_req_loop_obligation_5 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.CalculatorServerLib.tryrecv_req_obligation_1 ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.receive_req_loop_obligation_5 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.tryrecv_req_obligation_1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.receive_req_loop ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.blocking_receive_req ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.receive_req_loop_obligation_1 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert cls H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert cls cls.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert cls.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "induction H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct a.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cls ).", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "destruct H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cls ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cs ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cs ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction a.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0 in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cs.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cs ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cs ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cs H ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.tryrecv_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert cs.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H.", "children": []}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/CalculatorServerLib.json", "proof_name": "send_answer_obligation_1", "success": false, "proof_gt": ["apply: ghC=>i1 ps [L1]H1 H2 H3 C1.", "apply: act_rule=>i2 R1.", "move: (proj2 (rely_coh R1))=>C2.", "case: (C2)=>_ _ _ _/(_ l); rewrite prEq=>C.", "set d := (getStatelet i2 l).", "split=>//[|r i3 i4[Sf]St R3].", "-", "split=>//; first 1 last.", "+", "by rewrite/Actions.can_send mem_cat Hs/= -(cohD C2)/= domPt/= inE eqxx.", "+", "rewrite/Actions.filter_hooks umfilt0=>???.", "move => F.", "apply sym_eq in F.", "move: F.", "move/find_some.", "by rewrite dom0.", "split=>//; split=>//.", "exists C; rewrite -(rely_loc' _ R1) in L1; rewrite (getStK C L1).", "by apply/hasP; exists (to, sv, args)=>//=; rewrite H3 !eqxx.", "rewrite (rely_loc' _ R3)=>{R3}.", "case: St=>->[b]/=[][]->->/=; split=>//.", "have P1: valid (dstate (getStatelet i2 l)).", "by apply: (cohVl C).", "have P2: valid i2 by apply: (cohS (proj2 (rely_coh R1))).", "have P3: l \\in dom i2 by rewrite -(cohD(proj2(rely_coh R1))) domPt inE/=.", "rewrite -(rely_loc' _ R1) in L1.", "by rewrite (pf_irr (ss_safe_coh _ ) C) locE// (getStK C L1)."], "proof_pred": ["clear.", "exfalso.", "revert l.", "intros.", "destruct args.", "destruct f.", "auto.", "destruct ans.", "destruct n.", "destruct f.", "clear l.", "revert cls.", "clear."], "time": 25.499939680099487, "num_tactics": 300, "proof_tree": {"current_proof_state": "send_answer_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear l.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in l.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold args.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ans.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold sv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold args in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear args.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear sv.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "PROVING", "used_tactic": "revert l.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l l ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l SerTop.CalculatorServerLib.send_ans_act_obligation_1 ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.CalculatorServerLib.send_ans_act_obligation_1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l SerTop.CalculatorServerLib.receive_req_loop_obligation_5 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l SerTop.CalculatorServerLib.receive_req_loop ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear l.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l l ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l SerTop.CalculatorServerLib.send_ans_act_obligation_1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( l SerTop.CalculatorServerLib.receive_req_loop_obligation_5 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_5 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_1 in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1 in H.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct args.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct ans.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct prec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cs in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold prec in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_5 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_1 in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in cs.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear l.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert cls.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.send_ans_act_obligation_1 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert cls.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict cls.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold cls in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.blocking_receive_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.CalculatorServerLib.receive_req_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls cls ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( cls SerTop.CalculatorServerLib.send_ans_act_obligation_1 ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_5 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.blocking_receive_req_obligation_1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.receive_req_loop_obligation_5.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear cls.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert cls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear cls.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorServerLib.send_ans_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorServerLib.send_ans_act_obligation_1 in *.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}]}