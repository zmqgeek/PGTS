diff --git a/Passport/agent.py b/Passport/agent.py
index 7f97379..d073315 100644
--- a/Passport/agent.py
+++ b/Passport/agent.py
@@ -19,6 +19,7 @@ from copy import deepcopy
 from time import time
 import numpy as np
 import string
+from search_tree import ProofSearchTree
 
 def action_seq_loss(logits_batch, actions_batch, opts):
     assert len(logits_batch) == len(actions_batch)
@@ -204,13 +205,14 @@ class Agent:
                     continue
                 print('proof: ', proof_env.proof['name'])
                 #print('cuda memory allocated before proof: ', torch.cuda.memory_allocated(self.opts.device), file=sys.stderr)
-                success, proof_pred, time, num_tactics = self.prove(proof_env)
+                success, proof_pred, time, num_tactics,root = self.prove(proof_env)
                 results.append({
                     'filename': filename, 'proof_name': proof_env.proof['name'], 'success': success,
                     'proof_gt': [step['command'][0] for step in proof_env.proof['steps'] if step['command'][1] != 'VernacEndProof'],
                     'proof_pred': proof_pred,
                     'time': time,
-                    'num_tactics': num_tactics,})
+                    'num_tactics': num_tactics,
+                    'proof_tree': root.to_dict(),})
                 if proof_name is not None:
                     break
         return results
@@ -280,6 +282,10 @@ class Agent:
         
         script = []
 
+        # initialize proof tree
+        root = ProofSearchTree(proof_env.proof['name'])
+        current_node = root
+
         # depth-first search starting from the trace
         while stack != [[]]:
             #print('stack: ', stack)
@@ -288,6 +294,8 @@ class Agent:
                 stack.pop()
                 script.pop()
                 proof_env.step('Undo.')
+                current_node.current_proof_state = "Backtraced"
+                current_node = current_node.parent
                 continue
             else:
                 tac = stack[-1].pop()
@@ -298,20 +306,31 @@ class Agent:
 
             if obs['result'] == 'SUCCESS':
                 script.append(tac)
+                current_node.add_child(ProofSearchTree(obs['result'], used_tactic=tac))
                 time = self.opts.timeout - obs['time_left']
                 num_tactics = self.opts.max_num_tactics - obs['num_tactics_left']
-                return True, script, time, num_tactics
+                return True, script, time, num_tactics,root
             elif obs['result'] in ['MAX_NUM_TACTICS_REACHED', 'MAX_TIME_REACHED']:
                 time = self.opts.timeout - obs['time_left']
                 num_tactics = self.opts.max_num_tactics - obs['num_tactics_left']
-                return False, script, time, num_tactics
+                return False, script, time, num_tactics,root
             elif obs['result'] in ['ERROR']:
+                current_node.add_child(ProofSearchTree(obs['result'], used_tactic=tac))
                 continue
             else:
                 assert obs['result'] == 'PROVING'
                 script.append(tac)
+                new_node = ProofSearchTree(obs['result'], used_tactic=tac)
+                current_node.add_child(new_node)
+                current_node = new_node
+
                 sig = get_goal_signature(obs['fg_goals'][0])
                 if sig in first_goal_signatures or len(script) >= self.opts.depth_limit:
+                    if sig in first_goal_signatures:
+                        current_node.current_proof_state = "GoalDouble"
+                    else:
+                        current_node.current_proof_state = "DepthLimit"
+                    current_node = current_node.parent
                     proof_env.step('Undo.')
                     script.pop()
                     continue
@@ -336,7 +355,7 @@ class Agent:
         print(obs['result'])
         time = self.opts.timeout - obs['time_left']
         num_tactics = self.opts.max_num_tactics - obs['num_tactics_left']
-        return False, script, time, num_tactics
+        return False, script, time, num_tactics,root
 
 
     def prove_IDDFS(self, proof_env, tac_template):
diff --git a/Passport/common_args.py b/Passport/common_args.py
index b582bf6..263d21c 100644
--- a/Passport/common_args.py
+++ b/Passport/common_args.py
@@ -17,8 +17,8 @@ def add_common_args(parser: argparse.ArgumentParser):
     parser.add_argument('--tac_vocab_file', type=str, default='token_vocab.pickle')
     parser.add_argument('--def_vocab_file', type=str, default='./names/names-known-200.pickle')
     parser.add_argument('--local_vocab_file', type=str, default='./names/locals-known-200.pickle')
-    parser.add_argument('--path_vocab_file', type=str, default='./names/paths-known-200.pickle')
-    parser.add_argument('--constructor_vocab_file', type=str, default='./names/constructors-known-100.pickle')
+    parser.add_argument('--path_vocab_file', type=str, default='./names/paths-known-220.pickle')
+    parser.add_argument('--constructor_vocab_file', type=str, default='./names/constructors-known-200.pickle')
     parser.add_argument('--cutoff_len', type=int, default=30)
     parser.add_argument('--merge_vocab', action='store_true', help='Merge all identifier vocabularies, with a single unknown')
 
diff --git a/coq_projects/functional-algebra/Makefile b/coq_projects/functional-algebra/Makefile
index fd7b9d7..3d05fd8 100644
--- a/coq_projects/functional-algebra/Makefile
+++ b/coq_projects/functional-algebra/Makefile
@@ -4,7 +4,7 @@
 ##   \VV/  #                                                                 ##
 ##    //   #                                                                 ##
 ###############################################################################
-## GNUMakefile for Coq 8.9+beta1
+## GNUMakefile for Coq 8.9.1
 
 # For debugging purposes (must stay here, don't move below)
 INITIAL_VARS := $(.VARIABLES)
@@ -186,7 +186,7 @@ COQDOCLIBS?=$(COQLIBS_NOML)
 # The version of Coq being run and the version of coq_makefile that
 # generated this makefile
 COQ_VERSION:=$(shell $(COQC) --print-version | cut -d " " -f 1)
-COQMAKEFILE_VERSION:=8.9+beta1
+COQMAKEFILE_VERSION:=8.9.1
 
 COQSRCLIBS?= $(foreach d,$(COQ_SRC_SUBDIRS), -I "$(COQLIB)$(d)")
 
diff --git a/coq_projects/makefile b/coq_projects/makefile
old mode 100644
new mode 100755
index 25e444f..8f14349
--- a/coq_projects/makefile
+++ b/coq_projects/makefile
@@ -1,5 +1,5 @@
-PROJS_TO_INSTALL = Categories CompCert math-comp coq-error-handlers coq-list-plus coq-cunit coq-list-string corespec fcsl-pcm InfSeqExt verdi VST UnifySL coquelicot algebra bellantonicook coq-ext-lib pocklington int-map coq-function-ninjas coq-iterable lin-alg coq-simple-io bigenough zorns-lemma finmap
-PROJS_ONLY_COMPILE = GeoCoq GeometricAlgebra bdds concat euler-formula ruler-compass-geometry twoSquare zfc shuffle hardware coq2html three-gap regexp automata izf lemma-overloading railroad-crossing idxassoc hoare-tut lesniewski-mereology additions checker domain-theory propcalc circuits zsearch-trees bbv ails dep-map markov rsa goedel generic-environments disel ctltctl lazy-pcf weak-up-to groups mini-compiler exceptions higman-s rem tree-automata coq-procrastination higman-cf coqoban ieee754 jordan-curve-theorem huffman zf pigeons hedges functions-in-zfc tortoise-hare-algorithm mod-red traversable-fincontainer buchberger constructive-geometry tarski-geometry float functional-algebra zchinese smc pts param-pi axiomatic-abp lambda maths quicksort-complexity fssec-model ipc chinese cours-de-coq graphs dictionaries dblib cecoa free-groups ramsey qarith amm11262 angles orb-stab qarith-stern-brocot group-theory demos distributed-reference-counting subst miniml fermat4 otway-rees SCEV-coq PolTac fundamental-arithmetics system ChargeCore QuickChick coqrel topology search-trees schroeder verdi-raft area-method coq-library-undecidability maple-mode
+PROJS_TO_INSTALL = math-comp coq-error-handlers coq-list-plus coq-cunit fcsl-pcm InfSeqExt verdi UnifySL coquelicot coq-ext-lib pocklington int-map coq-function-ninjas coq-iterable coq-simple-io zorns-lemma
+PROJS_ONLY_COMPILE = concat zfc coq2html hoare-tut dep-map goedel disel weak-up-to tree-automata coq-procrastination coqoban jordan-curve-theorem huffman pigeons functions-in-zfc buchberger functional-algebra zchinese chinese dblib angles demos fermat4 PolTac fundamental-arithmetics coqrel verdi-raft coq-library-undecidability maple-mode
 
 .DEFAULT_GOAL := all
 .PHONY : all clean install compile $(PROJS_TO_INSTALL) $(PROJS_ONLY_COMPILE) math-comp metalib StructTact cheerios
@@ -21,8 +21,6 @@ core-dependencies :
 LBITS = $(shell getconf LONG_BIT)
 OS = $(shell uname)
 
-Categories : 
-	cd Categories && ./configure.sh && make
 
 ifeq ($(OS), Darwin)
 COMPCERT_ARCH = x86_$(LBITS)-macosx
@@ -31,10 +29,6 @@ ifeq ($(OS), Linux)
 COMPCERT_ARCH = x86_$(LBITS)-linux
 endif
 
-CompCert : 
-	opam install --yes menhir=20181113 && eval $(opam env)
-	cd CompCert/ && ./configure $(COMPCERT_ARCH) && make
-
 math-comp : 
 	cd math-comp/mathcomp/ && make && make install
 
@@ -50,13 +44,7 @@ coq-list-plus :
 coq-cunit : 
 	cd coq-cunit/ && ./configure.sh && make && make install
 
-coq-list-string : 
-	cd coq-list-string/ && ./configure.sh && make && make install
-
-corespec :
-	cd corespec/src/FcEtt/ && make
-
-fcsl-pcm : 
+fcsl-pcm :
 	cd fcsl-pcm/ && make && make install
 
 StructTact : 
@@ -65,34 +53,25 @@ StructTact :
 cheerios :
 	cd cheerios/ && ./configure && make && make install
 
-InfSeqExt : 
+InfSeqExt :
 	cd InfSeqExt/ && ./configure && make && make install
 
 verdi : | cheerios
 	cd verdi/ && ./configure && make && make install
 
-VST : 
-	cd VST/ && make
-
 UnifySL : 
 	cd UnifySL/ && make
 
 coquelicot : 
 	cd coquelicot/ && ./configure && ./remake && ./remake install
 
-algebra : 
-	cd algebra/ && make && make install
-
-bellantonicook : 
-	cd bellantonicook/ && make && make install
-
-coq-ext-lib : 
+coq-ext-lib :
 	cd coq-ext-lib/ && make && make install
 
-pocklington : 
+pocklington :
 	cd pocklington/ && make && make install
 
-int-map : 
+int-map :
 	cd int-map/ && make && make install
 
 coq-function-ninjas : 
@@ -101,330 +80,90 @@ coq-function-ninjas :
 coq-iterable : 
 	cd coq-iterable/ && ./configure.sh && make && make install
 
-lin-alg : 
-	cd lin-alg/ && make && make install
-
 coq-simple-io : 
 	cd coq-simple-io && make && make install
 
-bigenough : 
-	cd bigenough/ && make && make install
-
-finmap :
-	cd finmap/ && make && make install
-
 zorns-lemma : 
 	cd zorns-lemma/ && make && make install
 
-GeoCoq : 
-	cd GeoCoq/ && ./configure.sh && make
-
-GeometricAlgebra : 
-	cd GeometricAlgebra/ && make
-
-bdds : 
-	cd bdds/ && make
-
-concat : 
-	cd concat/ && make
-
-euler-formula : 
-	cd euler-formula/ && make
-
-ruler-compass-geometry : 
-	cd ruler-compass-geometry/ && make
-
-twoSquare : 
-	cd twoSquare/ && make
-
 zfc : 
 	cd zfc/ && make
 
-shuffle : 
-	cd shuffle/ && make
-
-hardware : 
-	cd hardware/ && make
-
 coq2html : 
 	cd coq2html/ && make
 
-three-gap : 
-	cd three-gap/ && make
-
-regexp : 
-	cd regexp/ && make
-
-automata : 
-	cd automata/ && make
-
-izf : 
-	cd izf/ && make
-
-lemma-overloading : 
-	cd lemma-overloading/ && make
-
-railroad-crossing : 
-	cd railroad-crossing/ && make
-
-idxassoc : 
-	cd idxassoc/ && make
-
 hoare-tut : 
 	cd hoare-tut/ && make
 
-lesniewski-mereology : 
-	cd lesniewski-mereology/ && make
-
-additions : 
-	cd additions/ && make
-
-checker : 
-	cd checker/ && make
-
-domain-theory : 
-	cd domain-theory/ && make
-
-propcalc : 
-	cd propcalc/ && make
-
-circuits : 
-	cd circuits/ && make
-
-zsearch-trees : 
-	cd zsearch-trees/ && make
-
-bbv : 
-	cd bbv/ && make
-
-ails : 
-	cd ails/ && make
-
 dep-map : 
 	cd dep-map/ && make
 
-markov : 
-	cd markov/ && make
-
-rsa : 
-	cd rsa/ && make
-
 goedel : 
 	cd goedel/ && make
 
-generic-environments : 
-	cd generic-environments/ && make
-
 disel : 
 	cd disel/ && make
 
-ctltctl : 
-	cd ctltctl/ && make
-
-lazy-pcf : 
-	cd lazy-pcf/ && make
-
 weak-up-to : 
 	cd weak-up-to/ && make
 
-groups : 
-	cd groups/ && make
-
-mini-compiler : 
-	cd mini-compiler/ && make
-
-exceptions : 
-	cd exceptions/ && make
-
-higman-s : 
-	cd higman-s/ && make
-
-rem : 
-	cd rem/ && make
-
 tree-automata : 
 	cd tree-automata/ && make
 
 coq-procrastination : 
 	cd coq-procrastination/ && make
 
-higman-cf : 
-	cd higman-cf/ && make
-
 coqoban : 
 	cd coqoban/ && make
 
-ieee754 : 
-	cd ieee754/ && make
-
 jordan-curve-theorem : 
 	cd jordan-curve-theorem/ && make
 
 huffman : 
 	cd huffman/ && make
 
-zf : 
-	cd zf/ && make
-
 pigeons : 
 	cd pigeons/ && make
 
-hedges : 
-	cd hedges/ && make
-
 functions-in-zfc : 
 	cd functions-in-zfc/ && make
 
-tortoise-hare-algorithm : 
-	cd tortoise-hare-algorithm/ && make
-
-mod-red : 
-	cd mod-red/ && make
-
-traversable-fincontainer : 
-	cd traversable-fincontainer/ && make
-
 buchberger : 
 	cd buchberger/ && make
 
-constructive-geometry : 
-	cd constructive-geometry/ && make
-
-tarski-geometry : 
-	cd tarski-geometry/ && make
-
-float : 
-	cd float/ && make
-
 functional-algebra : 
 	cd functional-algebra/ && make
 
 zchinese : 
 	cd zchinese/ && make
 
-smc : 
-	cd smc/ && make
-
-pts : 
-	cd pts/ && make
-
-param-pi : 
-	cd param-pi/ && make
-
-axiomatic-abp : 
-	cd axiomatic-abp/ && make
-
-lambda : 
-	cd lambda/ && make
-
-maths : 
-	cd maths/ && make
-
-quicksort-complexity : 
-	cd quicksort-complexity/ && make
-
-fssec-model : 
-	cd fssec-model/ && make
-
-ipc : 
-	cd ipc/ && make
-
 chinese : 
 	cd chinese/ && make
 
-cours-de-coq : 
-	cd cours-de-coq/ && make
-
-graphs : 
-	cd graphs/ && make
-
-dictionaries : 
-	cd dictionaries/ && make
-
 dblib : 
 	cd dblib/ && make
 
-cecoa : 
-	cd cecoa/ && make
-
-free-groups : 
-	cd free-groups/ && make
-
-ramsey : 
-	cd ramsey/ && make
-
-qarith : 
-	cd qarith/ && make
-
-amm11262 : 
-	cd amm11262/ && make
-
 angles : 
 	cd angles/ && make
 
-orb-stab : 
-	cd orb-stab/ && make
-
-qarith-stern-brocot : 
-	cd qarith-stern-brocot/ && make
-
-group-theory : 
-	cd group-theory/ && make
-
 demos : 
 	cd demos/ && make
 
-distributed-reference-counting : 
-	cd distributed-reference-counting/ && make
-
-subst : 
-	cd subst/ && make
-
-miniml : 
-	cd miniml/ && make
-
 fermat4 : 
 	cd fermat4/ && make
 
-otway-rees : 
-	cd otway-rees/ && make
-
-SCEV-coq : 
-	cd SCEV-coq/ && make
-
 PolTac : 
 	cd PolTac/ && make
 
 fundamental-arithmetics : 
 	cd fundamental-arithmetics/ && make
 
-system : 
-	cd system/ && ./configure.sh && make
-
-ChargeCore : 
-	cd ChargeCore/ChargeCore/ && make
-
-QuickChick : 
-	cd QuickChick/ && make
-
-area-method : 
-	cd area-method/ && make
-
 coq-library-undecidability : 
 	cd coq-library-undecidability/ && make
 
 coqrel : 
 	cd coqrel/ && ./configure && make
 
-topology : 
-	cd topology/ && make
-
-search-trees : 
-	cd search-trees/ && make
-
-schroeder : 
-	cd schroeder/ && make
-
 verdi-raft : 
 	cd verdi-raft/ && ./configure && make
 
@@ -439,130 +178,47 @@ clean :
 	(cd coq-error-handlers/ && make clean) || true
 	(cd coq-list-plus/ && make clean) || true
 	(cd coq-cunit/ && make clean) || true
-	(cd coq-list-string/ && make clean) || true
-	(cd corespec/src/FcEtt/ && make clean) || true
 	(cd fcsl-pcm/ && make clean) || true
 	(cd StructTact/ && make clean) || true
 	(cd cheerios/ && make clean) || true
 	(cd InfSeqExt/ && make clean) || true
 	(cd verdi/ && make clean) || true
-	(cd VST/ && make clean) || true
-	(cd UnifySL/ && make) || true
+	(cd UnifySL/ && make clean) || true
 	(cd coquelicot/ && ./remake clean) || true
-	(cd algebra/ && make clean) || true
-	(cd bellantonicook/ && make clean) || true
 	(cd coq-ext-lib/ && make clean) || true
 	(cd pocklington/ && make clean) || true
 	(cd int-map/ && make clean) || true
 	(cd coq-function-ninjas/ && make clean) || true
 	(cd coq-iterable/ && make clean) || true
-	(cd lin-alg/ && make clean) || true
 	(cd coq-simple-io && make clean) || true
-	(cd bigenough/ && make clean) || true
-	(cd finmap/ && make clean) || true
 	(cd zorns-lemma/ && make clean) || true
-	(cd GeoCoq/ && make clean) || true
-	(cd GeometricAlgebra/ && make clean) || true
-	(cd bdds/ && make clean) || true
 	(cd concat/ && make clean) || true
-	(cd euler-formula/ && make clean) || true
-	(cd ruler-compass-geometry/ && make clean) || true
-	(cd twoSquare/ && make clean) || true
 	(cd zfc/ && make clean) || true
-	(cd shuffle/ && make clean) || true
-	(cd hardware/ && make clean) || true
 	(cd coq2html/ && make clean) || true
-	(cd three-gap/ && make clean) || true
-	(cd regexp/ && make clean) || true
-	(cd automata/ && make clean) || true
-	(cd izf/ && make clean) || true
-	(cd lemma-overloading/ && make clean) || true
-	(cd railroad-crossing/ && make clean) || true
-	(cd idxassoc/ && make clean) || true
 	(cd hoare-tut/ && make clean) || true
-	(cd lesniewski-mereology/ && make clean) || true
-	(cd additions/ && make clean) || true
-	(cd checker/ && make clean) || true
-	(cd domain-theory/ && make clean) || true
-	(cd propcalc/ && make clean) || true
-	(cd circuits/ && make clean) || true
-	(cd zsearch-trees/ && make clean) || true
-	(cd bbv/ && make clean) || true
-	(cd ails/ && make clean) || true
 	(cd dep-map/ && make clean) || true
-	(cd markov/ && make clean) || true
-	(cd rsa/ && make clean) || true
 	(cd goedel/ && make clean) || true
-	(cd generic-environments/ && make clean) || true
 	(cd disel/ && make clean) || true
-	(cd ctltctl/ && make clean) || true
-	(cd lazy-pcf/ && make clean) || true
 	(cd weak-up-to/ && make clean) || true
-	(cd groups/ && make clean) || true
-	(cd mini-compiler/ && make clean) || true
-	(cd exceptions/ && make clean) || true
-	(cd higman-s/ && make clean) || true
-	(cd rem/ && make clean) || true
 	(cd tree-automata/ && make clean) || true
 	(cd coq-procrastination/ && make clean) || true
-	(cd higman-cf/ && make clean) || true
 	(cd coqoban/ && make clean) || true
-	(cd ieee754/ && make clean) || true
 	(cd jordan-curve-theorem/ && make clean) || true
 	(cd huffman/ && make clean) || true
-	(cd zf/ && make clean) || true
 	(cd pigeons/ && make clean) || true
-	(cd hedges/ && make clean) || true
 	(cd functions-in-zfc/ && make clean) || true
-	(cd tortoise-hare-algorithm/ && make clean) || true
-	(cd mod-red/ && make clean) || true
-	(cd traversable-fincontainer/ && make clean) || true
 	(cd buchberger/ && make clean) || true
 	(cd constructive-geometry/ && make clean) || true
-	(cd tarski-geometry/ && make clean) || true
-	(cd float/ && make clean) || true
 	(cd functional-algebra/ && make clean) || true
 	(cd zchinese/ && make clean) || true
-	(cd smc/ && make clean) || true
-	(cd pts/ && make clean) || true
-	(cd param-pi/ && make clean) || true
-	(cd axiomatic-abp/ && make clean) || true
-	(cd lambda/ && make clean) || true
-	(cd maths/ && make clean) || true
-	(cd quicksort-complexity/ && make clean) || true
-	(cd fssec-model/ && make clean) || true
-	(cd ipc/ && make clean) || true
 	(cd chinese/ && make clean) || true
-	(cd cours-de-coq/ && make clean) || true
-	(cd graphs/ && make clean) || true
-	(cd dictionaries/ && make clean) || true
 	(cd dblib/ && make clean) || true
-	(cd cecoa/ && make clean) || true
-	(cd free-groups/ && make clean) || true
-	(cd ramsey/ && make clean) || true
-	(cd qarith/ && make clean) || true
-	(cd amm11262/ && make clean) || true
 	(cd angles/ && make clean) || true
-	(cd orb-stab/ && make clean) || true
-	(cd qarith-stern-brocot/ && make clean) || true
-	(cd group-theory/ && make clean) || true
 	(cd demos/ && make clean) || true
-	(cd distributed-reference-counting/ && make clean) || true
-	(cd subst/ && make clean) || true
-	(cd miniml/ && make clean) || true
 	(cd fermat4/ && make clean) || true
-	(cd otway-rees/ && make clean) || true
-	(cd SCEV-coq/ && make clean) || true
 	(cd PolTac/ && make clean) || true
 	(cd fundamental-arithmetics/ && make clean) || true
-	(cd system/ && make clean) || true
-	(cd ChargeCore/ChargeCore/ && make clean) || true
-	(cd QuickChick/ && make clean) || true
-	(cd area-method/ && make clean) || true
 	(cd coqrel/ && make clean) || true
-	(cd topology/ && make clean) || true
-	(cd search-trees/ && make clean) || true
-	(cd schroeder/ && make clean) || true
 	(cd verdi-raft/ && make clean) || true
 	(cd coq-library-undecidability/ && make clean) || true
 	(cd maple-mode/ && make clean) || true
diff --git a/coq_projects/pigeons/Makefile b/coq_projects/pigeons/Makefile
index fd7b9d7..3d05fd8 100644
--- a/coq_projects/pigeons/Makefile
+++ b/coq_projects/pigeons/Makefile
@@ -4,7 +4,7 @@
 ##   \VV/  #                                                                 ##
 ##    //   #                                                                 ##
 ###############################################################################
-## GNUMakefile for Coq 8.9+beta1
+## GNUMakefile for Coq 8.9.1
 
 # For debugging purposes (must stay here, don't move below)
 INITIAL_VARS := $(.VARIABLES)
@@ -186,7 +186,7 @@ COQDOCLIBS?=$(COQLIBS_NOML)
 # The version of Coq being run and the version of coq_makefile that
 # generated this makefile
 COQ_VERSION:=$(shell $(COQC) --print-version | cut -d " " -f 1)
-COQMAKEFILE_VERSION:=8.9+beta1
+COQMAKEFILE_VERSION:=8.9.1
 
 COQSRCLIBS?= $(foreach d,$(COQ_SRC_SUBDIRS), -I "$(COQLIB)$(d)")
 
diff --git a/eval_env.py b/eval_env.py
index 2b6bd3a..85f46d5 100644
--- a/eval_env.py
+++ b/eval_env.py
@@ -7,7 +7,7 @@ from collections import OrderedDict
 import json
 import sexpdata
 from utils import update_env
-from gallina import GallinaTermParser
+#from gallina import GallinaTermParser
 import os
 from glob import glob
 import pdb
@@ -75,9 +75,11 @@ class ProofEnv:
             states_cnt = self.serapi.pull()  # delete the saved state if no error
         except CoqExn as ex: 
             self.serapi.pop()  # restore the state
+            # print(f"current error is: {ex}")
             return self.feedback('ERROR', error=ex)
         except CoqTimeout as ex: 
             self.serapi.shutdown()
+            # print(f"current error is: {ex}")
             return self.feedback('ERROR', error=ex)
 
         if '(VernacEndProof Admitted)' in ast:
@@ -137,9 +139,9 @@ class FileEnv:
     def initialize_serapi(self):
         serapi = SerAPI(timeout=1200, debug=self.debug)
         if self.with_hammer is not None:
-            atp_limit = 29 * self.hammer_timeout // 60
-            reconstr_limit = 28 * self.hammer_timeout // 60
-            crush_limit = 3 * self.hammer_timeout // 60
+            atp_limit = self.hammer_timeout // 60
+            reconstr_limit = self.hammer_timeout // 60
+            crush_limit = self.hammer_timeout // 60
             serapi.execute('From Hammer Require Import Hammer. Set Hammer ATPLimit %d. Set Hammer ReconstrLimit %d. Set Hammer CrushLimit %d.' % (atp_limit, reconstr_limit, crush_limit))
             if self.with_hammer == 'Z3':
                 serapi.execute('Unset Hammer Vampire. Unset Hammer Eprover. Unset Hammer CVC4.')
diff --git a/install.sh b/install.sh
index 0278632..b762d17 100755
--- a/install.sh
+++ b/install.sh
@@ -4,8 +4,8 @@ COQ_ROOT=$(pwd)/coq
 DEPENDENCIES="dune=1.10.0 cmdliner=1.0.4 ppx_sexp_conv=v0.12.0 ppx_deriving=4.3 sexplib=v0.12.0 ppx_import=1.6.2 camlp5=7.08 coq=8.9.1"
 
 echo "Installing Dependencies.."
-write-opam.sh switch $OPAM_SWITCH && eval $(opam env)
-write-opam.sh install --yes $DEPENDENCIES
+opam switch $OPAM_SWITCH && eval $(opam env)
+opam install --yes $DEPENDENCIES
 echo "Dependencies installed"
 
 echo "Installing Coq.."
diff --git a/serapi.py b/serapi.py
index 55d475f..2cf6d2c 100644
--- a/serapi.py
+++ b/serapi.py
@@ -120,6 +120,8 @@ class SerAPI:
           #  assert False
         ack_num = int(re.search(r'^\(Answer (?P<num>\d+)', raw_responses)['num'])
         for num in re.findall(r'(?<=\(Answer) \d+', raw_responses):
+            if int(num) != ack_num:
+                print(f"Debug: Mismatch in response ID. Expected: {ack_num}, Found: {num}.")       
             assert int(num) == ack_num
         responses = []
         msg_str = []
@@ -354,6 +356,7 @@ class SerAPI:
 
     def push(self):
         'push a new frame on the state stack (a checkpoint), which can be used to roll back to the current state'
+        # print("Debug: Pushing new state.")
         self.states_stack.append([])
 
 
@@ -370,6 +373,7 @@ class SerAPI:
 
     def pop(self):
         'rollback to a checkpoint created by push'
+        # print("Debug: Popping state.")
         self.cancel(self.states_stack.pop())
 
 
@@ -388,6 +392,13 @@ class SerAPI:
     def shutdown(self):
         self.proc.kill(signal.SIGKILL)
         self.dead = True
+    
+    def reset(self):
+        print("Reset Coq Environment.")
+        self.proc.sendeof()
+        self.proc.wait()
+        self.states_stack.clear()
+        self.__init__(timeout=self.proc.timeout, debug=self.debug)
 
     def __enter__(self):
         return self
diff --git a/swarm/evaluate-file-parallel.sh b/swarm/evaluate-file-parallel.sh
index a46ae6a..8ed19fd 100755
--- a/swarm/evaluate-file-parallel.sh
+++ b/swarm/evaluate-file-parallel.sh
@@ -1,7 +1,7 @@
 #!/usr/bin/env bash
 
 # determine physical directory of this script
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
 [[ "$#" -lt 3 ]] && echo "Wrong number of parameters! This script takes at least three arguments, an evaluation id, a project id, and a file id" && exit 1
 EVAL_ID=$1
@@ -17,7 +17,7 @@ mkdir -p output/evaluate/${EVAL_ID}
 
 for proof_idx in $(eval echo "{0..$(($NUM_PROOFS - 1))}"); do
   PROOF=$(echo "$PROOFS" | awk "NR==(${proof_idx}+1)")
-  $TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-proof -p defq \
+  $TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-proof -p xahcnormal \
     --comment="${PROJ_IDX}_${FILE_IDX}_${proof_idx}" \
     --output=output/evaluate/${EVAL_ID}/evaluate_proj_${PROJ_IDX}_${FILE_IDX}_${proof_idx}.out \
     ${TT_DIR}/swarm/evaluate-proj.sh ${EVAL_ID} --proj_idx ${PROJ_IDX} --file_idx ${FILE_IDX} --proof ${PROOF} "$@"
diff --git a/swarm/evaluate-proj-array-item.sbatch b/swarm/evaluate-proj-array-item.sbatch
index 5f935cb..6f85892 100644
--- a/swarm/evaluate-proj-array-item.sbatch
+++ b/swarm/evaluate-proj-array-item.sbatch
@@ -1,7 +1,7 @@
 #!/usr/bin/env bash
 
-#SBATCH -p defq
-TT_DIR=$HOME/work/Passport
+#SBATCH -p xahcnormal
+TT_DIR=$HOME/Passport
 [[ "$#" -lt 2 ]] && echo "Wrong number of parameters! This script takes at least two arguments, a weights id and a project index" && exit 1
 EVAL_ID=$1
 PROJ_IDX=$2
diff --git a/swarm/evaluate-proj-parallel.sh b/swarm/evaluate-proj-parallel.sh
index 5a3f401..cbd4518 100755
--- a/swarm/evaluate-proj-parallel.sh
+++ b/swarm/evaluate-proj-parallel.sh
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 [[ "$#" -lt 2 ]] && echo "Wrong number of parameters! This script takes at least two arguments, a weights id and a project index" && exit 1
 EVAL_ID=$1
 PROJ_IDX=$2
@@ -10,7 +10,7 @@ NUM_FILES=$(find ${TT_DIR}/data/${PROJ} -name "*.json" | wc -l)
 if (( $NUM_FILES == 0 )); then exit 0; fi
 
 mkdir -p output/evaluate/${EVAL_ID}
-$TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-file -p defq \
+$TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-file -p xahcnormal \
   --comment="${PROJ_IDX}" \
   --output=output/evaluate/${EVAL_ID}/evaluate_proj_${PROJ_IDX}_%a.out \
   --array=0-$(($NUM_FILES - 1 )) \
diff --git a/swarm/evaluate-proj.sh b/swarm/evaluate-proj.sh
index e14ba7d..4fc6e13 100755
--- a/swarm/evaluate-proj.sh
+++ b/swarm/evaluate-proj.sh
@@ -2,7 +2,7 @@
 
 set -e
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
 [[ "$#" -lt 1 ]] && echo "Wrong number of parameters! This script takes at least one argument, a weights id" && exit 1
 
@@ -11,5 +11,5 @@ source $TT_DIR/swarm/prelude.sh
 EVAL_ID=$1
 shift 1
 
-cd Passport
-python evaluate.py ours ${EVAL_ID} --path runs/${EVAL_ID}/checkpoints/model_002.pth "$@"
+cd TacTok
+python evaluate.py ours ${EVAL_ID} --path runs/tac/checkpoints/model_003.pth --num_tactics 49 "$@"
diff --git a/swarm/evaluate-test.sh b/swarm/evaluate-test.sh
index b6bb1d1..8a63417 100755
--- a/swarm/evaluate-test.sh
+++ b/swarm/evaluate-test.sh
@@ -2,13 +2,13 @@
 
 set -e
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
 [[ "$#" -lt 1 ]] && echo "Wrong number of parameters! This script takes at least one argument, a weights id" && exit 1
 
 EVAL_ID=$1
 shift 1
-DEST="$TT_DIR/Passport/evaluation/$EVAL_ID"
+DEST="$TT_DIR/TacTok/evaluation/$EVAL_ID"
 
 if [ -d $DEST ]; then
     read -r -p "Destination directory $DEST exists. Remove it? [y/N] " input
@@ -23,7 +23,7 @@ if [ -d $DEST ]; then
             set -x
             ${TT_DIR}/swarm/show-tasks-left.sh -B 661 -s 10 ${EVAL_ID}
             set +x
-            if ! ls $TT_DIR/Passport/evaluation/${EVAL_ID}/results*.json &> /dev/null; then
+            if ! ls $TT_DIR/TacTok/evaluation/${EVAL_ID}/results*.json &> /dev/null; then
                 echo "Evaluation failed for all files, exiting..."
                 exit 1
             fi
@@ -49,13 +49,13 @@ done
 set -x
 ${TT_DIR}/swarm/show-tasks-left.sh -B 661 -s 20 ${EVAL_ID}
 set +x
-if ! ls $TT_DIR/Passport/evaluation/${EVAL_ID}/results*.json &> /dev/null; then
+if ! ls $TT_DIR/TacTok/evaluation/${EVAL_ID}/results*.json &> /dev/null; then
     echo "Evaluation failed for all files, exiting..."
     exit 1
 fi
-scancel -n ${EVAL_ID}-evaluate-file
-${TT_DIR}/swarm/cancel-all-tasks.sh ${EVAL_ID}
-${TT_DIR}/swarm/rerun-missing-proofs.sh -N 4000 ${EVAL_ID} "$@"
-set -x
-${TT_DIR}/swarm/show-tasks-left.sh -b -s 20 ${EVAL_ID}
-set +x
+# scancel -n ${EVAL_ID}-evaluate-file
+# ${TT_DIR}/swarm/cancel-all-tasks.sh ${EVAL_ID}
+# ${TT_DIR}/swarm/rerun-missing-proofs.sh -N 4000 ${EVAL_ID} "$@"
+# set -x
+# ${TT_DIR}/swarm/show-tasks-left.sh -b -s 20 ${EVAL_ID}
+# set +x
diff --git a/swarm/evaluate_test_worker.py b/swarm/evaluate_test_worker.py
index ce43159..0ab4c2f 100755
--- a/swarm/evaluate_test_worker.py
+++ b/swarm/evaluate_test_worker.py
@@ -12,7 +12,7 @@ import sys
 from tqdm import tqdm
 from typing import List
 
-tt_dir = os.path.expandvars("$HOME/work/Passport")
+tt_dir = os.path.expandvars("$HOME/Passport")
 
 def is_yes(response: str) -> bool:
     return response in ["yes", "Yes", "YES", "y", "Y"]
diff --git a/swarm/evaluation-worker.py b/swarm/evaluation-worker.py
index 01c7a84..3cd563b 100755
--- a/swarm/evaluation-worker.py
+++ b/swarm/evaluation-worker.py
@@ -10,7 +10,7 @@ import time
 from os import environ
 from typing import List
 
-tt_dir = os.path.expandvars("$HOME/work/Passport")
+tt_dir = os.path.expandvars("$HOME/Passport")
 
 def main():
     argparser = argparse.ArgumentParser()
diff --git a/swarm/extract-steps.sh b/swarm/extract-steps.sh
index 2713cc6..aee5787 100755
--- a/swarm/extract-steps.sh
+++ b/swarm/extract-steps.sh
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-TT_DIR=$HOME/work/Passport/
+TT_DIR=$HOME/Passport/
 
 set -ex
 
diff --git a/swarm/find-missing-outputs-csv.sh b/swarm/find-missing-outputs-csv.sh
index 58c9c4a..179e674 100755
--- a/swarm/find-missing-outputs-csv.sh
+++ b/swarm/find-missing-outputs-csv.sh
@@ -5,7 +5,7 @@ shopt -s nullglob
 
 [[ "$#" -ne 1 ]] && echo "Wrong number of parameters! This script takes one argument, a directory to search" 1>&2 && exit 1
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
 OUTPUT_DIR=$1
 if [[ ! -d ${OUTPUT_DIR} ]]; then
diff --git a/swarm/find-missing-outputs.sh b/swarm/find-missing-outputs.sh
index 9094b7b..9ed6f9c 100755
--- a/swarm/find-missing-outputs.sh
+++ b/swarm/find-missing-outputs.sh
@@ -4,7 +4,7 @@ set -e
 
 [[ "$#" -ne 1 ]] && echo "Wrong number of parameters! This script takes one argument, a directory to search" && exit 1
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
 $TT_DIR/swarm/find-missing-outputs-csv.sh "$@" | awk -F, \
   '{if ($5=="") {print "In project "$1" ("$2"), output for file "$3" ("$4") could not be found"} \
diff --git a/swarm/paper_test.sh b/swarm/paper_test.sh
index 36f3a68..dae5d8e 100755
--- a/swarm/paper_test.sh
+++ b/swarm/paper_test.sh
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 REMOTE_TT_DIR=gypsum.cs.umass.edu:Passport
 
 FLAGS_DEFAULT="--no-locals-file --bpe-merges=4096"
diff --git a/swarm/prelude.sh b/swarm/prelude.sh
index 14dca04..19b29da 100644
--- a/swarm/prelude.sh
+++ b/swarm/prelude.sh
@@ -1,8 +1,7 @@
 #!/usr/bin/env bash
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
-read-opam.sh
 opam switch "4.07.1+flambda"
 eval $(opam env)
 
diff --git a/swarm/rerun-missing-files.py b/swarm/rerun-missing-files.py
index 6d6769d..d822c73 100755
--- a/swarm/rerun-missing-files.py
+++ b/swarm/rerun-missing-files.py
@@ -10,12 +10,12 @@ from typing import List, Dict
 parser = argparse.ArgumentParser()
 parser.add_argument("eval_id")
 args, rest_args = parser.parse_known_args()
-tt_dir = expandvars("$HOME/work/Passport")
+tt_dir = expandvars("$HOME/Passport")
 
 def submit_array(proj_idx: int, file_idxs: List[int]):
     result = subprocess.run([f"{tt_dir}/swarm/sbatch-retry.sh",
                              "-J", f"{args.eval_id}-evaluate-file",
-                             "-p", "defq",
+                             "-p", "xahcnormal",
                              "--comment", f"{proj_idx}",
                              f"--output={tt_dir}/output/evaluate/{args.eval_id}/evaluate_proj_{proj_idx}_%a.out",
                              f"--array={','.join(file_idxs)}",
@@ -23,7 +23,7 @@ def submit_array(proj_idx: int, file_idxs: List[int]):
                              args.eval_id, proj_idx] + rest_args)
 
 result = subprocess.Popen([f"{tt_dir}/swarm/find-missing-outputs-csv.sh",
-                           f"{tt_dir}/Passport/evaluation/{args.eval_id}"],
+                           f"{tt_dir}/ASTactic/evaluation/{args.eval_id}"],
                           stdout=subprocess.PIPE, text=True)
 
 csvreader = csv.reader(result.stdout)
diff --git a/swarm/rerun-missing-files.sh b/swarm/rerun-missing-files.sh
index 1697c13..b44c957 100755
--- a/swarm/rerun-missing-files.sh
+++ b/swarm/rerun-missing-files.sh
@@ -3,7 +3,7 @@ set -e
 
 [[ "$#" -lt 1 ]] && echo "Wrong number of parameters! This script takes at least one argument, an evaluation id" && exit 1
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
 EVAL_ID=$1
 shift 1
@@ -13,7 +13,7 @@ mkdir -p output/evaluate/${EVAL_ID}
 $TT_DIR/swarm/find-missing-outputs-csv.sh ${TT_DIR}/Passport/evaluation/${EVAL_ID} |
 while IFS=, read -r proj_idx proj_name file_idx file_name proof_idx proof_name; do
   if [[ $proof_idx == "" ]]; then
-      sbatch -p defq -J ${EVAL_ID}-evaluate-file \
+      sbatch -p xahcnormal -J ${EVAL_ID}-evaluate-file \
         --output=output/evaluate/${EVAL_ID}/evaluate_proj_${proj_idx}_${file_idx}.out \
         $TT_DIR/swarm/evaluate-proj.sh ${EVAL_ID} --proj_idx ${proj_idx} --file_idx ${file_idx} "$@"
   fi
diff --git a/swarm/rerun-missing-proofs.sh b/swarm/rerun-missing-proofs.sh
index 8d223ce..e6b06eb 100755
--- a/swarm/rerun-missing-proofs.sh
+++ b/swarm/rerun-missing-proofs.sh
@@ -22,7 +22,7 @@ shift $((OPTIND-1))
 
 [[ "$#" -lt 1 ]] && usage
 
-TT_DIR=$HOME/work/Passport
+TT_DIR=$HOME/Passport
 
 EVAL_ID=$1
 shift 1
@@ -38,14 +38,14 @@ while IFS=, read -r proj_idx proj_name file_idx file_name proof_idx proof_name;
       NUM_PROOFS=$(echo "$PROOFS" | wc -l)
       for proof_idx in $(eval echo "{0..$(($NUM_PROOFS - 1))}"); do
           PROOF=$(echo "$PROOFS" | awk "NR==(${proof_idx}+1)")
-          $TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-proof -p defq \
+          $TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-proof -p xahcnormal \
             --output=output/evaluate/${EVAL_ID}/evaluate_proj_${proj_idx}_${file_idx}_${proof_idx}.out \
             $TT_DIR/swarm/evaluate-proj.sh ${EVAL_ID} \
             --proj_idx ${proj_idx} --file_idx ${file_idx} --proof=${PROOF} "$@"
       done
       NUM_PROOFS_DISPATCHED=$(($NUM_PROOFS_DISPATCHED+$NUM_PROOFS))
   else
-      $TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-proof -p defq \
+      $TT_DIR/swarm/sbatch-retry.sh -J ${EVAL_ID}-evaluate-proof -p xahcnormal \
         --output=output/evaluate/${EVAL_ID}/evaluate_proj_${proj_idx}_${file_idx}_${proof_idx}.out \
         $TT_DIR/swarm/evaluate-proj.sh ${EVAL_ID} \
           --proj_idx ${proj_idx} --file_idx ${file_idx} --proof=${proof_name} "$@"
diff --git a/swarm/save-run.sh b/swarm/save-run.sh
index 79373d0..c3436af 100755
--- a/swarm/save-run.sh
+++ b/swarm/save-run.sh
@@ -1,12 +1,12 @@
 #!/usr/bin/env bash
 
-TT_DIR=$HOME/work/Passport/
+TT_DIR=$HOME/Passport/
 EVAL_ID=$1
 shift 1
 
 COMMIT=$(git rev-parse --short HEAD)
 
-OUTDIR=$TT_DIR/Passport/evaluation/${EVAL_ID}/
+OUTDIR=$TT_DIR/TacTok/evaluation/${EVAL_ID}/
 mkdir -p $OUTDIR
 git log -20 > ${OUTDIR}/glog.txt
 git status > ${OUTDIR}/gstatus.txt
@@ -15,4 +15,4 @@ echo "CACHED" >> ${OUTDIR}/gdiff.txt
 git diff --cached >> ${OUTDIR}/gdiff.txt
 echo "$@" > ${OUTDIR}/flags.txt
 mkdir -p $OUTDIR/weights
-cp -r $TT_DIR/Passport/runs/${EVAL_ID}/* $OUTDIR/weights
+cp -r $TT_DIR/TacTok/runs/tac/* $OUTDIR/weights
diff --git a/swarm/sbatch-retry.sh b/swarm/sbatch-retry.sh
index f9493f7..122403e 100755
--- a/swarm/sbatch-retry.sh
+++ b/swarm/sbatch-retry.sh
@@ -1,6 +1,6 @@
 #!/usr/bin/env bash
 
-TT_DIR=$HOME/work/Passport/
+TT_DIR=$HOME/Passport/
 BACKOFF_AMOUNT=0.001
 SFLAGS="-u $USER -h"
 while getopts ":J:" opt; do
diff --git a/swarm/show_worker_progress.py b/swarm/show_worker_progress.py
index 107425b..588d02f 100755
--- a/swarm/show_worker_progress.py
+++ b/swarm/show_worker_progress.py
@@ -4,7 +4,7 @@ from evaluate_test_worker import show_progress
 import argparse
 import os.path
 
-tt_dir = os.path.expandvars("$HOME/work/Passport")
+tt_dir = os.path.expandvars("$HOME/Passport")
 
 def main() -> None:
     argparser = argparse.ArgumentParser()
CACHED
