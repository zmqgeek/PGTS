{"options": {"method": "ours", "eval_id": "tok-pattern-all", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 26, "proj_idx": 21, "filter": null, "path": "runs/tok/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 15025, "tac_vocab_file": "token_vocab.pickle", "cutoff_len": 30}, "results": [{"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTripleIsPR", "success": false, "proof_gt": ["unfold cTriple in |- *.", "apply compose3_2IsPR with (g := cPair) (f1 := fun a b c : nat => a) (f2 := fun a b c : nat => cPair b c).", "apply pi1_3IsPR.", "apply filter011IsPR with (g := fun b c : nat => cPair b c).", "apply cPairIsPR.", "apply cPairIsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case arity2."], "time": 110.19690799713135, "num_tactics": 300, "proof_tree": {"current_proof_state": "cTripleIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with algebra.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity11.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H8.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity43.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity43.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity43.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity43.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity43.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity43.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case arity2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity43.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTriplePi1IsPR", "success": false, "proof_gt": ["apply cPairPi1IsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "case codeFormula.", "elim var.", "intros.", "elim var.", "elim var.", "intuition.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H."], "time": 89.67911148071289, "num_tactics": 300, "proof_tree": {"current_proof_state": "cTriplePi1IsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTriplePi2IsPR", "success": false, "proof_gt": ["unfold cTriplePi2 in |- *.", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "case codeFormula.", "elim var.", "intros.", "elim var.", "elim var.", "intuition.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H."], "time": 82.83822631835938, "num_tactics": 300, "proof_tree": {"current_proof_state": "cTriplePi2IsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists L.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTriplePi3IsPR", "success": false, "proof_gt": ["unfold cTriplePi3 in |- *.", "apply compose1_1IsPR; apply cPairPi2IsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case arity2."], "time": 100.27811884880066, "num_tactics": 300, "proof_tree": {"current_proof_state": "cTriplePi3IsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists L.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity11.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity42.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity42.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity42.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case arity2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity42.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTripleProj1", "success": false, "proof_gt": ["unfold cTriplePi1, cTriple in |- *.", "intros.", "apply cPairProjections1."], "proof_pred": ["intros.", "symmetry.", "intuition.", "symmetry.", "elim H.", "elim H.", "clear H.", "intros.", "elim b.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intro.", "intro.", "intuition.", "elim L.", "intros.", "elim L.", "intros."], "time": 21.816500425338745, "num_tactics": 300, "proof_tree": {"current_proof_state": "cTripleProj1", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim b.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTripleProj2", "success": false, "proof_gt": ["unfold cTriplePi2, cTriple in |- *.", "intros.", "rewrite cPairProjections2.", "apply cPairProjections1."], "proof_pred": ["intro.", "intro.", "intuition.", "elim H.", "elim H.", "clear H.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intro.", "intro.", "elim L.", "intro.", "intro.", "elim L.", "intro.", "intro.", "elim L.", "intro."], "time": 19.01054549217224, "num_tactics": 300, "proof_tree": {"current_proof_state": "cTripleProj2", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTripleProj3", "success": false, "proof_gt": ["unfold cTriplePi3, cTriple in |- *.", "intros.", "rewrite cPairProjections2.", "apply cPairProjections2."], "proof_pred": ["intro.", "intro.", "intuition.", "elim H.", "elim H.", "clear H.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intros.", "elim L.", "intro.", "intro.", "elim L.", "intro.", "intro.", "elim L.", "intro.", "intro.", "elim L.", "intro."], "time": 18.918981075286865, "num_tactics": 300, "proof_tree": {"current_proof_state": "cTripleProj3", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "cTripleProj", "success": false, "proof_gt": ["unfold cTriple, cTriplePi1, cTriplePi2, cTriplePi3 in |- *.", "intros.", "repeat rewrite cPairProjections.", "reflexivity."], "proof_pred": ["simple induction a.", "reflexivity.", "intros.", "elim H.", "rewrite <- H.", "rewrite <- H.", "rewrite <- H.", "rewrite <- H.", "rewrite <- H.", "rewrite <- H.", "rewrite <- H.", "rewrite <- H.", "rewrite <- H."], "time": 875.6224114894867, "num_tactics": 68, "proof_tree": {"current_proof_state": "cTripleProj", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simple induction a.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "reflexivity.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "rewrite <- H.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "codeNewVarCorrect", "success": false, "proof_gt": ["intros.", "unfold codeNewVar in |- *.", "unfold newVar in |- *.", "set (f := fun n Hrecs : nat => switchPR n (max (S (cPairPi1 (pred n))) (codeNth (n - S (cPairPi2 (pred n))) Hrecs)) 0) in *.", "induction l as [| a l Hrecl].", "simpl in |- *.", "unfold evalStrongRec in |- *.", "simpl in |- *.", "rewrite cPairProjections1.", "reflexivity.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc in |- *.", "unfold evalOneParamList in |- *.", "unfold evalList in |- *.", "rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold f at 1 in |- *.", "rewrite evalStrongRecHelp1.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "rewrite <- Hrecl.", "repeat rewrite cPairProjections2.", "reflexivity.", "simpl in |- *.", "repeat rewrite cPairProjections2.", "apply le_lt_n_Sm.", "apply cPairLe2."], "proof_pred": ["intro.", "elim l.", "auto.", "intros.", "simpl in |- *.", "elim l0.", "simpl in |- *.", "intuition.", "elim H0.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case H0.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "elim H0.", "intuition.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "elim H0.", "intros.", "elim H0.", "intuition.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "elim H0.", "intros.", "elim H0.", "intuition.", "case L.", "intuition."], "time": 111.98134756088257, "num_tactics": 300, "proof_tree": {"current_proof_state": "codeNewVarCorrect", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim l.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim l0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate l0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case a.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n2.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "codeNewVarIsPR", "success": false, "proof_gt": ["unfold codeNewVar in |- *.", "apply (evalStrongRecIsPR 0) with (f := fun n Hrecs : nat => switchPR n (max (S (cPairPi1 (pred n))) (codeNth (n - S (cPairPi2 (pred n))) Hrecs)) 0).", "apply compose2_3IsPR with (g := switchPR) (f1 := fun n Hrecs : nat => n) (f2 := fun n Hrecs : nat => max (S (cPairPi1 (pred n))) (codeNth (n - S (cPairPi2 (pred n))) Hrecs)) (f3 := fun n Hrecs : nat => 0).", "apply pi1_2IsPR.", "apply compose2_2IsPR with (h := max) (f := fun n Hrecs : nat => S (cPairPi1 (pred n))) (g := fun n Hrecs : nat => codeNth (n - S (cPairPi2 (pred n))) Hrecs).", "apply filter10IsPR with (g := fun n : nat => S (cPairPi1 (pred n))).", "apply compose1_1IsPR with (g := S) (f := fun n : nat => cPairPi1 (pred n)).", "apply compose1_1IsPR.", "apply predIsPR.", "apply cPairPi1IsPR.", "apply succIsPR.", "apply compose2_2IsPR with (h := codeNth) (f := fun n Hrecs : nat => n - S (cPairPi2 (pred n))) (g := fun n Hrecs : nat => Hrecs).", "apply filter10IsPR with (g := fun n : nat => n - S (cPairPi2 (pred n))).", "apply compose1_2IsPR with (g := minus) (f := fun n : nat => n) (f' := fun n : nat => S (cPairPi2 (pred n))).", "apply idIsPR.", "apply compose1_1IsPR with (g := S) (f := fun n : nat => cPairPi2 (pred n)).", "apply compose1_1IsPR.", "apply predIsPR.", "apply cPairPi2IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply maxIsPR.", "apply filter10IsPR with (g := fun _ : nat => 0).", "apply const1_NIsPR.", "apply switchIsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case arity1."], "time": 109.98800420761108, "num_tactics": 300, "proof_tree": {"current_proof_state": "codeNewVarIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity11.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H88.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity42.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity42.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity42.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity42.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity42.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case arity1.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "makeTraceForall", "success": true, "proof_gt": ["intros.", "set (v := fst p) in *.", "set (s := snd p) in *.", "induction (eq_nat_dec n v).", "exact (cTriple (cTriple v (codeTerm s) (codeFormula (forallH L n f))) (codeFormula (substituteFormula L (forallH L n f) v s)) 0).", "assert (lt_depth L f (forallH L v f)).", "apply depthForall.", "induction (In_dec eq_nat_dec n (freeVarTerm L s)).", "set (nv := newVar (v :: freeVarTerm L s ++ freeVarFormula L f)) in *.", "assert (lt_depth L (substituteFormula L f n (var nv)) (forallH L v f)).", "apply eqDepth with f.", "symmetry in |- *.", "apply subFormulaDepth.", "apply H.", "exact (cTriple (cTriple v (codeTerm s) (codeFormula (forallH L n f))) (codeFormula (substituteFormula L (forallH L n f) v s)) (cPair (rec f H (n, var nv)) (rec (substituteFormula L f n (var nv)) H0 p))).", "exact (cTriple (cTriple v (codeTerm s) (codeFormula (forallH L n f))) (codeFormula (substituteFormula L (forallH L n f) v s)) (rec f H p))."], "proof_pred": ["assumption."], "time": 0.2080976963043213, "num_tactics": 1, "proof_tree": {"current_proof_state": "makeTraceForall", "used_tactic": null, "children": [{"current_proof_state": "SUCCESS", "used_tactic": "assumption.", "children": []}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "makeTraceImpNice", "success": false, "proof_gt": ["intros.", "unfold makeTraceImp in |- *.", "rewrite H.", "rewrite H0.", "reflexivity."], "proof_pred": ["intros.", "symmetry.", "intuition.", "f_equal.", "symmetry.", "intuition.", "elim b.", "elim b.", "elim b.", "elim g.", "intros.", "elim g.", "intros.", "elim g.", "intro.", "elim g.", "elim t3.", "intros.", "elim g.", "intro.", "elim g.", "elim g.", "intro.", "elim g.", "elim g.", "intro.", "elim g.", "elim g.", "intro.", "elim g.", "elim g.", "intro.", "elim g.", "elim g.", "intro.", "case t4.", "intros.", "elim t13.", "intros.", "elim g.", "intros.", "elim t29."], "time": 169.51265740394592, "num_tactics": 300, "proof_tree": {"current_proof_state": "makeTraceImpNice", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim b.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim b.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim b.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case t4.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t13.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim g.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t29.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "makeTraceNotNice", "success": false, "proof_gt": ["intros.", "unfold makeTraceNot in |- *.", "rewrite H.", "reflexivity."], "proof_pred": ["intros.", "symmetry.", "intuition.", "f_equal.", "symmetry.", "intuition.", "elim b.", "elim f2.", "intros.", "elim f2.", "intros.", "elim f2.", "intro.", "elim f2.", "elim f2.", "intro.", "elim f2.", "elim f2.", "intro.", "elim t3.", "intros.", "elim f2.", "intro.", "elim f2.", "elim f2.", "intro.", "elim f2.", "elim f2.", "intro.", "elim t7.", "intros.", "elim f2.", "intro.", "elim t18.", "intros.", "elim t24.", "intros.", "elim f2.", "intros.", "elim f2.", "intro.", "elim t25.", "intros.", "elim f2.", "intro.", "elim f2.", "elim f2.", "elim f2."], "time": 336.90544533729553, "num_tactics": 300, "proof_tree": {"current_proof_state": "makeTraceNotNice", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply q.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply q.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim b.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t7.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t18.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t24.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t25.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim t28.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim f2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction t.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t28.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim f2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim t0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction f2.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t32.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t31.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction b.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "makeTraceForallNice", "success": false, "proof_gt": ["intros.", "unfold makeTraceForall in |- *.", "repeat rewrite H.", "reflexivity."], "proof_pred": ["intros.", "symmetry.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim q.", "intros.", "elim b."], "time": 24.5451557636261, "num_tactics": 300, "proof_tree": {"current_proof_state": "makeTraceForallNice", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in z2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in z1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold z2.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in z2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in z1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in z2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim q.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim q.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim q.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "elim z2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim z1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim b.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case q.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim q.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "makeTrace1", "success": false, "proof_gt": ["intros.", "induction f as [t t0| r t| f1 Hrecf1 f0 Hrecf0| f Hrecf| n f Hrecf]; unfold makeTrace, makeTraceImp, makeTraceNot, Formula_depth_rec2, Formula_depth_rec in |- *; simpl in |- *; try (rewrite cTripleProj1; reflexivity).", "unfold makeTraceForall in |- *.", "induction (eq_nat_dec n (fst (v, s))); simpl in |- *.", "rewrite cTripleProj1.", "reflexivity.", "induction (In_dec eq_nat_dec n (freeVarTerm L s)); simpl in |- *; rewrite cTripleProj1; reflexivity."], "proof_pred": ["intros.", "symmetry.", "elim f.", "intros.", "unfold codeFormula.", "unfold codeTerm.", "simpl.", "elim f.", "intro.", "elim f.", "clear.", "intros.", "elim t.", "intros.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3.", "elim t3."], "time": 117.009441614151, "num_tactics": 300, "proof_tree": {"current_proof_state": "makeTrace1", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "makeTrace2", "success": false, "proof_gt": ["intros.", "induction f as [t t0| r t| f1 Hrecf1 f0 Hrecf0| f Hrecf| n f Hrecf]; unfold makeTrace, makeTraceImp, makeTraceNot, Formula_depth_rec2, Formula_depth_rec in |- *; simpl in |- *; try (rewrite cTripleProj2; reflexivity).", "unfold makeTraceForall in |- *.", "induction (eq_nat_dec n (fst (v, s))); simpl in |- *.", "rewrite cTripleProj2.", "reflexivity.", "induction (In_dec eq_nat_dec n (freeVarTerm L s)); simpl in |- *; rewrite cTripleProj2; reflexivity."], "proof_pred": ["intros.", "symmetry.", "elim f.", "intros.", "simpl in |- *.", "elim t.", "intros.", "simpl in |- *.", "elim f.", "intros.", "elim f.", "intro.", "case f.", "case t2.", "case t2.", "case t2.", "case f.", "case t2.", "case t2.", "case f.", "case f.", "case t2.", "case f.", "case f.", "case f.", "case f.", "case f.", "case f.", "case f.", "case f.", "case f.", "case f.", "case f.", "intros.", "case f.", "case t34.", "case f.", "case f.", "case f.", "case f.", "case f.", "case f.", "intros.", "case f.", "case f.", "case f.", "case f.", "case f.", "case s."], "time": 601.7916007041931, "num_tactics": 173, "proof_tree": {"current_proof_state": "makeTrace2", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in s.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in s.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeF.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim t.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t34.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case f.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case f.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case f.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case s.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t25.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t24.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t23.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t22.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t21.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction t.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "generalize apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case t0.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case f.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case s.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t25.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t24.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t23.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t22.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t21.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t20.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case t19.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case t.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim s.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t25.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t24.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t23.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim t22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction t.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case s.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "switch5IsPR", "success": false, "proof_gt": ["intros.", "assert (isPR 1 (fun trace : nat => pred (g trace))).", "apply compose1_1IsPR.", "assumption.", "apply predIsPR.", "assert (isPR 1 (fun trace : nat => pred (pred (g trace)))).", "apply compose1_1IsPR with (f := fun trace : nat => pred (g trace)).", "assumption.", "apply predIsPR.", "assert (isPR 1 (fun trace : nat => pred (pred (pred (g trace))))).", "apply compose1_1IsPR with (f := fun trace : nat => pred (pred (g trace))).", "assumption.", "apply predIsPR.", "apply compose2_3IsPR with (f1 := fun trace recs : nat => g trace) (f2 := fun trace recs : nat => switchPR (pred (g trace)) (switchPR (pred (pred (g trace))) (switchPR (pred (pred (pred (g trace)))) (f1 trace recs) (f2 trace recs)) (f3 trace recs)) (f4 trace recs)) (f3 := f5).", "apply filter10IsPR.", "assumption.", "apply compose2_3IsPR with (f1 := fun trace recs : nat => pred (g trace)) (f2 := fun trace recs : nat => switchPR (pred (pred (g trace))) (switchPR (pred (pred (pred (g trace)))) (f1 trace recs) (f2 trace recs)) (f3 trace recs)) (f3 := f4).", "apply filter10IsPR with (g := fun trace : nat => pred (g trace)).", "assumption.", "apply compose2_3IsPR with (f1 := fun trace recs : nat => pred (pred (g trace))) (f2 := fun trace recs : nat => switchPR (pred (pred (pred (g trace)))) (f1 trace recs) (f2 trace recs)) (f3 := f3).", "apply filter10IsPR with (g := fun trace : nat => pred (pred (g trace))).", "assumption.", "apply compose2_3IsPR with (f1 := fun trace recs : nat => pred (pred (pred (g trace)))) (f2 := f1) (f3 := f2).", "apply filter10IsPR with (g := fun trace : nat => pred (pred (pred (g trace)))).", "assumption.", "assumption.", "assumption.", "apply switchIsPR.", "assumption.", "apply switchIsPR.", "assumption.", "apply switchIsPR.", "assumption.", "apply switchIsPR."], "proof_pred": ["intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "case codeTerm."], "time": 38.384798765182495, "num_tactics": 300, "proof_tree": {"current_proof_state": "switch5IsPR", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold f5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists L.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold f5 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity13.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity14.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold g in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity4 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity5 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity4 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity5 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity6 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity3 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity4 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity5 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity6 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity4 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity5 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity4 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity5 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity6 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case g.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H1.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "checkTraceIsPR", "success": false, "proof_gt": ["unfold checkSubFormulaTrace in |- *.", "assert (isPR 1 (fun trace : nat => cPairPi1 (cTriplePi3 (cTriplePi1 trace)))).", "apply compose1_1IsPR with (g := cPairPi1) (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "apply compose1_1IsPR.", "apply cTriplePi1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi1IsPR.", "apply evalStrongRecIsPR.", "assert (forall (f1 f2 f3 f4 f5 : nat -> nat -> nat) (g : nat -> nat), isPR 2 f1 -> isPR 2 f2 -> isPR 2 f3 -> isPR 2 f4 -> isPR 2 f5 -> isPR 1 g -> isPR 2 (fun trace recs : nat => switchPR (g trace) (switchPR (pred (g trace)) (switchPR (pred (pred (g trace))) (switchPR (pred (pred (pred (g trace)))) (f1 trace recs) (f2 trace recs)) (f3 trace recs)) (f4 trace recs)) (f5 trace recs))).", "apply switch5IsPR.", "assert (isPR 1 (fun trace : nat => cTriplePi1 (cTriplePi1 trace))).", "apply compose1_1IsPR; apply cTriplePi1IsPR.", "assert (isPR 1 (fun trace : nat => cTriplePi2 (cTriplePi1 trace))).", "apply compose1_1IsPR.", "apply cTriplePi1IsPR.", "apply cTriplePi2IsPR.", "assert (isPR 1 (fun trace : nat => cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR.", "apply cTriplePi1IsPR.", "apply cTriplePi3IsPR.", "assert (isPR 1 (fun trace : nat => cPairPi1 (cTriplePi3 (cTriplePi1 trace)))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi1IsPR.", "apply H0 with (f1 := fun trace recs : nat => charFunction 2 beq_nat (cTriplePi2 trace) (cPair (cPairPi1 (cTriplePi3 (cTriplePi1 trace))) (codeSubTerms (cPairPi2 (cTriplePi3 (cTriplePi1 trace))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))))) (f2 := fun trace recs : nat => switchPR (charFunction 2 beq_nat (cTriplePi1 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (charFunction 2 beq_nat (cTriplePi3 (cTriplePi1 trace)) (cTriplePi2 trace)) (switchPR (codeIn (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace)))) (charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace))) && beq_nat (cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace))))) * (codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs * codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs)) (charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace)))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cTriplePi3 trace))) * codeNth (trace - S (cTriplePi3 trace)) recs))) (f3 := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 2 (cTriplePi2 (cTriplePi3 trace))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi3 trace))) * codeNth (trace - S (cTriplePi3 trace)) recs) (f4 := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 1 (cPair (cTriplePi2 (cPairPi1 (cTriplePi3 trace))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace))))) * (codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs * codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs)) (f5 := fun trace recs : nat => charFunction 2 beq_nat (cTriplePi2 trace) (cPair 0 (cPair (codeSubTerm (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))) (codeSubTerm (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)))))) (g := fun trace : nat => cPairPi1 (cTriplePi3 (cTriplePi1 trace))).", "apply filter10IsPR with (g := fun trace : nat => charFunction 2 beq_nat (cTriplePi2 trace) (cPair (cPairPi1 (cTriplePi3 (cTriplePi1 trace))) (codeSubTerms (cPairPi2 (cTriplePi3 (cTriplePi1 trace))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))))).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriplePi2 trace) (f' := fun trace : nat => cPair (cPairPi1 (cTriplePi3 (cTriplePi1 trace))) (codeSubTerms (cPairPi2 (cTriplePi3 (cTriplePi1 trace))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)))).", "apply cTriplePi2IsPR.", "apply compose1_2IsPR with (f := fun trace : nat => cPairPi1 (cTriplePi3 (cTriplePi1 trace))) (f' := fun trace : nat => codeSubTerms (cPairPi2 (cTriplePi3 (cTriplePi1 trace))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))).", "assumption.", "apply compose1_3IsPR with (f1 := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))) (f2 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f3 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "assumption.", "assumption.", "apply codeSubTermsIsPR.", "apply cPairIsPR.", "apply eqIsPR.", "apply compose2_3IsPR with (f1 := fun trace recs : nat => charFunction 2 beq_nat (cTriplePi1 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (f2 := fun trace recs : nat => charFunction 2 beq_nat (cTriplePi3 (cTriplePi1 trace)) (cTriplePi2 trace)) (f3 := fun trace recs : nat => switchPR (codeIn (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace)))) (charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace))) && beq_nat (cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace))))) * (codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs * codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs)) (charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace)))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cTriplePi3 trace))) * codeNth (trace - S (cTriplePi3 trace)) recs)).", "apply filter10IsPR with (g := fun trace : nat => charFunction 2 beq_nat (cTriplePi1 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f' := fun trace : nat => cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))).", "assumption.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "apply eqIsPR.", "apply filter10IsPR with (g := fun trace : nat => charFunction 2 beq_nat (cTriplePi3 (cTriplePi1 trace)) (cTriplePi2 trace)).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)) (f' := cTriplePi2).", "assumption.", "apply cTriplePi2IsPR.", "apply eqIsPR.", "apply compose2_3IsPR with (f1 := fun trace recs : nat => codeIn (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace)))) (f2 := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace))) && beq_nat (cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace))))) * (codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs * codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs)) (f3 := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace)))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cTriplePi3 trace))) * codeNth (trace - S (cTriplePi3 trace)) recs).", "apply filter10IsPR with (g := fun trace : nat => codeIn (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace)))).", "apply compose1_2IsPR with (f := fun trace : nat => cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (f' := fun trace : nat => codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi2 (cTriplePi1 trace)).", "assumption.", "apply codeFreeVarTermIsPR.", "apply codeInIsPR.", "assert (isPR 1 (fun trace : nat => codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))).", "apply compose1_1IsPR with (f := fun trace : nat => S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))).", "apply compose1_1IsPR with (f := fun trace : nat => cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))).", "apply compose1_2IsPR with (f := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f' := fun trace : nat => codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))).", "assumption.", "apply compose1_2IsPR with (f := fun trace : nat => codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (f' := fun trace : nat => codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi2 (cTriplePi1 trace)).", "assumption.", "apply codeFreeVarTermIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))).", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "apply codeFreeVarFormulaIsPR.", "apply codeAppIsPR.", "apply cPairIsPR.", "apply succIsPR.", "apply codeNewVarIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace))) && beq_nat (cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace)))))) (g := fun trace recs : nat => codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs * codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs).", "apply filter10IsPR with (g := fun trace : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace))) && beq_nat (cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace)))))).", "apply (andRelPR 1) with (R := fun trace : nat => beq_nat (cTriplePi2 trace) (cPair 3 (cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace)))))) (R' := fun trace : nat => beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace))) && beq_nat (cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace)))).", "unfold isPRrel in |- *.", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriplePi2 trace) (f' := fun trace : nat => cPair 3 (cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))).", "apply cTriplePi2IsPR.", "apply compose1_2IsPR with (f := fun trace : nat => 3) (f' := fun trace : nat => cPair (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace)))).", "apply const1_NIsPR.", "apply compose1_2IsPR with (f := fun trace : nat => codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))) (f' := fun trace : nat => cTriplePi2 (cPairPi2 (cTriplePi3 trace))).", "assumption.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi2IsPR.", "apply cTriplePi2IsPR.", "apply cPairIsPR.", "apply cPairIsPR.", "apply eqIsPR.", "apply (andRelPR 1) with (R := fun trace : nat => beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace)))) (R' := fun trace : nat => beq_nat (cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace)))).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cTriplePi2 (cPairPi1 (cTriplePi3 trace)))) (f' := fun trace : nat => cTriplePi1 (cPairPi2 (cTriplePi3 trace))).", "apply compose1_3IsPR with (f1 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f2 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)) (f3 := fun trace : nat => cTriplePi2 (cPairPi1 (cTriplePi3 trace))).", "assumption.", "assumption.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi1 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi1IsPR.", "apply cTriplePi2IsPR.", "apply cTripleIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi2IsPR.", "apply cTriplePi1IsPR.", "apply eqIsPR.", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriple (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (f' := fun trace : nat => cTriplePi1 (cPairPi1 (cTriplePi3 trace))).", "apply compose1_3IsPR with (f1 := fun trace : nat => cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (f2 := fun trace : nat => cPair 0 (codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))))))))) (f3 := fun trace : nat => cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))).", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "apply compose1_2IsPR with (f := fun trace : nat => 0) (f' := fun trace : nat => codeNewVar (S (cPair (cTriplePi1 (cTriplePi1 trace)) (codeApp (codeFreeVarTerm (cTriplePi2 (cTriplePi1 trace))) (codeFreeVarFormula (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))))))).", "apply const1_NIsPR.", "assumption.", "apply cPairIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "apply cTripleIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi1 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi1IsPR.", "apply cTriplePi1IsPR.", "apply eqIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs) (g := fun trace recs : nat => codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs).", "apply compose2_2IsPR with (f := fun trace recs : nat => trace - S (cPairPi1 (cTriplePi3 trace))) (g := fun trace recs : nat => recs).", "apply filter10IsPR with (g := fun trace : nat => trace - S (cPairPi1 (cTriplePi3 trace))).", "apply compose1_2IsPR with (f := fun trace : nat => trace) (f' := fun trace : nat => S (cPairPi1 (cTriplePi3 trace))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi1 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi1IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => trace - S (cPairPi2 (cTriplePi3 trace))) (g := fun trace recs : nat => recs).", "apply filter10IsPR with (g := fun trace : nat => trace - S (cPairPi2 (cTriplePi3 trace))).", "apply compose1_2IsPR with (f := fun trace : nat => trace) (f' := fun trace : nat => S (cPairPi2 (cTriplePi3 trace))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi2IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply multIsPR.", "apply multIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace)))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cTriplePi3 trace)))) (g := fun trace recs : nat => codeNth (trace - S (cTriplePi3 trace)) recs).", "apply filter10IsPR with (g := fun trace : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 3 (cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace)))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cTriplePi3 trace)))).", "apply (andRelPR 1) with (R := fun trace : nat => beq_nat (cTriplePi2 trace) (cPair 3 (cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace))))) (R' := fun trace : nat => beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cTriplePi3 trace))).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := cTriplePi2) (f' := fun trace : nat => cPair 3 (cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace)))).", "apply cTriplePi2IsPR.", "apply compose1_2IsPR with (f := fun trace : nat => 3) (f' := fun trace : nat => cPair (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi2 (cTriplePi3 trace))).", "apply const1_NIsPR.", "apply compose1_2IsPR with (f := fun trace : nat => cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (f' := fun trace : nat => cTriplePi2 (cTriplePi3 trace)).", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cTriplePi2IsPR.", "apply cPairIsPR.", "apply cPairIsPR.", "apply eqIsPR.", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (f' := fun trace : nat => cTriplePi1 (cTriplePi3 trace)).", "apply compose1_3IsPR with (f1 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f2 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)) (f3 := fun trace : nat => cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))).", "assumption.", "assumption.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "apply cTripleIsPR.", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cTriplePi1IsPR.", "apply eqIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => trace - S (cTriplePi3 trace)) (g := fun trace recs : nat => recs).", "apply filter10IsPR with (g := fun trace : nat => trace - S (cTriplePi3 trace)).", "apply compose1_2IsPR with (f := fun trace : nat => trace) (f' := fun trace : nat => S (cTriplePi3 trace)).", "apply idIsPR.", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply multIsPR.", "apply switchIsPR.", "apply switchIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 2 (cTriplePi2 (cTriplePi3 trace))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi3 trace)))) (g := fun trace recs : nat => codeNth (trace - S (cTriplePi3 trace)) recs).", "apply filter10IsPR with (g := fun trace : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 2 (cTriplePi2 (cTriplePi3 trace))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi3 trace)))).", "apply (andRelPR 1) with (R := fun trace : nat => beq_nat (cTriplePi2 trace) (cPair 2 (cTriplePi2 (cTriplePi3 trace)))) (R' := fun trace : nat => beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi3 trace))).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriplePi2 trace) (f' := fun trace : nat => cPair 2 (cTriplePi2 (cTriplePi3 trace))).", "apply cTriplePi2IsPR.", "apply compose1_2IsPR with (f := fun trace : nat => 2) (f' := fun trace : nat => cTriplePi2 (cTriplePi3 trace)).", "apply const1_NIsPR.", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cTriplePi2IsPR.", "apply cPairIsPR.", "apply eqIsPR.", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (f' := fun trace : nat => cTriplePi1 (cTriplePi3 trace)).", "apply compose1_3IsPR with (f1 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f2 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)) (f3 := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "assumption.", "assumption.", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cTripleIsPR.", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cTriplePi1IsPR.", "apply eqIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => trace - S (cTriplePi3 trace)) (g := fun trace recs : nat => recs).", "apply filter10IsPR with (g := fun trace : nat => trace - S (cTriplePi3 trace)).", "apply compose1_2IsPR with (f := fun trace : nat => trace) (f' := fun trace : nat => S (cTriplePi3 trace)).", "apply idIsPR.", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply multIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 1 (cPair (cTriplePi2 (cPairPi1 (cTriplePi3 trace))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace)))))) (g := fun trace recs : nat => codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs * codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs).", "apply filter10IsPR with (g := fun trace : nat => charFunction 0 (beq_nat (cTriplePi2 trace) (cPair 1 (cPair (cTriplePi2 (cPairPi1 (cTriplePi3 trace))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))) && (beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace)))))).", "apply (andRelPR 1) with (R := fun trace : nat => beq_nat (cTriplePi2 trace) (cPair 1 (cPair (cTriplePi2 (cPairPi1 (cTriplePi3 trace))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace)))))) (R' := fun trace : nat => beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace))) && beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace)))).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriplePi2 trace) (f' := fun trace : nat => cPair 1 (cPair (cTriplePi2 (cPairPi1 (cTriplePi3 trace))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace))))).", "apply cTriplePi2IsPR.", "apply compose1_2IsPR with (f := fun trace : nat => 1) (f' := fun trace : nat => cPair (cTriplePi2 (cPairPi1 (cTriplePi3 trace))) (cTriplePi2 (cPairPi2 (cTriplePi3 trace)))).", "apply const1_NIsPR.", "apply compose1_2IsPR with (f := fun trace : nat => cTriplePi2 (cPairPi1 (cTriplePi3 trace))) (f' := fun trace : nat => cTriplePi2 (cPairPi2 (cTriplePi3 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi1 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi1IsPR.", "apply cTriplePi2IsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi2IsPR.", "apply cTriplePi2IsPR.", "apply cPairIsPR.", "apply cPairIsPR.", "apply eqIsPR.", "apply (andRelPR 1) with (R := fun trace : nat => beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi1 (cTriplePi3 trace)))) (R' := fun trace : nat => beq_nat (cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (cTriplePi1 (cPairPi2 (cTriplePi3 trace)))).", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (f' := fun trace : nat => cTriplePi1 (cPairPi1 (cTriplePi3 trace))).", "apply compose1_3IsPR with (f1 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f2 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)) (f3 := fun trace : nat => cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))).", "assumption.", "assumption.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "apply cTripleIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi1 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi1IsPR.", "apply cTriplePi1IsPR.", "apply eqIsPR.", "apply compose1_2IsPR with (g := charFunction 2 beq_nat) (f := fun trace : nat => cTriple (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)) (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace))))) (f' := fun trace : nat => cTriplePi1 (cPairPi2 (cTriplePi3 trace))).", "apply compose1_3IsPR with (f1 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f2 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)) (f3 := fun trace : nat => cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))).", "assumption.", "assumption.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "apply cTripleIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi2IsPR.", "apply cTriplePi1IsPR.", "apply eqIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => codeNth (trace - S (cPairPi1 (cTriplePi3 trace))) recs) (g := fun trace recs : nat => codeNth (trace - S (cPairPi2 (cTriplePi3 trace))) recs).", "apply compose2_2IsPR with (f := fun trace recs : nat => trace - S (cPairPi1 (cTriplePi3 trace))) (g := fun trace recs : nat => recs).", "apply filter10IsPR with (g := fun trace : nat => trace - S (cPairPi1 (cTriplePi3 trace))).", "apply compose1_2IsPR with (f := fun trace : nat => trace) (f' := fun trace : nat => S (cPairPi1 (cTriplePi3 trace))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi1 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi1IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply compose2_2IsPR with (f := fun trace recs : nat => trace - S (cPairPi2 (cTriplePi3 trace))) (g := fun trace recs : nat => recs).", "apply filter10IsPR with (g := fun trace : nat => trace - S (cPairPi2 (cTriplePi3 trace))).", "apply compose1_2IsPR with (f := fun trace : nat => trace) (f' := fun trace : nat => S (cPairPi2 (cTriplePi3 trace))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 trace)).", "apply compose1_1IsPR.", "apply cTriplePi3IsPR.", "apply cPairPi2IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply multIsPR.", "apply multIsPR.", "apply filter10IsPR with (g := fun trace : nat => charFunction 2 beq_nat (cTriplePi2 trace) (cPair 0 (cPair (codeSubTerm (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))) (codeSubTerm (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)))))).", "apply compose1_2IsPR with (f := fun trace : nat => cTriplePi2 trace) (f' := fun trace : nat => cPair 0 (cPair (codeSubTerm (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))) (codeSubTerm (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))))).", "apply cTriplePi2IsPR.", "apply compose1_2IsPR with (f := fun trace : nat => 0) (f' := fun trace : nat => cPair (codeSubTerm (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))) (codeSubTerm (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace)))).", "apply const1_NIsPR.", "apply compose1_2IsPR with (f := fun trace : nat => codeSubTerm (cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))) (f' := fun trace : nat => codeSubTerm (cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (cTriplePi1 (cTriplePi1 trace)) (cTriplePi2 (cTriplePi1 trace))).", "apply compose1_3IsPR with (f1 := fun trace : nat => cPairPi1 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (f2 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f3 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)).", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "assumption.", "assumption.", "apply codeSubTermIsPR.", "apply compose1_3IsPR with (f1 := fun trace : nat => cPairPi2 (cPairPi2 (cTriplePi3 (cTriplePi1 trace)))) (f2 := fun trace : nat => cTriplePi1 (cTriplePi1 trace)) (f3 := fun trace : nat => cTriplePi2 (cTriplePi1 trace)).", "apply compose1_1IsPR with (f := fun trace : nat => cPairPi2 (cTriplePi3 (cTriplePi1 trace))).", "apply compose1_1IsPR with (f := fun trace : nat => cTriplePi3 (cTriplePi1 trace)).", "assumption.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "assumption.", "assumption.", "apply codeSubTermIsPR.", "apply cPairIsPR.", "apply cPairIsPR.", "apply eqIsPR.", "assumption."], "proof_pred": ["red in |- *.", "simpl in |- *.", "contradict apply.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "elim var.", "intuition.", "generalize apply.", "intro.", "elim H.", "intros."], "time": 55.197630643844604, "num_tactics": 300, "proof_tree": {"current_proof_state": "checkTraceIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict apply.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity4 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity5 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity6 in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim H.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity10 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H4 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H5 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H6 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H7 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H8 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H9 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H10 in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity10 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H4 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H5 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H6 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H7 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H8 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H9 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H10 in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "generalize apply.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim apply0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold apply0 in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity10 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H22 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1 in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H4.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceTermTermsTermIsPR", "success": false, "proof_gt": ["unfold ReplaceTermTermsTerm in |- *.", "apply evalStrongRecIsPR.", "apply compose3_2IsPR with (f1 := fun t recs s : nat => switchPR (cPairPi1 t) (cPair (cPairPi1 t) (cPairPi2 (codeNth (t - S (cPairPi2 t)) recs))) (cPair 0 s)) (f2 := fun t recs s : nat => switchPR t (S (cPair (cPairPi1 (codeNth (t - S (cPairPi1 (pred t))) recs)) (cPairPi2 (codeNth (t - S (cPairPi2 (pred t))) recs)))) 0).", "apply compose3_3IsPR with (f1 := fun t recs s : nat => cPairPi1 t) (f2 := fun t recs s : nat => cPair (cPairPi1 t) (cPairPi2 (codeNth (t - S (cPairPi2 t)) recs))) (f3 := fun t recs s : nat => cPair 0 s).", "apply filter100IsPR with (g := cPairPi1).", "apply cPairPi1IsPR.", "apply filter110IsPR with (g := fun t recs : nat => cPair (cPairPi1 t) (cPairPi2 (codeNth (t - S (cPairPi2 t)) recs))).", "apply compose2_2IsPR with (f := fun t recs : nat => cPairPi1 t) (g := fun t recs : nat => cPairPi2 (codeNth (t - S (cPairPi2 t)) recs)).", "apply filter10IsPR with (g := cPairPi1).", "apply cPairPi1IsPR.", "apply compose2_1IsPR with (f := fun t recs : nat => codeNth (t - S (cPairPi2 t)) recs).", "apply compose2_2IsPR with (f := fun t recs : nat => t - S (cPairPi2 t)) (g := fun t recs : nat => recs).", "apply filter10IsPR with (g := fun t : nat => t - S (cPairPi2 t)).", "apply compose1_2IsPR with (f := fun t : nat => t) (f' := fun t : nat => S (cPairPi2 t)).", "apply idIsPR.", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply cPairPi2IsPR.", "apply cPairIsPR.", "apply filter001IsPR with (g := fun s : nat => cPair 0 s).", "apply compose1_2IsPR with (f := fun s : nat => 0) (f' := fun s : nat => s).", "apply const1_NIsPR.", "apply idIsPR.", "apply cPairIsPR.", "apply switchIsPR.", "apply filter110IsPR with (g := fun t recs : nat => switchPR t (S (cPair (cPairPi1 (codeNth (t - S (cPairPi1 (pred t))) recs)) (cPairPi2 (codeNth (t - S (cPairPi2 (pred t))) recs)))) 0).", "apply compose2_3IsPR with (f1 := fun t recs : nat => t) (f2 := fun t recs : nat => S (cPair (cPairPi1 (codeNth (t - S (cPairPi1 (pred t))) recs)) (cPairPi2 (codeNth (t - S (cPairPi2 (pred t))) recs)))) (f3 := fun t recs : nat => 0).", "apply pi1_2IsPR.", "apply compose2_1IsPR with (f := fun t recs : nat => cPair (cPairPi1 (codeNth (t - S (cPairPi1 (pred t))) recs)) (cPairPi2 (codeNth (t - S (cPairPi2 (pred t))) recs))).", "assert (forall g : nat -> nat, isPR 1 g -> isPR 2 (fun t recs : nat => g (codeNth (t - S (g (pred t))) recs))).", "intros.", "apply compose2_1IsPR with (f := fun t recs : nat => codeNth (t - S (g (pred t))) recs).", "apply compose2_2IsPR with (f := fun t recs : nat => t - S (g (pred t))) (g := fun t recs : nat => recs).", "apply filter10IsPR with (g := fun t : nat => t - S (g (pred t))).", "apply compose1_2IsPR with (f := fun t : nat => t) (f' := fun t : nat => S (g (pred t))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun t : nat => g (pred t)).", "apply compose1_1IsPR.", "apply predIsPR.", "auto.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "auto.", "apply compose2_2IsPR with (f := fun t recs : nat => cPairPi1 (codeNth (t - S (cPairPi1 (pred t))) recs)) (g := fun t recs : nat => cPairPi2 (codeNth (t - S (cPairPi2 (pred t))) recs)).", "apply H.", "apply cPairPi1IsPR.", "apply H.", "apply cPairPi2IsPR.", "apply cPairIsPR.", "apply succIsPR.", "exists (composeFunc 2 0 (PRnil _) zeroFunc).", "simpl in |- *.", "auto.", "apply switchIsPR.", "apply cPairIsPR."], "proof_pred": [], "time": 0.6002547740936279, "num_tactics": 20, "proof_tree": {"current_proof_state": "ReplaceTermTermsTermIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceTermTermIsPR", "success": false, "proof_gt": ["unfold ReplaceTermTerm in |- *.", "apply compose2_1IsPR.", "apply ReplaceTermTermsTermIsPR.", "apply cPairPi1IsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case arity0."], "time": 117.50799870491028, "num_tactics": 300, "proof_tree": {"current_proof_state": "ReplaceTermTermIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity42.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity25.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity41.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case arity0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceTermsTermIsPR", "success": false, "proof_gt": ["unfold ReplaceTermsTerm in |- *.", "apply compose2_1IsPR.", "apply ReplaceTermTermsTermIsPR.", "apply cPairPi2IsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case arity0."], "time": 104.7973415851593, "num_tactics": 300, "proof_tree": {"current_proof_state": "ReplaceTermsTermIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity41.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeTerm.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity41.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case arity0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "maxLemma", "success": false, "proof_gt": ["intros.", "apply (max_case2 a c).", "apply le_trans with b.", "assumption.", "apply le_max_l.", "apply le_trans with d.", "assumption.", "apply le_max_r."], "proof_pred": ["intros.", "case H.", "elim H0.", "auto.", "intro.", "intro.", "case H1.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intro.", "case L.", "case L.", "case L.", "case L.", "intro.", "intuition.", "elim H2.", "intros.", "elim H2.", "elim H2.", "clear H28.", "elim H2.", "elim H2.", "elim H2.", "induction H.", "intros."], "time": 43.587159395217896, "num_tactics": 300, "proof_tree": {"current_proof_state": "maxLemma", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case H1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case H1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H28.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H9.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "maxLemma2", "success": false, "proof_gt": ["intros.", "induction a as [| a a0 Hreca].", "apply le_O_n.", "simpl in |- *.", "apply maxLemma.", "apply le_n.", "assumption."], "proof_pred": ["intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case a.", "simpl in |- *."], "time": 143.56430387496948, "num_tactics": 300, "proof_tree": {"current_proof_state": "maxLemma2", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case b.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case a.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H91 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H92 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H3 in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case b.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case a.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity44.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold b in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "maxLemma3", "success": false, "proof_gt": ["intros.", "induction a as [| a a0 Hreca].", "apply le_n.", "simpl in |- *.", "apply le_trans with (fold_right max 0 (a0 ++ b)).", "assumption.", "apply le_max_r."], "proof_pred": ["intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intro.", "case codeFormula."], "time": 134.91137528419495, "num_tactics": 300, "proof_tree": {"current_proof_state": "maxLemma3", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H92 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H3 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H4 in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case b.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case a.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "maxApp", "success": false, "proof_gt": ["intros.", "induction a as [| a a0 Hreca].", "simpl in |- *.", "auto.", "simpl in |- *.", "induction (max_dec a (fold_right max 0 (a0 ++ b))).", "rewrite a1.", "left.", "symmetry in |- *.", "apply max_l.", "apply le_trans with (max a (fold_right max 0 (a0 ++ b))).", "apply le_trans with (max a (fold_right max 0 a0)).", "apply le_max_r.", "apply maxLemma.", "apply le_n.", "apply maxLemma2.", "rewrite a1.", "apply le_n.", "induction Hreca as [a1| b1].", "rewrite a1.", "auto.", "rewrite b0.", "rewrite b1.", "auto."], "proof_pred": ["intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case b.", "case a.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case arity1."], "time": 144.61551189422607, "num_tactics": 300, "proof_tree": {"current_proof_state": "maxApp", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case b.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case a.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold b in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity42.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "right.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold b in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "tauto.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "right.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simple induction l.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold b in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold b in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in |- *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case arity1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceTermTermSub", "success": false, "proof_gt": ["intro.", "unfold ReplaceTermTerm in |- *.", "unfold ReplaceTermsTerm in |- *.", "unfold ReplaceTermTermsTerm in |- *.", "set (A := fun t0 recs s0 : nat => cPair (switchPR (cPairPi1 t0) (cPair (cPairPi1 t0) (cPairPi2 (codeNth (t0 - S (cPairPi2 t0)) recs))) (cPair 0 s0)) (switchPR t0 (S (cPair (cPairPi1 (codeNth (t0 - S (cPairPi1 (pred t0))) recs)) (cPairPi2 (codeNth (t0 - S (cPairPi2 (pred t0))) recs)))) 0)) in *.", "assert (forall n m : nat, m < n -> extEqual 1 (evalComposeFunc 1 1 (Vector.cons _ (evalStrongRecHelp 1 A n) 0 (Vector.nil _)) (fun b : nat => codeNth (n - S m) b)) (evalStrongRec 1 A m)).", "intros.", "apply (evalStrongRecHelp2 1).", "assumption.", "simpl in H.", "elim t using Term_Terms_ind with (P0 := fun (n : nat) (ts : fol.Terms L n) => forall v w s2 : nat, ReplaceTermsTerm (codeTerms L codeF n (substituteTerms L n ts v (var w))) s2 = ReplaceTermsTerm (codeTerms L codeF n ts) s2); simpl in |- *; intros; unfold evalStrongRec in |- *; unfold evalComposeFunc, evalOneParamList, evalList in |- *; repeat rewrite computeEvalStrongRecHelp; unfold compose2 in |- *; unfold evalComposeFunc, evalOneParamList, evalList in |- *; simpl in |- *; repeat rewrite cPairProjections1.", "induction (eq_nat_dec v n); unfold var in |- *; (replace (codeTerm (fol.var L n)) with (cPair 0 n); [ idtac | reflexivity ]).", "replace (codeTerm (fol.var L w)) with (cPair 0 w); [ idtac | reflexivity ].", "unfold A at 3 1 in |- *.", "repeat rewrite cPairProjections1.", "simpl in |- *.", "reflexivity.", "reflexivity.", "replace (codeTerm (fol.apply L f (substituteTerms L (arity L (inr (Relations L) f)) t0 v (var w)))) with (cPair (S (codeF f)) (codeTerms L codeF _ (substituteTerms L (arity L (inr (Relations L) f)) t0 v (var w)))); [ idtac | reflexivity ].", "unfold A at 3 1 in |- *.", "repeat rewrite cPairProjections1.", "replace (codeTerm (fol.apply L f t0)) with (cPair (S (codeF f)) (codeTerms L codeF _ t0)); [ idtac | reflexivity ].", "repeat rewrite H.", "repeat rewrite cPairProjections1.", "simpl in |- *.", "repeat rewrite cPairProjections2.", "replace (cPairPi2 (evalStrongRec 1 A (codeTerms L codeF (arity L (inr (Relations L) f)) (substituteTerms L (arity L (inr (Relations L) f)) t0 v (var w))) s2)) with (cPairPi2 (evalStrongRec 1 A (codeTerms L codeF (arity L (inr (Relations L) f)) t0) s2)).", "reflexivity.", "symmetry in |- *.", "apply (H0 v w s2).", "repeat rewrite cPairProjections2.", "apply cPairLt2.", "repeat rewrite cPairProjections2.", "apply cPairLt2.", "reflexivity.", "unfold ReplaceTermsTerm in |- *.", "unfold ReplaceTermsTerm in H1.", "unfold ReplaceTermTermsTerm in |- *.", "unfold ReplaceTermTermsTerm in H1.", "fold A in |- *.", "fold A in H1.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "unfold A at 3 1 in |- *.", "repeat rewrite cPairProjections2.", "repeat rewrite H.", "replace (codeTerms L codeF (S n) (Tcons L n (substituteTerm L t0 v (var w)) (substituteTerms L n t1 v (var w)))) with (S (cPair (codeTerm (substituteTerm L t0 v (var w))) (codeTerms L codeF n (substituteTerms L n t1 v (var w))))); [ idtac | reflexivity ].", "replace (codeTerms L codeF (S n) (Tcons L n t0 t1)) with (S (cPair (codeTerm t0) (codeTerms L codeF n t1))); [ idtac | reflexivity ].", "simpl in |- *.", "repeat rewrite cPairProjections2.", "replace (cPairPi1 (evalStrongRec 1 A (cPairPi1 (cPair (codeTerm t0) (codeTerms L codeF n t1))) s2)) with (cPairPi1 (evalStrongRec 1 A (cPairPi1 (cPair (codeTerm (substituteTerm L t0 v (var w))) (codeTerms L codeF n (substituteTerms L n t1 v (var w))))) s2)).", "replace (cPairPi2 (evalStrongRec 1 A (codeTerms L codeF n t1) s2)) with (cPairPi2 (evalStrongRec 1 A (codeTerms L codeF n (substituteTerms L n t1 v (var w))) s2)).", "reflexivity.", "apply (H1 v w s2).", "repeat rewrite cPairProjections1.", "apply (H0 v w s2).", "replace (codeTerms L codeF (S n) (Tcons L n t0 t1)) with (S (cPair (codeTerm t0) (codeTerms L codeF n t1))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections2.", "apply le_lt_n_Sm.", "apply cPairLe2.", "replace (codeTerms L codeF (S n) (Tcons L n t0 t1)) with (S (cPair (codeTerm t0) (codeTerms L codeF n t1))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections1.", "apply le_lt_n_Sm.", "apply cPairLe1.", "replace (codeTerms L codeF (S n) (Tcons L n (substituteTerm L t0 v (var w)) (substituteTerms L n t1 v (var w)))) with (S (cPair (codeTerm (substituteTerm L t0 v (var w))) (codeTerms L codeF n (substituteTerms L n t1 v (var w))))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections2.", "apply le_lt_n_Sm.", "apply cPairLe2.", "replace (codeTerms L codeF (S n) (Tcons L n (substituteTerm L t0 v (var w)) (substituteTerms L n t1 v (var w)))) with (S (cPair (codeTerm (substituteTerm L t0 v (var w))) (codeTerms L codeF n (substituteTerms L n t1 v (var w))))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections1.", "apply le_lt_n_Sm.", "apply cPairLe1."], "proof_pred": ["intros.", "unfold var.", "unfold codeTerm.", "f_equal.", "clear.", "revert t.", "induction w.", "intros.", "symmetry.", "f_equal.", "clear.", "symmetry."], "time": 8.857748031616211, "num_tactics": 300, "proof_tree": {"current_proof_state": "ReplaceTermTermSub", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold var.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold codeTerm.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermsTermMonotone.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t , L.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF , codeF.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert t.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction w.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF , codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermsTermMonotone.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermsTermMonotone.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermMonotone.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermsTermMonotone.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceTermsTermSub", "success": false, "proof_gt": ["intros n ts.", "unfold ReplaceTermTerm in |- *.", "unfold ReplaceTermsTerm in |- *.", "unfold ReplaceTermTermsTerm in |- *.", "set (A := fun t0 recs s0 : nat => cPair (switchPR (cPairPi1 t0) (cPair (cPairPi1 t0) (cPairPi2 (codeNth (t0 - S (cPairPi2 t0)) recs))) (cPair 0 s0)) (switchPR t0 (S (cPair (cPairPi1 (codeNth (t0 - S (cPairPi1 (pred t0))) recs)) (cPairPi2 (codeNth (t0 - S (cPairPi2 (pred t0))) recs)))) 0)) in *.", "assert (forall n m : nat, m < n -> extEqual 1 (evalComposeFunc 1 1 (Vector.cons _ (evalStrongRecHelp 1 A n) 0 (Vector.nil _)) (fun b : nat => codeNth (n - S m) b)) (evalStrongRec 1 A m)).", "intros.", "apply (evalStrongRecHelp2 1).", "assumption.", "simpl in H.", "induction ts as [| n t ts Hrects]; simpl in |- *; intros.", "reflexivity.", "unfold evalStrongRec in |- *; unfold evalComposeFunc, evalOneParamList, evalList in |- *; repeat rewrite computeEvalStrongRecHelp; unfold compose2 in |- *; unfold evalComposeFunc, evalOneParamList, evalList in |- *; simpl in |- *; repeat rewrite cPairProjections1.", "unfold A at 3 1 in |- *.", "repeat rewrite cPairProjections2.", "repeat rewrite H.", "replace (codeTerms L codeF (S n) (Tcons L n (substituteTerm L t v (var w)) (substituteTerms L n ts v (var w)))) with (S (cPair (codeTerm (substituteTerm L t v (var w))) (codeTerms L codeF n (substituteTerms L n ts v (var w))))); [ idtac | reflexivity ].", "replace (codeTerms L codeF (S n) (Tcons L n t ts)) with (S (cPair (codeTerm t) (codeTerms L codeF n ts))); [ idtac | reflexivity ].", "simpl in |- *.", "repeat rewrite cPairProjections2.", "replace (cPairPi1 (evalStrongRec 1 A (cPairPi1 (cPair (codeTerm t) (codeTerms L codeF n ts))) s2)) with (cPairPi1 (evalStrongRec 1 A (cPairPi1 (cPair (codeTerm (substituteTerm L t v (var w))) (codeTerms L codeF n (substituteTerms L n ts v (var w))))) s2)).", "replace (cPairPi2 (evalStrongRec 1 A (codeTerms L codeF n ts) s2)) with (cPairPi2 (evalStrongRec 1 A (codeTerms L codeF n (substituteTerms L n ts v (var w))) s2)).", "reflexivity.", "apply (Hrects v w s2).", "repeat rewrite cPairProjections1.", "apply (ReplaceTermTermSub t v w s2).", "replace (codeTerms L codeF (S n) (Tcons L n t ts)) with (S (cPair (codeTerm t) (codeTerms L codeF n ts))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections2.", "apply le_lt_n_Sm.", "apply cPairLe2.", "replace (codeTerms L codeF (S n) (Tcons L n t ts)) with (S (cPair (codeTerm t) (codeTerms L codeF n ts))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections1.", "apply le_lt_n_Sm.", "apply cPairLe1.", "replace (codeTerms L codeF (S n) (Tcons L n (substituteTerm L t v (var w)) (substituteTerms L n ts v (var w)))) with (S (cPair (codeTerm (substituteTerm L t v (var w))) (codeTerms L codeF n (substituteTerms L n ts v (var w))))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections2.", "apply le_lt_n_Sm.", "apply cPairLe2.", "replace (codeTerms L codeF (S n) (Tcons L n (substituteTerm L t v (var w)) (substituteTerms L n ts v (var w)))) with (S (cPair (codeTerm (substituteTerm L t v (var w))) (codeTerms L codeF n (substituteTerms L n ts v (var w))))); [ idtac | reflexivity ].", "simpl in |- *.", "rewrite cPairProjections1.", "apply le_lt_n_Sm.", "apply cPairLe1."], "proof_pred": ["intros.", "unfold var.", "f_equal.", "symmetry.", "f_equal.", "clear.", "revert ts.", "induction v.", "intros.", "case ts.", "auto.", "intros.", "simpl.", "case t0.", "simpl.", "clear.", "f_equal.", "case t.", "case t.", "intros."], "time": 11.397846698760986, "num_tactics": 300, "proof_tree": {"current_proof_state": "ReplaceTermsTermSub", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold var.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite ts.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ts.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ts.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert ts.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction v.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case ts.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply t0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermsTermMonotone.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply t0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case t0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply t0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ts.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim ts.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim t0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermsTermMonotone.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermsTermMonotone.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact t.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case t.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case t.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceFormulaTermIsPR", "success": false, "proof_gt": ["unfold ReplaceFormulaTerm in |- *.", "apply evalStrongRecIsPR.", "apply compose3_3IsPR with (f1 := fun f recs s : nat => cPairPi1 f) (f2 := fun f recs s : nat => switchPR (pred (cPairPi1 f)) (switchPR (pred (pred (cPairPi1 f))) (switchPR (pred (pred (pred (cPairPi1 f)))) (cPair (cPairPi1 f) (ReplaceTermsTerm (cPairPi2 f) s)) (cPair 3 (cPair s (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)))) (cPair 2 (codeNth (f - S (cPairPi2 f)) recs))) (cPair 1 (cPair (codeNth (f - S (cPairPi1 (cPairPi2 f))) recs) (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)))) (f3 := fun f recs s : nat => cPair 0 (cPair (ReplaceTermTerm (cPairPi1 (cPairPi2 f)) s) (ReplaceTermTerm (cPairPi2 (cPairPi2 f)) s))).", "apply filter100IsPR.", "apply cPairPi1IsPR.", "apply compose3_3IsPR with (f1 := fun f recs s : nat => pred (cPairPi1 f)) (f2 := fun f recs s : nat => switchPR (pred (pred (cPairPi1 f))) (switchPR (pred (pred (pred (cPairPi1 f)))) (cPair (cPairPi1 f) (ReplaceTermsTerm (cPairPi2 f) s)) (cPair 3 (cPair s (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)))) (cPair 2 (codeNth (f - S (cPairPi2 f)) recs))) (f3 := fun f recs s : nat => cPair 1 (cPair (codeNth (f - S (cPairPi1 (cPairPi2 f))) recs) (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs))).", "apply filter100IsPR with (g := fun f : nat => pred (cPairPi1 f)).", "apply compose1_1IsPR.", "apply cPairPi1IsPR.", "apply predIsPR.", "apply compose3_3IsPR with (f1 := fun f recs s : nat => pred (pred (cPairPi1 f))) (f2 := fun f recs s : nat => switchPR (pred (pred (pred (cPairPi1 f)))) (cPair (cPairPi1 f) (ReplaceTermsTerm (cPairPi2 f) s)) (cPair 3 (cPair s (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)))) (f3 := fun f recs s : nat => cPair 2 (codeNth (f - S (cPairPi2 f)) recs)).", "apply filter100IsPR with (g := fun f : nat => pred (pred (cPairPi1 f))).", "apply compose1_1IsPR with (f := fun f : nat => pred (cPairPi1 f)).", "apply compose1_1IsPR.", "apply cPairPi1IsPR.", "apply predIsPR.", "apply predIsPR.", "apply compose3_3IsPR with (f1 := fun f recs s : nat => pred (pred (pred (cPairPi1 f)))) (f2 := fun f recs s : nat => cPair (cPairPi1 f) (ReplaceTermsTerm (cPairPi2 f) s)) (f3 := fun f recs s : nat => cPair 3 (cPair s (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs))).", "apply filter100IsPR with (g := fun f : nat => pred (pred (pred (cPairPi1 f)))).", "apply compose1_1IsPR with (f := fun f : nat => pred (pred (cPairPi1 f))).", "apply compose1_1IsPR with (f := fun f : nat => pred (cPairPi1 f)).", "apply compose1_1IsPR.", "apply cPairPi1IsPR.", "apply predIsPR.", "apply predIsPR.", "apply predIsPR.", "apply filter101IsPR with (g := fun f s : nat => cPair (cPairPi1 f) (ReplaceTermsTerm (cPairPi2 f) s)).", "apply compose2_2IsPR with (f := fun f s : nat => cPairPi1 f) (g := fun f s : nat => ReplaceTermsTerm (cPairPi2 f) s).", "apply filter10IsPR.", "apply cPairPi1IsPR.", "apply compose2_2IsPR with (f := fun f s : nat => cPairPi2 f) (g := fun f s : nat => s).", "apply filter10IsPR.", "apply cPairPi2IsPR.", "apply pi2_2IsPR.", "apply ReplaceTermsTermIsPR.", "apply cPairIsPR.", "apply compose3_2IsPR with (f1 := fun f recs s : nat => 3) (f2 := fun f recs s : nat => cPair s (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)).", "apply filter100IsPR with (g := fun _ : nat => 3).", "apply const1_NIsPR.", "apply compose3_2IsPR with (f1 := fun f recs s : nat => s) (f2 := fun f recs s : nat => codeNth (f - S (cPairPi2 (cPairPi2 f))) recs).", "apply pi3_3IsPR.", "apply filter110IsPR with (g := fun f recs : nat => codeNth (f - S (cPairPi2 (cPairPi2 f))) recs).", "apply compose2_2IsPR with (f := fun f recs : nat => f - S (cPairPi2 (cPairPi2 f))) (g := fun f recs : nat => recs).", "apply filter10IsPR with (g := fun f : nat => f - S (cPairPi2 (cPairPi2 f))).", "apply compose1_2IsPR with (f := fun f : nat => f) (f' := fun f : nat => S (cPairPi2 (cPairPi2 f))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun f : nat => cPairPi2 (cPairPi2 f)).", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply cPairIsPR.", "apply cPairIsPR.", "apply switchIsPR.", "apply filter110IsPR with (g := fun f recs : nat => cPair 2 (codeNth (f - S (cPairPi2 f)) recs)).", "apply compose2_2IsPR with (f := fun f recs : nat => 2) (g := fun f recs : nat => codeNth (f - S (cPairPi2 f)) recs).", "apply filter10IsPR with (g := fun _ : nat => 2).", "apply const1_NIsPR.", "apply compose2_2IsPR with (f := fun f recs : nat => f - S (cPairPi2 f)) (g := fun f recs : nat => recs).", "apply filter10IsPR with (g := fun f : nat => f - S (cPairPi2 f)).", "apply compose1_2IsPR with (f := fun f : nat => f) (f' := fun f : nat => S (cPairPi2 f)).", "apply idIsPR.", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply cPairIsPR.", "apply switchIsPR.", "apply filter110IsPR with (g := fun f recs : nat => cPair 1 (cPair (codeNth (f - S (cPairPi1 (cPairPi2 f))) recs) (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs))).", "apply compose2_2IsPR with (f := fun f recs : nat => 1) (g := fun f recs : nat => cPair (codeNth (f - S (cPairPi1 (cPairPi2 f))) recs) (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)).", "apply filter10IsPR with (g := fun _ : nat => 1).", "apply const1_NIsPR.", "apply compose2_2IsPR with (f := fun f recs : nat => codeNth (f - S (cPairPi1 (cPairPi2 f))) recs) (g := fun f recs : nat => codeNth (f - S (cPairPi2 (cPairPi2 f))) recs).", "apply compose2_2IsPR with (f := fun f recs : nat => f - S (cPairPi1 (cPairPi2 f))) (g := fun f recs : nat => recs).", "apply filter10IsPR with (g := fun f : nat => f - S (cPairPi1 (cPairPi2 f))).", "apply compose1_2IsPR with (f := fun f : nat => f) (f' := fun f : nat => S (cPairPi1 (cPairPi2 f))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun f : nat => cPairPi1 (cPairPi2 f)).", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply compose2_2IsPR with (f := fun f recs : nat => f - S (cPairPi2 (cPairPi2 f))) (g := fun f recs : nat => recs).", "apply filter10IsPR with (g := fun f : nat => f - S (cPairPi2 (cPairPi2 f))).", "apply compose1_2IsPR with (f := fun f : nat => f) (f' := fun f : nat => S (cPairPi2 (cPairPi2 f))).", "apply idIsPR.", "apply compose1_1IsPR with (f := fun f : nat => cPairPi2 (cPairPi2 f)).", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "apply succIsPR.", "apply minusIsPR.", "apply pi2_2IsPR.", "apply codeNthIsPR.", "apply cPairIsPR.", "apply cPairIsPR.", "apply switchIsPR.", "apply filter101IsPR with (g := fun f s : nat => cPair 0 (cPair (ReplaceTermTerm (cPairPi1 (cPairPi2 f)) s) (ReplaceTermTerm (cPairPi2 (cPairPi2 f)) s))).", "apply compose2_2IsPR with (f := fun f s : nat => 0) (g := fun f s : nat => cPair (ReplaceTermTerm (cPairPi1 (cPairPi2 f)) s) (ReplaceTermTerm (cPairPi2 (cPairPi2 f)) s)).", "apply filter10IsPR with (g := fun _ : nat => 0).", "apply const1_NIsPR.", "apply compose2_2IsPR with (f := fun f s : nat => ReplaceTermTerm (cPairPi1 (cPairPi2 f)) s) (g := fun f s : nat => ReplaceTermTerm (cPairPi2 (cPairPi2 f)) s).", "apply compose2_2IsPR with (f := fun f s : nat => cPairPi1 (cPairPi2 f)) (g := fun f s : nat => s).", "apply filter10IsPR with (g := fun f : nat => cPairPi1 (cPairPi2 f)).", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply cPairPi1IsPR.", "apply pi2_2IsPR.", "apply ReplaceTermTermIsPR.", "apply compose2_2IsPR with (f := fun f s : nat => cPairPi2 (cPairPi2 f)) (g := fun f s : nat => s).", "apply filter10IsPR with (g := fun f : nat => cPairPi2 (cPairPi2 f)).", "apply compose1_1IsPR.", "apply cPairPi2IsPR.", "apply cPairPi2IsPR.", "apply pi2_2IsPR.", "apply ReplaceTermTermIsPR.", "apply cPairIsPR.", "apply cPairIsPR.", "apply switchIsPR."], "proof_pred": ["red.", "simpl.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "case arity2."], "time": 116.25969696044922, "num_tactics": 300, "proof_tree": {"current_proof_state": "ReplaceFormulaTermIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity11.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeF.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeR.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold arity2 in |- *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity41.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity41.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case arity1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity9.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "case arity2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity41.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceFormulaTermMonotone", "success": false, "proof_gt": ["assert (forall a s1 s2 n : nat, n < a -> s1 <= s2 -> ReplaceFormulaTerm n s1 <= ReplaceFormulaTerm n s2).", "unfold ReplaceFormulaTerm in |- *.", "set (A := fun f recs s : nat => switchPR (cPairPi1 f) (switchPR (pred (cPairPi1 f)) (switchPR (pred (pred (cPairPi1 f))) (switchPR (pred (pred (pred (cPairPi1 f)))) (cPair (cPairPi1 f) (ReplaceTermsTerm (cPairPi2 f) s)) (cPair 3 (cPair s (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)))) (cPair 2 (codeNth (f - S (cPairPi2 f)) recs))) (cPair 1 (cPair (codeNth (f - S (cPairPi1 (cPairPi2 f))) recs) (codeNth (f - S (cPairPi2 (cPairPi2 f))) recs)))) (cPair 0 (cPair (ReplaceTermTerm (cPairPi1 (cPairPi2 f)) s) (ReplaceTermTerm (cPairPi2 (cPairPi2 f)) s)))) in *.", "assert (forall n m : nat, m < n -> extEqual 1 (evalComposeFunc 1 1 (Vector.cons _ (evalStrongRecHelp 1 A n) 0 (Vector.nil _)) (fun b : nat => codeNth (n - S m) b)) (evalStrongRec 1 A m)).", "intros.", "apply (evalStrongRecHelp2 1).", "assumption.", "simpl in H.", "simple induction a.", "intros.", "elim (lt_n_O _ H0).", "intros.", "induction (le_lt_or_eq _ _ (lt_n_Sm_le _ _ H1)).", "apply H0.", "assumption.", "assumption.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "unfold A at 3 1 in |- *.", "destruct n0.", "simpl in |- *.", "apply cPairLe3.", "apply le_n.", "apply cPairLe3; apply ReplaceTermTermMonotone; assumption.", "assert (cPair (cPairPi1 (S n0)) (cPairPi2 (S n0)) = S n0).", "apply cPairProjections.", "destruct (cPairPi1 (S n0)).", "simpl in |- *.", "apply cPairLe3.", "apply le_n.", "apply cPairLe3; apply ReplaceTermTermMonotone; assumption.", "assert (cPairPi2 (S n0) < S n0).", "apply lt_le_trans with (cPair (S n1) (cPairPi2 (S n0))).", "apply cPairLt2.", "rewrite H4.", "apply le_n.", "assert (cPairPi1 (cPairPi2 (S n0)) < S n0).", "apply le_lt_trans with (cPairPi2 (S n0)).", "apply le_trans with (cPair (cPairPi1 (cPairPi2 (S n0))) (cPairPi2 (cPairPi2 (S n0)))).", "apply cPairLe1.", "rewrite cPairProjections.", "apply le_n.", "assumption.", "assert (cPairPi2 (cPairPi2 (S n0)) < S n0).", "apply le_lt_trans with (cPairPi2 (S n0)).", "apply le_trans with (cPair (cPairPi1 (cPairPi2 (S n0))) (cPairPi2 (cPairPi2 (S n0)))).", "apply cPairLe2.", "rewrite cPairProjections.", "apply le_n.", "assumption.", "destruct n1.", "repeat rewrite H with (m := cPairPi1 (cPairPi2 (S n0))); try assumption.", "repeat rewrite H with (m := cPairPi2 (cPairPi2 (S n0))); try assumption.", "simpl in |- *.", "apply cPairLe3.", "apply le_n.", "apply cPairLe3.", "apply H0.", "rewrite <- H3.", "assumption.", "assumption.", "apply H0.", "rewrite <- H3.", "assumption.", "assumption.", "destruct n1.", "repeat rewrite H with (m := cPairPi2 (S n0)); try assumption.", "simpl in |- *.", "apply cPairLe3.", "apply le_n.", "apply H0.", "rewrite <- H3.", "assumption.", "assumption.", "destruct n1.", "repeat rewrite H with (m := cPairPi2 (cPairPi2 (S n0))); try assumption.", "simpl in |- *.", "apply cPairLe3.", "apply le_n.", "apply cPairLe3.", "assumption.", "apply H0.", "rewrite <- H3.", "assumption.", "assumption.", "simpl in |- *.", "apply cPairLe3.", "apply le_n.", "apply ReplaceTermsTermMonotone.", "assumption.", "intros.", "apply (H (S a)); auto."], "proof_pred": ["intros.", "elim H.", "reflexivity.", "intro.", "intro.", "elim H0.", "intros.", "elim var.", "intros.", "elim var.", "intuition.", "elim H2.", "elim H2.", "elim H2.", "clear H1.", "intros.", "elim H2.", "elim H2.", "clear H.", "intros.", "elim H2.", "clear.", "intros.", "elim s1.", "elim a.", "auto  with *."], "time": 600.1548230648041, "num_tactics": 224, "proof_tree": {"current_proof_state": "ReplaceFormulaTermMonotone", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "reflexivity.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "case H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermsTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold a in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim n.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim s1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermsTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim a.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "auto  with *.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "ReplaceFormulaTermSub", "success": false, "proof_gt": ["intro.", "unfold ReplaceFormulaTerm in |- *.", "set (A := fun f0 recs s0 : nat => switchPR (cPairPi1 f0) (switchPR (pred (cPairPi1 f0)) (switchPR (pred (pred (cPairPi1 f0))) (switchPR (pred (pred (pred (cPairPi1 f0)))) (cPair (cPairPi1 f0) (ReplaceTermsTerm (cPairPi2 f0) s0)) (cPair 3 (cPair s0 (codeNth (f0 - S (cPairPi2 (cPairPi2 f0))) recs)))) (cPair 2 (codeNth (f0 - S (cPairPi2 f0)) recs))) (cPair 1 (cPair (codeNth (f0 - S (cPairPi1 (cPairPi2 f0))) recs) (codeNth (f0 - S (cPairPi2 (cPairPi2 f0))) recs)))) (cPair 0 (cPair (ReplaceTermTerm (cPairPi1 (cPairPi2 f0)) s0) (ReplaceTermTerm (cPairPi2 (cPairPi2 f0)) s0)))) in *.", "assert (forall n m : nat, m < n -> extEqual 1 (evalComposeFunc 1 1 (Vector.cons _ (evalStrongRecHelp 1 A n) 0 (Vector.nil _)) (fun b : nat => codeNth (n - S m) b)) (evalStrongRec 1 A m)).", "intros.", "apply (evalStrongRecHelp2 1).", "assumption.", "simpl in H.", "elim f using Formula_depth_ind2; clear f; intros.", "simpl in |- *.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "unfold A at 3 1 in |- *.", "repeat first [ rewrite cPairProjections1 | rewrite cPairProjections2 ].", "simpl in |- *.", "repeat rewrite ReplaceTermTermSub.", "reflexivity.", "simpl in |- *.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "unfold A at 3 1 in |- *.", "repeat first [ rewrite cPairProjections1 | rewrite cPairProjections2 ].", "simpl in |- *.", "rewrite ReplaceTermsTermSub.", "reflexivity.", "simpl in |- *.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "repeat rewrite subFormulaImp.", "simpl in |- *.", "unfold A at 3 1 in |- *.", "repeat first [ rewrite cPairProjections1 | rewrite cPairProjections2 ].", "rewrite H with (m := codeFormula (substituteFormula L f v (var w))).", "rewrite H with (m := codeFormula (substituteFormula L f0 v (var w))).", "rewrite H with (m := codeFormula f).", "rewrite H with (m := codeFormula f0).", "simpl in |- *.", "rewrite H0.", "rewrite H1.", "reflexivity.", "apply le_lt_trans with (cPair (codeFormula f) (codeFormula f0)).", "apply cPairLe2.", "apply cPairLt2.", "apply le_lt_trans with (cPair (codeFormula f) (codeFormula f0)).", "apply cPairLe1.", "apply cPairLt2.", "apply le_lt_trans with (cPair (codeFormula (substituteFormula L f v (var w))) (codeFormula (substituteFormula L f0 v (var w)))).", "apply cPairLe2.", "apply cPairLt2.", "apply le_lt_trans with (cPair (codeFormula (substituteFormula L f v (var w))) (codeFormula (substituteFormula L f0 v (var w)))).", "apply cPairLe1.", "apply cPairLt2.", "simpl in |- *.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "repeat rewrite subFormulaNot.", "simpl in |- *.", "unfold A at 3 1 in |- *.", "repeat first [ rewrite cPairProjections1 | rewrite cPairProjections2 ].", "rewrite H with (m := codeFormula (substituteFormula L f v (var w))).", "rewrite H with (m := codeFormula f).", "simpl in |- *.", "rewrite H0.", "reflexivity.", "apply cPairLt2.", "apply cPairLt2.", "rewrite subFormulaForall.", "induction (eq_nat_dec v v0).", "reflexivity.", "induction (In_dec eq_nat_dec v (freeVarTerm L (var w))).", "simpl in |- *.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "simpl in |- *.", "unfold A at 3 1 in |- *.", "repeat first [ rewrite cPairProjections1 | rewrite cPairProjections2 ].", "rewrite H with (m := codeFormula (substituteFormula L (substituteFormula L a v (fol.var L (newVar (v0 :: freeVarTerm L (var w) ++ freeVarFormula L a)))) v0 (var w))).", "rewrite H with (m := codeFormula a).", "simpl in |- *.", "rewrite H0.", "rewrite H0.", "reflexivity.", "apply depthForall.", "apply eqDepth with a.", "symmetry in |- *.", "apply subFormulaDepth.", "apply depthForall.", "apply le_lt_trans with (cPair v (codeFormula a)).", "apply cPairLe2.", "apply cPairLt2.", "apply le_lt_trans with (cPair (newVar (v0 :: freeVarTerm L (var w) ++ freeVarFormula L a)) (codeFormula (substituteFormula L (substituteFormula L a v (fol.var L (newVar (v0 :: freeVarTerm L (var w) ++ freeVarFormula L a)))) v0 (var w)))).", "apply cPairLe2.", "apply cPairLt2.", "simpl in |- *.", "unfold evalStrongRec in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "repeat rewrite computeEvalStrongRecHelp.", "unfold compose2 in |- *.", "unfold evalComposeFunc, evalOneParamList, evalList in |- *.", "simpl in |- *.", "repeat rewrite cPairProjections1.", "simpl in |- *.", "unfold A at 3 1 in |- *.", "repeat first [ rewrite cPairProjections1 | rewrite cPairProjections2 ].", "rewrite H with (m := codeFormula (substituteFormula L a v0 (var w))).", "rewrite H with (m := codeFormula a).", "simpl in |- *.", "rewrite H0.", "reflexivity.", "apply depthForall.", "apply le_lt_trans with (cPair v (codeFormula a)).", "apply cPairLe2.", "apply cPairLt2.", "apply le_lt_trans with (cPair v (codeFormula (substituteFormula L a v0 (var w)))).", "apply cPairLe2.", "apply cPairLt2."], "proof_pred": ["intros.", "unfold var.", "unfold codeFormula.", "f_equal.", "symmetry.", "intuition.", "clear.", "revert codeF.", "intros."], "time": 8.424930810928345, "num_tactics": 300, "proof_tree": {"current_proof_state": "ReplaceFormulaTermSub", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold var.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold codeFormula.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermsTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxLemma3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermsTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f , w.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.ReplaceTermsTermSub.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.boundSubTerms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxApp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF , codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF , codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR , codeF.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert codeF.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeR.", "children": []}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "pow3IsPR", "success": false, "proof_gt": ["unfold pow3 in |- *.", "apply indIsPR with (g := 1) (f := fun _ rec : nat => rec + (rec + rec)).", "apply filter01IsPR with (g := fun rec : nat => rec + (rec + rec)).", "apply compose1_2IsPR with (f := fun rec : nat => rec) (f' := fun rec : nat => rec + rec).", "apply idIsPR.", "apply compose1_2IsPR with (f := fun rec : nat => rec) (f' := fun rec : nat => rec).", "apply idIsPR.", "apply idIsPR.", "apply plusIsPR.", "apply plusIsPR."], "proof_pred": ["red in |- *.", "simpl in |- *.", "contradict apply.", "intros.", "elim var.", "intros.", "elim var.", "elim var.", "intuition.", "elim H.", "elim H.", "elim H.", "induction L.", "intros.", "elim H.", "elim H.", "induction L.", "intros.", "elim H.", "elim H.", "intuition.", "elim H.", "intros.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H.", "elim H."], "time": 97.54071593284607, "num_tactics": 300, "proof_tree": {"current_proof_state": "pow3IsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict apply.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxVarFreeVar.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with bool.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with bool.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact n1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply arity0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact arity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "pow3Monotone", "success": true, "proof_gt": ["intros.", "induction b as [| b Hrecb].", "simpl in |- *.", "rewrite <- (le_n_O_eq _ H).", "simpl in |- *.", "apply le_n.", "simpl in |- *.", "induction (le_lt_or_eq _ _ H).", "apply le_trans with (pow3 b).", "apply Hrecb.", "apply lt_n_Sm_le.", "assumption.", "apply le_plus_l.", "rewrite H0.", "simpl in |- *.", "apply le_n."], "proof_pred": ["intros.", "elim H.", "elim var.", "intros.", "elim var.", "auto.", "auto.", "auto.", "auto.", "auto.", "intros.", "simpl in |- *.", "elim H1.", "elim var.", "intuition.", "intuition.", "auto.", "auto  with *."], "time": 10.404818773269653, "num_tactics": 136, "proof_tree": {"current_proof_state": "pow3Monotone", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply in apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Code_Substitute_Formula.maxVarFreeVar.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold codeF in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim var.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeFormula in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold codeTerm in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold var in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold apply in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "SUCCESS", "used_tactic": "auto  with *.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "mapListLemma", "success": false, "proof_gt": ["intros.", "induction l as [| a l Hrecl].", "simpl in |- *.", "auto.", "simpl in |- *.", "induction (fold_right max 0 (map S l)).", "apply le_n_S.", "apply le_max_l.", "apply le_n_S.", "apply maxLemma.", "apply le_n.", "apply le_S_n.", "assumption."], "proof_pred": ["intros.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "elim l.", "auto.", "intros.", "simpl in |- *.", "case L.", "case l0.", "case L.", "case a.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "case L.", "intros.", "simpl in |- *.", "auto.", "auto.", "intros.", "simpl in |- *.", "case L.", "case l1.", "case L.", "case L.", "case L.", "case L.", "case L.", "simpl in |- *."], "time": 114.93332886695862, "num_tactics": 300, "proof_tree": {"current_proof_state": "mapListLemma", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim codeF.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity8.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case l0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case a.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "PROVING", "used_tactic": "auto.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case l1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case n.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case a.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case n.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeFormula.", "children": [{"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with bool.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with zarith.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with algebra.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with real.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with sets.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with zfc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with coc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case codeTerm.", "children": [{"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with bool.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with zarith.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with algebra.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with real.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with sets.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with zfc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with coc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "case var.", "children": [{"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto  with bool.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "auto  with zarith.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with algebra.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "generalize H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim apply.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "generalize apply.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity15.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity3.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity5.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity8.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "right.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case l1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case L.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case a.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case n.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeFormula.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case codeTerm.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case var.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "case arity2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction arity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Relations.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Functions.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "simpl in |- *.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "boundComputationIsPR", "success": false, "proof_gt": ["unfold boundComputation in |- *.", "apply ind2ParamIsPR with (f := fun _ rec p1 p2 : nat => cTriple p1 p2 (cPair rec rec)) (g := fun p1 p2 : nat => cTriple p1 p2 0).", "apply compose4_3IsPR with (f1 := fun _ rec p1 p2 : nat => p1) (f2 := fun _ rec p1 p2 : nat => p2) (f3 := fun _ rec p1 p2 : nat => cPair rec rec).", "apply pi3_4IsPR.", "apply pi4_4IsPR.", "apply filter1100IsPR with (g := fun _ rec : nat => cPair rec rec).", "apply filter01IsPR with (g := fun rec : nat => cPair rec rec).", "apply compose1_2IsPR with (f := fun rec : nat => rec) (f' := fun rec : nat => rec).", "apply idIsPR.", "apply idIsPR.", "apply cPairIsPR.", "apply cTripleIsPR.", "apply compose2_3IsPR with (f1 := fun p1 p2 : nat => p1) (f2 := fun p1 p2 : nat => p2) (f3 := fun p1 p2 : nat => 0).", "apply pi1_2IsPR.", "apply pi2_2IsPR.", "apply filter10IsPR with (g := fun _ : nat => 0).", "apply const1_NIsPR.", "apply cTripleIsPR."], "proof_pred": [], "time": 0.8581745624542236, "num_tactics": 20, "proof_tree": {"current_proof_state": "boundComputationIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}]}}, {"filename": "../data/goedel/codeSubFormula.json", "proof_name": "codeSubFormulaIsPR", "success": false, "proof_gt": ["unfold codeSubFormula in |- *.", "apply compose3_1IsPR with (f := fun f v s : nat => boundedSearch (fun p x : nat => ltBool 0 (checkSubFormulaTrace (cPair (cPairPi1 p) x))) (cPair (cTriple v s f) (S (boundComputation f (cTriple (cPair 0 (pow3 f + (v + (s + f)))) (cPair 0 (pow3 f + (v + (s + f)))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f))))))))).", "apply compose3_1IsPR with (f := fun f v s : nat => cPair (cTriple v s f) (S (boundComputation f (cTriple (cPair 0 (pow3 f + (v + (s + f)))) (cPair 0 (pow3 f + (v + (s + f)))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))))).", "apply compose3_2IsPR with (f1 := fun f v s : nat => cTriple v s f) (f2 := fun f v s : nat => S (boundComputation f (cTriple (cPair 0 (pow3 f + (v + (s + f)))) (cPair 0 (pow3 f + (v + (s + f)))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f))))))).", "apply compose3_3IsPR with (f1 := fun f v s : nat => v) (f2 := fun f v s : nat => s) (f3 := fun f v s : nat => f).", "apply pi2_3IsPR.", "apply pi3_3IsPR.", "apply pi1_3IsPR.", "apply cTripleIsPR.", "apply compose3_1IsPR with (f := fun f v s : nat => boundComputation f (cTriple (cPair 0 (pow3 f + (v + (s + f)))) (cPair 0 (pow3 f + (v + (s + f)))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))).", "assert (isPR 3 (fun f v s : nat => cPair 0 (pow3 f + (v + (s + f))))).", "apply compose3_2IsPR with (f1 := fun f v s : nat => 0) (f2 := fun f v s : nat => pow3 f + (v + (s + f))).", "apply filter100IsPR with (g := fun _ : nat => 0).", "apply const1_NIsPR.", "apply compose3_2IsPR with (f1 := fun f v s : nat => pow3 f) (f2 := fun f v s : nat => v + (s + f)).", "apply filter100IsPR.", "apply pow3IsPR.", "apply compose3_2IsPR with (f1 := fun f v s : nat => v) (f2 := fun f v s : nat => s + f).", "apply pi2_3IsPR.", "apply filter101IsPR with (g := fun f s : nat => s + f).", "apply swapIsPR.", "apply plusIsPR.", "apply plusIsPR.", "apply plusIsPR.", "apply cPairIsPR.", "assert (isPR 3 (fun f v s : nat => ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))).", "apply compose3_2IsPR with (f1 := fun f v s : nat => f) (f2 := fun f v s : nat => cPair 0 (pow3 f + (v + (s + f)))).", "apply pi1_3IsPR.", "assumption.", "apply ReplaceFormulaTermIsPR.", "apply compose3_3IsPR with (f1 := fun f v s : nat => f) (f2 := fun f v s : nat => cTriple (cPair 0 (pow3 f + (v + (s + f)))) (cPair 0 (pow3 f + (v + (s + f)))) (ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f)))))) (f3 := fun f v s : nat => ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f))))).", "apply pi1_3IsPR.", "apply compose3_3IsPR with (f1 := fun f v s : nat => cPair 0 (pow3 f + (v + (s + f)))) (f2 := fun f v s : nat => cPair 0 (pow3 f + (v + (s + f)))) (f3 := fun f v s : nat => ReplaceFormulaTerm f (cPair 0 (pow3 f + (v + (s + f))))); try assumption.", "apply cTripleIsPR.", "assumption.", "apply boundComputationIsPR.", "apply succIsPR.", "apply cPairIsPR.", "apply boundSearchIsPR with (P := fun p x : nat => ltBool 0 (checkSubFormulaTrace (cPair (cPairPi1 p) x))).", "unfold isPRrel in |- *.", "apply compose2_2IsPR with (f := fun p x : nat => 0) (g := fun p x : nat => checkSubFormulaTrace (cPair (cPairPi1 p) x)) (h := charFunction 2 ltBool).", "apply filter10IsPR with (g := fun _ : nat => 0).", "apply const1_NIsPR.", "apply compose2_1IsPR with (f := fun p x : nat => cPair (cPairPi1 p) x).", "apply compose2_2IsPR with (f := fun p x : nat => cPairPi1 p) (g := fun p x : nat => x).", "apply filter10IsPR.", "apply cPairPi1IsPR.", "apply pi2_2IsPR.", "apply cPairIsPR.", "apply checkTraceIsPR.", "apply ltIsPR.", "apply cPairPi1IsPR."], "proof_pred": [], "time": 0.782151460647583, "num_tactics": 20, "proof_tree": {"current_proof_state": "codeSubFormulaIsPR", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply apply.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeFormula.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeF.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeR.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply var.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeTerm.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply codeFormula.", "children": []}]}}]}