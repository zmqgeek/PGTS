{"options": {"method": "ours", "eval_id": "tok", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 4, "proj_idx": 19, "filter": null, "path": "runs/tok/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 15025, "tac_vocab_file": "token_vocab.pickle", "cutoff_len": 30}, "results": [{"filename": "../data/demos/Demo_AutoRewrite.json", "proof_name": "ResAck0", "success": false, "proof_gt": ["autorewrite with base0 using try reflexivity."], "proof_pred": [], "time": 9.860559463500977, "num_tactics": 140, "proof_tree": {"current_proof_state": "ResAck0", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Ack in Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Ack.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case Ack.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Ack.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case Ack.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "apply Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict Ack.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold Ack in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction 1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction 2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simple induction 1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction Ack.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack2.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Ack.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case Ack.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ackermann.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Ack.", "children": []}]}}, {"filename": "../data/demos/Demo_AutoRewrite.json", "proof_name": "Resg0", "success": false, "proof_gt": ["autorewrite with base1 using reflexivity || simpl in |- *."], "proof_pred": [], "time": 15.033971309661865, "num_tactics": 80, "proof_tree": {"current_proof_state": "Resg0", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case g.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack0.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack2.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack0.", "children": []}]}}, {"filename": "../data/demos/Demo_AutoRewrite.json", "proof_name": "Resg1", "success": false, "proof_gt": ["autorewrite with base1 using reflexivity || simpl in |- *."], "proof_pred": [], "time": 14.333917617797852, "num_tactics": 80, "proof_tree": {"current_proof_state": "Resg1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case g.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.McCarthy.Resg0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact g.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in g.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction g.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.McCarthy.g0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Ack1.", "children": []}]}}]}