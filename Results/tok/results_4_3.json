{"options": {"method": "ours", "eval_id": "tok", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 3, "proj_idx": 4, "filter": null, "path": "runs/tok/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 15025, "tac_vocab_file": "token_vocab.pickle", "cutoff_len": 30}, "results": [{"filename": "../data/disel/Core/Freshness.json", "proof_name": "keys_last_mono", "success": false, "proof_gt": ["rewrite !umEX; case: (UMC.from f1); first by move=>_ H _; apply: path_last H.", "move=>{f1} f1 /= _ H1; case: (UMC.from f2)=>/=.", "-", "by move=>_ /allP; case: (supp f1)=>//; rewrite /oleq eq_refl orbT.", "by move=>{f2} f2 /= _; apply: seq_last_mono H1."], "proof_pred": ["intros.", "contradict H.", "clear.", "contradict f1.", "intro.", "induction U.", "elim c.", "intros.", "elim mixin.", "intros.", "elim mixin.", "intros.", "elim mixin.", "intros.", "elim mixin.", "intros.", "elim mixin.", "intros.", "elim mixin.", "intros.", "elim mixin.", "intros.", "elim mixin.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro.", "intro."], "time": 89.79820942878723, "num_tactics": 300, "proof_tree": {"current_proof_state": "keys_last_mono", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply k.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst k.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply k.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply U.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst K.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in k.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim k.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear k.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear K.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- U.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict f1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "subst k.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst K.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply k.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply K.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction U.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply k.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1 in f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim c.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply p.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply mixin.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply k.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply c.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply U.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e18.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e17.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e17.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e32.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e18.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e33.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e17.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e32.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e47.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e18.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e48.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e17.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e32.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e47.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e62.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e18.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e48.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e63.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e18.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e48.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e63.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e78.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e17.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e32.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e47.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e62.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e77.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e17.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e32.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e47.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e62.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e77.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e92.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e18.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e48.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e63.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e78.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e93.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim mixin.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e17.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e32.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e47.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e62.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e77.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e92.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e107.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e18.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e48.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e63.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e78.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e93.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim e108.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear e2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear e17.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear e32.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear f1 e2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear f1 e17.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear f1 e32.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear f1 e47.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "last_key0", "success": false, "proof_gt": ["by rewrite /last_key /Unit /= !umEX."], "proof_pred": [], "time": 1.4979400634765625, "num_tactics": 80, "proof_tree": {"current_proof_state": "last_key0", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono in V.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite V in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "last_key_dom", "success": false, "proof_gt": ["rewrite /valid /= /last_key /Unit /= !umEX /= -{4}[f]UMC.tfE.", "case: (UMC.from f)=>//=; case=>s H /= H1 _ /seq_last_in.", "rewrite /UM.empty UMC.eqE UM.umapE /supp fmapE /= {H H1}.", "by elim: s."], "proof_pred": ["intros.", "destruct H0.", "destruct H.", "simpl.", "symmetry.", "simpl in f."], "time": 17.273350715637207, "num_tactics": 300, "proof_tree": {"current_proof_state": "last_key_dom", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict f.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct SerTop.FreshLastKey.last_key.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}]}]}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct SerTop.FreshLastKey.last_key.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exact f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "apply f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in f.", "children": []}]}]}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "dom_last_key", "success": false, "proof_gt": ["by move=>X; apply: contraR; move/(last_key_dom X)=>->; apply/empbP."], "proof_pred": ["intros.", "contradict H0.", "simpl.", "clear.", "intuition.", "simpl in f.", "inversion H.", "revert H.", "intros."], "time": 19.570218801498413, "num_tactics": 300, "proof_tree": {"current_proof_state": "dom_last_key", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "inversion H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear H.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear H1.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear f.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear V.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear f f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert H1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "revert f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H1 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear f H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1 in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert H1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "revert H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H1 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H V ).", "children": []}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "last_key_max", "success": false, "proof_gt": ["rewrite /last_key /= !umEX; case: (UMC.from f)=>//; case=>s H _ /=.", "rewrite /supp /ord /= (leq_eqVlt x) orbC.", "by apply: sorted_last_key_max (sorted_oleq H)."], "proof_pred": ["intro.", "contradict H.", "intro.", "inversion H.", "clear H.", "clear H1.", "clear x.", "simpl in f.", "contradict f."], "time": 16.381192922592163, "num_tactics": 300, "proof_tree": {"current_proof_state": "last_key_max", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "inversion H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear f.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear x.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear V.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite V in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear x x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion x.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert x.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite x in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion x.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion x.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V x ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x V ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction x.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear x x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction x.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "revert x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_key0 in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "clear x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "max_key_last", "success": false, "proof_gt": ["rewrite /last_key !umEX; case: (UMC.from f)=>//; case=>s H _ /=.", "move=>H1 /= H2; apply: sorted_max_key_last (sorted_oleq H) H1 _.", "by move=>z /(H2 z); rewrite leq_eqVlt orbC."], "proof_pred": ["intros.", "symmetry.", "destruct H.", "simpl in H0.", "symmetry."], "time": 28.248135805130005, "num_tactics": 300, "proof_tree": {"current_proof_state": "max_key_last", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct x.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 H0 ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f x ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct x.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x f ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x f ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "last_keyPt", "success": false, "proof_gt": ["by rewrite /last_key /um_pts /= !umEX."], "proof_pred": [], "time": 13.663192749023438, "num_tactics": 200, "proof_tree": {"current_proof_state": "last_keyPt", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.dom_last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.max_key_last.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_max.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.dom_last_key.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "apply SerTop.FreshLastKey.max_key_last.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( v v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite x.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( v v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0 in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite v.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.dom_last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.max_key_last.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_max.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_max.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "hist_path", "success": false, "proof_gt": ["rewrite !umEX; case: (UMC.from f)=>// {f} f /= _; case: f; case=>//= x s H.", "rewrite {1}/oleq /ord /= orbC -leq_eqVlt /=.", "by apply: sub_path H=>z y; rewrite /oleq=>->."], "proof_pred": ["simpl.", "generalize f.", "simpl.", "clear.", "case SerTop.FreshLastKey.last_key0.", "simpl.", "intros.", "generalize f.", "intuition.", "hnf.", "symmetry."], "time": 21.79432225227356, "num_tactics": 300, "proof_tree": {"current_proof_state": "hist_path", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict f.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "revert f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.keys_last_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_key0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction 1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.keys_last_mono.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "generalize f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "hnf in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case SerTop.FreshLastKey.last_key0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.FreshLastKey.last_key0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "generalize f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "last_keyfUn", "success": false, "proof_gt": ["by move=>X; apply: last_key_mono=>x; rewrite domUn inE X => ->."], "proof_pred": ["simpl.", "intros.", "inversion H.", "simpl in f1."], "time": 17.58887267112732, "num_tactics": 300, "proof_tree": {"current_proof_state": "last_keyfUn", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f1 ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f2 ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f1 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 H ).", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "inversion H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1 in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear H1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 H ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "last_keyUnf", "success": false, "proof_gt": ["by rewrite joinC; apply: last_keyfUn."], "proof_pred": ["simpl.", "generalize f2.", "simpl.", "intuition.", "hnf.", "simpl in f1.", "simpl in f2.", "symmetry."], "time": 16.420891046524048, "num_tactics": 300, "proof_tree": {"current_proof_state": "last_keyUnf", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f2 ).", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f1 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f2 f1 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "generalize f2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f1 f1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f0 f0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f0 f1 ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f0 f0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f0 f1 ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "dom_ordfresh", "success": false, "proof_gt": ["by move/last_key_max."], "proof_pred": ["intro.", "clear.", "contradict f.", "intros.", "clear x.", "revert f."], "time": 18.503026247024536, "num_tactics": 300, "proof_tree": {"current_proof_state": "dom_ordfresh", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict f.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.fresh.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x V ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_keyUnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_keyfUn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_mono.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x V ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in x.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict x.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_keyPt.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_keyfUn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_keyUnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_key_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.dom_last_key.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct x.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x x ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.last_key_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( x SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply x in x.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_key_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyfUn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyUnf.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V , V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V , V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V , SerTop.FreshLastKey.last_keyPt in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.FreshLastKey.fresh.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "inversion x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction x.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear x.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert f.", "children": []}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "dom_freshn", "success": false, "proof_gt": ["by apply: contra (@dom_ordfresh _ _) _; rewrite -leqNgt leq_addr."], "proof_pred": ["simpl.", "contradict f.", "simpl.", "contradict n.", "intuition.", "contradict n."], "time": 22.262946605682373, "num_tactics": 300, "proof_tree": {"current_proof_state": "dom_freshn", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict f.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f n ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.dom_ordfresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyPt ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_ordfresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyPt ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict V.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_keyfUn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_keyUnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.dom_last_key.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.last_keyfUn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.last_keyUnf.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_ordfresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.FreshLastKey.fresh.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction 1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f n ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_last_key ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict n.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( n n ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.last_keyfUn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.last_keyUnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.last_key_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.dom_last_key.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction n.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.fresh in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H n.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.hist_path.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "dom_fresh", "success": false, "proof_gt": ["by move: (dom_freshn f 0); rewrite addn0."], "proof_pred": [], "time": 10.45578908920288, "num_tactics": 180, "proof_tree": {"current_proof_state": "dom_fresh", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict f.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_freshn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_ordfresh ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.dom_freshn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.dom_ordfresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.FreshLastKey.last_keyPt ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_freshn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_ordfresh ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.fresh ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict V.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( V V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.dom_freshn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.max_key_last ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.last_key_max ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( V SerTop.FreshLastKey.dom_ordfresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.fresh.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_keyfUn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_keyUnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_key_mono.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.dom_freshn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction 1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.hist_path.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.FreshLastKey.last_keyPt.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.FreshLastKey.fresh.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction 1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.FreshLastKey.hist_path.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold V.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "valid_fresh", "success": false, "proof_gt": ["by rewrite joinC validPtUn dom_fresh andbT."], "proof_pred": ["symmetry.", "simpl.", "symmetry.", "simpl in f."], "time": 29.44503903388977, "num_tactics": 300, "proof_tree": {"current_proof_state": "valid_fresh", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct v.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in |- *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "valid_fresh'", "success": false, "proof_gt": ["move=> W; rewrite joinC validPtUn.", "move: (dom_fresh (f \\+ i \\\\-> w)); rewrite domUn inE; rewrite W/=.", "by rewrite negb_or=>/andP; case=>-> _;move/validL: W=>->."], "proof_pred": ["intro.", "simpl.", "clear.", "hnf.", "simpl in f.", "symmetry.", "case i.", "symmetry."], "time": 36.92340087890625, "num_tactics": 300, "proof_tree": {"current_proof_state": "valid_fresh'", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case i.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists w.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "elim f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case i.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear i.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i i ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i H ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case i.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i f ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists w.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case i.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists w.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite i.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists w.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case i.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i w ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i i ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( i f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Core/Freshness.json", "proof_name": "last_fresh", "success": false, "proof_gt": ["move=>Vf; apply: max_key_last=>[|x] /=.", "-", "by rewrite domUn inE valid_fresh Vf domPt inE eq_refl orbT.", "rewrite domUn inE /= valid_fresh Vf /= domPt inE /= orbC eq_sym.", "by rewrite leq_eqVlt; case: eqP=>//= _; apply: dom_ordfresh."], "proof_pred": ["intro.", "symmetry.", "simpl.", "symmetry.", "f_equal.", "clear.", "simpl.", "intro.", "symmetry.", "simpl in f.", "symmetry.", "f_equal.", "clear.", "simpl.", "generalize f.", "clear.", "intuition.", "symmetry.", "f_equal.", "clear.", "intuition.", "f_equal.", "case H.", "intros.", "clear H0.", "symmetry."], "time": 63.814722776412964, "num_tactics": 300, "proof_tree": {"current_proof_state": "last_fresh", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists v.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "generalize f.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear H.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "clear H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear v.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.valid_fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_freshn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.valid_fresh' ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.hist_path ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.valid_fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.dom_fresh ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_key_mono ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyfUn ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.last_keyUnf ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f SerTop.FreshLastKey.valid_fresh' ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear V.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( v v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( v v ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 H0 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear v.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H0 ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 H0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 V ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 H0 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H0 v ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H0 ).", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear v.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "specialize ( f v ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H v ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( f H ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H f ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}]}