{"options": {"method": "ours", "eval_id": "tok", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 32, "proj_idx": 4, "filter": null, "path": "runs/tok/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 15025, "tac_vocab_file": "token_vocab.pickle", "cutoff_len": 30}, "results": [{"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "W_valid", "success": false, "proof_gt": ["apply/andP; split=>/=; last by rewrite validPt.", "case: validUn=>//; rewrite ?validPt// =>l.", "rewrite !domPt !inE=>/eqP=>Z; subst l=>/eqP=>Z.", "by subst lq; move/negbTE: Lab_neq; rewrite eqxx."], "proof_pred": [], "time": 4.8578245639801025, "num_tactics": 220, "proof_tree": {"current_proof_state": "W_valid", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "eauto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst qnodes.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "eauto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction Data.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "W_complete", "success": false, "proof_gt": ["move=>z lc ls t/=; rewrite domPt inE=>/eqP[]_<-<-_.", "rewrite !domUn !inE/= !domPt !inE !eqxx/= orbC.", "case/andP:W_valid=>->_.", "rewrite 3!andTb.", "rewrite inE.", "by apply/orP; left."], "proof_pred": ["red.", "red.", "intros.", "simpl.", "contradict H.", "simpl.", "intuition.", "contradict Lab_neq.", "intuition.", "contradict H.", "intuition.", "simpl in z.", "contradict H0.", "clear.", "intro.", "destruct H.", "destruct pc.", "destruct snd_trans0.", "destruct snd_uniq1.", "destruct rcv_trans0.", "destruct rcv_uniq1.", "destruct coh0.", "destruct m.", "contradict H1.", "destruct plab0.", "destruct nodes0.", "contradict H.", "destruct pc.", "destruct snd_trans0.", "destruct snd_uniq1.", "destruct rcv_trans0.", "destruct rcv_uniq1.", "destruct plab0.", "destruct coh0.", "destruct m."], "time": 18.445269107818604, "num_tactics": 300, "proof_tree": {"current_proof_state": "W_complete", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists z.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply z.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists z.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists pc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Lab_neq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "hnf in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in z.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H ls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H lc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H t ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H lq ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H pc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( ls ls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( ls lc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( ls t ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lc ls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lc lc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lc t ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( t ls ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( t lc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( t t ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite z.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.query_hookz.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite z.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ls.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct pc.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct snd_trans0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct snd_uniq1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_uniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_trans0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction coh0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct rcv_trans0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_uniq1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct rcv_uniq1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction plab0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct coh0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction plab0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction pc.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "contradict H1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct plab0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct nodes0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct pc.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct snd_trans0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct snd_uniq1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct rcv_trans0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct rcv_uniq1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct plab0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "destruct H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct coh0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "destruct m.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "W_dom", "success": false, "proof_gt": ["move=>z/=; rewrite domUn !inE/=; case/andP: W_valid=>->/=_.", "rewrite !domPt !inE; rewrite -!(eq_sym z).", "rewrite /cond /= inE orbC.", "apply sym_eq.", "by rewrite orbC eq_sym."], "proof_pred": ["simpl.", "clear.", "case lq.", "case serialize.", "elim pc.", "intros.", "elim coh0.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m.", "intros.", "elim m."], "time": 60.006489276885986, "num_tactics": 300, "proof_tree": {"current_proof_state": "W_dom", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case qnodes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case lq.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case serialize.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim pc.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim snd_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim coh0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim snd_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_uniq1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_uniq1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_uniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_uniq1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H31.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H31.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H34.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H31.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H34.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H37.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H40.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H31.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H34.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H37.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H31.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H34.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H37.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H40.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H43.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim m.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H16.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H22.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H25.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H31.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H34.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H37.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H40.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H43.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H46.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim snd_trans0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim rcv_trans0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "eqW", "success": false, "proof_gt": ["by rewrite /PCM.join/=/W !unitL !unitR."], "proof_pred": ["simpl.", "contradict Lab_neq.", "intuition.", "contradict ds_inverse.", "intuition.", "contradict H.", "intuition.", "hnf in H.", "contradict H.", "contradict H0.", "clear.", "contradict serialize.", "intuition.", "contradict deserialize.", "intuition."], "time": 11.072185277938843, "num_tactics": 300, "proof_tree": {"current_proof_state": "eqW", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in core_state_to_data.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Lab_neq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf in H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "eauto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "eauto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction deserialize.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf in H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists deserialize.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold Data.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction deserialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H deserialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "subst deserialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "contradict serialize.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict deserialize.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "eqW'", "success": false, "proof_gt": ["by rewrite eqW joinA."], "proof_pred": ["simpl.", "symmetry.", "clear.", "rewrite SerTop.QueryHooked.eqW.", "f_equal.", "clear.", "symmetry."], "time": 28.471913814544678, "num_tactics": 300, "proof_tree": {"current_proof_state": "eqW'", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in core_state_to_data.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": [{"current_proof_state": "PROVING", "used_tactic": "f_equal.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW in lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW in qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict lq.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq in pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq in qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq in serialize.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq lq ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq lq ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.W_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.W_valid ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.eqW ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.query_hookz ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.W_complete ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.W ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.query_hook ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq SerTop.QueryHooked.W_dom ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq SerTop.QueryHooked.eqW ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq SerTop.QueryHooked.query_hookz ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict lq.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.query_hookz in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.query_hookz in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.QueryHooked.query_hookz.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "clear qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pc.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pc.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_valid.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.QueryHooked.eqW.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW in lq.", "children": []}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "labC", "success": false, "proof_gt": ["case/andP: W_valid=>V1 V2.", "by rewrite domUn !inE V1/= domPt inE eqxx."], "proof_pred": ["contradict Lab_neq.", "contradict ds_inverse.", "intuition.", "destruct lq.", "contradict ds_inverse.", "contradict H.", "clear."], "time": 9.713919639587402, "num_tactics": 300, "proof_tree": {"current_proof_state": "labC", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct serialize.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "apply deserialize.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.eqW' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.injW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "destruct deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H deserialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf in H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize in serialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H deserialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injW in *.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW'.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( serialize serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( deserialize serialize ).", "children": []}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "labQ", "success": false, "proof_gt": ["case/andP: W_valid=>V1 V2.", "rewrite domUn !inE V1/= !domPt !inE /cond /= inE.", "by apply/orP; right."], "proof_pred": ["contradict Lab_neq.", "contradict ds_inverse.", "intuition.", "destruct lq.", "contradict ds_inverse.", "contradict H.", "clear."], "time": 10.80122423171997, "num_tactics": 300, "proof_tree": {"current_proof_state": "labQ", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Lab_neq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct serialize.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "apply deserialize.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.eqW' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.injW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "destruct deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.query_hookz.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H deserialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf in H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize in serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize in deserialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H deserialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( serialize serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( deserialize serialize ).", "children": []}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "prEqC", "success": false, "proof_gt": ["rewrite /getProtocol/W/= findUnL; last by case/andP: W_valid.", "by rewrite domPt inE eqxx findPt."], "proof_pred": [], "time": 1.2644846439361572, "num_tactics": 40, "proof_tree": {"current_proof_state": "prEqC", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Lab_neq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "prEqQ", "success": false, "proof_gt": ["rewrite /getProtocol/W/= findUnR; last by case/andP: W_valid.", "by rewrite domPt inE eqxx findPt."], "proof_pred": [], "time": 1.0741586685180664, "num_tactics": 40, "proof_tree": {"current_proof_state": "prEqQ", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "prEqQ'", "success": false, "proof_gt": ["by rewrite /getProtocol findPt."], "proof_pred": ["clear."], "time": 7.251060724258423, "num_tactics": 300, "proof_tree": {"current_proof_state": "prEqQ'", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.labC.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse in ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict ds_inverse.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0 in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H serialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H deserialize ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.eqW'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injW.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.W_dom.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.labC.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.labQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.injWQ in lq.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "query_init_step'", "success": false, "proof_gt": ["move=> N H S; case: (step_coh S)=>C1 _.", "case: S; [by case=>_<- | move=>l st H1 to'/= msg n H2 H3 C H4 H5 H6->{s'}| move=>l rt H1 i from pf H3 C msg H2/=[H4]_->{s'}]; rewrite -(cohD C) domPt inE in H3; move/eqP: H3=>H3; subst l; rewrite /query_init_state/getStatelet !findU !eqxx (cohS C1)/=; have Cq: coh pq (getStatelet s lq) by move: (coh_coh lq C1); rewrite /getProtocol findPt.", "-", "case:H=>G1 G2 G3 G4.", "move: st H1 H4 H5 H6; rewrite /get_st prEqQ'=>st H1 H4 H5 H6.", "case B: (to == z); rewrite /holds_res_perms/getLocal findU B/=; last first.", "+", "split=>//.", "move=>m t c; rewrite findUnR ?valid_fresh ?(cohVs Cq)//; case: ifP; last by move=>_/G3.", "rewrite domPt inE=>/eqP<-{m}; rewrite findPt; case=>_ _ Z; subst z.", "by move/negbTE: N; rewrite eqxx.", "+", "move=>m t c; rewrite findUnR ?valid_fresh ?(cohVs Cq)//; case: ifP; last by move=>_/G4.", "rewrite domPt inE=>/eqP<-{m}; rewrite findPt; case=>_ _ Z; subst z.", "by rewrite eqxx in B.", "move/eqP: B=>B; subst z; split=>//; first 1 last.", "+", "move=>m t c; rewrite findUnR ?valid_fresh ?(cohVs Cq)//; case: ifP; last by move=>_/G3.", "rewrite domPt inE=>/eqP<-{m}; rewrite findPt; case=>_ _ Z; subst to.", "by move/negbTE: N; rewrite eqxx.", "+", "move=>m t c; rewrite findUnR ?valid_fresh ?(cohVs Cq)//; case: ifP; last by move=>_/G4.", "rewrite domPt inE=>/eqP<-{m}; rewrite findPt; case=>Z' Z2 Z; subst to' t c.", "case: H1;[|case=>//]; move=>Z; subst st=>//.", "case: (H4)=>_[C']/=[rid][d][_]; case: G2=>rq[rs][E]H.", "by rewrite (getStK _ E)/==>/H.", "rewrite (cohVl Cq); case: G2=>rq[rs][E]H.", "case: H1;[|case=>//]; move=>Z; subst st=>//; last first.", "+", "case: (H4)=>_[C']/=[rid][d][H']; subst msg.", "rewrite (getStK _ E)/==>G.", "rewrite /=/QueryProtocol.send_step/=!(getStK _ E)/= G/= in H6; case: H6=>Z.", "subst n; eexists rq, (seq.rem (to', rid) rs); split=>//.", "by move=>rn; move/mem_rem; apply/H.", "case: (H4)=>_[C']/==>Z.", "rewrite/QueryProtocol.send_req_prec (getStK _ E) in Z; subst msg.", "rewrite /=/QueryProtocol.send_step/=!(getStK _ E)/= in H6; case: H6=>Z; subst n.", "by exists ((to', fresh_id rq) :: rq), rs.", "case:H=>G1 G2 G3 G4.", "move: (coh_s _ _) rt pf H1 H2.", "rewrite /get_rt prEqQ'/==>Cq'; rewrite !(pf_irr Cq' Cq)=>{Cq'}.", "move=>rt pf H1 H2.", "case B: (to == z); rewrite /holds_res_perms/getLocal findU B/=; last first.", "-", "by split=>//; apply: no_msg_from_to_consume'=>//; rewrite ?(cohVs Cq).", "rewrite !(cohVl Cq); move/eqP:B=>B; subst z.", "split=>//; try by apply: no_msg_from_to_consume'=>//; rewrite ?(cohVs Cq).", "case: G2=>rq[rs][E]H.", "case: H1;[|case=>//]; move=>Z; subst rt=>//=; simpl in H2; rewrite /QueryProtocol.receive_step (getStK _ E)/=; last first.", "-", "case: ifP=>_; last by eexists _, _.", "by exists (seq.rem (from, head 0 msg) rq), rs.", "case: ifP=>_; last by eexists _, _.", "exists rq, ((from, head 0 msg) :: rs); split=>//.", "move=>rn; rewrite inE; case/orP; last by apply: H.", "case/eqP=>Z1 Z2; subst rn from.", "case: msg H2 H4=>t c/=Z H4; subst t.", "by move: (G3 _ _ _ H4)."], "proof_pred": ["intros.", "elim H1.", "intros.", "split.", "simpl.", "elim H2.", "intros.", "elim H3.", "intro.", "intro.", "intro.", "intro.", "clear.", "case lq.", "case qnodes.", "simpl.", "case to.", "clear.", "intros."], "time": 91.4197690486908, "num_tactics": 300, "proof_tree": {"current_proof_state": "query_init_step'", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this_in_qnodes.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3 in H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H2.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H3.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H8.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case lq.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case qnodes.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "case serialize.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim s.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "case s.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case to.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.injWQ.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "query_init_rely", "success": false, "proof_gt": ["move=>Q R; case:(rely_coh R)=>CD CD'.", "rewrite eqW in CD; move: (coh_hooks CD)=>{CD}CD.", "rewrite eqW in CD'; move: (coh_hooks CD')=>{CD'}CD'.", "case: (coh_split CD _ _); try apply: hook_complete0.", "move=>i1[j1][C1 D1 Z]; subst s.", "case: (coh_split CD' _ _); try apply: hook_complete0.", "move=>i2[j2][C2 D2 Z]; subst s2.", "rewrite /query_init_state in Q *.", "rewrite (locProjR CD _ D1) in Q; last by rewrite domPt inE andbC eqxx.", "rewrite (locProjR CD' _ D2); last by rewrite domPt inE andbC eqxx.", "case: (rely_split injW C1 C2 R)=>Rc Rq; rewrite injWQ in Rq.", "by apply: (query_init_rely' _ _ _ Q Rq)."], "proof_pred": ["intros.", "split.", "apply H.", "simpl.", "red.", "exfalso.", "contradict Lab_neq.", "contradict this_in_qnodes.", "intuition.", "contradict this_in_qnodes."], "time": 14.757425308227539, "num_tactics": 300, "proof_tree": {"current_proof_state": "query_init_rely", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "apply H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim lq.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in to.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqC.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear lq.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqC.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in to.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.labQ.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ' in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqC.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1 in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes in this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes in ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict this_in_qnodes.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict this_in_qnodes.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "prEqC'", "success": false, "proof_gt": ["by rewrite /getProtocol findPt/=."], "proof_pred": ["symmetry.", "simpl.", "contradict Lab_neq.", "contradict this_in_qnodes.", "intro.", "contradict this_in_qnodes.", "hnf.", "clear.", "intro.", "inversion H.", "clear H.", "clear H1.", "clear lq.", "destruct pc.", "destruct snd_trans0.", "destruct snd_uniq1.", "destruct rcv_trans0.", "destruct rcv_uniq1.", "destruct plab0.", "contradict coh0.", "clear.", "intro."], "time": 15.491461753845215, "num_tactics": 300, "proof_tree": {"current_proof_state": "prEqC'", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in ds_inverse.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in core_state_stable_step.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_responded.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_received.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_rely'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_step'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_just_sent.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_rely.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ' in pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.holds_res_perms.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqQ' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pc in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pc in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in this_in_qnodes.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "contradict this_in_qnodes.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict this_in_qnodes.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "inversion H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq pc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq lq ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( pc pc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear pc.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.prEqQ' ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.prEqQ' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_responded.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_rely'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_received.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_step'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqQ' in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.QueryHooked.prEqQ' in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_responded in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_rely' in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_received in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_step' in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pc in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in pc.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct pc.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct snd_trans0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction snd_uniq1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct snd_uniq1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_uniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_trans0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct rcv_trans0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_uniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rcv_uniq1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct rcv_uniq1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction plab0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction pc.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct plab0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction pc.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict coh0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact nodes0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.QueryHooked.prEqQ'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "cohQ", "success": false, "proof_gt": ["by move/(coh_coh lq); rewrite prEqQ."], "proof_pred": ["intro.", "split.", "split.", "simpl.", "contradict Lab_neq.", "contradict this_in_qnodes.", "intro.", "contradict this_in_qnodes.", "hnf.", "clear.", "intro.", "inversion H.", "clear H.", "clear H1.", "clear lq.", "destruct pc.", "destruct snd_trans0.", "destruct snd_uniq1.", "destruct rcv_trans0.", "contradict rcv_uniq1.", "simpl.", "intro.", "contradict coh0.", "intro.", "apply nodes0 in plab0.", "contradict coh0.", "clear.", "induction 1."], "time": 42.041584730148315, "num_tactics": 300, "proof_tree": {"current_proof_state": "cohQ", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this_in_qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ds_inverse.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict this_in_qnodes.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict this_in_qnodes.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in ds_inverse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable_step_W.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqC' in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists pc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply H in pc.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "inversion H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq pc ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq lq ).", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( pc pc ).", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear pc.", "children": [{"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.prEqC' ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.core_state_stable ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable_step_W.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_responded.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_rely'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_received.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_step'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_just_sent.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC' in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable_step_W in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable_step_W.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pc in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in pc.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct pc.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct snd_trans0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction snd_uniq1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct snd_uniq1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_uniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_trans0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rcv_uniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction coh0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct rcv_trans0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rcv_uniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rcv_uniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict rcv_uniq1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply plab0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0 in coh0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict coh0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply plab0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0 in coh0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "apply nodes0 in plab0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0 in coh0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict coh0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact nodes0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact plab0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0 in coh0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply coh0 in coh0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0 in nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.core_state_stable_step_W.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply coh0 in nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_responded.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_rely'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_received.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction coh0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.query_init_step'.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact nodes0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction 1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply nodes0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "send_lq_case1", "success": false, "proof_gt": ["move=>H5 H6; case: M=>G1 G2 G3 G4[rq][rs][E]Np; split=>//.", "-", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "-", "rewrite /getStatelet findU eqxx(cohS C)/==>z t c.", "rewrite findUnR ?(valid_fresh) ?(cohVs (cohQ s C))//.", "case: ifP; [|by move=>_; apply: G2].", "rewrite domPt inE=>/eqP<-; rewrite findPt; case=>???; subst t c to'.", "case: H1;[|case=>//]; move=>Z; subst st=>//; simpl in H5, H6; rewrite/QueryProtocol.send_step (getStK _ E)/= in H6; case: H6=>H6/=; subst n.", "by case:H4=>_[C'][rid][_][_]; rewrite (getStK _ E); move/Np.", "-", "rewrite /getStatelet findU eqxx(cohS C)/=.", "case:G4; case=>i[[c']Q1 Q3] Q2; split; last first.", "+", "move=>j c; rewrite findUnR ?(valid_fresh) ?(cohVs (cohQ s C))//.", "case:ifP; last by move=>_; apply Q2.", "rewrite domPt inE=>/eqP<-; rewrite findPt.", "by case=>???; subst to; rewrite eqxx in N.", "exists i; split=>[|j[c1]];rewrite findUnL ?(valid_fresh) ?(cohVs (cohQ s C))//.", "+", "by exists c'; rewrite (find_some Q1).", "case: ifP=>_; first by move=> T; apply: Q3; exists c1.", "by case/findPt_inv=>_[]_ _?; subst to; rewrite eqxx in N.", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "case: H1;[|case=>//]; move=>Z; subst st=>//; simpl in H5, H6; rewrite/QueryProtocol.send_step (getStK _ E)/= in H6; case: H6=>H6; subst n.", "-", "by exists ((to', fresh_id rq) :: rq), rs.", "case: ifP=>_; last by exists rq, rs.", "by exists rq, (seq.rem (to', head 0 msg) rs); split=>//rn/mem_rem/Np."], "proof_pred": ["intros.", "destruct H1.", "simpl.", "split.", "rewrite H1.", "simpl.", "exfalso.", "rewrite H1 in H.", "simpl in H.", "simpl in H4."], "time": 60.26375865936279, "num_tactics": 300, "proof_tree": {"current_proof_state": "send_lq_case1", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite resp.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite st.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "rewrite H1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite Qn.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "rewrite H1 in H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H4.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "send_lq_case3", "success": false, "proof_gt": ["move=>H5 H6.", "case: M=>G1 G2 G3 G4[rq][rs][E]Np; split=>//.", "-", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "-", "rewrite /getStatelet findU eqxx(cohS C)/==>z t c.", "rewrite findUnR ?(valid_fresh) ?(cohVs (cohQ s C))//.", "case: ifP; [|by move=>_; apply: G3].", "rewrite domPt inE=>/eqP<-; rewrite findPt; case=>????; subst t c to to'.", "by rewrite eqxx in N.", "-", "rewrite /getStatelet findU eqxx(cohS C)/=.", "case:G4; case=>i[[c']Q1 Q3] Q2; split; last first.", "+", "move=>j c; rewrite findUnR ?(valid_fresh) ?(cohVs (cohQ s C))//.", "case:ifP; last by move=>_; apply Q2.", "rewrite domPt inE=>/eqP<-; rewrite findPt.", "case=>???; subst to' c.", "case: H1;[|case=>//]; move=>Z; subst st=>//; simpl in H5, H6; rewrite/QueryProtocol.send_step (getStK _ E)/= in H6; case: H6=>H6/=; subst n.", "by case:H4=>_[C']; rewrite (getStK _ E); case=>rid[d][->]/=/Np.", "exists i; split=>[|j[c1]];rewrite findUnL ?(valid_fresh) ?(cohVs (cohQ s C))//.", "+", "by exists c'; rewrite (find_some Q1).", "case: ifP=>_; first by move=> T; apply: Q3; exists c1.", "case/findPt_inv=>_[]???; subst to'.", "case: H1;[|case=>//]; move=>Z; subst st=>//; simpl in H5, H6; rewrite/QueryProtocol.send_step (getStK _ E)/= in H6; case: H6=>H6/=; subst n.", "by case:H4=>_[C']; rewrite (getStK _ E); case=>rid[d][_]/=/Np.", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "case: H1;[|case=>//]; move=>Z; subst st=>//; simpl in H5, H6; rewrite/QueryProtocol.send_step (getStK _ E)/= in H6; case: H6=>H6; subst n.", "-", "by exists ((to', fresh_id rq) :: rq), rs.", "case: ifP=>_; last by exists rq, rs.", "by exists rq, (seq.rem (to', head 0 msg) rs); split=>//rn/mem_rem/Np."], "proof_pred": ["intros.", "destruct H1.", "simpl.", "split.", "rewrite H1.", "simpl.", "exfalso.", "rewrite H1 in H0.", "simpl in H0.", "simpl in H4."], "time": 62.19608163833618, "num_tactics": 300, "proof_tree": {"current_proof_state": "send_lq_case3", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold M.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold data.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to'.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite resp.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold data.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "rewrite H1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H3 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H4 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "rewrite H1 in H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H4.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "send_lq_all_cases", "success": false, "proof_gt": ["move=>H5 H6.", "move: st H1 H4 H5 H6; rewrite /get_st prEqQ=>st H1 H4 H5 H6.", "case: M; last 1 first.", "+", "constructor 3.", "by apply: (send_lq_case3 req_num data _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ H4).", "+", "by constructor 1; apply: (send_lq_case1 req_num _ _ _ _ _ _ _ _ _ _ _ _ _ _ H4).", "Ltac kill_g3 s C G3 to N := rewrite /getStatelet findU eqxx(cohS C)/==>z t c; rewrite findUnR ?(valid_fresh) ?(cohVs (cohQ s C))//; case: ifP; [|by move=>_; apply: G3]; rewrite domPt inE=>/eqP<-; rewrite findPt; by case=>_ _ Z _; subst to; rewrite eqxx in N.", "Ltac kill_g4 s C G4 to' t B:= rewrite /getStatelet findU eqxx(cohS C)/==>z t c; rewrite findUnR ?(valid_fresh) ?(cohVs (cohQ s C))//; case: ifP; [|by move=>_; apply: G4]; rewrite domPt inE=>/eqP<-; rewrite findPt; by case=>??; try move=>?; try subst t; try subst to'; try rewrite ?eqxx in B.", "case=>G1 G2 G3 G4 [rq][rs][E]Np.", "case B : (to' == this); [move/eqP:B=>B; subst to'|]; last first.", "-", "constructor 2.", "split=>//.", "+", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "+", "kill_g3 s C G3 to N.", "+", "kill_g4 s C G4 to' t B.", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "case: H1;[|case=>//]; move=>Z; subst st=>//; simpl in H5, H6; rewrite/QueryProtocol.send_step (getStK _ E)/= in H6; case: H6=>H6; subst n.", "-", "by exists ((to', fresh_id rq) :: rq), rs.", "case:ifP=>_; last by exists rq, rs.", "by exists rq, (seq.rem (to', head 0 msg) rs); split=>//rn/mem_rem/Np.", "case: H1;[|case=>//]; move=>Z; subst st=>//; simpl in H5, H6; rewrite/QueryProtocol.send_step (getStK _ E)/= in H6; case: H6=>H6; subst n.", "-", "constructor 2; split=>//.", "+", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "+", "kill_g3 s C G3 to N.", "+", "kill_g4 s C G4 to' t B.", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "by exists ((this, fresh_id rq) :: rq), rs.", "case: (H4)=>_[C']/=[rid][d][Zm]Tr; subst msg.", "rewrite (getStK _ E)/= in Tr.", "rewrite Tr; constructor 3.", "move: (H5 1 (plab pc) query_hook); rewrite findPt -!(cohD C).", "move/(_ (erefl _) labC labQ to rid d (erefl _))=>D.", "move: (core_state_to_data_inj _ _ _ _ D H)=>Z; subst d.", "split=>//; first 3 last.", "+", "rewrite /getStatelet findU eqxx(cohS C)/=.", "exists (rq), (seq.rem (this, rid) rs).", "rewrite /getLocal findU eqxx/= (cohVl C'); split=>// rn R.", "move/Np/eqP: (mem_rem R)=>Zr; subst rn.", "move/Np:Tr=>/eqP=>Zr; subst rid.", "case: (C')=>_ _ _/(_ to); rewrite E (cohDom C')=>/(_ Qn).", "case=>[[x1 x2]][]/(hcancelPtV _); rewrite validPt/==>/(_ is_true_true).", "case=>Z1 Z2; subst x1 x2=>/andP[_]G.", "by rewrite (rem_filter (this, req_num) G) mem_filter/= eqxx/= in R.", "+", "by rewrite /getStatelet findU eqxx(cohS C)/getLocal findU (negbTE N).", "+", "rewrite /getStatelet findU eqxx (cohS C)/==>z t c.", "rewrite findUnR ?(valid_fresh) ?(cohVs C')//.", "case: ifP=>[|_]; last by apply: G3.", "by rewrite domPt inE=>/eqP<-{z}; rewrite findPt; case=><-.", "split=>[|i m]; rewrite /getStatelet findU eqxx/= (cohS C)/=; last first.", "+", "rewrite findUnR ?(valid_fresh) ?(cohVs C')//; case: ifP=>[|_]; last by move/G4.", "rewrite domPt inE=>/eqP<-; rewrite findPt; case=><-.", "by move/Np/eqP: Tr=>->; rewrite eqxx.", "exists (fresh (dsoup (getStatelet s lq))); split.", "+", "exists (rid :: serialize data).", "by rewrite findUnR ?(valid_fresh)?(cohVs C')// domPt inE eqxx findPt.", "move=>i[c]; rewrite findUnR ?(valid_fresh)?(cohVs C')//.", "case: ifP=>[|_]; last by move/G4.", "by rewrite domPt inE=>/eqP<-; rewrite findPt."], "proof_pred": ["simpl.", "intros.", "clear H1.", "clear M.", "destruct H2.", "simpl.", "clear.", "destruct st.", "simpl.", "clear.", "constructor.", "clear.", "hnf.", "destruct resp.", "simpl.", "split.", "symmetry.", "clear."], "time": 56.0592098236084, "num_tactics": 300, "proof_tree": {"current_proof_state": "send_lq_all_cases", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear M.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H2.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct st.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "constructor.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.prEqC'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t_snd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite n.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t_snd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold t_snd0.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct resp.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite to.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "send_lc_all_cases", "success": false, "proof_gt": ["move=>H5 H6.", "move: st H1 H4 H5 H6; rewrite /get_st prEqC=>st H1 H4 H5 H6.", "by case: M; [constructor 1|constructor 2|constructor 3]; rewrite /getStatelet findU (negbTE Lab_neq)/=."], "proof_pred": ["simpl.", "intros.", "simpl in M.", "simpl in H4.", "specialize ( core_state_stable_step this ).", "simpl in H2.", "clear H1.", "clear H0.", "clear H3.", "clear H2.", "clear core_state_stable_step.", "clear M.", "clear H4.", "clear H.", "clear Qn.", "clear L.", "clear this_in_qnodes.", "clear Lab_neq.", "clear ds_inverse.", "clear core_state_to_data_inj.", "clear C."], "time": 55.52623510360718, "num_tactics": 300, "proof_tree": {"current_proof_state": "send_lc_all_cases", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold data.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H3.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in M.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H3.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H4.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "specialize ( core_state_stable_step this ).", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in M.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H4.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in M.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H3.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H4.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H3.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear core_state_stable_step.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear M.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H4.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear Qn.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear L.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear this_in_qnodes.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear Lab_neq.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear ds_inverse.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear N.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear C.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear core_state_to_data_inj.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear C.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply st.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear N.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "clear core_state_to_data_inj.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear N.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear C.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold n.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear C.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear st.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear N.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold st.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "recv_lq_case1", "success": false, "proof_gt": ["move=>H1 H2 H4; case: M=>G1 G2 G3 G4[rq][rs][Tr]Np.", "case X: (this == from); [move/eqP:X=>X; subst from|constructor 1]; last first.", "-", "split=>//.", "+", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "+", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: no_msg_from_to_consume'=>//; rewrite (cohVs C').", "+", "rewrite /getStatelet findU eqxx(cohS C)/=.", "case: msg H2 H4=>t c H2 H4.", "by apply: (msg_spec_consumeE (cohVs C') H4 G4); rewrite (negbT X).", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "case: H1;[|case=>//]; move=>Z; subst rt=>//=; simpl in H2, H4; rewrite/QueryProtocol.receive_step (getStK _ Tr)/=.", "+", "case:ifP=>_; last by exists rq, rs.", "exists rq, ((from, head 0 msg) :: rs); split=>//rn.", "by rewrite inE; case/orP; [case/eqP=>Z; subst; rewrite eqxx in X|move/Np].", "case:ifP=>_; last by exists rq, rs.", "by exists (seq.rem (from, head 0 msg) rq), rs.", "case: msg H2 H4=>t c H2 H4.", "case: H1;[|case=>//]; move=>Z; subst rt=>//=; simpl in H2, H4; subst t; last first.", "-", "constructor 1; split=>//.", "+", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "+", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: no_msg_from_to_consume'=>//; rewrite (cohVs C').", "+", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: (msg_spec_consumeE (cohVs C') H4 G4)=>/=; rewrite -(orbC true)/= orbC.", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "rewrite/QueryProtocol.receive_step (getStK _ Tr)/=.", "case:ifP=>_; last by exists rq, rs.", "by exists (seq.rem (this, head 0 c) rq), rs.", "constructor 2; split=>//.", "+", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "+", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: (no_msg_spec_consume (cohVs C') H4 G4).", "+", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: no_msg_from_to_consume'=>//; rewrite (cohVs C').", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "rewrite/QueryProtocol.receive_step (getStK _ Tr)/=.", "case:ifP=>X; last by move/negbT/negbNE/Np: X.", "exists rq, ((this, head 0 c) :: rs); split=>//rn.", "rewrite inE=>/orP[]; last by move/Np.", "by case/eqP=>Z; subst rn; case:G4=>_/(_ _ _ H4)/eqP->."], "proof_pred": ["intros.", "simpl.", "case H.", "intros.", "left.", "subst.", "simpl.", "split.", "symmetry."], "time": 60.65784788131714, "num_tactics": 300, "proof_tree": {"current_proof_state": "recv_lq_case1", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pf.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "left.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply C'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply C'.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "right.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pf.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "left.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "subst.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "recv_lq_case2", "success": false, "proof_gt": ["move=>H1 H2 H4; case: M=>G1 G2 G3 G4[rq][rs][Tr]Np.", "split=>//.", "-", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "-", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: no_msg_from_to_consume'=>//; rewrite (cohVs C').", "-", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: no_msg_from_to_consume'=>//; rewrite (cohVs C').", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "case: H1;[|case=>//]; move=>Z; subst rt=>//=; simpl in H2, H4; rewrite/QueryProtocol.receive_step (getStK _ Tr)/=.", "-", "case:ifP=>_; last by exists rq, rs.", "exists rq, ((from, head 0 msg) :: rs); split=>//rn.", "case X: (this == from); last first.", "+", "by rewrite inE; case/orP; [case/eqP=>Z; subst; rewrite eqxx in X|move/Np].", "move/eqP:X=>X; subst from.", "by case: msg H2 H4=>t c/= H2 H4; move: (G3 _ _ _ H4); subst t.", "case:ifP=>_; last by exists rq, rs.", "by exists (seq.rem (from, head 0 msg) rq), rs."], "proof_pred": ["intros.", "simpl.", "clear.", "destruct C'.", "simpl.", "red.", "simpl in e.", "simpl.", "split.", "symmetry.", "clear."], "time": 114.22460293769836, "num_tactics": 300, "proof_tree": {"current_proof_state": "recv_lq_case2", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rt.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pf.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct pf.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct C'.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite l.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct pf.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in e.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply e.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in e.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "recv_lq_case3", "success": false, "proof_gt": ["move=>H1 H2 H4; case: M=>G1 G2 G3 G4[rq][rs][Tr]Np.", "split=>//.", "-", "by rewrite /getStatelet findU eqxx(cohS C)/=/getLocal/= findU (negbTE N) in G1 *.", "-", "rewrite /getStatelet findU eqxx(cohS C)/=.", "by apply: no_msg_from_to_consume'=>//; rewrite (cohVs C').", "-", "rewrite /getStatelet findU eqxx(cohS C)/=.", "case: msg H2 H4=>t c H2 H4.", "by apply: (msg_spec_consumeE (cohVs C') H4 G4); rewrite N orbC.", "rewrite /getStatelet findU eqxx (cohS C)/=/holds_res_perms.", "rewrite /getLocal/=findU eqxx/= (cohVl (cohQ s C)).", "case: H1;[|case=>//]; move=>Z; subst rt=>//=; simpl in H2, H4; rewrite/QueryProtocol.receive_step (getStK _ Tr)/=.", "-", "case:ifP=>_; last by exists rq, rs.", "exists rq, ((from, head 0 msg) :: rs); split=>//rn.", "case X: (this == from); last first.", "+", "by rewrite inE; case/orP; [case/eqP=>Z; subst; rewrite eqxx in X|move/Np].", "move/eqP:X=>X; subst from.", "by case: msg H2 H4=>t c/= H2 H4; move: (G3 _ _ _ H4); subst t.", "case:ifP=>_; last by exists rq, rs.", "by exists (seq.rem (from, head 0 msg) rq), rs."], "proof_pred": ["intros.", "simpl.", "clear.", "destruct C'.", "simpl.", "red.", "simpl in e.", "simpl.", "split."], "time": 101.155766248703, "num_tactics": 300, "proof_tree": {"current_proof_state": "recv_lq_case3", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply M.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Qn.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply L.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite rt.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold C'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rt.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pf.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct pf.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct C'.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite l.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold resp.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold reqs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear e.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear pf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold i0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold req_num.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in e.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "send_req_obligation_1", "success": true, "proof_gt": ["by rewrite !InE; left."], "proof_pred": ["constructor.", "constructor."], "time": 2.255030870437622, "num_tactics": 6, "proof_tree": {"current_proof_state": "send_req_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "constructor.", "children": [{"current_proof_state": "SUCCESS", "used_tactic": "constructor.", "children": []}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "tryrecv_resp_obligation_1", "success": false, "proof_gt": ["case/andP:H=>/eqP=>->_; rewrite joinC domUn inE domPt inE eqxx andbC/=.", "case: validUn=>//=; rewrite ?validPt//.", "move=>k; rewrite !domPt !inE=>/eqP<-/eqP Z; subst lq.", "by move/negbTE: Lab_neq; rewrite eqxx."], "proof_pred": ["contradict H.", "intuition.", "contradict Lab_neq.", "intro.", "contradict H.", "clear.", "intro.", "inversion H.", "clear H.", "clear H1.", "clear lq.", "clear qnodes.", "clear rid.", "clear l.", "clear t."], "time": 28.168205976486206, "num_tactics": 300, "proof_tree": {"current_proof_state": "tryrecv_resp_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict Lab_neq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ds_inverse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply deserialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step in H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "inversion H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear H1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.send_req_obligation_1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.read_request_id_obligation_2 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "inversion H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq to ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq n ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq t ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq rid ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq l ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear qnodes.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear m.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( to n ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( n n ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( to to ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( n to ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct l.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct t.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct rid.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_story_step'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_story_step'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_story_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_story_rely.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "destruct rid.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct to.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite rid in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2 in rid.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2 in n.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear rid.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear m.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply t.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( n n ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( n to ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( to n ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_story_step'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.msg_story_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2 in to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2 in n.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear l.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear t.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.read_request_id_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "receive_resp_loop_obligation_1", "success": false, "proof_gt": ["by apply: with_spec x."], "proof_pred": ["elim x.", "clear.", "intros.", "clear i.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intro.", "elim prog_of.", "intro.", "intro.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intros.", "elim prog_of.", "intro.", "case prog_of."], "time": 33.49885082244873, "num_tactics": 300, "proof_tree": {"current_proof_state": "receive_resp_loop_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim x.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear i.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply prog_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply prog_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of0 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of3 in |- *.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply set_of6.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of6 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim set_of6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of6 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold set_of6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s1.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim prog_of.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of8.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of9.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of10.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of11.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of12.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of13.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of14.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply set_of15.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "case prog_of.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "receive_resp_loop_obligation_2", "success": false, "proof_gt": ["case: b H=>[b|]; rewrite /recv_resp_inv !(rely_loc' _ H0); case=>H1 H2 H3.", "-", "move=>H4 ->; split=>//; try by apply: (query_init_rely _ _ _ H3 H0).", "-", "by apply: (core_state_stable _ _ _ _ H0 _ H2)=>//; case: H3.", "split=>//; try apply: (msg_story_rely _ _ _ _ _ _ _ H3 H0)."], "proof_pred": ["red.", "simpl in H.", "specialize ( core_state_stable_step this ).", "simpl.", "clear H.", "simpl in this_in_qnodes.", "specialize ( core_state_stable_step s1 ).", "clear.", "destruct l0.", "destruct l.", "simpl in lq.", "destruct b.", "clear.", "split."], "time": 43.844512939453125, "num_tactics": 300, "proof_tree": {"current_proof_state": "receive_resp_loop_obligation_2", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold d.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold l0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold deserialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ds_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "specialize ( core_state_stable_step this ).", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in Lab_neq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in this_in_qnodes.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_stable_step this ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_stable_step to ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_stable_step d ).", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "specialize ( core_state_stable_step s1 ).", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_to_data this ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_to_data to ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq this ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq to ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_to_data d ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( lq d ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct qnodes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct l0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct qnodes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct l.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in lq.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct b.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply d0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply d.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite X0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite X.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply s1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold this.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite s1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.QueryHooked.send_req_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold s1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in s1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply d0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Querying/QueryHooked.json", "proof_name": "receive_resp_loop_obligation_5", "success": false, "proof_gt": ["apply:ghC=>i1[[reqs resp] d][L1 I1 M1 S1] C1.", "apply: (gh_ex (g:=(reqs, resp, d))); apply: call_rule=>// res i2[Q1 Q2] C2.", "by case: res Q1 Q2=>//=data _ [Q1 Q2 Z]; exists data."], "proof_pred": ["red.", "simpl.", "intros.", "clear.", "red.", "simpl.", "intros.", "red.", "red.", "intros.", "red.", "red in H0.", "simpl in H0.", "inversion H0.", "clear H0.", "clear core_state_stable_step.", "clear H.", "clear H1.", "clear this_in_qnodes.", "clear Lab_neq.", "clear ds_inverse.", "clear.", "exfalso.", "clear p.", "clear lq.", "clear local_indicator.", "induction scs.", "apply core_state_to_data in this.", "intuition."], "time": 214.0479929447174, "num_tactics": 300, "proof_tree": {"current_proof_state": "receive_resp_loop_obligation_5", "used_tactic": null, "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data_inj.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this_in_qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Lab_neq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_stable_step.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_stable_step this ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( core_state_stable_step to ).", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in H0.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists scs.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in H0.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists scs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "inversion H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear core_state_stable_step.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear H.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear H1.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear this_in_qnodes.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear Lab_neq.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear ds_inverse.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear p.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear p.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear scs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply p.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.send_req_act_obligation_1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.receive_resp_loop_obligation_4 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H SerTop.QueryHooked.receive_resp_loop_obligation_1 ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.tryrecv_resp_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.recv_resp_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply lq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear p.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear lq.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction scs.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply local_indicator.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction qnodes.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply scs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply local_indicator in pc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply scs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear local_indicator.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply scs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction scs.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_3.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction qnodes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_4.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply scs.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction qnodes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction scs.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply this.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.send_req_act_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply Data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.QueryHooked.receive_resp_loop_obligation_2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data in qnodes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "apply core_state_to_data in this.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply core_state_to_data.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply serialize.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X in pc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X in i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X in to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in serialize.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply X in qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply serialize in rid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply qnodes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pc.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}]}