{"options": {"method": "ours", "eval_id": "tac", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 2, "proj_idx": 23, "filter": null, "path": "runs/tac/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 49, "tac_vocab_file": "tac_vocab_no_unk.pickle", "cutoff_len": 3}, "results": [{"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "lb_step_failure_pt_mapped_simulation_1_non_silent", "success": false, "proof_gt": ["move => net net' failed failed' lb tr H_neq H_step.", "have H_neq': lb <> label_silent.", "rewrite -pt_lb_label_silent_fst_snd in H_neq.", "move => H_eq.", "by rewrite H_eq in H_neq.", "invcs H_step => //=.", "-", "destruct (pt_map_packet p) eqn:?; last first.", "destruct p.", "simpl in *.", "break_match => //.", "have H_q := @pt_lb_net_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr pDst pSrc _ (nwState net pDst) Heqo0.", "rewrite /tot_mapped_lb_net_handlers_label in H_q.", "repeat break_let.", "by tuple_inversion.", "have H_eq_n: tot_map_name (pDst p) = pDst p0.", "destruct p.", "simpl in *.", "break_match => //.", "by find_injection.", "rewrite H_eq_n.", "apply (@LabeledStepFailure_deliver _ _ _ _ _ _ (filterMap pt_map_packet xs) (filterMap pt_map_packet ys) (filterMap pt_map_output out) (pt_map_data d) (filterMap (@pt_map_name_msg _ _ _ _ _ msg_map) l)).", "*", "rewrite /pt_map_net /=.", "find_rewrite.", "by rewrite filterMap_app /= Heqo.", "*", "rewrite -H_eq_n.", "exact: not_in_failed_not_in.", "*", "rewrite /pt_map_net /= -{2}H_eq_n tot_map_name_inv_inverse.", "destruct p, p0.", "simpl in *.", "break_match => //.", "find_injection.", "clean.", "have H_q := @pt_net_handlers_some _ _ _ _ _ _ _ multi_map_congr pDst pSrc pBody (nwState net pDst) _ Heqo0.", "rewrite /pt_mapped_net_handlers /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_net_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ _ Heqo0 Heqp1.", "rewrite /tot_mapped_lb_net_handlers_label in H_q'.", "repeat break_let.", "break_and.", "by repeat tuple_inversion.", "*", "rewrite /pt_map_net /= 2!filterMap_app.", "by rewrite (filterMap_pt_map_packet_map_eq_some _ _ Heqo) (pt_map_update_eq_some _ _ _ Heqo).", "-", "case H_i: pt_map_input => [inp'|]; last first.", "have H_q := @pt_lb_input_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr h _ (nwState net h) H_i.", "rewrite /tot_mapped_lb_input_handlers_label /= in H_q.", "repeat break_let.", "by tuple_inversion.", "apply (@LabeledStepFailure_input _ _ _ _ _ _ _ _ (pt_map_data d) (filterMap (@pt_map_name_msg _ _ _ _ _ msg_map) l)).", "*", "exact: not_in_failed_not_in.", "*", "have H_q := @pt_input_handlers_some _ _ _ _ _ _ _ multi_map_congr h _ (nwState net h) _ H_i.", "rewrite /pt_mapped_input_handlers /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_input_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ H_i Heqp1.", "break_and.", "unfold tot_mapped_lb_input_handlers_label in *.", "repeat break_let.", "repeat tuple_inversion.", "by rewrite /pt_map_net /= tot_map_name_inv_inverse.", "*", "rewrite /pt_map_net /=.", "rewrite filterMap_app filterMap_pt_map_packet_map_eq.", "by rewrite -(@pt_map_update_eq _ _ _ _ _ _ name_map_bijective)."], "proof_pred": ["intros.", "simpl.", "clear.", "exfalso.", "elim name_map.", "clear name_map.", "intros.", "elim msg_map.", "intros.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map."], "time": 57.293720960617065, "num_tactics": 300, "proof_tree": {"current_proof_state": "lb_step_failure_pt_mapped_simulation_1_non_silent", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "elim net'.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim lb.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim pt_map_msg.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim lb.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "elim label_map.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim base_map.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear tr.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "lb_step_failure_pt_mapped_simulation_1_silent", "success": false, "proof_gt": ["move => net net' failed failed' lb tr H_eq H_step.", "invcs H_step => //=.", "-", "destruct (pt_map_packet p) eqn:?.", "destruct p, p0.", "simpl in *.", "break_match_hyp => //.", "find_injection.", "have H_q := @pt_net_handlers_some _ _ _ _ _ _ _ multi_map_congr pDst pSrc pBody (nwState net pDst) _ Heqo0.", "rewrite /pt_mapped_net_handlers /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_net_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ _ Heqo0 Heqp1.", "break_and.", "unfold tot_mapped_lb_net_handlers_label in *.", "repeat break_let.", "by repeat tuple_inversion.", "destruct p.", "simpl in *.", "break_match_hyp => //.", "have H_q := @pt_net_handlers_none _ _ _ _ _ _ _ multi_map_congr pDst pSrc pBody (nwState net pDst) out d l Heqo0.", "rewrite /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "concludes.", "break_and.", "have H_q' := @pt_lb_net_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr pDst pSrc _ (nwState net pDst) Heqo0.", "rewrite /tot_mapped_lb_net_handlers_label in H_q'.", "repeat break_let.", "repeat tuple_inversion.", "rewrite /pt_map_net /=.", "rewrite filterMap_app.", "rewrite filterMap_pt_map_name_msg_empty_eq //=.", "rewrite H3.", "rewrite filterMap_app /=.", "repeat break_match => //.", "rewrite -filterMap_app.", "set s1 := fun _ => _.", "set s2 := fun _ => _.", "have H_eq_s: s1 = s2.", "rewrite /s1 /s2.", "apply functional_extensionality => n.", "rewrite /update.", "by break_if; first by rewrite H e.", "rewrite -H_eq_s /s1 {s1 s2 H_eq_s}.", "split => //.", "exact: LabeledStepFailure_stutter.", "-", "case H_i: (pt_map_input inp) => [inp'|].", "have H_q := @pt_input_handlers_some _ _ _ _ _ _ _ multi_map_congr h _ (nwState net h) _ H_i.", "rewrite /pt_mapped_input_handlers /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_input_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ H_i Heqp1.", "break_and.", "unfold tot_mapped_lb_input_handlers_label in *.", "repeat break_let.", "by tuple_inversion.", "have H_q := @pt_input_handlers_none _ _ _ _ _ _ _ multi_map_congr h _ (nwState net h) out d l H_i.", "rewrite /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "concludes.", "break_and.", "have H_q' := @pt_lb_input_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr h _ (nwState net h) H_i.", "rewrite /tot_mapped_lb_input_handlers_label in H_q'.", "repeat break_let.", "repeat tuple_inversion.", "rewrite /pt_map_net /=.", "rewrite filterMap_app.", "rewrite filterMap_pt_map_name_msg_empty_eq //=.", "set s1 := fun _ => _.", "set s2 := fun _ => _.", "have H_eq_s: s1 = s2.", "rewrite /s1 /s2.", "apply functional_extensionality => n.", "rewrite /update.", "by break_if; first by rewrite H e.", "rewrite -H_eq_s /s1 {s1 s2 H_eq_s}.", "split; first exact: LabeledStepFailure_stutter.", "by repeat find_rewrite.", "-", "split => //; exact: LabeledStepFailure_stutter."], "proof_pred": ["intros.", "split.", "simpl.", "clear.", "exfalso.", "elim name_map.", "clear name_map.", "intros.", "elim msg_map.", "intros.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim labeled_multi_snd."], "time": 73.18776655197144, "num_tactics": 300, "proof_tree": {"current_proof_state": "lb_step_failure_pt_mapped_simulation_1_silent", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_fst.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_snd.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "elim net'.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_fst.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim pt_map_msg.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_fst.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim base_map.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear msg_map.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim labeled_multi_fst.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact net'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simple induction 1.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "elim labeled_multi_snd.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "lb_step_ordered_failure_pt_mapped_simulation_1_non_silent", "success": false, "proof_gt": ["move => net net' failed failed' lb tr H_neq H_step.", "have H_neq': lb <> label_silent.", "rewrite -pt_lb_label_silent_fst_snd in H_neq.", "move => H_eq.", "by rewrite H_eq in H_neq.", "invcs H_step => //=.", "-", "rewrite {2}/pt_map_onet /=.", "case H_m: (@pt_map_msg _ _ _ _ msg_map m) => [m'|]; last first.", "have H_q := @pt_lb_net_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr to from _ (onwState net to) H_m.", "rewrite /tot_mapped_lb_net_handlers_label in H_q.", "repeat break_let.", "by tuple_inversion.", "apply (@LabeledStepOrderedFailure_deliver _ _ _ _ _ _ m' (filterMap (@pt_map_msg _ _ _ _ msg_map) ms) (filterMap pt_map_output out) (pt_map_data d) (filterMap (@pt_map_name_msg _ _ _ _ _ msg_map) l) (@tot_map_name _ _ _ _ name_map from) (@tot_map_name _ _ _ _ name_map to)).", "*", "by rewrite /= 2!tot_map_name_inv_inverse /= H3 /= H_m.", "*", "exact: not_in_failed_not_in.", "*", "rewrite /pt_map_onet /= tot_map_name_inv_inverse.", "have H_q := @pt_net_handlers_some _ _ _ _ _ _ _ multi_map_congr to from m (onwState net to) _ H_m.", "rewrite /pt_mapped_net_handlers /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_net_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ _ H_m Heqp1.", "rewrite /tot_mapped_lb_net_handlers_label in H_q'.", "repeat break_let.", "break_and.", "by repeat tuple_inversion.", "*", "rewrite (@collate_pt_map_update2_eq _ _ _ _ name_map).", "set f1 := fun _ => pt_map_data _.", "set f2 := update _ _ _ _.", "have H_eq_f: f1 = f2.", "rewrite /f1 /f2.", "apply functional_extensionality => n.", "rewrite /update.", "break_if; break_if => //=; first by rewrite -e tot_map_name_inverse_inv in n0.", "by rewrite e tot_map_name_inv_inverse in n0.", "by rewrite H_eq_f.", "*", "by rewrite -filterMap_pt_map_trace_ev_outputs_eq.", "-", "rewrite {2}/pt_map_onet /=.", "case H_i: pt_map_input => [inp'|]; last first.", "have H_q := @pt_lb_input_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr h inp (onwState net h) H_i.", "rewrite /tot_mapped_lb_input_handlers_label in H_q.", "repeat break_let.", "by tuple_inversion.", "apply (@LabeledStepOrderedFailure_input _ _ (@tot_map_name _ _ _ _ name_map h) _ _ _ _ (filterMap pt_map_output out) inp' (pt_map_data d) (filterMap (@pt_map_name_msg _ _ _ _ _ msg_map) l)).", "*", "exact: not_in_failed_not_in.", "*", "rewrite /pt_map_onet /= tot_map_name_inv_inverse.", "have H_q := @pt_input_handlers_some _ _ _ _ _ _ _ multi_map_congr h inp (onwState net h) _ H_i.", "rewrite /pt_mapped_input_handlers /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_input_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ H_i Heqp1.", "rewrite /tot_mapped_lb_input_handlers_label in H_q'.", "repeat break_let.", "break_and.", "by repeat tuple_inversion.", "*", "rewrite {2}/pt_map_onet /=.", "rewrite (@collate_pt_map_eq _ _ _ _ name_map).", "set f1 := fun _ => pt_map_data _.", "set f2 := update _ _ _ _.", "have H_eq_f: f1 = f2.", "rewrite /f1 /f2.", "apply functional_extensionality => n.", "rewrite /update.", "break_if; break_if => //=; first by rewrite -e tot_map_name_inverse_inv in n0.", "by rewrite e tot_map_name_inv_inverse in n0.", "by rewrite H_eq_f.", "*", "by rewrite -(@filterMap_pt_map_trace_ev_outputs_eq _ _ _ _ _ name_map out h)."], "proof_pred": ["intros.", "simpl.", "clear.", "exfalso.", "elim name_map.", "clear name_map.", "intros.", "elim msg_map.", "intros.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map."], "time": 57.55737066268921, "num_tactics": 300, "proof_tree": {"current_proof_state": "lb_step_ordered_failure_pt_mapped_simulation_1_non_silent", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim lb.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "elim net'.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim pt_map_msg.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim lb.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "elim label_map.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim base_map.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim label_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim tr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "lb_step_ordered_failure_pt_mapped_simulation_1_silent", "success": false, "proof_gt": ["move => net net' failed failed' lb tr H_eq H_step.", "invcs H_step => //=.", "-", "rewrite {2}/pt_map_onet /=.", "case H_m: (@pt_map_msg _ _ _ _ msg_map m) => [m'|].", "have H_q := @pt_net_handlers_some _ _ _ _ _ _ _ multi_map_congr to from m (onwState net to) _ H_m.", "rewrite /pt_mapped_net_handlers /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_net_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ _ H_m Heqp1.", "break_and.", "unfold tot_mapped_lb_net_handlers_label in *.", "repeat break_let.", "by repeat tuple_inversion.", "have H_q := @pt_net_handlers_none _ _ _ _ _ _ _ multi_map_congr to from m (onwState net to) out d l H_m.", "rewrite /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "concludes.", "break_and.", "have H_q' := @pt_lb_net_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr to from _ (onwState net to) H_m.", "rewrite /tot_mapped_lb_net_handlers_label in H_q'.", "repeat break_let.", "repeat tuple_inversion.", "rewrite /pt_map_onet /=.", "rewrite (@collate_pt_map_update2_eq _ _ _ _ name_map) /=.", "rewrite H0 /=.", "set p1 := fun _ _ => _.", "set p2 := update2 _ _ _ _ _.", "set s1 := fun _ => _.", "set s2 := fun _ => _.", "have H_eq_p: p1 = p2.", "rewrite /p1 /p2 /update2.", "apply functional_extensionality => src.", "apply functional_extensionality => dst.", "break_if => //.", "break_and.", "by rewrite -H2 -H5 2!tot_map_name_inv_inverse H3 /= H_m.", "have H_eq_s: s1 = s2.", "rewrite /s1 /s2 /update.", "apply functional_extensionality => n.", "break_if => //.", "by rewrite H e.", "rewrite H_eq_p H_eq_s.", "split; first exact: LabeledStepOrderedFailure_stutter.", "rewrite (@filterMap_pt_map_trace_ev_outputs_eq _ _ _ _ _ name_map out to).", "by repeat find_rewrite.", "-", "case H_i: (pt_map_input inp) => [inp'|].", "have H_q := @pt_input_handlers_some _ _ _ _ _ _ _ multi_map_congr h _ (onwState net h) _ H_i.", "rewrite /pt_mapped_input_handlers /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_input_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ H_i Heqp1.", "break_and.", "unfold tot_mapped_lb_input_handlers_label in *.", "repeat break_let.", "by tuple_inversion.", "have H_q := @pt_input_handlers_none _ _ _ _ _ _ _ multi_map_congr h _ (onwState net h) out d l H_i.", "rewrite /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "concludes.", "break_and.", "have H_q' := @pt_lb_input_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr h _ (onwState net h) H_i.", "rewrite /tot_mapped_lb_input_handlers_label in H_q'.", "repeat break_let.", "repeat tuple_inversion.", "rewrite /pt_map_onet /=.", "rewrite (@collate_pt_map_eq _ _ _ _ name_map) H0 /=.", "set s1 := fun _ => pt_map_data _.", "set s2 := fun _ => pt_map_data _.", "have H_eq_s: s1 = s2.", "rewrite /s1 /s2.", "apply functional_extensionality => n.", "rewrite /update.", "by break_if; first by rewrite H e.", "rewrite -H_eq_s /s1 {s1 s2 H_eq_s}.", "split; first exact: LabeledStepOrderedFailure_stutter.", "rewrite (@filterMap_pt_map_trace_ev_outputs_eq _ _ _ _ _ name_map).", "by repeat find_rewrite.", "-", "by split => //; exact: LabeledStepOrderedFailure_stutter."], "proof_pred": ["intros.", "split.", "simpl.", "clear.", "exfalso.", "elim name_map.", "clear name_map.", "intros.", "elim msg_map.", "intros.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map.", "elim msg_map."], "time": 72.74447202682495, "num_tactics": 300, "proof_tree": {"current_proof_state": "lb_step_ordered_failure_pt_mapped_simulation_1_silent", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear name_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim msg_map.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_fst.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_snd.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "elim net'.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear msg_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear failed'.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim pt_map_msg.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim labeled_multi_fst.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim base_map.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim pt_map_msg.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim tot_map_name_inv.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "clear msg_map.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "elim labeled_multi_fst.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim base_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net'.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim failed.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "elim msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact net'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "simple induction 1.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "pt_map_onet_event_Map_unfold", "success": false, "proof_gt": ["by move => s; rewrite -map_Cons /= -{3}(recons s)."], "proof_pred": ["intro.", "intuition.", "exfalso.", "induction name_map_bijective.", "induction name_map_bijective.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction name_map_bijective."], "time": 605.7738828659058, "num_tactics": 137, "proof_tree": {"current_proof_state": "pt_map_onet_event_Map_unfold", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction s.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq7.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "pt_map_onet_tot_map_labeled_event_state_continuously_enabled", "success": false, "proof_gt": ["move => l H_neq s H_exec H_fair.", "have H_a: ((lb_step_execution lb_step_ordered_failure) /\\_ (weak_fairness lb_step_ordered_failure label_silent)) s by auto.", "move: H_a {H_exec H_fair}.", "apply: eventually_map_conv_ext => {s}.", "-", "apply extensional_always.", "exact: extensional_now.", "-", "apply extensional_always.", "exact: extensional_now.", "-", "apply extensional_and_tl.", "*", "exact: lb_step_execution_extensional.", "*", "exact: weak_fairness_extensional.", "-", "rewrite /and_tl /=.", "move => x s [H_e H_w].", "apply lb_step_execution_invar in H_e.", "by apply weak_fairness_invar in H_w.", "-", "case => x s [H_a H_w] H_al.", "simpl in *.", "exact: lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously."], "proof_pred": ["intros.", "intuition.", "exfalso.", "induction H2.", "induction name_map_bijective.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction name_map."], "time": 606.7665231227875, "num_tactics": 202, "proof_tree": {"current_proof_state": "pt_map_onet_tot_map_labeled_event_state_continuously_enabled", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction s.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_lb_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq5.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_lb_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_lb_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "pt_map_onet_hd_step_ordered_failure_star", "success": false, "proof_gt": ["move => e.", "rewrite /= /pt_map_onet_event /= /event_step_star /=.", "move => H_star.", "destruct e, evt_a.", "simpl in *.", "exact: step_ordered_failure_pt_mapped_simulation_star_1."], "proof_pred": ["intros.", "intuition.", "exfalso.", "induction e.", "induction H.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction fail_msg_map_congr."], "time": 601.6302556991577, "num_tactics": 121, "proof_tree": {"current_proof_state": "pt_map_onet_hd_step_ordered_failure_star", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction e.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq8.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq9.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq6.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq7.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq8.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq9.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction fail_msg_map_congr.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "lb_step_ordered_dynamic_failure_pt_mapped_simulation_1_non_silent", "success": false, "proof_gt": ["move => net net' failed failed' lb tr H_neq H_step.", "have H_neq': lb <> label_silent.", "rewrite -pt_lb_label_silent_fst_snd in H_neq.", "move => H_eq.", "by rewrite H_eq in H_neq.", "invcs H_step => //=.", "-", "rewrite {2}/pt_map_odnet /=.", "case H_m: (@pt_map_msg _ _ _ _ msg_map m) => [m'|]; last first.", "have H_q := @pt_lb_net_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr to from _ d H_m.", "rewrite /tot_mapped_lb_net_handlers_label in H_q.", "repeat break_let.", "by tuple_inversion.", "apply (@LabeledStepOrderedDynamicFailure_deliver _ _ _ _ _ _ m' (filterMap (@pt_map_msg _ _ _ _ msg_map) ms) (filterMap pt_map_output out) (pt_map_data d) (pt_map_data d') (filterMap (@pt_map_name_msg _ _ _ _ _ msg_map) l) (@tot_map_name _ _ _ _ name_map from) (@tot_map_name _ _ _ _ name_map to)).", "*", "exact: not_in_failed_not_in.", "*", "exact: in_failed_in.", "*", "by rewrite /pt_map_odnet /= tot_map_name_inv_inverse H5.", "*", "by rewrite /pt_map_odnet /= 2!tot_map_name_inv_inverse H6 /= H_m.", "*", "have H_q := @pt_net_handlers_some _ _ _ _ _ _ _ multi_map_congr to from m d _ H_m.", "rewrite /pt_mapped_net_handlers /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_net_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ _ H_m Heqp1.", "rewrite /tot_mapped_lb_net_handlers_label in H_q'.", "repeat break_let.", "break_and.", "by repeat tuple_inversion.", "*", "rewrite {2}/pt_map_odnet /=.", "rewrite (@collate_pt_map_update2_eq _ _ _ _ name_map).", "set f1 := fun _ => match _ with _ => _ end.", "set f2 := update _ _ _ _.", "have H_eq_f: f1 = f2.", "rewrite /f1 /f2.", "apply functional_extensionality => n.", "rewrite /update.", "break_if; break_if => //=; first by rewrite -e tot_map_name_inverse_inv in n0.", "by rewrite e tot_map_name_inv_inverse in n0.", "by rewrite H_eq_f.", "*", "by rewrite (@filterMap_pt_map_trace_ev_outputs_eq _ _ _ _ _ name_map).", "-", "rewrite {2}/pt_map_odnet /=.", "case H_i: pt_map_input => [inp'|]; last first.", "have H_q := @pt_lb_input_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr h inp d H_i.", "rewrite /tot_mapped_lb_input_handlers_label in H_q.", "repeat break_let.", "by tuple_inversion.", "apply (@LabeledStepOrderedDynamicFailure_input _ _ (@tot_map_name _ _ _ _ name_map h) _ _ _ _ (filterMap pt_map_output out) inp' (pt_map_data d) (pt_map_data d') (filterMap (@pt_map_name_msg _ _ _ _ _ msg_map) l)).", "*", "exact: not_in_failed_not_in.", "*", "exact: in_failed_in.", "*", "by rewrite /pt_map_odnet /= tot_map_name_inv_inverse H5.", "*", "have H_q := @pt_input_handlers_some _ _ _ _ _ _ _ multi_map_congr h inp d _ H_i.", "rewrite /pt_mapped_input_handlers /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_input_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ H_i Heqp1.", "rewrite /tot_mapped_lb_input_handlers_label in H_q'.", "repeat break_let.", "break_and.", "by repeat tuple_inversion.", "*", "rewrite {2}/pt_map_odnet /=.", "rewrite (@collate_pt_map_eq _ _ _ _ name_map).", "set f1 := fun _ => match _ with _ => _ end.", "set f2 := update _ _ _ _.", "have H_eq_f: f1 = f2.", "rewrite /f1 /f2.", "apply functional_extensionality => n.", "rewrite /update.", "break_if; break_if => //=; first by rewrite -e tot_map_name_inverse_inv in n0.", "by rewrite e tot_map_name_inv_inverse in n0.", "by rewrite H_eq_f.", "*", "by rewrite (@filterMap_pt_map_trace_ev_outputs_eq _ _ _ _ _ name_map)."], "proof_pred": ["intros.", "exfalso.", "elim H.", "elim H0.", "intros.", "intuition.", "subst.", "induction H5.", "induction H0.", "induction H8.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "intuition.", "induction name_map_bijective.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction overlay_map_congr."], "time": 603.0213141441345, "num_tactics": 220, "proof_tree": {"current_proof_state": "lb_step_ordered_dynamic_failure_pt_mapped_simulation_1_non_silent", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear tr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear name_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear failed'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear net'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear net.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear label_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply name_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tr.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply multi_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply overlay_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply fail_msg_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply name_map_bijective.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "PROVING", "used_tactic": "elim H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "subst.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H5.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H8.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H9.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H6.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_lb_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H5.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H7.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H4.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H10.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction H9.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "lb_step_ordered_dynamic_failure_pt_mapped_simulation_1_silent", "success": false, "proof_gt": ["move => net net' failed failed' lb tr H_eq H_step.", "invcs H_step => //=.", "-", "rewrite {2}/pt_map_odnet /=.", "case H_m: (@pt_map_msg _ _ _ _ msg_map m) => [m'|].", "have H_q := @pt_net_handlers_some _ _ _ _ _ _ _ multi_map_congr to from m d _ H_m.", "rewrite /pt_mapped_net_handlers /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_net_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ _ H_m Heqp1.", "break_and.", "unfold tot_mapped_lb_net_handlers_label in *.", "repeat break_let.", "by repeat tuple_inversion.", "have H_q := @pt_net_handlers_none _ _ _ _ _ _ _ multi_map_congr to from m d out d' l H_m.", "rewrite /net_handlers /= /unlabeled_net_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "concludes.", "break_and.", "have H_q' := @pt_lb_net_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr to from _ d H_m.", "rewrite /tot_mapped_lb_net_handlers_label in H_q'.", "repeat break_let.", "repeat tuple_inversion.", "rewrite /pt_map_odnet /=.", "rewrite (@collate_pt_map_update2_eq _ _ _ _ name_map) /=.", "rewrite H0 /=.", "set p1 := fun _ _ => _.", "set p2 := update2 _ _ _ _ _.", "set s1 := fun _ => _.", "set s2 := fun _ => _.", "have H_eq_p: p1 = p2.", "rewrite /p1 /p2 /update2.", "apply functional_extensionality => src.", "apply functional_extensionality => dst.", "break_if => //.", "break_and.", "by rewrite -H2 -H7 2!tot_map_name_inv_inverse H6 /= H_m.", "have H_eq_s: s1 = s2.", "rewrite /s1 /s2 /update.", "apply functional_extensionality => n.", "break_if => //.", "by rewrite e H5 H.", "rewrite H_eq_p H_eq_s.", "split; first exact: LabeledStepOrderedDynamicFailure_stutter.", "rewrite (@filterMap_pt_map_trace_ev_outputs_eq _ _ _ _ _ name_map).", "by repeat find_rewrite.", "-", "case H_i: (pt_map_input inp) => [inp'|].", "have H_q := @pt_input_handlers_some _ _ _ _ _ _ _ multi_map_congr h _ d _ H_i.", "rewrite /pt_mapped_input_handlers /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "have H_q' := @pt_lb_input_handlers_some _ _ _ _ _ _ _ _ multi_map_lb_congr _ _ _ _ _ _ _ _ H_i Heqp1.", "break_and.", "unfold tot_mapped_lb_input_handlers_label in *.", "repeat break_let.", "by tuple_inversion.", "have H_q := @pt_input_handlers_none _ _ _ _ _ _ _ multi_map_congr h _ d out d' l H_i.", "rewrite /input_handlers /= /unlabeled_input_handlers in H_q.", "repeat break_let.", "repeat tuple_inversion.", "concludes.", "break_and.", "have H_q' := @pt_lb_input_handlers_none _ _ _ _ _ _ _ _ multi_map_lb_congr h _ d H_i.", "rewrite /tot_mapped_lb_input_handlers_label in H_q'.", "repeat break_let.", "repeat tuple_inversion.", "rewrite /pt_map_odnet /=.", "rewrite (@collate_pt_map_eq _ _ _ _ name_map) H0 /=.", "set s1 := fun _ => match _ with _ => _ end.", "set s2 := fun _ => match _ with _ => _ end.", "have H_eq_s: s1 = s2.", "rewrite /s1 /s2.", "apply functional_extensionality => n.", "rewrite /update.", "by break_if; first by rewrite e H5 H.", "rewrite -H_eq_s /s1 {s1 s2 H_eq_s}.", "split; first exact: LabeledStepOrderedDynamicFailure_stutter.", "rewrite (@filterMap_pt_map_trace_ev_outputs_eq _ _ _ _ _ name_map).", "by repeat find_rewrite.", "-", "split => //; exact: LabeledStepOrderedDynamicFailure_stutter."], "proof_pred": ["intros.", "simpl.", "intuition.", "exfalso.", "elim H0.", "intros.", "elim H0.", "intros.", "elim H0.", "intros.", "elim H0.", "intros.", "elim H0.", "intros.", "elim H0.", "intros.", "elim H0.", "intros.", "intuition.", "induction H5.", "induction H12.", "induction H0.", "induction H51.", "induction H19.", "induction H26.", "induction H33.", "induction H40.", "induction H47."], "time": 600.0460276603699, "num_tactics": 178, "proof_tree": {"current_proof_state": "lb_step_ordered_dynamic_failure_pt_mapped_simulation_1_silent", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply name_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear name_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear failed'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear net.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "clear net'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply failed'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply failed.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply net'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply multi_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply overlay_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply fail_msg_map_congr.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply multi_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply overlay_map_congr.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H12.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H14.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H12.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H14.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H21.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H12.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H26.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H14.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H21.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H12.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H26.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H14.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H21.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H35.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H12.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H26.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H40.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H14.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H21.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H35.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H42.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "elim H5.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H12.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H19.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H26.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H33.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H40.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H47.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H7.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H14.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H21.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H28.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H35.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H42.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H5.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H12.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H0.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H51.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H19.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H26.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H33.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H40.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction H47.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H5.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H9.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H16.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "pt_map_odnet_event_Map_unfold", "success": false, "proof_gt": ["by move => s; rewrite -map_Cons /= -{3}(recons s)."], "proof_pred": ["intro.", "intuition.", "exfalso.", "induction name_map_bijective.", "induction name_map_bijective.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction fail_msg_map_congr."], "time": 604.1222693920135, "num_tactics": 117, "proof_tree": {"current_proof_state": "pt_map_odnet_event_Map_unfold", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction s.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq5.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq5.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction fail_msg_map_congr.", "children": [{"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "pt_map_odnet_tot_map_labeled_event_state_continuously_enabled", "success": false, "proof_gt": ["move => l H_neq s H_exec H_fair.", "have H_a: ((lb_step_execution lb_step_ordered_dynamic_failure) /\\_ (weak_fairness lb_step_ordered_dynamic_failure label_silent)) s by auto.", "move: H_a {H_exec H_fair}.", "apply: eventually_map_conv_ext => {s}.", "-", "apply extensional_always.", "exact: extensional_now.", "-", "apply extensional_always.", "exact: extensional_now.", "-", "apply extensional_and_tl.", "*", "exact: lb_step_execution_extensional.", "*", "exact: weak_fairness_extensional.", "-", "rewrite /and_tl /=.", "move => x s [H_e H_w].", "apply lb_step_execution_invar in H_e.", "by apply weak_fairness_invar in H_w.", "-", "case => x s [H_a H_w] H_al.", "simpl in *.", "exact: lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously."], "proof_pred": ["intros.", "intuition.", "exfalso.", "induction H2.", "induction name_map_bijective.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction fail_msg_map_congr."], "time": 601.0070385932922, "num_tactics": 203, "proof_tree": {"current_proof_state": "pt_map_odnet_tot_map_labeled_event_state_continuously_enabled", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction s.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction name_map_bijective.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction msg_map.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inv_inverse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_name_inverse_inv.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction fail_msg_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "induction H1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H2.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction multi_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map_bijective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H0.", "children": []}, {"current_proof_state": "DepthLimit", "used_tactic": "induction name_map.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/verdi/core/PartialMapExecutionSimulations.json", "proof_name": "pt_map_odnet_hd_step_ordered_dynamic_failure_star", "success": false, "proof_gt": ["move => e.", "rewrite /= /pt_map_odnet_event /= /event_step_star /=.", "move => H_star.", "break_exists.", "destruct e, evt_a.", "simpl in *.", "exact: step_ordered_dynamic_failure_pt_mapped_simulation_star_1."], "proof_pred": ["intros.", "intuition.", "exfalso.", "induction e.", "induction H.", "induction multi_map_congr.", "induction overlay_map_congr.", "induction multi_map_congr.", "induction overlay_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction multi_map_congr.", "induction overlay_map_congr."], "time": 298.3299844264984, "num_tactics": 300, "proof_tree": {"current_proof_state": "pt_map_odnet_hd_step_ordered_dynamic_failure_star", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction e.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some0.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction fail_msg_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction overlay_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some0.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "induction fail_msg_map_congr.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_some0.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply label_eq_dec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_none1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_input_handlers_none1.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some4.", "children": []}]}, {"current_proof_state": "PROVING", "used_tactic": "induction overlay_map_congr.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "induction multi_map_congr.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq4.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some3.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply label_tot_mapped.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_weak_fairness_always_enabled_pt_map_onet_continuously.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply lb_step_ordered_dynamic_failure_strong_fairness_enabled_pt_map_onet_eventually.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_init_handlers_eq3.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_adjacent_to_fst_snd1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply tot_map_label_injective.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply pt_net_handlers_some1.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}]}