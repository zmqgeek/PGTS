{"options": {"method": "ours", "eval_id": "tok-pattern", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 42, "proj_idx": 9, "filter": null, "path": "runs/tok/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 15025, "tac_vocab_file": "token_vocab.pickle", "cutoff_len": 30}, "results": [{"filename": "../data/UnifySL/HoareLogic/BigStepSemantics.json", "proof_name": "Total2Partial_ImpBigStepSemantics", "success": false, "proof_gt": ["refine (Partial.Build_ImpBigStepSemantics _ _ _ _ _ Total.eval_bool Total.eval_bool_stable _ _ _).", "+", "intros.", "pose proof Total.access_Ssequence c1 c2 s ms H as [ms' [ms'' [? [? ?]]]].", "exists ms', ms''; split; [| split]; auto.", "apply Total2Partial_forward; auto.", "+", "intros.", "pose proof Total.access_Sifthenelse b c1 c2 s ms H as [[? [ms' [? ?]]] | [? [ms' [? ?]]]].", "-", "left; split; auto; exists ms'; split; auto.", "apply Total2Partial_forward; auto.", "-", "right; split; auto; exists ms'; split; auto.", "apply Total2Partial_forward; auto.", "+", "intros.", "pose proof Total.access_Swhile b c s ms H.", "destruct H0 as [? | [? ?]].", "-", "left.", "clear H; induction H0.", "*", "apply Partial.loop_access_Terminating; auto.", "apply Total2Partial_forward; auto.", "*", "eapply Partial.loop_access_abnormal; eauto.", "apply Total2Partial_forward; auto.", "*", "apply (Partial.loop_access_step _ _ s1 s2 s3 s4); eauto.", "-", "right; split; auto.", "clear ms H1 H.", "inversion H0; subst.", "econstructor; eauto."], "proof_pred": ["exfalso.", "elim iBSS.", "clear iBSS.", "intros.", "elim BSS.", "intros.", "elim BSS.", "intuition.", "elim BSS.", "elim BSS.", "clear.", "intros.", "elim P.", "intros.", "elim P.", "elim P.", "elim P.", "induction P."], "time": 14.127225875854492, "num_tactics": 300, "proof_tree": {"current_proof_state": "Total2Partial_ImpBigStepSemantics", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim iBSS.", "children": [{"current_proof_state": "PROVING", "used_tactic": "clear iBSS.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim eval_bool_stable.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim BSS.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim eval_bool_stable.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim BSS.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim eval_bool_stable.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim BSS.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simple induction access.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim BSS.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim access0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim P.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim P.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact P.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "induction P.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply cmd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply state.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply cmd1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access0 in access1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact cmd.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim P.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact P.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply cmd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.eval_bool.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.eval_bool.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.lift_access.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.loop_access_fin_ind.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.loop_access_inf_ind.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim cmd0.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.eval_bool.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.eval_bool.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.frame_property.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim P.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact P.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "clear.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.eval_bool.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.eval_bool.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction cmd.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Partial.access_Ssequence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.frame_property.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.eval_bool_stable.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.Partial.access_Sifthenelse.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.frame_property.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "induction P.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access0.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact access0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact cmd0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact state.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact cmd1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact cmd.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.Total.access_Swhile.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "induction access1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply access1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply access0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}]}