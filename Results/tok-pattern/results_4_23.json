{"options": {"method": "ours", "eval_id": "tok-pattern", "datapath": "../data", "projs_split": "../projs_split.json", "split": "test", "file": null, "proof": null, "file_idx": 23, "proj_idx": 4, "filter": null, "path": "runs/tok/checkpoints/model_003.pth", "output_dir": "evaluation", "max_num_tactics": 300, "timeout": 600, "hammer_timeout": 100, "depth_limit": 50, "beam_width": 20, "num_tactic_candidates": 20, "lens_norm": 0.5, "tac_grammar": "tactics.ebnf", "term_embedding_dim": 256, "size_limit": 50, "embedding_dim": 256, "symbol_dim": 256, "hidden_dim": 256, "seed": 0, "num_tactics": 15025, "tac_vocab_file": "token_vocab.pickle", "cutoff_len": 30}, "results": [{"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "lab_dis", "success": true, "proof_gt": ["by []."], "proof_pred": ["unfold SerTop.CalculatorApp.l2.", "unfold SerTop.CalculatorApp.l1.", "simpl.", "red.", "reflexivity."], "time": 0.7834701538085938, "num_tactics": 25, "proof_tree": {"current_proof_state": "lab_dis", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.l2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.l1 in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold SerTop.CalculatorApp.l2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "unfold SerTop.CalculatorApp.l1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.l2 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.l1 in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.l2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.l1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "SUCCESS", "used_tactic": "reflexivity.", "children": []}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "prec_valid", "success": false, "proof_gt": ["by move=>i; case: i=>//=x; case=>//y _ _; eexists _."], "proof_pred": ["intros.", "destruct H.", "destruct SerTop.CalculatorApp.f."], "time": 9.51429557800293, "num_tactics": 300, "proof_tree": {"current_proof_state": "prec_valid", "used_tactic": null, "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "exists i.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "elim H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply i.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct i.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct SerTop.CalculatorApp.f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct n.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "destruct SerTop.CalculatorApp.f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with sets.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with algebra.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with real.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with zarith.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "constructor.", "children": [{"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "exists n.", "children": [{"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "f_equal.", "children": [{"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n in n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor 1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor 1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor 2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact n.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor 1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact n.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "right.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "apply SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "apply SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with real.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "destruct SerTop.CalculatorApp.prec.", "children": [{"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with real.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with zarith.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with sets.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with algebra.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with datatypes.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with set.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with bool.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with zfc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "exfalso.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "case SerTop.CalculatorApp.f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.f.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with real.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto  with arith.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "exists n.", "children": [{"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "auto.", "children": [{"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.f.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply n.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "constructor 1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction n.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.prec.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.l1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "destruct SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "destruct SerTop.CalculatorApp.f.", "children": [{"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "Huniq1", "success": true, "proof_gt": ["by []."], "proof_pred": ["apply SerTop.CalculatorApp.lab_dis."], "time": 0.19263243675231934, "num_tactics": 2, "proof_tree": {"current_proof_state": "Huniq1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "SUCCESS", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "Huniq2", "success": true, "proof_gt": ["by []."], "proof_pred": ["apply SerTop.CalculatorApp.lab_dis."], "time": 0.14128994941711426, "num_tactics": 2, "proof_tree": {"current_proof_state": "Huniq2", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "SUCCESS", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "validV", "success": false, "proof_gt": ["rewrite /V; apply/andP=>/=.", "split; first by rewrite validPtUn/= validPt/= domPt inE/=.", "by rewrite unitR valid_unit."], "proof_pred": ["elim SerTop.CalculatorApp.V.", "intros.", "simpl.", "contradict b.", "clear.", "intros.", "generalize b.", "simpl.", "intro.", "red in b.", "contradict b.", "clear.", "intros.", "generalize b.", "simpl.", "clear.", "intro."], "time": 11.052549600601196, "num_tactics": 300, "proof_tree": {"current_proof_state": "validV", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Huniq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Huniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.f.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.cls2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.cls1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.cs2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.cs1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "elim SerTop.CalculatorApp.V.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite b in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite a in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "field.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite b in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite a in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Huniq1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Huniq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite b.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict b.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a in a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction a.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply a.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact a.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( b b ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Huniq2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Huniq1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict b.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "generalize b.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "easy.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0 in b0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0 in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red in b.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0 in b0.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0 in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "contradict b.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0 in b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b0 in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "exfalso.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists b0.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "contradict b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( b b0 ).", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b0.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "elim b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( b b ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( b SerTop.CalculatorApp.V ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "case b.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( b SerTop.CalculatorApp.lab_dis ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.lab_dis.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "destruct b.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "generalize b.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "clear.", "children": [{"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply b in b.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction b.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "Hs1", "success": true, "proof_gt": ["by []."], "proof_pred": ["apply SerTop.CalculatorApp.Huniq1."], "time": 0.2889854907989502, "num_tactics": 4, "proof_tree": {"current_proof_state": "Hs1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.validV.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.V.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.prec_valid.", "children": []}, {"current_proof_state": "SUCCESS", "used_tactic": "apply SerTop.CalculatorApp.Huniq1.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "Hc2", "success": true, "proof_gt": ["by []."], "proof_pred": ["apply SerTop.CalculatorApp.Hs1."], "time": 0.15037322044372559, "num_tactics": 1, "proof_tree": {"current_proof_state": "Hc2", "used_tactic": null, "children": [{"current_proof_state": "SUCCESS", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "Hc1", "success": true, "proof_gt": ["by []."], "proof_pred": ["apply SerTop.CalculatorApp.Hs1."], "time": 0.1619577407836914, "num_tactics": 1, "proof_tree": {"current_proof_state": "Hc1", "used_tactic": null, "children": [{"current_proof_state": "SUCCESS", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "Hs2", "success": true, "proof_gt": ["by []."], "proof_pred": ["intuition."], "time": 0.16296696662902832, "num_tactics": 1, "proof_tree": {"current_proof_state": "Hs2", "used_tactic": null, "children": [{"current_proof_state": "SUCCESS", "used_tactic": "intuition.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "valid_init_dstate1", "success": false, "proof_gt": ["case: validUn=>//=; do?[case: validUn=>//; do?[rewrite ?validPt/=//]|by rewrite validPt/=].", "by move=>k; rewrite !domPt !inE/==>/eqP<-/eqP."], "proof_pred": ["red.", "simpl."], "time": 8.173954963684082, "num_tactics": 300, "proof_tree": {"current_proof_state": "valid_init_dstate1", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}]}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "valid_init_dstate2", "success": false, "proof_gt": ["case: validUn=>//=; do?[case: validUn=>//; do?[rewrite ?validPt/=//]|by rewrite validPt/=].", "by move=>k; rewrite !domPt !inE/==>/eqP<-/eqP."], "proof_pred": ["red.", "simpl."], "time": 7.875428676605225, "num_tactics": 300, "proof_tree": {"current_proof_state": "valid_init_dstate2", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1 in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hc1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "validI", "success": false, "proof_gt": ["case: validUn=>//=; do?[case: validUn=>//; do?[rewrite ?gen_validPt/=//]|by rewrite validPt/=]; by move=>k; rewrite !domPt !inE/==>/eqP<-/eqP."], "proof_pred": [], "time": 0.49019742012023926, "num_tactics": 20, "proof_tree": {"current_proof_state": "validI", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hc1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "coh1'", "success": false, "proof_gt": ["split; last by move=>?????????/=/esym/empbP/=; rewrite empbPtUn.", "split=>//; rewrite ?valid_init_dstate1//.", "-", "split; first by rewrite valid_unit.", "by move=>m ms; rewrite find0E.", "-", "move=>z; rewrite /=/init_dstate1 domUn !inE/= valid_init_dstate1/=.", "by rewrite !domPt !inE !(eq_sym z).", "move=>n/=; rewrite inE=>/orP; case=>//=.", "-", "move/eqP=>->/=; exists [::]=>/=.", "rewrite /getLocal/init_dstate1/= findUnL?valid_init_dstate1//.", "by rewrite domPt/= findPt/=.", "rewrite inE=>/eqP=>->; exists [::]=>/=.", "rewrite /getLocal/init_dstate1/= findUnL?valid_init_dstate1//.", "by rewrite domPt/= findPt."], "proof_pred": ["split.", "split.", "split.", "simpl.", "intuition.", "intro.", "intro.", "simpl.", "revert m.", "induction 1.", "red.", "simpl.", "exfalso."], "time": 26.65218758583069, "num_tactics": 300, "proof_tree": {"current_proof_state": "coh1'", "used_tactic": null, "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in H.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in m.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H ms ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H ms ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms in *.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H ms ).", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "eauto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H ms ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H ms ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H H ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert m.", "children": [{"current_proof_state": "PROVING", "used_tactic": "induction 1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in m.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( m m ).", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "exact ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "red.", "children": [{"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "exfalso.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}]}]}]}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "coh1", "success": false, "proof_gt": ["split=>//.", "-", "apply/andP; split; last by rewrite valid_unit.", "by rewrite ?validPt.", "-", "by rewrite validPt/=.", "-", "by apply: hook_complete_unit.", "-", "by move=>z; rewrite !domPt !inE/=.", "move=>k; case B: (l1==k); last first.", "-", "have X: (k \\notin dom W1.1).", "by rewrite /init_state/W1/=!domPt !inE/=; move/negbT: B.", "by rewrite /getProtocol /getStatelet/= ?findPt2 eq_sym !B/=.", "move/eqP:B=>B; subst k; rewrite prEq/getStatelet/init_state findPt/=.", "exact: coh1'."], "proof_pred": [], "time": 19.944436073303223, "num_tactics": 260, "proof_tree": {"current_proof_state": "coh1", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1' in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "symmetry.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1' in H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": [{"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1' , SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1' , SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists l.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in l.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate2.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}]}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "coh2'", "success": false, "proof_gt": ["split; last by move=>?????????/=/esym/empbP/=; rewrite empbPtUn.", "split=>//; rewrite ?valid_init_dstate2//.", "-", "split; first by rewrite valid_unit.", "by move=>m ms; rewrite find0E//.", "-", "move=>z; rewrite /=/init_dstate2 domUn !inE/= valid_init_dstate2//=.", "by rewrite !domPt !inE !(eq_sym z) orbC.", "move=>n/=; rewrite inE=>/orP; case=>//=.", "-", "move/eqP=>->/=; exists [::]=>/=.", "rewrite /getLocal/init_dstate2/= findUnL?valid_init_dstate2//.", "by rewrite domPt/= findPt/=.", "rewrite inE=>/eqP=>->; exists [::]=>/=.", "rewrite /getLocal/init_dstate2/= findUnL?valid_init_dstate2//.", "by rewrite domPt/= findPt."], "proof_pred": ["split.", "split.", "simpl.", "split.", "intuition.", "intro.", "intro.", "simpl in m.", "revert m.", "intros."], "time": 28.49522352218628, "num_tactics": 300, "proof_tree": {"current_proof_state": "coh2'", "used_tactic": null, "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl.", "children": [{"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "split.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intuition.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl in m.", "children": [{"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite H in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m in *.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "hnf in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "specialize ( H m ).", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "contradiction.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "simpl in m.", "children": [{"current_proof_state": "ERROR", "used_tactic": "auto  with *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "red.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "PROVING", "used_tactic": "revert m.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "induction ms.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in content.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in to.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in from.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in active.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "discriminate.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply H in H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply content.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply to.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply from.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply active.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "intro.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in content.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in to.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in active.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in from.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold from.", "children": []}]}, {"current_proof_state": "Backtraced", "used_tactic": "induction 1.", "children": [{"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "red.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "auto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply ms.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in |- *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in m.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "ring.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite ms in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1' in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite m in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exists m.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite <- ms.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.init_dstate1.", "children": []}]}]}, {"current_proof_state": "PROVING", "used_tactic": "intros.", "children": [{"current_proof_state": "ERROR", "used_tactic": "apply H.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl in H.", "children": []}]}]}]}]}]}]}]}]}]}]}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "coh2", "success": false, "proof_gt": ["split.", "-", "apply/andP; split; last by rewrite valid_unit.", "by rewrite ?validPt.", "-", "by rewrite validPt/=.", "-", "by apply: hook_complete_unit.", "-", "by move=>z; rewrite !domPt !inE/=.", "move=>k; case B: (l2==k); last first.", "-", "have X: (k \\notin dom W2.1).", "by rewrite /init_state/W2/=!domPt !inE/=; move/negbT: B.", "by rewrite /getProtocol /getStatelet/= ?findPt2 eq_sym !B/=.", "move/eqP:B=>B; subst k; rewrite prEq/getStatelet/init_state findPt/=.", "exact: coh2'."], "proof_pred": [], "time": 1.917351484298706, "num_tactics": 60, "proof_tree": {"current_proof_state": "coh2", "used_tactic": null, "children": [{"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "unfold SerTop.CalculatorApp.init_dstate1.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh2'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "init_coh", "success": false, "proof_gt": ["split=>//; first by apply: validV.", "-", "by apply: validI.", "-", "rewrite /V/=/init_state/==>z.", "-", "by move=>???; rewrite domUn !inE/= dom0 andbC.", "-", "rewrite /V/init_state=>z; rewrite !domUn !inE; case/andP:validV=>->_/=.", "by rewrite validI/= !domPt.", "move=>k; case B: ((l1 == k) || (l2 == k)); last first.", "-", "have X: (k \\notin dom V.1).", "+", "by rewrite /V domUn inE/= !domPt!inE/= B andbC.", "rewrite /getProtocol /getStatelet/=.", "case: dom_find (X)=>//->_/=; rewrite /init_state.", "case/negbT/norP: B=>/negbTE N1/negbTE N2.", "rewrite findUnL; rewrite ?validI// domPt inE N1.", "rewrite findPt2 eq_sym N1/=.", "by rewrite findPt2 eq_sym N2/=.", "case/andP: validV=>V1 V2.", "case/orP:B=>/eqP Z; subst k; rewrite /getProtocol/V findUnL/= ?V1 ?domPt ?inE/= ?findPt; rewrite /getStatelet ?findUnL/= ?validI// ?domPt ?inE/= ?findPt; [by case: coh1'|by case coh2']."], "proof_pred": [], "time": 3.073064088821411, "num_tactics": 80, "proof_tree": {"current_proof_state": "init_coh", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "hnf.", "children": [{"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "Backtraced", "used_tactic": "simpl.", "children": [{"current_proof_state": "Backtraced", "used_tactic": "split.", "children": [{"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "tauto.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "assumption.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "contradict H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold SerTop.CalculatorApp.coh2.", "children": []}]}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "omega.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "right.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "left.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intuition.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "symmetry.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1'.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "intros.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "split.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "congruence.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "intro.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.valid_init_dstate2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_loc.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "rewrite SerTop.CalculatorApp.coh1'.", "children": []}]}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.Hs2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "trivial.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1' in H.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2' in H.", "children": []}]}}, {"filename": "../data/disel/Examples/Calculator/SimpleCalculatorApp.json", "proof_name": "server1_run_obligation_1", "success": false, "proof_gt": ["move=>i/=R; apply: call_rule=>C1//=.", "rewrite (rely_loc' _ R)/getLocal/=/getStatelet/=.", "rewrite findUnL ?validI ?valid_init_dstate1//.", "rewrite domPt inE eqxx findPt/=.", "rewrite findUnR ?validI ?valid_init_dstate1//=.", "rewrite domPt inE/= findPt/=; split=>//.", "rewrite -(rely_loc _ R)/=/getStatelet findUnR ?validI ?valid_init_dstate1//=.", "rewrite domPt inE/= findPt/= /init_dstate2/=.", "rewrite findUnL ?validI ?valid_init_dstate2//.", "by rewrite domPt inE/= findPt/= /init_dstate2/=."], "proof_pred": [], "time": 2.2597360610961914, "num_tactics": 20, "proof_tree": {"current_proof_state": "server1_run_obligation_1", "used_tactic": null, "children": [{"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.client_run_obligation_2.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "simpl.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2'.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "f_equal.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "simpl in *.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "clear.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold u.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.delegating_server.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply u.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.client_run.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.compute_input.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "reflexivity.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh1.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.coh2.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "unfold u in *.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.client_run_obligation_1.", "children": []}, {"current_proof_state": "GoalDouble", "used_tactic": "subst.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "apply SerTop.CalculatorApp.init_coh.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "constructor.", "children": []}, {"current_proof_state": "ERROR", "used_tactic": "exact SerTop.CalculatorApp.client_run_obligation_2.", "children": []}]}}]}