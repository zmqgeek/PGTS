ProjectName,Theorem,ProofSequence,Introduction_Patterns,Simplification_Patterns,Application_Patterns,Rewriting_Patterns,Automation_Patterns,Analysis_Patterns
/mnt/cisk/zmq/dataset/data/weak-up-to/Reductions.json,weak_refl,"['intro', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Reductions.json,tau_weak,"['intros', 'destruct', 'simpl', 'intros', 'apply', 'assumption', 'destruct', 'exists', 'auto', 'apply', 'assumption']",2,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Reductions.json,weak_tau,"['intros', 'destruct', 'simpl', 'intros', 'apply', 'assumption', 'exists', 'auto', 'exists', 'auto']",2,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Reductions.json,red_weak,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Reductions.json,taus_weak,"['intros', 'destruct', 'simpl', 'intros', 'apply', 'assumption', 'destruct', 'exists', 'auto', 'apply', 'assumption']",2,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Reductions.json,weak_taus,"['intros', 'destruct', 'simpl', 'intros', 'apply', 'assumption', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto', 'apply', 'assumption']",2,1,0,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Reductions.json,Weak_ind,"['intros', 'destruct', 'induction', '[ apply Hrefl | apply Htau with x1', 'assumption', 'destruct', 'destruct', 'induction', 'apply', 'simpl', 'auto', 'clear', 'induction', '[ apply Hrefl | apply Htau with u', 'assumption', 'apply', 'auto', 'exists', 'auto', 'exists', 'assumption']",0,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,monotonic_wmonotonic,"['intros', 'split', 'auto', 'apply', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'intro', 'destruct', 'auto', 'apply', 'auto']",2,0,2,0,3,1
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,star_wmon,"['split', 'intros', 'induction', 'auto', 'apply', 'auto', 'intros', 'unfold', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'exact', 'intros', 'unfold', 'apply', 'apply', 'auto', 'apply', 'intros', 'cgen', 'cgen', 'induction', 'intros', 'exists', 'auto', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'elim', 'intros', 'exists', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,4,0,3,7
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,Comp_wmon,"['unfold', 'split', 'intros', 'apply', 'apply', 'exact', 'intros', 'exact', 'intros', 'apply', 'apply', 'apply', 'exact', 'apply']",1,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,Union2_wmon,"['unfold', 'split', 'intros', 'destruct', '[ left', 'apply', 'apply', 'auto', 'intros', 'celim', 'intro', ""[ destruct (wmon_t HF HR _ _ _ Hxx' xRy) as [ y' ] | destruct (wmon_t HG HR _ _ _ Hxx' xRy) as [ y' ] ]"", 'exists', 'auto', '[ left | right ]', 'auto', 'intros', 'celim', 'intro', ""[ destruct (wmon_a HF HR HS HRS HRS' _ _ _ _ Hxx' xRy) as [ y' ] | destruct (wmon_a HG HR HS HRS HRS' _ _ _ _ Hxx' xRy) as [ y' ] ]"", 'exists', 'auto', '[ left | right ]', 'auto']",0,0,2,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,Union_wmon,"['unfold', 'split', 'intros', 'destruct', 'exists', 'apply', 'auto', 'intros', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto']",0,0,1,0,2,5
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,UExp_wmon,"['intro', 'induction', 'apply', 'simpl', 'fold', 'apply', 'auto', 'fold', 'apply', 'auto']",0,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,UIter_wmon,"['unfold', 'change', 'apply', 'intro', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,Chaining_wmon,"['unfold', 'split', 'intros', 'destruct', 'exists', '[ apply (wmon_m HF HRS) | apply (wmon_m HG HRS) ]', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'exists', 'apply', 'auto', 'apply', 'auto', 'exists', 'auto']",0,0,1,0,3,5
/mnt/cisk/zmq/dataset/data/weak-up-to/WeakMonotonic.json,chaing_l_wmon,"['split', 'intros', 'destruct', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'exists', 'apply', 'auto', 'apply', 'auto', 'exists', 'auto']",0,0,1,0,3,5
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,phi,"['intro', 'induction', 'intros', 'destruct', 'exists', 'auto', 'right', 'assumption', 'simpl', 'intro', 'apply', 'apply', 'auto', 'apply', 'destruct', 'apply', '[ unfold evolve_t', 'apply', 'auto', 'apply', 'auto', 'left', 'auto']",2,0,2,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,monotonic_correct,"['intro', 'unfold', 'union_evolve', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,silent,"['intro', 'induction', 'auto', 'simpl', 'unfold', 'apply', 'apply', 'auto', 'apply', 'apply']",0,1,3,0,2,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,wmonotonic_correct_t,"['unfold', 'union_evolve', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,visible,"['intro', 'induction', 'intro', 'simpl', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'left', 'auto']",1,1,2,0,1,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,wmonotonic_correct,"['intro', 'destruct', 'apply', 'unfold', 'union_evolve', 'exists', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,pre_silent,"['intro', 'induction', 'simpl', 'unfold', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'left', 'auto']",0,2,3,0,1,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,HFGn,"['intro', 'induction', 'simpl', 'auto', 'intros', 'destruct', 'left', 'auto', 'right', 'apply']",0,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,pre_visible,"['intros', 'induction', 'simpl', 'intro', 'destruct', 'auto', 'apply', 'unfold', 'auto', 'right', 'apply', 'auto', 'apply', 'auto', 'apply', '[ apply union2_evolve_left | apply union2_evolve_right ]', 'auto', 'apply', 'auto', 'destruct', 'apply', 'left', 'apply', 'auto', 'apply', 'left', 'apply', 'auto']",1,1,2,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,HGFGn,"['intro', 'induction', 'right', 'auto', 'intros', 'celim', 'intro', 'auto', 'left', 'auto', 'right', 'exact']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,HGFG,"['split', 'apply', 'repeat', 'apply', 'intros', 'destruct', 'exists', 'apply', 'assumption', 'intros', 'destruct', 'exists', 'apply', 'exact', 'repeat', 'auto', 'apply']",1,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,unified_correct,"['eapply', 'try', 'apply', 'apply', 'exact', 'exact', 'intro', 'apply', 'auto', 'apply', 'auto', 'apply']",0,0,4,0,1,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,HBGGn,"['intros', 'right', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,HGGBF,"['split', 'intros', 'destruct', 'exists', 'cgen', 'cgen', 'cgen', 'induction', 'intros', 'destruct', 'destruct', 'right', 'exists', 'apply', 'exists', 'auto', 'apply', 'auto', 'celim', 'intro', 'left', 'apply', 'auto', 'right', 'exact', 'intros', 'apply', 'auto', 'intros', 'exists', 'auto', 'exists', 'auto']",2,0,1,0,3,7
/mnt/cisk/zmq/dataset/data/weak-up-to/Theory.json,controlled_correct,"['eapply', 'try', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,trans_incl,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,trans_eeq,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,comp_incl,"['unfold', 'intuition', 'destruct', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,comp_eeq,"['unfold', 'intuition', 'destruct', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,union_incl,"['unfold', 'intuition', 'destruct', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,union_eeq,"['unfold', 'intuition', 'destruct', 'destruct', 'exists', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,union2_incl,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,union2_eeq,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,star_incl,"['intros', 'induction', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,star_eeq,"['intro', 'destruct', 'split', 'intros', 'induction', 'auto', 'apply', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus_incl,"['intros', 'destruct', 'exists', 'auto', 'apply', 'assumption']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus_eeq,"['intro', 'elim', 'intros', 'split', 'intros', 'destruct', 'exists', 'auto', 'apply', 'assumption', 'apply', 'assumption']",0,0,0,0,2,7
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,incl_trans,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,eeq_refl,"['intros', 'split', 'apply']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,eeq_trans,"['unfold', 'split', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,eeq_sym,"['unfold', 'split', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,star1,"['intros', 'eapply', '[ apply xRy | apply star_refl ].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,star_S,"['intros', 'induction', 'apply', 'assumption', 'apply', 'intuition']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,star_trans,"['intros', 'induction', 'intuition', 'apply', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus_star,"['intros', 'elim', 'intros', 'apply', 'intuition']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus_star_plus,"['intros', 'elim', 'intros', 'exists', 'intuition', 'apply', 'assumption']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,star_plus_plus,"['induction', 'intros', 'assumption', 'exists', 'intuition', 'apply', 'assumption']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus_trans,"['intros', 'apply', 'try', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus1,"['intros', 'exists', 'intuition']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus_S,"['intros', 'apply', 'try', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,S_plus,"['intros', 'exists', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,Acc_clos_trans,"['induction', 'apply', 'intros', 'elim', 'intros', 'clear', 'generalize', 'clear', 'intro', 'destruct', 'intuition', 'apply', 'auto', 'exists', 'intuition']",1,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,plus_wf,"['intro', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,inv_inv,"['intros', 'unfold', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,inv_comp,"['intros', 'unfold', 'intuition', 'destruct', 'exists', 'auto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,inv_union,"['intros', 'unfold', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,inv_star,"['split', 'unfold', 'induction', 'auto', 'apply', 'auto', 'unfold', 'induction', 'auto', 'apply', 'auto']",0,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,inv_plus,"['split', 'unfold', 'intros', 'destruct', 'cgen', 'cgen', 'induction', 'intros', 'apply', 'apply', 'elim', 'auto', 'intros', 'exists', 'intuition', 'apply', 'auto', 'unfold', 'intros', 'destruct', 'cgen', 'cgen', 'induction', 'intros', 'apply', 'apply', 'elim', 'auto', 'intros', 'exists', 'intuition', 'apply', 'auto']",4,0,2,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,inv_union2,"['split', '(intros x y H', 'celim', 'intro', '[ left | right ]', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,comp_assoc,"['intros', 'split', 'intros', 'destruct', '[ destruct H1 as [ t ] | destruct H2 as [ t ] ]', 'exists', 'auto', 'exists', 'auto']",0,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,comp_star_star,"['split', 'intros', 'destruct', 'apply', 'assumption', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,comp_plus_star,"['split', 'intros', 'destruct', 'apply', 'assumption', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Relations.json,comp_star_plus,"['split', 'intros', 'destruct', 'apply', 'assumption', 'exists', 'auto', 'apply', 'assumption']",0,0,0,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,identity_mon,"['apply', 'intros', 'unfold', 'auto', 'intro', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,constant_mon,"['intro', 'apply', 'intros', 'unfold', 'auto', 'intros', 'auto']",2,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,chaining_r_mon,"['intro', 'apply', 'unfold', 'intros', 'intros', 'destruct', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto']",2,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,chaining_l_mon,"['clear', 'intro', 'split', 'intros', 'destruct', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'celim', 'intro', 'exists', 'auto', 'exists', 'auto', 'destruct', 'apply', 'auto', 'destruct', 'exists', 'auto', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto']",0,0,1,0,2,5
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,Comp_mon,"['unfold', 'split', 'intros', 'apply', 'intros', 'apply', 'intros', 'apply', 'intro', 'destruct', 'apply', 'apply', 'apply']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,Union2_mon,"['unfold', 'split', 'intros', 'destruct', '[ left', 'apply', 'apply', 'auto', 'intros', 'celim', 'intro', ""[ destruct (mon_t HF H H' _ _ _ Hxx' xRy) as [ y' ] | destruct (mon_t HG H H' _ _ _ Hxx' xRy) as [ y' ] ]"", 'exists', 'auto', '[ left | right ]', 'auto', 'intros', 'celim', 'intro', ""[ destruct (mon_a HF H H' _ _ _ _ Hxx' xRy) as [ y' ] | destruct (mon_a HG H H' _ _ _ _ Hxx' xRy) as [ y' ] ]"", 'exists', 'auto', '[ left | right ]', 'auto']",0,0,2,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,Union_mon,"['unfold', 'split', 'intros', 'destruct', 'exists', 'apply', 'auto', 'intros', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto', 'intros', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto']",0,0,1,0,2,5
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,UExp_mon,"['intro', 'induction', 'apply', 'simpl', 'fold', 'apply', 'auto', 'fold', 'apply', 'auto']",0,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Monotonic.json,UIter_mon,"['unfold', 'change', 'apply', 'intro', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Controlled.json,wexpansion1_ctrl_t,"['intros', 'destruct', 'cgen', 'cgen', 'induction', 'intros', 'apply', 'destruct', 'celim', 'intro', 'destruct', 'exists', 'auto', 'exists', 'auto', 'apply', 'auto', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto', 'apply', 'auto']",2,0,1,0,2,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UExp_incl,"['intros', 'left', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UIter_incl,"['intros', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UExp_inc,"['intros', 'induction', 'intros', 'simpl', 'auto', 'celim', 'intro', 'left', 'exact', 'right', 'apply']",2,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UIter_inc,"['intros', 'destruct', 'exists', 'apply']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UExp_UExp,"['intros', 'induction', 'intros', 'reflexivity', 'simpl', 'rewrite', 'reflexivity']",1,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UIter_02,"['intros', 'destruct', 'cgen', 'cgen', 'cgen', 'induction', 'intros', 'apply', 'exact', 'celim', 'intro', 'auto', 'apply', 'exact']",2,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UExp_trans,"['intros', 'induction', 'split', 'intros', 'auto', 'celim', 'intro', 'left', 'exact', 'right', 'apply', 'apply', 'auto', 'left', 'exact', 'right', 'apply', 'apply']",0,0,2,0,0,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Functions.json,UIter_trans,"['intro', 'split', 'intros', 'destruct', 'exists', 'exact', 'exact']",0,0,1,0,0,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Applications.json,F_mon,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Applications.json,G_wmon,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Applications.json,FG,"['intros', 'destruct', 'destruct', 'unfold', 'simpl', 'apply', 'auto', 'right', 'unfold', 'apply', 'apply', 'auto', 'apply', 'left', 'auto', 'apply', 'right', 'auto']",0,2,3,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Applications.json,G_reverse,"['intros', 'unfold', 'eapply', '[ apply inv_star | apply star_eeq ].', 'eapply', '[ apply inv_union2 | apply union2_eeq', 'auto', 'split', 'intros', 'apply']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Applications.json,BG,"['intros', 'destruct', 'unfold', 'simpl', 'apply', 'auto', 'right', 'induction', 'apply', 'apply', 'auto', 'apply', 'apply', 'left', 'auto']",0,2,2,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Applications.json,B'G,"['intros', 'destruct', 'unfold', 'simpl', 'apply', 'auto', 'right', 'induction', 'apply', 'apply', 'auto', 'apply', 'apply', 'left', 'auto']",0,2,2,0,1,1
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,weak_strong,"['intros', 'generalize', 'intros', 'destruct', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'exists', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,1,0,3,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,union2_evolve_left,"['intros', 'destruct', 'exists', 'auto', 'left', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,union2_evolve_right,"['intros', 'destruct', 'exists', 'auto', 'right', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,union_evolve,"['intros', 'destruct', 'destruct', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,evolve_union,"['intros', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,incl_evolve,"['intros', 'destruct', 'exists', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,evolve_incl,"['intros', 'destruct', 'exists', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,simulation_eeq,"['intros', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,simulation_t_eeq,"['intros', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,bisimulation_bisim,"['split', 'intros', 'destruct', ""[ destruct (proj1 HR _ _ _ _ Hxx' xRy) as [ y' ] | destruct (proj2 HR _ _ _ _ Hxx' xRy) as [ y' ] ]"", 'exists', 'auto', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,expansion_expand,"['split', 'intros', 'destruct', ""[ destruct (proj1 HR _ _ _ _ Hxx' xRy) as [ y' ] | destruct (proj2 HR _ _ _ _ Hxx' xRy) as [ y' ] ]"", 'exists', 'auto', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,wexpansion_wexpand,"['split', 'intros', 'destruct', ""[ destruct (proj1 HR _ _ _ _ Hxx' xRy) as [ y' ] | destruct (proj2 HR _ _ _ _ Hxx' xRy) as [ y' ] ]"", 'exists', 'auto', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,expand_wexpand,"['intros', 'destruct', 'exists', 'auto', 'split', 'intros', 'destruct', 'exists', 'auto', 'destruct', 'simpl', 'intuition', 'exists', 'auto', 'exact']",0,0,0,0,2,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,wexpand_bisim,"['intros', 'destruct', 'exists', 'auto', 'split', 'intros', 'destruct', 'exists', 'auto', 'destruct', 'simpl', 'celim', 'intro', 'try', 'auto', 'exists', 'auto', 'exact']",0,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,simulation_comp,"['intros', 'destruct', 'destruct', 'destruct', 'exists', 'auto', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,expansion1_comp,"['intros', 'destruct', 'destruct', 'destruct', 'celim', 'intro', 'destruct', 'exists', '[ left | exists t ]', 'auto', 'destruct', 'exists', 'auto', 'exists', 'auto', 'destruct', 'exists', 'auto', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,wexpansion1_t,"['intros', 'cgen', 'induction', 'intros', 'exists', 'auto', 'destruct', 'destruct', 'exists', 'auto', 'celim', 'intro', 'destruct', 'auto', 'apply', 'auto']",1,0,1,0,2,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,wexpansion1_comp,"['intros', 'destruct', 'destruct', 'destruct', 'celim', 'intro', 'destruct', 'exists', '[ left | exists t ]', 'auto', 'destruct', 'exists', 'auto', 'exists', 'auto', 'destruct', 'destruct', 'destruct', 'exists', 'destruct', 'exists', 'auto', 'apply', 'auto', 'exists', 'auto']",0,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,bisimulation_comp,"['unfold', 'intros', 'split', 'apply', 'intuition', 'eapply', 'try', 'apply', 'apply', 'intuition']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,expansion_comp,"['unfold', 'intros', 'split', 'apply', 'intuition', 'eapply', 'try', 'apply', 'apply', 'intuition']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,wexpansion_comp,"['unfold', 'intros', 'split', 'apply', 'intuition', 'eapply', 'try', 'apply', 'apply', 'intuition']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,bisim_sym,"['intros', 'destruct', 'exists', 'auto', 'celim', 'intro', 'split', 'auto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,bisim_refl,"['intro', 'exists', 'auto', 'split', 'intros', 'exists', 'destruct', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,bisim_trans,"['intros', 'destruct', 'destruct', 'exists', 'apply', 'auto', 'exists', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,expand_refl,"['intro', 'exists', 'auto', 'split', 'intros', 'exists', 'destruct', 'auto', 'destruct', 'auto', 'right', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,expand_trans,"['intros', 'destruct', 'destruct', 'exists', 'apply', 'auto', 'exists', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,wexpand_refl,"['intro', 'exists', 'auto', 'split', 'intros', 'exists', 'destruct', 'auto', 'destruct', ""[ right | exists x' ]"", 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Settings.json,wexpand_trans,"['intros', 'destruct', 'destruct', 'exists', 'apply', 'auto', 'exists', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Diagrams.json,diagram_incl,"['intros', 'elim', 'auto', 'intros', 'exists', 'auto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/weak-up-to/Diagrams.json,diagram_reverse,"['intros', 'elim', 'intros', 'exists', 'assumption']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Diagrams.json,diagram_comp,"['intros', 'destruct', 'elim', 'intros', 'elim', 'intros', 'exists', 'auto', 'exists', 'assumption']",0,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Diagrams.json,diagram_union,"['intros', 'destruct', 'elim', 'intros', 'exists', 'assumption']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/weak-up-to/Diagrams.json,diagram_star,"['intros', 'cgen', 'cgen', 'induction', 'intros', 'exists', 'auto', 'elim', 'intros', 'elim', 'intros', 'exists', 'auto', 'apply', 'assumption']",1,0,0,0,2,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Diagrams.json,diagram_plus,"['intros', 'destruct', 'elim', 'intros', 'elim', 'auto', 'intros', 'exists', 'auto', 'apply', 'assumption', 'apply', 'auto']",0,0,1,0,3,4
/mnt/cisk/zmq/dataset/data/weak-up-to/Diagrams.json,diagram_plus_wf_2,"['intros', 'cgen', 'induction', 'intros', 'destruct', 'destar', 'destruct', 'cgen', 'cgen', 'induction', 'intros', 'exact', 'destruct', 'destruct', 'destar', 'elim', 'auto', 'intros', 'destruct', 'exists', 'auto', 'exists', 'auto', 'apply', 'auto', 'elim', 'auto', 'intros', 'elim', 'auto', 'intros', 'exists', 'auto', 'destruct', 'exists', 'auto', 'apply', 'auto', 'destruct', 'exists', 'auto', 'apply', 'auto', 'exists', 'auto', 'exists', 'auto', 'destruct', 'elim', 'auto', 'intros', 'exists', 'auto', 'destruct', 'exists', 'auto', 'apply', 'auto', 'exists', 'auto']",1,0,2,0,3,6
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,divP_is_not_order,"['intros', 'inversion', 'case', '[ intros tmp', 'case', 'clear', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'elim', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,divP_ltT_comp,"['intros', 'case', 'auto', 'intros', 'change', 'apply', 'auto', 'apply', 'auto', 'intros', 'change', 'apply', 'auto', 'case', '[ intros tmp', 'case', 'clear', 'intros', 'auto', 'elim', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,sp_rew,"['auto', 'auto', 'intros', 'unfold', 'change', 'rewrite', 'auto']",1,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,rew_spminusf,"['simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,canonical_spminusf,"['unfold', 'intros', 'apply', 'auto']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_extend,"['intros', 'unfold', 'simpl', 'inversion', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'apply', 'auto', 'change', 'auto']",2,1,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,canonical_spminusf_full,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,canonical_spminusf_full_t,"['unfold', 'intros', 'try', 'inversion', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'apply', 'auto']",2,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_pluspf,"['intros', 'unfold', 'inversion', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,eqptail_spminusf_com,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,eqTerm_spminusf_com,"['intros', 'cut', ""[ intros H'3 | auto ]."", 'unfold', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,eqp_spminusf_com,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_minuspf,"['intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_plusTerm,"['intros', 'unfold', 'apply', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', '[ auto 8 | idtac ].', 'apply', '[ auto 10 | idtac ].', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto', 'inversion', 'auto', 'apply', 'auto', 'inversion', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'inversion', 'auto']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_multTerm,"['intros', 'unfold', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'inversion', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'auto']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_minusTerm_l,"['intros', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_plusTerm_l,"['intros', 'apply', '[ auto | idtac ].', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_minusTerm_r,"['intros', 'try', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', '[ apply (eqp_sym _ _ _ _ _ _ _ _ _ cs n)', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_plusTerm_r,"['intros', 'try', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', 'auto']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,divP_minusTerm_comp,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,spminusf_minusTerm,"['intros', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', '[ auto | auto ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspminus.json,ltP_divP_pX,"['intros', 'case', 'auto', 'intros', 'try', 'change', 'auto', 'apply', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'change', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,inPolySet_imp_canonical,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,not_nil_in_polySet_elm,"['intros', 'elim', 'auto', 'intros', 'red', 'intros', 'inversion']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,not_nil_in_polySet,"['intros', 'red', 'intros', 'lapply', ""[ intros H'3"", 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,inPolySet_is_pX,"['intros', 'elim', 'auto', 'intros', 'exists', 'exists', 'auto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,pO_reduce,"['intros', 'red', 'intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reduce_in_pO,"['intros', 'case', 'simpl', 'auto', 'intros', 'elim', '[ intros a E', 'elim', 'intros', 'inversion', 'auto', 'intros', 'cut', '[ intros Op0 | idtac ].', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Nza | idtac ].', 'cut', 'intros', 'rewrite', 'change', 'apply', 'auto', 'apply', 'auto', 'cut', 'intros', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,1,2,4
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,canonical_reduce,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'cut', '[ intros C1 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reduce_eqp_com,"['intros', 'generalize', 'clear', 'elim', 'auto', 'intros', 'inversion_clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Cp0 | apply canonical_imp_canonical with (a := a)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'inversion_clear', 'inversion_clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reduce_inv,"['intros', 'inversion_clear', 'auto', 'intros', 'elim', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reducetop_sp,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reduce_inv2,"['intros', 'elim', 'auto', 'intros', 'cut', '[ intros C1 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'exists', 'exists', 'split', '[ idtac | split', '[ idtac | split', '[ idtac | idtac ] ] ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Op2 | apply canonical_reduce with (Q := Q) (p := pX a p0) ]', 'auto', 'cut', '[ intros Op3 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'elim', '[ intros x E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'exists', 'exists', 'split', '[ idtac | split', '[ idtac | split ] ]', 'auto', 'apply', '[ auto | apply (eqp_sym _ _ _ _ _ _ _ _ _ cs n) ].', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'cut', '[ intros Z0 | idtac ].', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,mults_eqp_inv,"['intros', 'elim', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion_clear', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion_clear', 'auto', 'intros', 'inversion_clear', 'auto', 'intros', 'change', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reduce_mults_invf,"['intros', 'elim', 'auto', 'simpl', 'intros', 'inversion_clear', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a0) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto', 'generalize', 'inversion_clear', 'clear', 'auto', 'intros', 'cut', '[ intros Op1 | apply inPolySet_imp_canonical with (L := Q) ]', 'auto', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := b) ]', 'auto', 'cut', '[ intros d0 | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reduce_mults,"['intros', 'generalize', 'elim', 'clear', 'auto', 'simpl', 'auto', 'intros', 'cut', '[ intros nZ0 | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,2,2,0,3,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reduce_mults_invr,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,irreducible_inv_px_l,"['unfold', 'intros', 'red', 'intros', 'inversion_clear', 'apply', 'auto', 'inversion_clear', 'auto']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,pO_irreducible,"['unfold', 'auto', 'intros', 'red', 'intros', 'inversion']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,irreducible_eqp_com,"['unfold', 'intros', 'red', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,pickin_is_pX,"['intros', 'elim', 'auto', 'intros', 'exists', 'exists', 'auto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,pick_inv_in,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,pick_inv_eqT_lem,"['intros', 'elim', 'auto', 'intros', 'injection', 'auto', 'intros', 'rewrite', 'auto']",0,0,0,2,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,pick_inv_eqT,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,reducehead_imp_reduce,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,s2p,"['intros', 'elim', 'intros', 'exact', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,In_inp_inPolySet,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'intros', 'elim', ""[ intros H'1"", 'rewrite', 'clear', 'clear', 'auto', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'elim', 'auto', 'intros', 'change', 'apply']",0,2,0,0,1,4
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,in_inPolySet,"['intros', 'elim', 'auto', 'intros', 'inversion', 'simpl', 'intros', 'elim', ""[ intros H'1"", 'rewrite', 'clear', 'clear', 'auto', 'case', 'simpl', 'intros', 'case', 'auto', 'intros', 'elim', 'auto', 'intros', 'change', 'apply']",1,2,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,inPolySet_inv0,"['intros', 'elim', 'auto', 'intros', 'red', 'intros', 'inversion']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,inPolySet_inv1,"['intros', 'elim', 'auto', 'intros', 'exists', 'split', 'simpl', 'auto', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'exists', 'split', 'simpl', 'auto']",0,1,0,0,1,4
/mnt/cisk/zmq/dataset/data/buchberger/Preduce.json,Incl_inp_inPolySet,"['intros', 'auto', 'elim', '[ intros q E', 'elim', 'intros', 'clear', 'auto', 'rewrite', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto']",0,0,1,2,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,left_prefix,"['simple', 'simple', 'simpl', 'intros', 'inversion_clear', 'simpl', 'intros', 'apply', 'intros', 'simpl', 'intros', 'inversion_clear', 'apply', 'auto', 'apply', 'apply', 'auto']",4,1,3,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,right_prefix,"['intros', 'generalize', 'elim', 'simpl', 'right', 'exists', 'auto', 'intros', 'inversion', 'left', 'apply', 'left', 'apply', 'auto', 'generalize', 'simple', 'left', 'apply', 'auto', 'simple', 'simple', 'intros', 'rewrite', 'right', 'exists', 'auto']",2,0,1,1,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,desc_prefix,"['intros', 'inversion', 'generalize', 'simple', 'cut', 'auto', 'intro', 'generalize', 'simple', 'simple', 'intros', 'rewrite', 'auto', 'discriminate', 'generalize', 'simple', 'intros', 'rewrite', 'auto']",1,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,desc_tail,"['intro', 'apply', 'intros', 'inversion', 'cut', 'auto', 'intro', 'generalize', 'intro', 'generalize', 'simple', 'intros', 'generalize', 'simple', 'intros', 'generalize', 'rewrite', 'rewrite', 'intro', 'apply', 'auto', 'intros', 'inversion', 'generalize', 'intro', 'elim', 'generalize', 'generalize', 'simple', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'apply', 'auto', 'apply', 'generalize', 'rewrite', 'intro', 'generalize', 'simple', 'intros', 'generalize', 'generalize', 'intro', 'generalize', 'rewrite', 'intro', 'generalize', 'simple', 'intros', 'rewrite', 'rewrite', 'auto']",4,0,2,3,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,dist_aux,"['intros', 'elim', 'intros', 'cut', 'auto', 'intro', 'generalize', 'simple', 'intros', 'rewrite', 'rewrite', 'split', 'apply', 'intros', 'cut', 'auto', 'intros', 'generalize', 'simple', 'simple', 'intros', 'rewrite', 'rewrite', 'split', 'apply', 'apply', 'simple', 'intros', 'rewrite', 'rewrite', 'split', 'apply', 'apply', 'do', 'intros', 'do', 'generalize', 'apply', 'intro', 'generalize', 'simple', 'simple', 'split', 'apply', 'auto', 'apply', 'do', 'generalize', 'apply', 'simpl', 'split', 'generalize', 'simple', 'simple', 'auto', 'apply', 'do', 'generalize', 'simple', 'generalize', 'simple', 'intro', 'generalize', 'simple', 'intros', 'generalize', 'simple', 'intros', 'rewrite', 'rewrite', 'generalize', 'generalize', 'intro', 'rewrite', 'intro', 'generalize', 'simple', 'split', 'auto', 'generalize', 'rewrite', 'intro', 'apply', 'auto']",4,1,3,3,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,dist_Desc_concat,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,desc_end,"['intros', 'case', 'simpl', 'simple', 'intros', 'inversion', 'auto', 'inversion', 'simple', 'generalize', 'intros', 'rewrite', 'intros', 'generalize', 'intro', 'inversion', 'apply', 'auto', 'inversion']",3,1,1,1,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,ltl_unit,"['intro', 'case', 'intros', 'apply', 'simpl', 'intros', 'inversion_clear', 'apply', 'auto', 'inversion_clear']",2,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,acc_app,"['intros', 'apply', 'auto', 'unfold', 'simpl', 'auto']",1,2,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Relation_Operators_compat.json,wf_lex_exp,"['unfold', 'simple', 'intros', 'apply', 'simple', 'unfold', 'simpl', 'apply', 'intros', 'inversion_clear', 'intro', 'generalize', 'intros', 'apply', 'intro', 'intros', 'intros', 'generalize', 'simple', 'intro', 'apply', 'simple', 'intro', 'simple', 'clear', 'intro', 'generalize', 'clear', 'rewrite', 'apply', 'intros', 'generalize', 'intros', 'generalize', 'clear', 'rewrite', 'intro', 'apply', 'simple', 'unfold', 'simpl', 'intros', 'intros', 'apply', 'auto', 'intros', 'generalize', 'simple', 'intros', 'generalize', 'intros', 'generalize', 'rewrite', 'intro', 'generalize', 'intros', 'generalize', 'intro', 'generalize', 'simple', 'intros', 'generalize', 'intro', 'generalize', 'generalize', 'intros', 'generalize', 'intro', 'apply', 'simple', 'unfold', 'simpl', 'intros', 'apply', 'auto']",6,4,2,1,1,1
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,eqA_A0,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,plusA_eqA_comp_l,"['intros', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,plusA_eqA_comp_r,"['intros', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,eqA0_left,"['intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,eqA0_right,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,invA0,"['apply', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,invA0_comp,"['intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,invA0_inv,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,multA_eqA_comp_l,"['intros', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,multA_eqA_comp_r,"['intros', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,multA_dist_r,"['intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,multA_A0_r,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,multA_A1_r,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,multA_invA_com_l,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,multA_invA_com_r,"['intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,divA_multA_comp_l,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,invA_is_invA1,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,divA_A0_l,"['intros', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,A_sep,"['intros', 'case', 'auto', 'case', 'auto', 'intros', 'case', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/moreCoefStructure.json,divA_A1,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/LexiOrder.json,orderc_dec,"['intros', 'elim', 'auto', 'intro', 'rewrite', 'auto', 'intros', 'try', 'rewrite', 'case', 'intro', 'case', 'intro', 'left', 'left', 'auto', 'intro', 'left', 'right', 'auto', 'intro', 'elim', ""[ intro H'1"", 'elim', 'intro', 'auto', 'left', 'right', 'auto', 'rewrite', 'auto', 'right', 'rewrite', 'rewrite', 'auto', 'left', 'left', 'rewrite', 'auto']",0,0,0,3,2,3
/mnt/cisk/zmq/dataset/data/buchberger/LexiOrder.json,degc,"['intros', 'elim', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/LexiOrder.json,total_orderc_dec,"['intros', 'apply', 'intros', 'apply', 'intros', 'case', 'auto', 'intro', 'case', 'auto', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'intro', 'case', 'auto', 'intro', 'case', 'auto', 'rewrite', 'rewrite', 'auto']",2,0,1,2,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP,"['intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm,"['intros', 'case', 'intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_refl,"['red', 'intros', 'case', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_sym,"['red', 'intros', 'case', 'case', 'simpl', 'intuition', 'apply', 'auto']",0,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_trans,"['red', 'intros', 'case', 'case', 'case', 'simpl', 'intuition', 'apply', 'auto', 'rewrite', 'auto']",0,1,1,1,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,T2M,"['intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqT_refl,"['red', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqT_sym,"['red', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqT_trans,"['red', 'unfold', 'intros', 'rewrite', 'auto']",2,1,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_imp_eqT,"['intros', 'case', 'case', 'simpl', 'intuition']",0,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_dec,"['intros', 'case', 'case', 'simpl', 'intros', 'case', 'intros', 'auto', 'case', 'intros', 'auto', 'right', 'red', 'intros', 'elim', 'intros', 'clear', 'auto', 'right', 'red', 'intros', 'elim', 'intros', 'clear', 'auto']",1,2,0,0,0,4
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqT_zerop_is_eqTerm,"['intros', 'case', 'case', 'simpl', 'auto', 'intuition', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_dec,"['intros', 'case', 'simpl', 'intros', 'apply', 'auto']",2,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_comp_eqTerm,"['intros', 'case', 'case', 'simpl', 'auto', 'intuition', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,nzeroP_comp_eqTerm,"['intros', 'red', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm,"['intros', 'case', 'intros', 'intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_plusTermr,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_plusTerml,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm_comp_l,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intuition']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm_comp_r,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intuition']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm_com,"['intros', 'case', 'case', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm_eqT1,"['intros', 'case', 'case', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm_eqT2,"['intros', 'case', 'case', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm_assoc,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intuition', 'apply', 'apply']",0,2,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_plusTerm_comp,"['intros', 'case', 'case', 'case', 'case', 'simpl', 'auto', 'intuition']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm,"['intros', 'case', 'intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_multTerm_l,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_multTerm_r,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm_plusTerm_dist_l,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm_plusTerm_dist_r,"['intros', 'case', 'case', 'case', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm_eqT,"['intros', 'case', 'case', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'rewrite', 'rewrite', 'auto']",0,2,0,3,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm_assoc,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm_com,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply']",0,2,0,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_multTerm_comp,"['intros', 'case', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'intros', 'case', 'intros', 'case', 'intros', 'split', 'auto', 'rewrite', 'rewrite', 'auto']",0,2,0,2,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,invTerm,"['intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,plusTerm_invTerm_zeroP,"['intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto']",1,2,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_invTerm_zeroP,"['intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,2,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,invTerm_invol,"['intros', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,nZero_invTerm_nZero,"['intros', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,T1,"['exact', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,T1_nz,"['simpl', 'auto', 'apply']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,T1_multTerm_l,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'auto', 'split', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'unfold', 'apply']",0,2,4,1,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,T1_multTerm_r,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'unfold', 'apply']",0,2,4,1,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,nZero_invTerm_T1,"['apply', 'auto', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,mult_invTerm_com,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,2,2,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,mult_invTerm_com_r,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,2,2,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_invTerm_comp,"['intros', 'case', 'case', 'simpl', 'auto', 'intuition']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,invTerm_eqT,"['intros', 'case', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,T1_eqT,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'case', 'intros', 'auto', 'rewrite', 'auto', 'unfold', 'simpl', 'apply', 'unfold', 'apply']",0,4,2,1,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_T1_eqT,"['intros', 'case', 'simpl', 'auto', 'intuition']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,minusTerm,"['intros', 'case', 'intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,eqTerm_minusTerm_plusTerm_invTerm,"['intros', 'case', 'case', 'simpl', 'auto', 'split', 'auto', 'apply', 'auto']",0,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,minusTerm_eqT,"['intros', 'case', 'case', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,zeroP_minusTerm,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm_zeroP_div,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,multTerm_minusTerm_dist_l,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Term.json,nzeroP_multTerm,"['intros', 'red', 'intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,Rminus,"['intros', 'elim', 'clear', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,minuspf_in,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'auto', 'intros', 'elim', ""[ intros H'4"", 'rewrite', 'clear', 'clear', 'change', 'rewrite', 'simpl', 'auto', 'case', 'intros', '[ case test', 'clear', 'intros', 'absurd', 'auto', 'apply', 'auto', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'elim', 'auto', 'intros', 'elim', ""[ intros H'6"", 'rewrite', 'clear', 'clear', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'auto', 'change', 'rewrite', 'simpl', 'auto', 'right', 'auto', 'apply', 'auto', 'apply', 'auto', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'elim', 'auto', 'intros', 'elim', ""[ intros H'6"", 'rewrite', 'clear', 'clear', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'auto']",1,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,minus_is_reduce,"['intros', 'elim', 'intros', 'elim', 'auto', 'intros', 'elim', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'simpl', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto', 'apply', 'auto', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'elim', 'auto', 'intros', 'elim', ""[ intros H'4"", 'rewrite', 'clear', 'clear', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'auto']",1,2,1,1,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,divPp,"['intros', 'elim', 'clear', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,divpf,"['intros', 'elim', 'clear', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,divpf_canonical,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'cut', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,canonical_Rminus,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ idtac | apply canonical_imp_canonical with (a := a)', 'auto', 'auto', 'cut', '[ idtac | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto']",0,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,Rminus_in,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q)', 'auto', 'elim', 'intros', 'clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto']",0,1,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,Rminus_is_reduceplus,"['intros', 'elim', 'clear', 'simpl', 'intros', 'auto', 'apply', 'auto', 'intros', 'cut', '[ intros Cr1 | apply canonical_imp_canonical with (a := a0)', 'auto', 'cut', '[ intros Caq | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'elim', 'intros', 'clear', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,Dmult,"['intros', 'elim', 'clear', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,canonical_Dmult,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ idtac | apply canonical_imp_canonical with (a := a0)', 'auto', 'cut', 'auto', 'apply', 'auto']",0,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,divp_is_multTerm,"['intros', 'inversion', 'intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a1) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p1) ]', 'auto', 'apply', 'auto', 'cut', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'change', 'auto', 'apply', 'apply', 'auto']",1,1,2,1,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,divpf_comp,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := ma)', 'auto', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := mb)', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p0)', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q0)', 'auto', 'auto']",0,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,Dmult_is_mulpf,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a0)', 'auto', 'cut', '[ intros Op1 | auto ].', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := l)', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,sp_Rminus,"['intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p)', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q)', 'auto', 'auto', 'apply', 'apply', 'auto', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto']",0,1,2,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,minuspf_spoly_in,"['intros', 'pattern', 'apply', 'simpl', 'intros', 'auto', 'elim', 'auto', 'rewrite', 'auto', 'rewrite', 'simpl', 'auto', 'right', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'simpl', 'auto', 'elim', 'intros', 'clear', 'auto', 'right', 'apply', 'auto', 'apply', 'auto', 'elim', ""[ intros H'4 H'5 | idtac ]"", 'auto', 'elim', ""[ intros H'6 H'7 | idtac ]"", 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p0)', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q0)', 'auto', 'absurd', 'auto', 'apply', 'auto', 'case', 'intros', '[ case test', 'clear', 'intros', 'apply', 'auto', 'absurd', 'auto', 'apply', 'auto', 'cut', ""[ intros H'8"", 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,4,1,1,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,in_minuspf_spoly_in,"['intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := b) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p) ]', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q) ]', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,divPp_mults1,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,spoly_Reduce,"['intros', 'cut', '[ intros nZb | apply canonical_nzeroP with (ltM := ltM) (p := q)', 'apply', 'auto', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Op1 | apply inPolySet_imp_canonical with (L := Q) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p) ]', 'auto', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := b) ]', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'red', 'intros', 'apply', 'auto', 'apply', 'auto', 'auto']",1,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,spoly_reduceplus_pO,"['intros', 'elim', 'auto', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a1) ]', 'auto', 'cut', '[ intros Op1 | apply inPolySet_imp_canonical with (L := Q) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p1) ]', 'auto', 'apply', 'auto', 'generalize', 'case', 'clear', 'intros', 'elim', 'auto', 'intros', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := b1) ]', 'auto', 'cut', '[ intros nZb1 | apply canonical_nzeroP with (ltM := ltM) (p := q1) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Eq0 | auto ].', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,1,2,0,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,fspoly_Reduceplus_pO,"['intros', 'cut', '[ intros Op0 | apply inPolySet_imp_canonical with (L := Q) ]', 'auto', 'cut', '[ intros Op1 | apply inPolySet_imp_canonical with (L := Q) ]', 'auto', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Op3 | apply canonical_imp_canonical with (a := b) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p) ]', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcrit.json,spoly_Reducestar_ppc,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_canonical,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_comp,"['intros', 'elim', 'auto', 'intros', 'inversion', 'auto', 'intros', 'cut', '[ intros C0 | idtac ].', 'cut', '[ intros C1 | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_pluspf,"['intros', 'elim', 'auto', 'intros', 'cut', '[ intros Op1 | apply CombLinear_canonical with (Q := Q)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'cut', '[ intros C0 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'cut', '[ intros Op1 | apply CombLinear_canonical with (Q := Q)', 'auto', 'cut', '[ intros Op2 | apply CombLinear_canonical with (Q := Q)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_mults1,"['intros', 'elim', 'auto', 'intros', 'cut', '[ intros C0 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'cut', '[ intros Op1 | apply CombLinear_canonical with (Q := Q)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_minuspf,"['intros', 'try', 'cut', '[ intros Op1 | apply CombLinear_canonical with (Q := Q)', 'auto', 'cut', '[ intros Op2 | apply CombLinear_canonical with (Q := Q)', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_id,"['intros', 'cut', '[ intros C0 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_spoly,"['intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := a0) ]', 'auto', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros nZa | apply (canonical_nzeroP A A0 eqA n ltM) with (p := l)', 'auto', 'cut', '[ intros nZa0 | apply (canonical_nzeroP A A0 eqA n ltM) with (p := l0)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto']",0,2,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_reduce,"['intros', 'case', 'auto', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'apply', 'auto', 'apply', 'cut', ""[ intros Op1 | apply canonical_reduce with (1 := cs) (3 := H'0) ]"", 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_reduceplus,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_reducestar,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,Reducestar_pO_imp_CombLinear,"['intros', 'inversion', 'auto', 'apply', 'auto', 'rewrite', 'auto']",0,0,1,1,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,Grobner_imp_SpolyQ,"['intros', 'elim', 'intros', 'apply', 'auto', 'intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,SpolyQ_imp_ConfluentReduce,"['intros', 'apply', 'intros', 'change', 'apply', 'auto']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,ConfluentReduce_imp_Grobner,"['intros', 'elim', 'intros', 'apply', 'auto', 'intros', 'generalize', 'clear', 'elim', 'intros', 'rewrite', 'auto', 'intros', 'cut', '[ intros Op0 | apply inPolySet_imp_canonical with (L := Q) ]', 'auto', 'cut', '[ intros Op2 | apply CombLinear_canonical with (Q := Q) ]', 'auto', 'cut', '[ intros Op1 | idtac ].', 'cut', '[ intros Op2b | idtac ]', 'auto', 'cut', ""[ intros H'11 | apply reducestar_in_pO with (1 := cs) ]"", 'auto', 'elim', 'auto', 'intros', 'elim', 'intros', 'clear', 'elim', 'auto', 'intros', 'lapply', ""[ intros H'12"", 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,2,2,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_incl,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduce_cb,"['intros', 'cut', ""[ intros Op1 | apply canonical_reduce with (1 := cs) (3 := H')"", 'auto', 'case', 'auto', '(intros c E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduceplus_cb,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reducestar_cb,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduce_cb1,"['intros', 'case', 'simpl', 'intros', 'cut', ""[ intros Op1 | apply canonical_reduce with (1 := cs) (3 := H') ]"", 'auto', 'case', 'auto', '(intros c1 E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'generalize', 'case', 'auto', 'intros', 'inversion', 'auto', 'intros', 'change', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,2,1,0,2,4
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,CombLinear_compo,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduceplus_cb1_lem,"['intros', 'elim', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'rewrite', 'auto', 'generalize', 'case', 'auto', 'intros', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'intros', 'case', 'auto', 'intros', 'cut', 'intros', 'apply', 'auto', 'intros', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'cut', 'intros', 'apply', 'auto', 'intros', 'inversion', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'elim', 'auto']",1,2,1,1,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduceplus_cb1,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reducestar_cb1,"['intros', 'inversion', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduce_cb2,"['intros', 'case', 'case', 'simpl', 'intros', 'case', 'auto', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'apply', 'auto', 'apply', 'auto', 'generalize', 'case', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,2,1,0,2,4
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduceplus_cb2_lem,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'rewrite', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'intros', 'lapply', ""[ intros H'5"", 'lapply', ""[ intros H'7"", 'clear', 'auto', 'cut', 'intros', 'lapply', 'simpl', ""[ intros H'9 | idtac ]"", 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'red', 'simpl', 'auto', 'intros', 'elim', 'auto', 'apply', 'auto', 'apply', 'auto']",1,3,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reduceplus_cb2,"['intros', 'apply', 'auto', 'case', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pcomb.json,reducestar_cb2,"['intros', 'inversion', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,zerop_nf_cb,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,redacc,"['intros', 'elim', 'intros', 'exact', 'intros', 'apply', 'intros', 'case', 'intros', 'exact', 'exact', 'Defined']",2,0,3,0,0,3
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,redacc_cb,"['intros', 'elim', 'auto', 'simpl', 'auto', 'simpl', 'unfold', 'intros', 'case', 'intros', 'apply', 'auto', 'simpl', 'intros', 'case', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",4,3,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,red_cb,"['unfold', 'intros', 'generalize', 'simpl', 'auto', 'rewrite', 'auto']",3,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,cb_red,"['intros', 'lapply', ""[ intros H'3"", 'generalize', 'simpl', 'auto', 'rewrite', 'auto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,cb_red_cb1,"['intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,cb_red_cb2,"['intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,redacc_divp,"['intros', 'elim', 'simpl', 'auto', 'intros', 'exists', 'split', 'auto', 'unfold', 'intros', 'case', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'case', 'simpl', 'auto', 'intros', 'lapply', ""[ intros H'5"", 'lapply', ""[ intros H'6"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'lapply', ""[ intros H'8"", 'lapply', ""[ intros H'9"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'intros', 'lapply', ""[ intros H'5"", 'lapply', ""[ intros H'6"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'simpl', 'case', ""[ intros H'4"", 'clear', 'clear', 'exists', 'split', '[ idtac | split ]', 'auto', 'lapply', ""[ intros H'8"", 'lapply', ""[ intros H'9"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', '[ idtac | split ]', 'auto', 'case', 'auto', 'simpl', 'auto', 'intros', 'case', ""[ intros H'9"", 'clear', 'clear', 'auto', 'apply', 'auto', 'case', 'auto', 'rewrite', 'auto', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'lapply', ""[ intros H'6"", 'lapply', ""[ intros H'7"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', 'auto', 'case', 'auto', 'simpl', 'auto', 'intros', 'case', 'intros', 'auto', 'intros', 'exists', 'split', '[ right | idtac ]', 'auto']",2,2,1,1,6,5
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,red_divp,"['intros', 'lapply', 'auto', 'simpl', 'auto', 'rewrite', 'auto', 'rewrite', 'auto']",0,1,1,1,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Fred.json,red_grobner,"['intros', 'apply', 'auto', 'intros', 'lapply', ""[ intros H'2"", 'lapply', ""[ intros H'4 | idtac ] | idtac ]"", 'auto', 'case', 'auto', 'intros', 'case', 'intros', 'clear', 'right', 'apply', 'auto', 'intros', 'lapply', ""[ intros H'7"", 'lapply', ""[ intros H'8"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', 'auto', 'apply', 'auto']",1,0,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,stable_refl,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,stable_trans,"['intros', 'inversion', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,stable_sym,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,Cb_stable,"['intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,in_incl,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,reds_com,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,getRes,"['intros', 'case', 'auto', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,addRes,"['intros', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,slice,"['intros', 'elim', 'clear', 'case', 'intros', 'exact', 'intros', 'exact', 'intros', 'case', 'intros', 'exact', 'intros', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,slicef,"['intros', 'case', 'auto', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,slicef_incl,"['intros', 'elim', 'simpl', 'auto', 'unfold', 'simpl', 'auto', 'case', 'intros', 'apply', 'auto', 'intros', 'unfold', 'simpl', 'case', 'auto', 'case', 'auto', 'intros', 'case', 'simpl', 'auto']",2,3,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,slice_inv,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'intros', 'case', 'simpl', 'auto', 'case', 'auto', 'intros', 'elim', ""[ intros H'3"", 'rewrite', 'clear', 'clear', 'auto', 'case', 'simpl', 'auto', 'intros', 'elim', ""[ intros H'3"", 'rewrite', 'clear', 'clear', 'auto', 'elim', ""[ intros H'5"", 'try', 'auto', 'intros', 'elim', ""[ intros H'3"", 'rewrite', 'clear', 'clear', 'auto', 'elim', ""[ intros H'5"", 'try', 'auto']",0,2,0,0,1,4
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,slice_cons,"['intros', 'elim', 'simpl', 'case', 'auto', 'intros', 'inversion', 'intros', 'simpl', 'case', 'auto', 'intros', 'inversion', 'auto', 'left', 'exists', 'split', 'simpl', 'auto', 'case', 'auto', 'generalize', 'clear', 'case', 'simpl', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'elim', ""[ intros H'5"", 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'left', 'exists', 'split', 'simpl', 'auto']",1,2,0,0,1,5
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,Tl,"['exact', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,wf_Tl,"['apply', 'auto', 'generalize', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,slice_Tl,"['intros', 'elim', 'simpl', 'auto', 'unfold', 'simpl', 'auto', 'case', 'unfold', 'simpl', 'auto', 'intros', 'unfold', 'simpl', 'auto', 'case', 'auto', 'unfold', 'simpl', 'auto', 'case', 'auto', 'intros', 'case', 'simpl', 'auto', 'unfold', 'simpl', 'auto', 'unfold', 'simpl', 'auto', 'unfold', 'intros', 'case', 'simpl', 'auto']",3,3,0,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genPcP_spolyp1,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'auto', 'left', 'exists', 'split', 'simpl', 'auto', 'elim', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'rewrite', 'clear', 'left', 'exists', 'split', 'auto', 'right', 'try', 'generalize', 'unfold', 'rewrite', 'auto', 'intros', 'elim', ""[ intros H'5"", 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'auto', 'left', 'exists', 'split', '[ right | idtac ]', 'auto', 'generalize', 'unfold', 'rewrite', 'auto']",0,1,0,3,2,4
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genPcP_incl,"['intros', 'elim', 'simpl', 'auto', 'intros', 'unfold', 'simpl', 'auto']",1,2,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,spolyp_cons_genPcP0,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'elim', 'intros', 'cut', '[ intros incl0 | generalize (slicef_incl i a L1)', 'unfold', 'rewrite', 'auto', 'elim', ""[ intros H'5"", 'rewrite', 'clear', 'clear', 'auto', 'exists', 'split', '[ idtac | split', '[ left | idtac ] ]', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'elim', ""[ intros H'10 | intros H'10 | idtac ]"", 'auto', 'rewrite', 'simpl', 'auto', 'lapply', ""[ intros H'3"", 'elim', '[ intros c E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'14"", 'clear', 'clear', 'auto', 'exists', 'split', '[ right | idtac ]', 'auto', 'exists', 'split', '[ idtac | split', '[ right | idtac ] ]', 'auto', 'exists', 'split', '[ idtac | split ]', 'auto', 'intros', 'cut', '[ intros incl0 | generalize (slicef_incl i a L1)', 'unfold', 'rewrite', 'auto', 'elim', ""[ intros H'5"", 'rewrite', 'clear', 'clear', 'auto', 'elim', ""[ intros H'8"", 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'lapply', ""[ intros H'3"", 'elim', '[ intros c0 E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'15"", 'clear', 'clear', 'auto', 'exists', 'split', '[ idtac | split', '[ left | idtac ] ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'exists', 'split', '[ idtac | split', '[ right | idtac ] ]', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'exists', 'split', '[ idtac | split', '[ right | idtac ] ]', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'elim', ""[ intros H'10 | intros H'10 | idtac ]"", 'auto', 'rewrite', 'simpl', 'auto', 'lapply', ""[ intros H'3"", 'elim', '[ intros c E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'14"", 'clear', 'clear', 'auto', 'exists', 'split', '[ right | idtac ]', 'auto', 'exists', 'split', '[ idtac | split', '[ right | idtac ] ]', 'auto', 'elim', ""[ intros H'8"", 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'lapply', ""[ intros H'3"", 'elim', '[ intros c0 E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'16"", 'clear', 'clear', 'auto', 'exists', 'split', '[ idtac | split', '[ left | idtac ] ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'exists', 'split', '[ idtac | split', '[ right | idtac ] ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'exists', 'split', '[ idtac | split', '[ right | idtac ] ]', 'auto']",0,2,1,2,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,spolyp_cons_genPcP,"['intros', 'lapply', ""[ intros H'7"", 'lapply', ""[ intros H'8"", 'elim', '[ intros c E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'16"", 'clear', 'clear', 'auto', 'exists', 'split', '[ idtac | split', '[ left | idtac ] ]', 'auto', 'exists', 'split', '[ idtac | split', '[ right | idtac ] ]', 'auto', 'apply', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,Cb_genPcP,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'right', 'generalize', 'unfold', 'rewrite', 'auto', 'intros', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'generalize', 'unfold', 'rewrite', 'auto']",1,1,1,3,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genPcPf0,"['intros', 'pattern', 'apply', 'clear', 'auto', 'try', 'intros', 'case', 'intros', 'exists', 'auto', 'intros', 'generalize', 'pattern', 'case', 'intros', 'lapply', ""[ intros H'1"", 'elim', 'intros', 'auto', 'exists', 'auto', 'apply', 'auto', 'generalize', 'unfold', 'rewrite', 'simpl', 'auto', 'intros', 'lapply', ""[ intros H'1"", 'elim', 'intros', 'auto', 'exists', 'auto', 'apply', 'auto', 'generalize', 'unfold', 'rewrite', 'simpl', 'auto']",1,2,1,1,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genPcPf,"['intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,Cb_genPcPf,"['intros', 'unfold', 'case', 'intros', 'apply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genPcPf_incl,"['intros', 'unfold', 'case', 'intros', 'apply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,spolyp_addEnd_genPcPf,"['intros', 'unfold', 'case', 'intros', 'apply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genOCPf,"['intros', 'elim', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genOCPf_stable,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto']",2,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,incl_addEnd1,"['unfold', 'simpl', 'auto', 'intros', 'case', ""[ intros H'1"", 'rewrite', 'clear', 'clear', 'auto']",0,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,ObuchPincl,"['intros', 'elim', 'simpl', 'auto', 'intros', 'try', 'apply', 'simpl', 'auto', 'apply', 'auto']",0,2,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,ObuchPred,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,ObuchQred,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'intros', 'elim', ""[ intros H'4"", 'rewrite', 'clear', 'clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'unfold', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'elim', ""[ intros H'4"", 'rewrite', 'clear', 'clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,OBuch_Stable,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,lem_redIn_nil,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'apply', 'auto', 'intros', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto']",1,0,1,4,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,redIn_nil,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,lem_redln_cons,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'rewrite', 'elim', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,2,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,redln_cons,"['intros', 'try', 'apply', 'auto']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,redInclP,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,redInInclQ,"['intros', 'elim', 'auto', 'intros', 'try', 'apply', 'auto', 'intros', 'try', 'apply', 'auto']",0,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,redInclR,"['intros', 'elim', 'simpl', 'auto', 'intros', 'try', 'apply', 'auto', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto']",1,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,lem_redln_cons_gen,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'intros', 'rewrite', 'elim', 'auto', 'intros', 'rewrite', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,3,1,2,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,redln_cons_gen,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,red_gen_in,"['intros', 'lapply', ""[ intros H'5"", 'elim', '[ intros c E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'16"", 'clear', 'clear', 'auto', 'apply', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,2,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,OBuch_Inv,"['intros', 'elim', 'simpl', 'auto', 'intros', 'try', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'case', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'case', 'intros', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'apply', 'auto', 'intros', 'apply', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,2,2,3,4,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,addEnd_incl,"['unfold', 'simpl', 'auto', 'intros', 'case', 'auto']",0,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,genOCp_redln,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', ""[ intros H'3"", 'rewrite', 'clear', 'clear', 'auto', 'elim', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'case', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'case', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'lapply', ""[ intros H'4"", 'elim', '[ intros c E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'15"", 'clear', 'clear', 'auto', 'apply', 'auto', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'apply', 'auto', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'case', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'case', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'lapply', ""[ intros H'4"", 'elim', '[ intros c E', 'elim', 'intros', 'elim', 'intros', 'elim', ""[ intros H'15"", 'clear', 'clear', 'auto', 'apply', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'apply', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,OBuch_Stable_f,"['intros', 'try', 'apply', 'auto', 'intros', 'try', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,OBuch_Inv_f,"['intros', 'try', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,Fl,"['unfold', 'simpl', 'intros', 'exact', 'Defined']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,wf_Fl,"['unfold', 'simpl', 'intros', 'generalize', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,wf_Co,"['unfold', 'apply', 'apply', 'exact']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,wf_RL,"['apply', 'auto', 'try']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,pbuchf,"['intros', 'pattern', 'apply', 'try', 'intros', 'elim', 'intros', 'case', 'simpl', 'intros', 'exists', 'auto', 'intros', 'apply', 'intros', 'case', 'intros', 'elim', 'simpl', '[ intros R E | idtac ]', 'auto', 'exists', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'red', 'unfold', 'unfold', 'apply', 'auto', 'red', 'red', 'simpl', 'auto', 'elim', 'simpl', '[ intros R E0', 'try', 'exists', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'red', 'unfold', 'unfold', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'Defined']",3,5,3,1,4,5
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,strip,"['intros', 'case', 'intros', 'try', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,pbuchf_Stable,"['simpl', 'intros', 'try', 'apply', 'auto', 'rewrite', 'case', 'simpl', 'auto']",1,3,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,pbuchf_Inv,"['intros', 'simpl', 'apply', 'auto', 'rewrite', 'simpl', 'auto', 'case', 'simpl', 'auto']",1,4,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,buch,"['intros', 'exact', 'Defined']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,buch_Stable,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,buch_reds,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,reds_SpolyQ,"['intros', 'elim', 'auto', 'intros', 'cut', 'auto', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'inversion', 'apply', 'auto', 'apply', 'auto', 'intros', 'case', 'case', 'case', 'simpl', 'intros', 'case', 'simpl', 'auto', 'intros', 'elim', 'intros', 'case', 'simpl', 'intros', 'elim', 'intros', 'case', 'simpl', 'intros', 'elim', 'intros', 'change', 'apply', 'auto', 'change', 'apply', 'simpl', 'auto', 'red', 'intros', 'inversion']",1,5,1,0,2,5
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,imp_in,"['intros', 'elim', 'auto', 'intros', 'exists', 'split', 'auto', 'simpl', 'auto', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto']",0,1,0,0,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,reds_SpolyQ1,"['intros', 'apply', 'auto', 'intros', 'elim', '[ intros b E', 'elim', 'intros', 'clear', 'auto', 'rewrite', 'elim', '[ intros b0 E', 'elim', 'intros', 'clear', 'auto', 'rewrite', 'apply', 'auto']",1,0,1,1,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,buch_spolyQ,"['intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Buch.json,buch_Grobner,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/LetP.json,LetP,"['intros', 'apply', 'auto', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_eqp_com,"['intros', 'generalize', 'clear', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_trans,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,canonical_reduceplus,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,order_reduceplus,"['intros', 'elim', 'auto', 'intros', 'left', 'try', 'elim', ""[ intros H'5"", 'try', 'clear', 'clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_skip,"['intros', 'generalize', 'clear', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduce_imp_reduceplus,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,pO_reduceplus,"['intros', 'inversion', 'auto', 'inversion', 'auto', 'case', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,rep_plus_reduce,"['intros', 'pattern', 'apply', 'intros', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros C1 | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', '[ intros nZ1 | apply canonical_nzeroP with (ltM := ltM) (p := p0)', 'auto', 'cut', '[ intros nZ2 | apply canonical_nzeroP with (ltM := ltM) (p := q0)', 'auto', 'inversion', 'cut', '[ intros C2 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'cut', '[ intros C3 | apply canonical_imp_canonical with (a := b0)', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'apply', 'auto', 'cut', '[ intros eqb | idtac ].', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'elim', '[ intros p2 E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'apply', 'auto', '(apply (eqTerm_sym _ _ _ _ _ _ _ _ _ cs n)', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', ""[ intros H'5 | intros H'5 | idtac | idtac ]"", 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', ""[ intros H'5 | intros H'5 | idtac | idtac ]"", 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros C1 | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', '[ intros nZ1 | apply canonical_nzeroP with (ltM := ltM) (p := p0)', 'auto', 'cut', '[ intros nZ2 | apply canonical_nzeroP with (ltM := ltM) (p := q0)', 'auto', 'inversion_clear', 'cut', '[ intros C2 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'cut', '[ intros C3 | apply canonical_imp_canonical with (a := b0)', 'auto', 'cut', '[ intros nZ3 | apply canonical_nzeroP with (ltM := ltM) (p := q1)', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'elim', '[ intros p2 E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', ""[ intros H'14 | intros H'14 | idtac | idtac ]"", 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', ""[ intros H'14 | intros H'14 | idtac | idtac ]"", 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros C1 | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', '[ intros nZ1 | apply canonical_nzeroP with (ltM := ltM) (p := p0)', 'auto', 'cut', '[ intros nZ2 | apply canonical_nzeroP with (ltM := ltM) (p := q0)', 'auto', 'case', 'intros', 'elim', '[ intros p1 E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'inversion', 'cut', '[ intros C2 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'cut', '[ intros C3 | apply canonical_imp_canonical with (a := b0)', 'auto', 'cut', '[ intros div0 | idtac ].', 'cut', '[ intros div1 | idtac ].', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'elim', '[ intros p2 E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto']",1,0,3,1,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_mults,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_mults_invr_lem,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_mults_invr,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_mults_invf0,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduceplus_mults_inv,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,rep_minus_reduce,"['intros', 'elim', '[ intros p1 E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'cut', '[ intros Cp1 | idtac ].', 'cut', '[ intros Cq1 | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,rep_plus_zero_reduce,"['intros', 'elim', 'intros', 'exists', 'split', 'auto', 'apply', 'auto', 'cut', '[ intros Cx | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'elim', '[ intros p1 E', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'try', 'clear', 'auto', 'lapply', ""[ intros H'8"", 'elim', '[ intros r1 E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,red_plus_zero_reduce,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,red_minus_zero_reduce,"['intros', 'elim', '[ intros r1 E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,reduce_plus_top,"['intros', 'elim', 'auto', 'intros', 'exists', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'change', 'auto', 'clear', 'intros', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros C1 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'cut', '[ intros C2 | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', '[ intros C3 | apply canonical_imp_canonical with (a := c)', 'auto', 'cut', '[ intros nZ1 | apply canonical_nzeroP with (ltM := ltM) (p := p)', 'auto', 'cut', '[ intros nZ3 | apply canonical_nzeroP with (ltM := ltM) (p := r)', 'auto', 'case', '[ intros temp', 'case', 'clear', 'intros', 'lapply', ""[ intros H'4"", 'elim', '[ intros s E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto', 'change', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'change', 'cut', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'intros', 'change', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'exists', 'split', 'auto', 'apply', 'change', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros divc | apply divP_eqT with (1 := cs) (a := a) ]', 'auto', 'cut', '[ intros Ca | apply canonical_pX_eqT with (a := a) ]', 'auto', 'case', 'intros', 'exists', 'split', 'auto', 'change', 'rewrite', 'auto', 'change', 'rewrite', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'exists', 'split', 'auto', 'change', 'rewrite', 'auto', 'apply', 'apply', 'auto', 'change', 'rewrite', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,2,2,1,4,4
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,one_plus_reduceplus,"['intros', 'elim', 'auto', 'intros', 'lapply', ""[ intros H'7"", 'elim', '[ intros s E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto', 'cut', '[ intros C0 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p)', 'auto', 'cut', '[ intros C1 | idtac ].', 'cut', '[ intros C2 | apply canonical_imp_canonical with (a := a)', 'auto', 'elim', 'auto', 'intros', 'exists', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'clear', 'intros', 'cut', '[ intros C3 | apply canonical_imp_canonical with (a := c)', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := r)', 'auto', 'case', '[ intros temp', 'case', 'clear', 'intros', 'elim', '[ intros s E', 'elim', 'intros', 'try', 'clear', 'auto', 'exists', 'split', 'auto', 'change', 'rewrite', 'auto', 'cut', '[ intros C4 | apply canonical_pX_eqT with (a := a)', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', '[ intros s E', 'elim', 'intros', 'clear', 'auto', 'cut', '[ intros C4 | apply canonical_pX_eqT with (a := a)', 'auto', 'exists', 'split', 'auto', 'change', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'case', 'intros', 'elim', '[ intros s E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto', 'change', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', '[ intros s E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto', 'change', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,1,4,4
/mnt/cisk/zmq/dataset/data/buchberger/Preduceplus.json,one_minus_reduceplus,"['intros', 'lapply', ""[ intros H'5"", 'elim', '[ intros s E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros C0 | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,nat_double_ind_set,"['simple', 'simple', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,dec_lt,"['red', 'intros', 'pattern', 'apply', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,WFlem1,"['unfold', 'apply', 'auto']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,lem0,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'simpl', 'simpl', 'simpl', 'case', 'intros', 'change', 'auto', 'red', 'apply', 'simpl', 'auto', 'inversion', 'auto', 'red', 'red', 'apply', 'apply', 'apply', 'unfold', 'split', 'auto', 'simpl', 'simpl', 'simpl', 'change', 'auto', 'red', 'apply', 'simpl', 'auto', 'inversion', 'simpl', 'auto', 'apply', 'auto']",0,2,3,0,4,3
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,lem1aux,"['intros', 'elim', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'auto', 'intros', 'elim', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'inversion', 'apply', 'auto', 'rewrite', 'rewrite', 'auto', 'inversion', 'auto', 'intros', 'elim', 'unfold', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'inversion', 'change', 'red', 'apply', 'simpl', 'auto', 'apply', 'auto', 'inversion', 'auto']",0,3,1,2,3,3
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,lem1,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,keylem,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'rewrite', 'auto', 'intros', 'red', 'apply', 'auto', 'exact', 'intros', 'apply', 'auto', 'rewrite', 'auto']",1,0,1,1,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,keylem_cor,"['red', 'apply', 'auto', 'red', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,leq2le,"['intros', 'case', 'auto', 'intro', 'unfold', 'unfold', 'case']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,jjProp1,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,jjProp2,"['simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,monO_n0,"['intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,zRV_WR,"['red', 'red', 'apply', 'intros', 'apply', 'intros', 'rewrite', 'rewrite', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,2,3,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,monLift_lem,"['intros', 'rewrite', 'exists', 'simpl', 'auto']",0,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Dickson.json,dicksonL,"['intro', 'unfold', 'elim', 'apply', 'intros', 'cut', '[ intros | exact (keylem_cor nat (mon n0) lt (mdiv n0) lt_wf dec_lt H) ].', 'unfold', 'change', 'apply', 'auto', 'intros', 'case', 'case', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'exists', 'simpl', 'apply', 'apply', 'auto']",1,3,3,0,2,4
/mnt/cisk/zmq/dataset/data/buchberger/ListProps.json,map_in,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'auto', 'intros', 'elim', ""[ intros H'1"", 'clear', 'clear', 'auto', 'exists', 'split', 'auto', 'elim', '[ intros a0 E', 'elim', 'intros', 'clear', 'auto', 'exists', 'split', 'auto']",0,1,0,0,2,4
/mnt/cisk/zmq/dataset/data/buchberger/ListProps.json,map_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto']",0,1,0,2,1,2
/mnt/cisk/zmq/dataset/data/buchberger/ListProps.json,map_rev,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,1,2,2
/mnt/cisk/zmq/dataset/data/buchberger/ListProps.json,rev_in,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'intros', 'auto', 'elim', 'auto', 'intros', 'elim']",1,3,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/ListProps.json,in_rev,"['intros', 'apply', 'auto', 'rewrite', 'auto']",1,0,1,1,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults,"['intros', 'elim', 'clear', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_order_l,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'red', 'intros', 'apply', 'elim', 'auto', 'intros', 'absurd', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'apply', 'elim', 'auto', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,canonical_mults,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,canonical_mults_inv,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'change', 'apply', 'auto', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto', 'intros', 'change', 'apply', 'auto', 'case', '[ intros temp', 'case', 'clear', 'intros', 'auto', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'absurd', 'auto', 'apply', 'auto', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,tmults,"['intros', 'case', 'intros', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,tmults_zerop_eqp_pO,"['intros', 'unfold', 'case', 'auto', 'intros', 'elim', 'auto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_eqp_pO_pO,"['unfold', 'intros', 'inversion', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,eqp_invT1_pO_is_pO,"['intros', 'case', 'simpl', 'auto', 'intros', 'inversion']",0,2,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_eqp_zpO,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_dist1,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'cut', 'try', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'absurd', 'auto', 'red', 'intros', 'elim', 'auto', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_dist2,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'cut', 'try', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_T1,"['intros', 'elim', 'auto', 'simpl', 'auto', 'intros', 'change', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,1,2,0,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_invTerm,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_multTerm,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_com,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_comp,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_ltP_comp,"['intros', 'elim', 'simpl', 'auto', 'intros', 'simpl', 'apply', 'auto', 'apply', 'auto']",1,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,multlm_comp_canonical,"['intros', 'generalize', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,twoP_ind,"['intros', 'try', 'change', 'cut', 'unfold', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'pattern', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'generalize', 'case', 'simpl', 'auto', 'exists', 'auto']",3,2,1,1,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,mults_dist_pluspf,"['intros', 'pattern', 'apply', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'change', 'auto', 'apply', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'change', 'simpl', 'apply', 'auto', 'intros', 'simpl', 'case', '[ intros H0', 'case', 'clear', 'intros', 'cut', '[ intros Od0 | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Od0 | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Od0 | idtac ]', 'auto', 'case', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'cut', '[ intros Od1 | idtac ]', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Od1 | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",2,5,2,1,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmults.json,smults,"['intros', 'case', 'intros', 'exists', 'auto', 'unfold', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'Defined']",1,2,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,canonical_multpf,"['intros', 'elim', 'simpl', 'auto', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,pluspf_pX,"['intros', 'case', 'clear', 'auto', 'intros', 'change', 'apply', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a0) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,multpf_disr_pX,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Op3 | apply canonical_imp_canonical with (a := b) ]', 'auto', 'cut', '[ intros nZ0 | apply canonical_nzeroP with (ltM := ltM) (p := q) ]', 'auto', 'cut', '[ intros nZ1 | apply canonical_nzeroP with (ltM := ltM) (p := p) ]', 'auto', 'cut', '[ intros nZ2 | idtac ]', 'auto', 'cut', '[ intros nZ3 | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'change', 'auto', 'apply', 'auto', 'cut', '[ intros Op4 | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto']",1,1,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,in_multpf_head,"['intros', 'elim', '[ intros c E', 'rewrite', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,multpf_comp,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := ma)', 'auto', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := mb)', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := p0)', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := q) ]', 'auto']",0,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,multpf_com,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto']",0,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,multpf_dist_plusr,"['intros', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'cut', '[ intros nZ0 | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'apply', 'auto', 'change', 'apply', 'apply', 'auto']",1,1,2,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,multpf_dist_plusl,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,multpf_smultm_assoc,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros nZ0 | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a0) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,multpf_assoc,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', '[ intros nZ0 | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto', 'cut', '[ intros Op0 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pmult.json,smult,"['intros', 'case', 'case', 'intros', 'exists', 'auto', 'Defined']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,spolyf,"['intros', 'case', 'intros', 'exact', 'intros', 'case', 'intros', 'exact', 'intros', 'apply', 'intros', 'cut', '[ intros nZa | apply canonical_nzeroP with (ltM := ltM) (p := p11)', 'auto', 'cut', '[ intros nZb | apply canonical_nzeroP with (ltM := ltM) (p := p22)', 'auto', 'exact', 'Defined']",2,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,spolyf_canonical,"['intros', 'case', 'simpl', 'auto', 'intros', 'case', 'unfold', 'simpl', 'auto', 'intros', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := a0) ]', 'auto', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := l)', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := l0) ]', 'auto']",0,3,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,spolyf_pO,"['intros', 'case', 'simpl', 'unfold', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,spolyf_com,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'cut', '[ intros nZa0 | apply canonical_nzeroP with (ltM := ltM) (p := l)', 'auto', 'cut', '[ intros nZa1 | apply canonical_nzeroP with (ltM := ltM) (p := l0)', 'auto', 'change', 'cut', '[ intros Op1 | apply canonical_imp_canonical with (a := a0)', 'auto', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := a1)', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'apply', 'auto', 'apply', '[ apply eqp_pluspf_com with (1 := cs)', 'auto', 'apply', '[ apply eqp_pluspf_com with (1 := cs)', 'auto', 'apply', '[ apply eqp_pluspf_com with (1 := cs)', 'auto', 'apply', 'auto', 'apply', '[ apply eqp_pluspf_com with (1 := cs)', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,spolyf_def,"['intros', 'simpl', 'auto', 'cut', '[ intros Op1 | auto ]', 'auto', 'cut', '[ intros Op2 | auto ]', 'unfold', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto']",1,2,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,eqTerm_spolyf_red2,"['intros', 'cut', '[ intros Op | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros Oq | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', '[ intros div1 | apply divP_ppcl with (1 := cs)', 'auto', 'cut', '[ intros div2 | apply divP_ppcr with (1 := cs)', 'auto', 'cut', '[ intros div3 | elim ppc_is_ppcm with (1 := cs)', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'cut', ""[ intros Z2 | inversion_clear H'0"", 'auto', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', '[ auto | idtac ].', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,eqTerm_spolyf_red3,"['intros', 'cut', '[ intros nZppab | auto ].', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,spoly_is_minus,"['simpl', 'unfold', 'simpl', 'intros', 'cut', '[ intros Op | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros Oq | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', '[ intros nZppab | auto ].', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'cut', '[ intros Z2 | auto ].', 'cut', '[ intros Z3 | auto ].', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'apply', 'auto', 'change', 'auto', 'change', 'auto']",1,3,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,spoly_div_is_minus,"['intros', 'cut', '[ intros Op | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros Oq | apply canonical_imp_canonical with (a := b) ]', 'auto', 'cut', '[ intros Z2 | idtac ].', 'cut', '[ intros div1 | idtac ].', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'case', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,confl_under,"['intros', 'cut', '[ intros Op2 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', ""[ intros Op3 | apply canonical_reduce with (1 := cs) (3 := H'1)"", 'auto', 'cut', '[ intros Op4 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', ""[ intros Op5 | apply canonical_reduce with (1 := cs) (3 := H'2)"", 'auto', 'cut', '[ intros Op6 | apply canonical_imp_canonical with (a := a)', 'auto', 'lapply', ""[ intros H'5"", 'lapply', ""[ intros H'6"", 'elim', 'clear', 'auto', 'intros', 'elim', 'auto', 'intros', 'elim', 'auto', 'intros', 'cut', '[ intros red1 | apply reduceplus_skip with (1 := cs)', 'auto', 'elim', 'auto', 'cut', '[ intros Op7 | apply canonical_reduceplus with (1 := cs) (3 := red1) ]', 'auto', 'cut', '[ intros red2 | apply reduceplus_skip with (1 := cs)', 'auto', 'elim', 'auto', 'cut', '[ intros Op8 | apply canonical_reduceplus with (1 := cs) (3 := red2) ]', 'auto', 'cut', '[ intros eqPR1 | auto ].', 'elim', 'auto', 'intros', 'elim', 'auto', 'intros', 'cut', '[ intros red3 | apply (reducestar_trans A A0 A1 eqA plusA invA minusA multA divA cs eqA_dec n ltM ltM_dec os Q) with (y := pX a r0) ]', 'auto', 'cut', '[ intros red4 | apply (reducestar_trans A A0 A1 eqA plusA invA minusA multA divA cs eqA_dec n ltM ltM_dec os Q) with (y := pX a s0) ]', 'auto', 'cut', '[ intros eqPR2 | auto ].', 'apply', 'auto', 'lapply', ""[ intros H'7"", 'lapply', ""[ intros H'8"", 'elim', 'clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'lapply', ""[ intros H'7"", 'lapply', ""[ intros H'8"", 'elim', 'clear', 'auto', 'apply', 'auto', 'lapply', ""[ intros H'11"", 'lapply', ""[ intros H'12"", 'lapply', ""[ intros H'13"", 'lapply', ""[ intros H'14"", 'clear', 'auto', 'lapply', ""[ intros H'7"", 'lapply', ""[ intros H'8"", 'elim', 'clear', 'auto', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion_clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion_clear', 'auto', 'inversion_clear', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,Conf_inv1,"['intros', 'inversion_clear', 'apply', 'rewrite', 'auto', 'rewrite', 'auto']",0,0,1,1,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,Conf_trans,"['intros', 'cut', '[ intros nZb | idtac ].', 'cut', '[ intros nZc | idtac ].', 'cut', '[ intros nZd | idtac ].', 'apply', 'auto', 'intros', 'elim', 'auto', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion_clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion_clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion_clear', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,confl_mix,"['intros', 'cut', '[ intros Op2 | apply inPolySet_imp_canonical with (L := Q)', 'auto', 'cut', ""[ intros H'6 | apply reduce_inv with (1 := cs) (3 := red1)"", 'auto', 'cut', '[ intros Op3 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros Op4 | apply canonical_imp_canonical with (a := b)', 'auto', 'cut', ""[ intros Op5 | apply canonical_reduce with (1 := cs) (3 := H'6)"", 'auto', 'case', 'auto', 'intros', 'elim', 'intros', 'clear', 'cut', '[ intros Op6 | apply canonical_reduceplus with (1 := cs) (3 := H1)', 'auto', 'elim', 'auto', 'intros', 'apply', 'auto', 'lapply', ""[ intros H'0"", 'lapply', ""[ intros H'1"", 'elim', 'clear', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'lapply', ""[ intros H'0"", 'lapply', ""[ intros H'1"", 'elim', 'clear', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,confl_restar,"['intros', 'intros', 'pattern', 'apply', 'auto', 'apply', 'auto', 'intros', 'elim', 'clear', 'intros', 'simpl', 'apply', 'auto', 'intros', 'case', 'auto', 'intros', 'elim', 'clear', 'case', 'auto', 'intros', 'elim', 'clear', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'elim', 'intros', 'absurd', 'auto', 'intros', 'elim', 'intros', 'clear', 'case', 'auto', 'intros', 'elim', 'clear', 'intros', 'absurd', 'auto', 'intros', 'elim', 'intros', 'clear', 'generalize', 'clear', 'inversion', 'intros', 'generalize', 'clear', 'inversion', 'intros', 'apply', 'auto', 'intros', 'generalize', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'generalize', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'intros', 'inversion', 'apply', 'auto', 'intros', 'generalize', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'generalize', 'simpl', 'auto', 'apply', 'auto', 'rewrite', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'apply', 'auto', 'apply', 'auto']",3,2,2,2,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Pspoly.json,confl_reducestar,"['intros', 'generalize', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/WfR0.json,get_mon,"['intros', 'case', 'intros', 'case', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/WfR0.json,get_is_correct,"['intros', 'cut', '2', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'intros', 'elim', 'auto', 'intros', 'red', 'intros', 'red', 'red', 'generalize', 'case', 'intros', 'case', 'simpl', 'intros', 'elim', 'auto', 'intros', 'cut', '[ intros nZa1 | idtac ].', 'apply', 'auto', 'change', 'apply', 'auto', 'change', 'apply', 'auto', 'simpl', 'auto', 'red', 'intros', 'inversion', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,3,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/WfR0.json,l1,"['intros', 'elim', 'auto', 'intros', 'case', 'auto', 'intros', 'auto', 'apply', 'auto', 'intros', 'inversion', 'auto', 'rewrite', 'change', 'rewrite', 'simpl', 'change', 'apply', 'unfold', 'try', 'simpl', 'auto', 'intros', 'elim', ""[ intros H'4"", 'rewrite', 'clear', 'clear', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'intros', 'intros', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto']",0,2,3,2,3,4
/mnt/cisk/zmq/dataset/data/buchberger/WfR0.json,wf_incl,"['unfold', 'intros', 'apply', 'intros', 'inversion', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'simpl', 'intros', 'case', 'intros', 'rewrite', 'auto', 'elim', 'red', 'intros', 'inversion', 'inversion']",5,1,2,2,2,2
/mnt/cisk/zmq/dataset/data/buchberger/WfR0.json,RO_lem,"['intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,pmon1,"['intros', 'case', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,pmon2,"['intros', 'case', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,recomp,"['intros', 'case', 'intros', 'apply', 'case', 'auto', 'intros', 'exact', 'Defined']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,recomp_ok,"['intros', 'generalize', 'clear', 'elim', 'intros', 'elim', 'auto', 'intros', 'simpl', 'unfold', 'auto']",2,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,proj_ok,"['intros', 'cut', 'auto', 'intros', 'cut', 'auto', 'apply', 'auto']",0,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,gen_mon,"['intros', 'elim', 'intros', 'exact', 'intros', 'case', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mult_mon,"['intros', 'elim', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mult_mon_com,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'auto']",0,1,0,2,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mult_mon_assoc,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'auto']",0,1,0,2,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,zero_mon,"['intros', 'elim', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mult_mon_zero_r,"['intros', 'elim', 'auto', 'simpl', 'intros', 'rewrite', 'auto', 'rewrite', 'auto']",1,1,0,2,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mult_mon_zero_l,"['intros', 'elim', 'auto', 'simpl', 'intros', 'rewrite', 'auto']",1,1,0,2,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mdiv_proj,"['intros', 'rewrite', 'rewrite', 'auto']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mdiv_trans,"['intros', 'elim', 'unfold', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'intros', 'inversion', 'rewrite', 'auto', 'rewrite', 'auto', 'intros', 'inversion', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto']",0,0,1,1,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,div_mon,"['intros', 'elim', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mdiv_div,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'rewrite', 'auto', 'rewrite', 'auto']",0,1,0,3,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,div_mon_clean,"['intros', 'elim', 'intros', 'exact', 'intros', 'case', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,4
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,is_nil,"['intros', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,is_nil_id,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mon_0,"['intros', 'generalize', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,eqmon_dec,"['intros', 'elim', 'auto', 'intros', 'left', 'rewrite', 'rewrite', 'auto', 'intros', 'elim', 'intros', 'elim', 'intros', 'left', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto', 'right', 'rewrite', 'rewrite', 'red', 'intros', 'apply', 'change', 'rewrite', 'auto', 'right', 'red', 'rewrite', 'rewrite', 'intros', 'apply', 'injection', 'auto']",1,0,0,2,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mult_div_com,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto', 'apply', 'auto']",0,1,1,3,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,mult_div_id,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'auto']",0,1,0,2,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,gb,"['intros', 'case', 'auto', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,gm,"['intros', 'case', 'auto', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,minus_lt_0,"['intros', 'elim', 'simpl', 'auto', 'intros', 'absurd', 'auto', 'intros', 'case', 'simpl', 'auto']",0,2,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,ppcm_mon,"['intros', 'elim', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,ppcm_com,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'rewrite', 'auto']",0,1,0,3,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,ppcm_prop_l,"['intros', 'elim', 'simpl', 'auto', 'intros', 'pattern', 'rewrite', 'pattern', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto']",0,1,1,1,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,ppcm_prop_r,"['intros', 'elim', 'simpl', 'auto', 'intros', 'pattern', 'rewrite', 'pattern', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto']",0,1,1,1,3,2
/mnt/cisk/zmq/dataset/data/buchberger/Monomials.json,plus_minus_le,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'rewrite', 'auto']",0,3,0,2,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,wf_lessP,"['red', 'cut', 'intros', 'apply', 'auto', 'intros', 'elim', 'clear', 'intros', 'inversion', 'intros', 'apply', 'intros', 'apply', 'unfold', 'apply', 'auto']",2,0,4,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,pX_inj,"['intros', 'rewrite', 'rewrite', 'auto']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,pX_invl,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,pX_invr,"['unfold', 'intros', 'inversion', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,canonicalpO,"['split', 'auto', 'apply', 'red', 'simpl', 'auto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,canonicalp1,"['intros', 'split', 'simpl', 'auto', 'red', 'simpl', 'apply']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_refl,"['red', 'intros', 'elim', 'auto', 'intros', 'change', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_sym,"['red', 'intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_inv1,"['unfold', 'intros', 'inversion', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_inv2,"['unfold', 'intros', 'inversion', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_inv3l,"['intros', 'simple', 'auto', 'unfold', 'inversion', 'rewrite', 'auto', 'rewrite', 'auto']",1,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_inv3r,"['intros', 'simple', 'auto', 'unfold', 'inversion', 'rewrite', 'auto', 'rewrite', 'auto']",1,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_trans,"['red', 'intros', 'elim', 'auto', 'intros', 'inversion_clear', 'intros', 'inversion_clear', 'auto', 'intros', 'inversion_clear', 'intros', 'inversion_clear', 'change', 'apply', 'eauto', 'apply', 'auto']",0,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,ltP_refl_pX,"['intros', 'case', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_eqTerm,"['intros', 'inversion_clear', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,ltp_eqp_comp,"['intros', 'generalize', 'elim', 'clear', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'apply', 'intros', 'inversion_clear', 'try', 'inversion_clear', 'try', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'intros', 'inversion_clear', 'try', 'inversion_clear', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,4,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqp_imp_canonical,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,wf_lessP3,"['red', 'cut', 'intros', 'apply', 'auto', 'intros', 'elim', 'clear', 'intros', 'inversion', 'intros', 'apply', 'intros', 'apply', 'unfold', 'apply', 'auto']",2,0,4,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,eqPf,"['intros', 'pattern', 'apply', 'clear', 'intros', 'case', 'simpl', 'clear', 'intros', 'case', 'clear', 'intros', 'case', 'clear', 'intros', 'left', 'constructor', 'intros', 'right', 'red', 'intros', 'inversion', 'intros', 'case', 'clear', 'intros', 'right', 'red', 'intros', 'inversion', 'intros', 'case', 'simpl', 'intros', 'case', 'unfold', 'simpl', 'auto', 'intros', 'left', 'auto', 'change', 'auto', 'intros', 'right', 'red', 'intros', 'apply', 'apply', 'auto', 'right', 'red', 'intros', 'apply', 'apply', 'auto', 'Defined']",2,4,2,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,seqP,"['intros', 'case', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,seqp_dec,"['intros', 'case', 'case', 'simpl', 'intros', 'apply']",2,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,seqp_refl,"['red', 'intros', 'case', 'simpl', 'intros', 'apply']",2,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,seqp_sym,"['red', 'intros', 'case', 'case', 'simpl', 'intros', 'apply', 'auto']",2,2,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Peq.json,seqp_trans,"['red', 'intros', 'case', 'case', 'case', 'simpl', 'intros', 'apply', 'auto']",2,2,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusp,"['intros', 'pattern', 'apply', 'auto', 'apply', 'auto', 'intros', 'case', 'intros', 'simpl', 'case', 'clear', 'intros', 'exists', 'auto', 'intros', 'case', 'clear', 'intros', 'exists', 'auto', 'intros', 'case', '[ intros P', 'case', 'clear', 'intros', 'lapply', 'simpl', '[ intros Rec', 'case', 'clear', 'intros', 'exists', 'auto', 'change', 'auto', 'red', 'red', 'simpl', 'auto', 'lapply', 'simpl', '[ intros Rec', 'case', 'clear', 'intros', 'exists', 'auto', 'change', 'auto', 'red', 'red', 'simpl', 'auto', 'apply', 'intros', 'case', 'intros', 'lapply', 'simpl', '[ intros Rec', 'case', 'clear', 'intros', 'exists', 'auto', 'change', 'auto', 'rewrite', 'auto', 'red', 'red', 'simpl', 'auto', 'lapply', 'simpl', '[ intros Rec', 'case', 'clear', 'intros', 'exists', 'auto', 'change', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'red', 'red', 'simpl', 'auto', 'Defined']",2,2,2,1,4,2
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_inv,"['intros', 'simple', 'discriminate', 'discriminate', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'intros', 'exists', 'left', 'split', '[ idtac | split', '[ try assumption | idtac ] ]', 'auto', 'rewrite', 'intros', 'exists', 'right', 'right', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto', 'rewrite', 'auto', 'intros', 'exists', 'right', 'right', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto', 'intros', 'exists', 'right', 'left', 'split', '[ idtac | split', '[ try assumption | idtac ] ]', 'auto', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",1,0,0,2,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,uniq_plusp,"['intros', 'pattern', 'apply', 'intros', 'simpl', 'case', 'clear', 'intros', 'inversion_clear', 'intros', 'inversion_clear', 'auto', 'case', 'clear', 'simpl', 'intros', 'inversion', 'inversion', 'auto', 'simpl', 'intros', 'case', 'auto', 'intros', 'elim', ""[ intros H'0"", 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'clear', 'case', 'auto', 'intros', 'elim', ""[ intros H'0"", 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'clear', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'elim', ""[ intros H'"", 'elim', 'intros', 'clear', 'clear', 'absurd', 'auto', 'elim', 'intros', 'try', 'clear', 'absurd', 'auto', 'apply', 'auto', 'elim', ""[ intros H'"", 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'clear', 'case', 'auto', 'intros', 'elim', ""[ intros H'0"", 'elim', 'intros', 'clear', 'clear', 'absurd', 'auto', 'elim', ""[ intros H'"", 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'clear', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'elim', 'intros', 'try', 'clear', 'absurd', 'auto', 'elim', 'intros', 'try', 'clear', 'case', 'auto', 'intros', 'elim', ""[ intros H'2"", 'elim', 'intros', 'try', 'clear', 'clear', 'absurd', 'auto', 'apply', 'auto', 'elim', ""[ intros H'"", 'elim', 'intros', 'try', 'clear', 'clear', 'absurd', 'auto', 'elim', 'intros', 'elim', ""[ intros H'4"", 'elim', 'intros', 'try', 'clear', 'clear', 'elim', ""[ intros H'"", 'clear', 'elim', 'intros', 'apply', 'clear', 'auto', 'elim', 'intros', 'clear', 'apply', 'auto', 'red', 'simpl', 'auto', 'simpl', 'auto', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'elim', ""[ intros H'3"", 'clear', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'try', 'clear', 'apply', 'try', 'apply', 'auto', 'apply', 'auto', 'red', 'red', 'simpl', 'auto']",4,3,3,1,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_is_plusP,"['intros', 'try', 'unfold', 'case', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,order_plusP,"['intros', 'generalize', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,2,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,canonical_plusP,"['intros', 'elim', 'auto', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,3,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,canonical_pluspf,"['intros', 'generalize', 'intros', 'apply', 'auto']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pO_plusP_inv1,"['intros', 'elim', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pO_plusP_inv2,"['intros', 'elim', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_decomp,"['intros', 'case', 'auto', 'intros', 'try', 'change', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_inv1,"['unfold', 'intros', 'inversion_clear', 'intros', 'change', 'apply', 'auto', 'apply', 'simpl', 'auto', 'absurd', 'auto', 'apply', 'auto', 'absurd', 'auto', 'apply', 'auto', 'absurd', 'auto']",2,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_inv2,"['intros', 'inversion_clear', 'intros', 'absurd', 'auto', 'absurd', 'auto', 'absurd', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto']",0,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_inv3a,"['intros', 'inversion_clear', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'elim', 'auto', 'absurd', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_inv3b,"['unfold', 'intros', 'inversion_clear', 'intros', 'absurd', 'auto', 'apply', 'auto', 'elim', 'try', 'change', 'apply', 'auto', 'apply', 'auto', 'absurd', 'auto']",2,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv1,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv2,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv3a,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv3b,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_com,"['intros', 'generalize', 'elim', 'clear', 'auto', 'intros', 'try', 'rewrite', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'rewrite', 'auto']",2,0,2,2,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_com,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_zero_pOl,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_zero_pOr,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusP_uniq_eqP,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pO_pluspf_inv1,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pO_pluspf_inv2,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv1_eq,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv2_eq,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv3a_eq,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv3b_eq,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,order_pluspf,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv1_eqa,"['intros', 'case', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'intros', 'change', 'apply', 'auto', 'apply', 'auto']",0,0,1,1,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_inv2_eqa,"['intros', 'case', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'intros', 'change', 'apply', 'auto', 'apply', 'auto']",0,0,1,2,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,p0_pluspf_l,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,p0_pluspf_r,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,plusTerm_is_pX,"['intros', 'case', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf3_assoc,"['intros', 'pattern', 'apply', 'intros', 'case', 'intros', 'case', 'intros', 'simpl', 'clear', 'auto', 'case', 'rewrite', 'auto', 'case', 'intros', 'rewrite', 'rewrite', 'auto', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'rewrite', 'auto', 'intros', 'cut', ""[ clear H'2"", 'intros', 'cut', ""[ clear H'1"", 'intros', 'cut', ""[ clear H'0"", 'intros', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros C1 | apply canonical_imp_canonical with (a := a0) ]', 'auto', 'cut', '[ intros C2 | apply canonical_imp_canonical with (a := a1) ]', 'auto', 'cut', '[ intros nZ0 | apply (canonical_nzeroP _ A0 eqA _ ltM) with (p := l0) ]', 'auto', 'cut', '[ intros nZ1 | apply (canonical_nzeroP _ A0 eqA _ ltM) with (p := l1) ]', 'auto', 'cut', '[ intros nZ2 | apply (canonical_nzeroP _ A0 eqA _ ltM) with (p := l2) ]', 'auto', 'change', 'case', '[ intros H0', 'case', 'clear', 'intros', 'case', '[ intros H1', 'case', 'clear', 'intros', 'cut', '[ intros Ord0 | apply (ltT_trans A _ _ os) with (y := a0) ]', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'repeat', 'simpl', 'repeat', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'cut', '[ intros Ord0 | apply eqT_compat_ltTr with (b := a0) ]', 'auto', 'case', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'repeat', 'simpl', 'repeat', 'auto', 'repeat', 'auto', 'cut', '[ intros Ord1 | apply eqT_compat_ltTr with (b := a0)', 'auto', 'apply', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'repeat', 'simpl', 'repeat', 'auto', 'repeat', 'auto', 'rewrite', 'auto', 'case', '[ intros H1', 'case', 'clear', 'intros', 'rewrite', 'auto', 'case', '[ intros H2', 'case', 'clear', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'repeat', 'simpl', 'repeat', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'cut', '[ intros Ord1 | apply eqT_compat_ltTr with (b := a1)', 'auto', 'apply', 'apply', 'auto', 'case', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'cut', '[ intros Ord0 | apply (ltT_trans A n ltM os) with (y := a0) ]', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'cut', '[ intros Ord0 | apply eqT_compat_ltTl with (b := a0)', 'auto', 'auto', 'case', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Ord1 | apply eqT_compat_ltTl with (b := a0)', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'rewrite', 'auto', 'case', 'intros', 'rewrite', 'auto', 'case', '[ intros H2', 'case', 'clear', 'intros', 'cut', '[ intros Ord0 | apply eqT_compat_ltTl with (b := a1) ]', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'repeat', 'simpl', 'repeat', 'auto', 'cut', '[ intros Ord0 | apply eqT_compat_ltTr with (b := a1) ]', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'case', 'intros', 'cut', '[ intros eqTerm0 | apply (eqT_trans A n) with (y := a1)', 'auto', 'apply', 'auto', 'cut', '[ intros eqTerm1 | apply (eqT_trans A n) with (y := a0)', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros eqTerm2 | apply (eqT_trans A n) with (y := a)', '[ apply (plusTerm_eqT1 A plusA n) | apply (eqT_trans A n) with (y := a1) ]', 'auto', 'apply', 'auto', 'cut', '[ intros eqTerm3 | apply (eqT_trans A n) with (y := a)', 'auto', '[ apply (plusTerm_eqT2 A plusA n) | apply (eqT_sym A n) ] ]', 'auto', 'cut', '[ intros eqTerm4 | apply (eqT_trans A n) with (y := a0)', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros eqTerm5 | apply (eqT_trans A n) with (y := a0)', 'auto', 'apply', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Ord0 | apply (eqT_trans A n) with (y := a1)', 'auto', 'apply', 'auto', 'cut', '[ intros eqTerm1 | apply (eqT_trans A n) with (y := a0)', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'case', '[ intros H1', 'case', 'clear', 'intros', 'cut', '[ intros Ord0 | apply eqT_compat_ltTl with (b := a0)', 'auto', 'apply', 'auto', 'cut', '[ intros Ord1 | apply eqT_compat_ltTl with (b := a1)', 'auto', 'apply', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'repeat', 'simpl', 'repeat', 'auto', 'cut', '[ intros Ord0 | apply eqT_compat_ltTr with (b := a0)', 'auto', 'apply', 'auto', 'cut', '[ intros Ord1 | apply eqT_compat_ltTr with (b := a0)', 'auto', 'apply', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'cut', '[ intros eqTerm1 | apply (eqT_trans A n) with (y := a0)', 'auto', 'apply', 'apply', 'auto', 'cut', '[ intros eqT0 | apply (eqT_trans A n) with (y := a0)', 'auto', 'apply', 'auto', 'case', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'cut', '[ intros Z2 | idtac ].', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'cut', '[ intros eqTerm0 | idtac ].', 'case', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'red', 'red', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,3,3,4,5,1
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,pluspf_assoc,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,eqp_pluspf_com_l,"['intros', 'generalize', 'elim', 'clear', 'intros', 'rewrite', 'auto', 'intros', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := ma) ]', 'auto', 'cut', '[ intros C1 | apply canonical_imp_canonical with (a := mb) ]', 'auto', 'cut', '[ intros nZ0 | apply (canonical_nzeroP _ A0 eqA n ltM) with (p := p0) ]', 'auto', 'cut', '[ intros nZ1 | apply (canonical_nzeroP _ A0 eqA n ltM) with (p := q0) ]', 'auto', 'generalize', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'auto', 'intros', 'cut', '[ intros C2 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros nZ2 | apply (canonical_nzeroP _ A0 eqA n ltM) with (p := l) ]', 'auto', 'change', 'case', '[ intros H0', 'case', 'clear', 'intros', 'cut', '[ intros Or0 | idtac ].', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Or0 | idtac ]', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros eqTerm0 | idtac ]', 'auto', 'case', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,2,3,3,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,eqp_pluspf_com_r,"['intros', 'generalize', 'elim', 'clear', 'intros', 'rewrite', 'auto', 'intros', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := ma) ]', 'auto', 'cut', '[ intros C1 | apply canonical_imp_canonical with (a := mb) ]', 'auto', 'cut', '[ intros nZ0 | apply (canonical_nzeroP _ A0 eqA n ltM) with (p := p0) ]', 'auto', 'cut', '[ intros nZ1 | apply (canonical_nzeroP _ A0 eqA n ltM) with (p := q0) ]', 'auto', 'generalize', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'auto', 'intros', 'cut', '[ intros C2 | apply canonical_imp_canonical with (a := a) ]', 'auto', 'cut', '[ intros nZ2 | apply (canonical_nzeroP _ A0 eqA n ltM) with (p := l) ]', 'auto', 'change', 'case', '[ intros H0', 'case', 'clear', 'intros', 'cut', '[ intros Or0 | idtac ].', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros Or0 | idtac ]', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '[ intros eqTerm0 | idtac ]', 'auto', 'case', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,2,3,3,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,eqp_pluspf_com,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pplus.json,splus,"['intros', 'case', 'case', 'intros', 'exists', 'auto', 'apply', 'auto', 'Defined']",0,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Cb_addEnd_cons,"['intros', 'apply', 'auto', 'elim', 'simpl', 'auto', 'intros', 'elim', 'clear', 'intros', 'auto', 'case', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Cb_cons_addEnd,"['intros', 'apply', 'auto', 'elim', 'simpl', 'auto', 'intros', 'elim', 'clear', 'intros', 'auto', 'case', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Cb_trans_cons,"['intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Cb_cons,"['intros', 'unfold', 'auto', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'intros', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,3,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Cb_comp,"['intros', 'case', 'simpl', 'intros', 'apply', 'auto', 'intros', 'case', 'auto', 'intros', 'elim', 'intros', 'clear', 'lapply', ""[ intros H'6 | idtac ]"", 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'Defined']",2,3,1,2,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Cb_compo,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,grobner_def,"['intros', 'inversion', 'auto', 'intros', 'case', 'intros', 'inversion', 'lapply', ""[ intros H'4"", 'lapply', ""[ clear H'4 | clear H'4 ] | idtac ]"", 'auto', 'inversion', 'auto', 'inversion', 'auto', 'intros', 'left', 'cut', 'auto', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'inversion', 'apply', 'auto', 'intros', 'right', 'cut', 'auto', 'intros', 'exists', 'generalize', 'case', 'simpl', 'auto', 'apply', 'auto', 'generalize', 'case', 'simpl', 'auto', 'generalize', 'case', 'simpl', 'auto']",0,2,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,def_grobner,"['intros', 'apply', 'intros', 'cut', 'intros', 'cut', 'intros', 'elim', ""[ intros H'6 | intros H'6 | idtac ]"", 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'elim', 'auto', 'case', 'intros', 'clear', 'inversion', 'generalize', 'case', 'auto', 'simpl', 'auto', 'intros', 'absurd', 'auto', 'simpl', 'auto', 'apply', 'auto', 'inversion', 'apply', 'auto', 'apply', 'auto']",2,2,2,0,3,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,reduce_divp,"['intros', 'case', 'case', 'simpl', 'intros', 'inversion', 'generalize', 'rewrite', 'simpl', 'auto', 'case', 'auto', 'intros', 'case', 'intros', 'clear', 'intros', 'exists', 'split', '[ right | split ]', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'discriminate', 'auto', 'intros', 'injection', 'intros', 'rewrite', 'trivial', 'generalize', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'discriminate', 'exists', 'split', '[ left | split ]', 'simpl', 'auto', 'generalize', 'rewrite', 'unfold', 'auto', 'generalize', 'rewrite', 'unfold', 'auto', 'intros', 'apply', 'auto', 'cut', '[ intros Z | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'generalize', 'rewrite', 'auto']",2,4,1,3,2,5
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,reduceplus_divp,"['intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,reducestar_divp,"['intros', 'apply', 'auto', 'inversion', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,nf_divp,"['intros', 'case', 'unfold', 'auto', 'unfold', 'auto', 'intros', 'case', 'unfold', 'intros', 'case', 'auto', 'intros', 'lapply', ""[ intros H'5"", 'lapply', ""[ intros H'6"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'case', ""[ intros H'3"", 'clear', 'clear', 'exists', 'split', '[ idtac | split ]', 'auto', 'simpl', 'auto', 'apply', 'auto', 'generalize', 'rewrite', 'generalize', 'case', 'auto', 'simpl', 'auto', 'intros', 'cut', '[ intros nZa | apply canonical_nzeroP with (ltM := ltM) (p := l) ]', 'auto', 'cut', '[ intros nZu | idtac ]', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'exists', 'split', '[ idtac | split ]', 'auto', 'simpl', 'auto']",2,2,1,0,4,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,divp_reduce1,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'generalize', 'unfold', 'simpl', 'elim', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'elim', '[ intros r2 E', 'elim', 'intros', 'clear', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'generalize', 'case', 'auto', 'intros', 'discriminate', 'intros', 'elim', 'intros', 'generalize', 'case', 'auto', 'intros', 'elim', 'intros', 'cut', '[ intros nZa0 | idtac ].', 'cut', '[ intros Z | idtac ].', 'exists', 'simpl', 'auto', 'red', 'simpl', 'apply', 'auto', 'change', 'apply', 'auto', 'simpl', 'red', 'intros', 'inversion', 'injection', 'intros', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'injection', 'intros', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'cut', '[ intro | apply canonical_imp_canonical with (a := a)', 'auto', 'case', 'intros', 'case', 'intros', 'cut', '[ intros Z | idtac ].', 'exists', 'simpl', 'auto', 'red', 'simpl', 'red', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,4,1,1,4,6
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,nf_divp_zero,"['intros', 'case', 'unfold', 'auto', 'unfold', 'auto', 'intros', 'case', 'unfold', 'simpl', 'intros', 'case', 'simpl', 'auto', 'intros', 'lapply', 'simpl', ""[ intros H'5"", 'lapply', ""[ intros H'6"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'case', ""[ intros H'3"", 'clear', 'clear', 'case', 'rewrite', 'generalize', 'case', 'auto', 'exists', 'split', '[ idtac | split ]', 'auto']",1,5,0,1,2,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,zerop_elim_cb,"['intros', 'apply', 'auto', 'simpl', 'auto', 'intros', 'case', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'try', 'change', 'apply', 'auto', 'intros', 'elim', 'auto', 'apply', 'auto']",1,2,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,zerop_nf_cb,"['intros', 'apply', 'auto', 'apply']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,redacc,"['intros', 'elim', 'intros', 'exact', 'intros', 'apply', 'intros', 'case', 'intros', 'exact', 'exact', 'Defined']",2,0,3,0,0,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,redacc_cb,"['intros', 'elim', 'auto', 'simpl', 'auto', 'intros', 'elim', 'simpl', 'unfold', 'intros', 'case', 'intros', 'apply', 'auto', 'simpl', 'auto', 'simpl', 'intros', 'case', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto']",4,3,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Red_cb,"['unfold', 'intros', 'generalize', 'simpl', 'auto', 'rewrite', 'auto']",3,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Cb_Red,"['intros', 'lapply', ""[ intros H'3"", 'generalize', 'simpl', 'auto', 'rewrite', 'auto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,cb_Red_cb1,"['intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,cb_Red_cb2,"['intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,divp_id,"['intros', 'case', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'cut', '[ intros Z | idtac ].', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,redacc_divp,"['intros', 'elim', 'simpl', 'auto', 'intros', 'exists', 'split', 'auto', 'split', 'auto', 'apply', 'auto', 'unfold', 'intros', 'case', ""[ intros H'2"", 'rewrite', 'clear', 'clear', 'auto', 'case', 'simpl', 'auto', 'intros', 'lapply', ""[ intros H'5"", 'lapply', ""[ intros H'6"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'lapply', ""[ intros H'8"", 'lapply', ""[ intros H'9"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'intros', 'lapply', ""[ intros H'5"", 'lapply', ""[ intros H'6"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'simpl', 'case', ""[ intros H'4"", 'clear', 'clear', 'exists', 'split', '[ idtac | split ]', 'auto', 'lapply', ""[ intros H'8"", 'lapply', ""[ intros H'9"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', '[ idtac | split ]', 'auto', 'case', 'auto', 'simpl', 'auto', 'simpl', 'intros', 'case', ""[ intros H'9"", 'clear', 'clear', 'auto', 'auto', 'apply', 'auto', 'case', 'auto', 'rewrite', 'auto', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'lapply', ""[ intros H'6"", 'lapply', ""[ intros H'7"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', 'auto', 'case', 'auto', 'simpl', 'auto', 'intros', 'case', 'intros', 'auto', 'intros', 'exists', 'split', '[ right | idtac ]', 'auto', 'split', 'auto', 'apply', 'auto']",3,3,1,1,6,5
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Red_divp,"['intros', 'lapply', 'auto', 'simpl', 'auto', 'rewrite', 'auto', 'rewrite', 'auto']",0,1,1,1,2,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,Red_grobner,"['intros', 'apply', 'auto', 'intros', 'lapply', ""[ intros H'2"", 'lapply', ""[ intros H'4 | idtac ] | idtac ]"", 'auto', 'case', 'auto', 'intros', 'case', 'intros', 'clear', 'right', 'apply', 'auto', 'intros', 'lapply', ""[ intros H'7"", 'lapply', ""[ intros H'8"", 'clear', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'clear', 'exists', 'split', 'auto', 'apply', 'auto']",1,0,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,redbuch_stable,"['intros', 'cut', 'intros', 'inversion', 'auto', 'apply', 'unfold', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchRed.json,redbuch_Grobner,"['intros', 'unfold', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspp,"['intros', 'pattern', 'apply', 'auto', 'apply', 'auto', 'intros', 'case', 'intros', 'simpl', 'case', 'intros', 'exists', 'auto', 'intros', 'case', 'intros', 'exists', 'auto', 'intros', 'case', '[ intros P', 'case', 'clear', 'intros', 'lapply', 'simpl', '[ intros Rec', 'case', 'clear', 'intros', 'exists', 'auto', 'change', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto', 'lapply', 'simpl', '[ intros Rec', 'case', 'clear', 'intros', 'exists', 'auto', 'change', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto', 'lapply', 'simpl', '[ intros Rec', 'case', 'clear', 'intros', 'apply', 'intros', 'case', 'intros', 'exists', 'auto', 'rewrite', 'auto', 'change', 'auto', 'exists', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'change', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto', 'Defined']",3,2,2,1,4,2
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,zerop_is_eqTerm,"['intros', 'cut', '[ intros eq1 | idtac ].', 'cut', '[ intros eq2 | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusTerm_zeroP_r,"['intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusTerm_zeroP,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_pO_is_eqP,"['intros', 'elim', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'inversion', 'intros', 'inversion']",1,2,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_inv,"['intros', 'simple', 'discriminate', 'discriminate', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'intros', 'exists', 'left', 'split', '[ idtac | split ]', 'auto', 'rewrite', 'intros', 'exists', 'right', 'right', 'rewrite', 'try', 'auto', 'rewrite', 'try', 'auto', 'intros', 'exists', 'right', 'right', 'rewrite', 'rewrite', 'try', 'auto', 'rewrite', 'try', 'auto', 'intros', 'exists', 'right', 'left', 'rewrite', 'try', 'auto', 'rewrite', 'try', 'auto']",1,0,0,1,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,uniq_minusp,"['unfold', 'intros', 'pattern', 'apply', 'intros', 'simpl', 'case', 'clear', 'intros', 'inversion_clear', 'intros', 'inversion_clear', 'auto', 'case', 'clear', 'simpl', 'intros', 'inversion', 'inversion', 'auto', 'simpl', 'intros', 'case', 'auto', 'intros', 'elim', 'intros', ""[ idtac | elim H'0"", 'clear', 'intros', 'clear', '(case (minusP_inv l1 l2 l3 n1 n2)', 'auto', 'intros', 'elim', 'intros', ""[ idtac | elim H'1"", 'clear', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'apply', 'auto', 'apply', 'auto', 'red', 'red', 'simpl', 'auto', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'absurd', 'auto', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'absurd', 'auto', 'apply', 'auto', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'absurd', 'auto', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'apply', 'auto', 'apply', 'auto', 'red', 'simpl', 'auto', 'rewrite', 'auto', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'absurd', 'auto', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'absurd', 'auto', 'apply', 'auto', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'absurd', 'auto', 'elim', 'intros', 'elim', ""[ intros H'3"", 'clear', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'elim', ""[ intros H'4"", 'clear', 'elim', 'intros', 'apply', 'try', 'clear', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'apply', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', ""[ intros H'3"", 'clear', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'red', 'simpl', 'rewrite', 'auto']",6,3,2,2,4,4
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_is_minusP,"['intros', 'try', 'unfold', 'case', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_pO_is_eqP,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,order_minusP,"['intros', 'elim', 'auto', 'intros', 'cut', 'try', 'auto', 'intros', 'apply', 'auto', 'change', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,canonical_minusP,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,canonical_minuspf,"['intros', 'generalize', 'intros', 'apply', 'auto']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,invTerm_eqT_comp,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,invTerm_T1_eqT_comp,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,multTerm_invTerm_T1_eqT_comp,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_is_plusP_mults,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'simpl', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'simpl', 'apply', 'auto', 'change', 'apply', 'auto', 'intros', 'apply', 'auto', 'simpl', 'apply', 'auto', 'change', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'simpl', 'apply', 'auto', 'change', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'simpl', 'apply', 'auto', 'change', 'auto', 'apply', 'auto']",2,2,1,0,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_is_pluspf_mults,"['intros', 'try', 'apply', 'auto']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,pO_minusP_inv1,"['intros', 'elim', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,pO_minusP_inv2,"['intros', 'elim', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_inv1,"['intros', 'inversion_clear', 'intros', 'apply', 'auto', 'apply', 'simpl', 'auto', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'absurd', 'auto']",1,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_inv2,"['intros', 'inversion_clear', 'intros', 'absurd', 'auto', 'absurd', 'auto', 'absurd', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto']",0,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_inv3a,"['intros', 'inversion_clear', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'simpl', 'auto', 'case', 'auto', 'absurd', 'auto']",0,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_inv3b,"['intros', 'inversion_clear', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'case', 'auto', 'apply', 'auto', 'apply', 'auto', 'absurd', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv1_eq,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv2_eq,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv3a_eq,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv3b_eq,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv1,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv2,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv3a,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_inv3b,"['intros', 'try', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_comp,"['intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,mults_dist_minuspf,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_pO_refl,"['intros', 'apply', 'auto', 'simpl', 'auto']",1,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_pOmults,"['intros', 'apply', 'auto', 'simpl', 'auto']",1,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,mults_pO,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,mults_minusTerm,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'simpl', 'auto', 'cut', 'try', 'auto', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,order_pluspf,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,order_minuspf,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_refl,"['intros', 'elim', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'intros', 'generalize', 'rewrite', 'auto', 'intros', 'absurd', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'elim', 'auto', 'rewrite', 'auto', 'intros', 'generalize', 'rewrite', 'auto', 'intros', 'absurd', 'auto']",2,2,1,2,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_refl_eq,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_refl,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,mults_comp_minuspf,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_zero,"['intros', 'try', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,pluspf_minuspf_id,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minusP_pO_refl_eq,"['unfold', 'intros', 'inversion', 'simpl', 'auto']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_pO_refl_eq,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,Opm_ind,"['intros', 'elim', 'auto', 'intros', 'elim', 'auto', 'intros', '(case (ltT_dec A n ltM ltM_dec a a0)', '[ intros temp', 'case', 'clear', 'intros', 'change', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_eq_inv1,"['intros', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'rewrite', 'auto', 'intros', 'change', 'apply', 'auto', 'apply', 'auto']",0,2,1,3,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_pOmults_eq,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,minuspf_eq_inv2,"['intros', 'elim', 'auto', 'intros', 'rewrite', 'rewrite', 'simpl', 'apply', 'auto', 'change', 'apply', 'auto', 'apply', 'auto', 'intros', 'change', 'rewrite', 'auto', 'apply', 'auto']",0,2,1,3,2,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,inv,"['intros', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,inv_prop,"['intros', 'case', 'simpl', 'auto', 'intros', 'change', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'intros', 'change', 'rewrite', 'auto', 'apply', 'auto']",0,3,1,1,3,1
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,invTerm_T1_multTerm_T1,"['apply', '[ auto | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,pluspf_is_minuspf,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Pminus.json,sminus,"['intros', 'case', 'case', 'intros', 'exists', 'auto', 'Defined']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_trans,"['unfold', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,eqT_compat_ltTr,"['unfold', 'unfold', 'intros', 'rewrite', 'auto']",2,1,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,eqT_compat_ltTl,"['unfold', 'unfold', 'intros', 'rewrite', 'auto']",2,1,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,eqT_dec,"['intros', 'unfold', 'simpl', 'auto', 'apply']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_dec,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_not_eqT,"['unfold', 'simpl', 'intros', 'rewrite', 'auto', 'apply']",1,2,0,2,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,eqT_not_ltT,"['unfold', 'simpl', 'intros', 'absurd', 'auto', 'rewrite', 'auto', 'apply']",1,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_not_refl,"['intros', 'unfold', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_not_ltT,"['intros', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_eqT,"['unfold', 'intros', 'rewrite', 'rewrite', 'auto']",2,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_eqTr,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltT_eqTl,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,multTerm_ltT_l,"['intros', 'case', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,multTerm_ltT_r,"['intros', 'case', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,T1_is_min_ltT,"['intros', 'case', 'unfold', 'simpl', 'auto', 'intros', 'unfold', 'apply', 'auto']",1,2,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,minusTerm_ltT_l,"['intros', 'case', 'case', 'case', 'unfold', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,invTerm_ltT_l,"['intros', 'case', 'case', 'unfold', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,fP_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto']",0,1,0,2,1,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olistOne,"['unfold', 'simpl', 'auto', 'intros', 'generalize', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olistO,"['unfold', 'simpl', 'auto', 'red', 'unfold', 'apply']",0,3,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,app2_inv,"['intros', 'case', 'simpl', 'auto', 'intros', 'injection', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'discriminate']",0,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olist_ltT,"['unfold', 'simpl', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'intros', 'elim', ""[ intros H'5 H'6"", 'try', 'auto', 'simple', 'discriminate', 'discriminate', 'elim', ""[ intros H'8 H'9 | idtac ]"", 'auto', 'rewrite', 'rewrite', 'auto']",0,3,0,3,3,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olist_cons,"['intros', 'pattern', 'apply', 'auto', 'intros', 'case', 'simpl', 'unfold', 'simpl', 'intros', 'try', 'apply', 'generalize', 'unfold', 'simpl', 'auto', 'apply', 'auto', 'intros', 'generalize', 'pattern', 'apply', 'unfold', 'simpl', 'auto', 'intros', 'apply', 'auto', 'generalize', 'unfold', 'simpl', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'intros', 'apply', 'generalize', 'unfold', 'intros', 'apply', 'rewrite', 'simpl', 'auto', 'generalize', 'simpl', 'auto', 'unfold', 'intros', 'rewrite', 'simpl', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto']",5,7,4,2,4,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,fp_tail,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto']",0,1,0,2,1,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,descA_subst,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olist_pX_eqT,"['unfold', 'simpl', 'auto', 'intros', 'rewrite', 'auto']",0,2,0,2,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olist_pX_order,"['intros', 'elim', ""[ intros H'5 H'6 | idtac ]"", 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olist_X,"['intros', 'elim', ""[ intros H'5 H'6 | idtac ]"", 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olist_imp_olist,"['intros', 'case', 'intros', 'elim', ""[ intros H'5 H'6 | idtac ]"", 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,fltP,"['intros', 'elim', 'auto', 'simpl', 'intros', 'apply', 'auto', 'simpl', 'intros', 'apply', 'auto', 'simpl', 'unfold', '(intros x y p1 q1 H', 'rewrite', 'simpl', 'intros', 'apply', 'auto']",2,3,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltp_not_refl,"['intros', 'elim', 'red', 'intros', 'inversion', 'intros', 'red', 'intros', 'simple', 'discriminate', 'injection', 'injection', 'intros', 'rewrite', 'rewrite', 'intros', 'apply', 'auto', 'injection', 'injection', 'intros', 'rewrite', 'rewrite', 'auto']",2,0,1,3,0,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltP_trans,"['intros', 'generalize', 'clear', 'elim', 'intros', 'case', 'auto', 'intros', 'inversion', 'intros', 'simple', 'discriminate', 'rewrite', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'rewrite', 'intros', 'apply', 'auto', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'simple', 'discriminate', 'rewrite', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'rewrite', 'intros', 'apply', 'auto', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto']",3,0,3,2,3,3
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,olist_pX_ltP,"['intros', 'case', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltP_pX_olist,"['intros', 'case', 'auto', 'intros', 'unfold', 'simpl', 'unfold', 'apply', 'auto', 'intros', 'apply', 'auto', 'simple', 'discriminate', 'injection', 'injection', 'intros', ""(rewrite H'2"", 'rewrite', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'unfold', 'intros', 'inversion']",4,2,2,2,3,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltP_order_comp,"['intros', 'inversion_clear', 'intros', 'apply', 'auto', 'apply', 'apply', 'trivial']",1,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,nZterm,"['intros', 'elim', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_imp_olist,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical0,"['intros', 'simpl', 'auto', 'split', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_ltT,"['intros', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_nzeroP,"['intros', 'red', 'intros', 'inversion', 'generalize', 'simpl', 'intuition', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_cons,"['intros', 'split', 'simpl', 'auto', 'apply', 'auto', 'repeat', 'auto', 'inversion', 'simpl', 'intuition', 'apply', 'auto']",0,1,1,0,3,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_pX_eqT,"['intros', 'split', 'auto', 'apply', 'auto', 'simpl', 'split', 'auto', 'case', 'simpl', 'intuition']",0,1,1,0,4,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_pX_order,"['intros', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_imp_canonical,"['intros', 'split', 'auto', 'apply', 'auto', 'elim', 'simpl', 'intuition']",0,0,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_skip_fst,"['intros', 'split', 'auto', 'apply', 'auto', 'inversion', 'generalize', 'simpl', 'intuition']",0,0,1,0,3,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_pX_ltP,"['intros', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,ltP_pX_canonical,"['intros', 'split', 'auto', 'apply', 'auto', 'inversion', 'generalize', 'simpl', 'case', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,not_double_canonical,"['intros', 'red', 'intros', 'try', 'absurd', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,canonical_imp_in_nzero,"['intros', 'elim', 'auto', 'intros', 'elim', 'auto', 'intros', 'rewrite', 'apply', 'auto', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,2,2,1
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,fsltP,"['intros', 'case', 'case', 'unfold', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/POrder.json,sltp_wf,"['lapply', ""[ intros H'3 | idtac ]."", 'apply', 'auto', 'red', 'auto', 'apply', 'auto', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,monExistsL1,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,monExistsL,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,monGoodR1,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,monGoodR,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'simpl', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,subPredExistsL,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,subRelGoodR,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,subRelGRBar,"['intros', 'elim', 'simpl', 'auto', 'intros', 'red', 'apply', 'auto', 'unfold', 'apply', 'auto', 'intros', 'red', 'apply', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'auto', 'unfold', 'apply', 'auto']",0,1,2,2,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,consGRBar,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,nilGRBar,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,monGRBarAux,"['intros', 'elim', 'auto', 'intros', 'red', 'rewrite', 'auto', 'intros', 'rewrite', 'auto', 'red', 'apply', 'intros', 'change', 'unfold', 'apply', 'auto']",1,0,3,2,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,monGRBar,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,tdivExists_trmHd_lem,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'lapply', ""[ intro H'3"", 'apply', 'auto', 'apply', 'auto']",0,1,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/Bar.json,tdivGoodP,"['intros', 'red', 'intros', 'inversion', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/OpenIndGoodRel.json,OpenInd,"['intros', 'red', 'apply', 'auto', 'intros', 'elim', 'auto', 'intros', 'red', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reducestar_eqp_com,"['intros', 'inversion', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,mks,"['intros', 'exists', 'exact', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,selectdivf,"['intros', 'elim', 'auto', 'right', 'intros', 'inversion_clear', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'left', 'exists', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'try', 'clear', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'intros', 'right', 'intros', 'inversion_clear', 'auto', 'apply', 'auto', 'intros', 'case', 'auto', 'apply', 'auto', 'intros', 'left', 'exists', 'auto', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'change', 'apply', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'left', 'exists', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'try', 'clear', 'exists', 'exists', 'split', '[ idtac | split ]', 'auto', 'apply', 'auto', 'right', 'intros', 'generalize', 'inversion_clear', 'eauto']",1,0,1,0,3,5
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,selectpolyf,"['intros', 'elim', 'intros', 'right', 'change', 'apply', 'auto', 'intros', 'cut', '[ intros C0 | apply canonical_imp_canonical with (a := a)', 'auto', 'cut', '[ intros Z0 | apply canonical_nzeroP with (p := l) (ltM := ltM)', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'left', 'absurd', 'auto', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'inversion', 'clear', 'cut', '[ intros nZt | idtac ].', 'exists', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'change', 'apply', 'auto', 'rewrite', 'auto', 'apply', 'apply', 'auto', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'try', 'clear', 'lapply', ""[ intros H'1"", 'case', 'clear', 'intros', 'case', 'intros', 'left', 'exists', 'change', 'apply', 'auto', 'intros', 'right', 'change', 'intros', 'red', 'intros', 'generalize', 'inversion_clear', 'intros', 'lapply', ""[ intros H'7"", 'apply', 'auto', 'intros', 'absurd', 'auto', 'auto']",1,0,2,1,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reduce0_reducestar,"['intros', 'generalize', 'intros', 'elim', 'simpl', 'intros', 'exists', 'try']",3,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reducestar_trans,"['intros', 'inversion', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reducestar_reduceplus,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reducestar_irreducible,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reducestar_inv,"['intros', 'elim', 'intros', 'inversion', 'intros', 'left', 'split', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'right', 'exists', 'split', 'auto', 'apply', 'auto']",0,0,1,0,3,4
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,pO_reducestar,"['intros', 'cut', '[ intros Red1 | apply reducestar_reduceplus', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reducestar_pO_is_pO,"['intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,reducestar_in_pO,"['intros', 'cut', '[ intros Op0 | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto']",0,1,1,0,2,0
/mnt/cisk/zmq/dataset/data/buchberger/Preducestar.json,pickinSet,"['intros', 'elim', 'right', 'intros', 'inversion_clear', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'auto', 'intros', 'left', 'inversion_clear', 'exists', 'auto', 'apply', 'auto', 'intros', 'right', 'intros', 'inversion_clear', 'intros', 'red', 'intros', 'lapply', ""[ intros H'7"", 'lapply', ""[ intros H'8"", 'clear', 'auto', 'intros', 'case', 'auto', 'apply', 'auto', 'intros', 'left', 'exists', 'auto', 'change', 'unfold', 'auto', 'apply', 'auto', 'intros', 'case', 'intros', 'inversion', 'left', 'exists', 'auto', 'apply', 'auto', 'right', 'intros', 'inversion_clear', 'auto', 'intros', 'red', 'intros', 'apply', 'injection', 'intros', 'rewrite', 'auto', 'Defined']",1,0,1,2,3,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,addEnd,"['intros', 'elim', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,addEnd_cons,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', ""[ intros H'0"", 'rewrite', 'clear', 'auto', 'intros', 'case', ""[ intros H'1"", 'rewrite', 'clear', 'clear', 'auto', 'case', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,addEnd_id1,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,addEnd_id2,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,addEnd_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'auto']",0,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,spolyp,"['intros', 'case', 'case', 'intros', 'exists', 'auto', 'apply', 'auto', 'Defined']",0,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,red_com,"['intros', 'case', 'case', 'simpl', 'unfold', 'simpl', 'intros', 'inversion', 'cut', '[ intros Op1 | apply spolyf_canonical with (1 := cs) ]', 'auto', 'cut', '[ intros Op2 | apply spolyf_canonical with (1 := cs) ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,4,1,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,rstar_rtopO,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,spO,"['exists', 'simpl', 'auto', 'Defined']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,sp1,"['exists', 'auto', 'Defined']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,sgen,"['intros', 'exists', 'apply', 'auto', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,sscal,"['intros', 'case', 'intros', 'exists', 'auto', 'unfold', 'case', 'simpl', 'auto']",0,2,0,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,red_cons,"['intros', 'case', 'case', 'unfold', 'simpl', 'intros', 'inversion', 'auto', 'apply', 'auto', 'case', 'unfold', 'simpl', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'red', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto']",2,2,2,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,red_id,"['intros', 'case', 'unfold', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,2,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,inP_reduce,"['intros', 'elim', 'auto', 'intros', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,inP_reduceplus,"['intros', 'elim', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,inP_reducestar,"['intros', 'inversion', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,red_incl,"['unfold', 'intros', 'inversion', 'apply', 'auto', 'case', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto']",3,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,zerop,"['intros', 'case', 'intros', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,zerop_dec,"['intros', 'case', 'intros', 'case', 'intros', 'left', 'simpl', 'auto', 'intros', 'right', 'red', 'intros', 'inversion']",0,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,divp,"['intros', 'case', 'intros', 'case', 'intros', 'exact', 'intros', 'case', 'intros', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,divp_trans,"['red', 'intros', 'case', 'case', 'case', 'intros', 'generalize', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'elim', 'intros', 'apply', 'auto']",2,2,1,0,1,4
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,divp_dec,"['intros', 'case', 'case', 'intros', 'generalize', 'case', 'case', 'simpl', 'intros', 'right', 'red', 'intros', 'elim', 'intros', 'right', 'red', 'intros', 'elim', 'intros', 'right', 'red', 'intros', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,2,1,0,1,4
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,ppcp,"['intros', 'case', 'intros', 'case', 'intros', 'exists', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'exists', 'auto', 'intros', 'exists', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'Defined']",0,0,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,divp_ppc,"['intros', '(case a', 'case', 'case', 'intros', 'generalize', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto']",2,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,zerop_ddivp_ppc,"['intros', '(case a', 'case', 'intros', 'generalize', 'case', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,2,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,divp_nzeropl,"['intros', '(case a', 'case', 'intros', 'generalize', 'case', 'case', 'simpl', 'auto']",1,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,divp_nzeropr,"['intros', '(case a', 'case', 'intros', 'generalize', 'case', 'case', 'simpl', 'auto']",1,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,reducetopO_pO,"['intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,zerop_red_spoly_l,"['intros', '(case a', 'case', 'intros', 'generalize', 'case', 'case', 'simpl', 'auto', 'intros', 'unfold', 'simpl', 'auto', 'intros', 'elim', 'intros', 'unfold', 'simpl', 'auto', 'intros', 'elim']",2,3,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,zerop_red_spoly_r,"['intros', '(case a', 'case', 'intros', 'generalize', 'case', 'case', 'simpl', 'auto', 'intros', 'unfold', 'simpl', 'auto', 'intros', 'unfold', 'simpl', 'auto', 'intros', 'elim', 'intros', 'elim']",2,3,0,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,Cb,"['intros', 'case', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,Cb_id,"['intros', 'case', 'simpl', 'intros', 'case', 'auto', 'intros', 'replace', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'change', 'apply', 'auto', 'red', 'intros', 'inversion']",2,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,inPolySet_addEnd,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'right', 'exact', 'case', 'auto', 'intros', 'right', 'try', 'apply', 'auto']",0,1,2,0,1,3
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,Cb_trans,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,Cb_incl,"['intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,Cb_in1,"['intros', 'apply', 'simpl', 'auto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,Cb_in,"['intros', 'apply', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,Cb_sp,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'intros', 'cut', '[ intros Z0 | apply canonical_nzeroP with (ltM := ltM) (p := l)', 'auto', 'cut', '[ intros Z1 | apply canonical_nzeroP with (ltM := ltM) (p := l0)', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto']",0,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,unit,"['intros', 'case', 'intros', 'case', 'intros', 'exact', 'intros', 'case', 'intros', 'cut', 'intros', 'exact', 'inversion', 'auto', 'simpl', 'intuition', 'Defined']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,unit_T1,"['unfold', 'intros', 'case', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto']",2,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,divA_nZ,"['intros', 'red', 'intros', 'auto', 'case', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,unit_nZ,"['intros', 'case', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto']",0,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,nf,"['intros', 'case', 'intros', 'apply', 'intros', 'case', 'intros', 'exists', 'auto', 'apply', 'auto', 'apply', 'auto', 'Defined']",2,0,2,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,nf_irreducible,"['unfold', 'intros', 'case', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'red', 'red', 'red', 'intros', 'intros', 'auto', 'cut', '[ intros nZd | idtac ]', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,nf_red,"['intros', 'case', 'simpl', 'unfold', 'unfold', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'inversion', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'inversion', 'inversion', 'auto']",1,5,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,red_zerop,"['unfold', 'intros', 'case', 'intros', 'case', 'auto', 'unfold', 'auto', 'intros', 'case', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'simpl', 'change', 'inversion', 'inversion', 'inversion', 'simpl', 'cut', '[ intros nZd | idtac ]', 'auto', 'case', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,2,1,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,zerop_red,"['intros', 'apply', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'red', 'simpl', 'auto', 'intros', 'elim', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,canonical_s2p,"['intros', 'case', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,nf_Cb,"['intros', 'case', 'unfold', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intros', 'change', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,foreigner,"['intros', 'case', 'case', 'intros', 'case', 'intros', 'exact', 'intros', 'case', 'intros', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,foreigner_dec,"['intros', 'case', 'case', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'Defined']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/BuchAux.json,foreigner_red,"['intros', 'case', 'case', 'intros', 'case', 'simpl', 'auto', 'unfold', 'simpl', 'auto', 'intros', 'case', 'unfold', 'simpl', 'auto', 'unfold', 'simpl', 'auto', 'intros', 'unfold', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'change', 'apply', 'auto', 'red', 'intros', 'inversion', 'auto', 'change', 'apply', 'auto', 'red', 'intros', 'inversion', 'auto', 'apply', 'auto']",1,3,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm,"['intros', 'case', 'intros', 'case', 'intros', 'simpl', 'intros', 'exact', 'Defined']",2,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,eqT_divTerm_plusTerm,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'case', 'intros', 'clear', 'case', 'intros', 'clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_invTerm_l,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'case', 'intros', 'clear', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply']",0,2,2,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_invTerm_r,"['intros', 'case', 'case', 'simpl', 'auto', 'split', 'auto', 'apply', 'auto']",0,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,eqT_divTerm,"['intros', 'case', 'case', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'rewrite', 'rewrite', 'auto']",0,2,0,3,1,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,eqTerm_divTerm_comp,"['intros', 'case', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'case', 'intros', 'clear', 'case', 'intros', 'clear', 'split', 'auto', 'rewrite', 'rewrite', 'auto']",0,2,0,2,3,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_multTerm_l,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'case', 'intros', 'auto', 'split', 'auto', 'apply', 'rewrite', 'repeat', 'rewrite', 'repeat', 'auto']",0,2,1,0,4,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_multTerm_r,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'elim', 'intros', 'rewrite', 'clear', 'rewrite', 'auto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",0,2,0,3,4,4
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,div_is_T1,"['intros', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'unfold', 'apply', 'auto']",0,2,3,0,3,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_nZ,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_eqT,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'case', 'intros', 'split', 'auto', 'apply', 'auto', 'unfold', 'simpl', 'rewrite', 'auto']",0,4,1,1,4,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,gb,"['intros', 'case', 'auto', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,gm,"['intros', 'case', 'auto', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,mk_clean,"['intros', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_dec,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'left', 'simpl', 'auto', 'generalize', 'rewrite', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'intros', 'right', 'red', 'intros', 'inversion', 'generalize', 'simpl', 'auto', 'intros', 'lapply', ""[ intros H'0"", 'apply', 'clear', 'rewrite', 'auto', 'rewrite', 'simpl', 'auto']",0,3,1,1,4,4
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,zeroP_divTerm,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'auto', 'apply', 'auto', 'apply']",0,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_on_eqT,"['intros', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'rewrite', 'split', 'auto', 'apply', 'auto', 'rewrite', 'auto', 'rewrite', 'auto']",0,2,1,2,4,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_on_eqT_eqT,"['intros', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'auto']",0,2,0,2,2,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_on_plusM_minusM,"['intros', 'case', 'case', 'simpl', 'auto', 'split', 'auto', 'apply', 'auto']",0,2,1,0,2,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,ppc,"['intros', 'case', 'intros', 'case', 'intros', 'simpl', 'exact', 'Defined']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,ppc_com,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_ppc,"['intros', 'case', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply', 'intuition']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_ppcl,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_ppcr,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'split', 'auto', 'apply', 'auto', 'apply']",0,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,ppc_nZ,"['intros', 'case', 'case', 'simpl', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_rew,"['intros', 'case', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'auto']",0,2,0,2,1,2
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_inv1,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_inv2,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_inv3,"['intros', 'inversion', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_plusTerm,"['intros', 'inversion', 'inversion', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_invTerm_l,"['intros', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_invTerm_r,"['intros', 'inversion', 'cut', '[ intros nZib | auto ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_multTerml,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_multTermr,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_nZero,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_on_eqT,"['intros', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_on_eqT_eqT,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,ppc_is_ppcm,"['intros', 'apply', 'auto', 'intros', 'inversion', 'inversion', 'cut', '[ intros nZppab | auto ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,ppc_multTerm_divP,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_comp,"['intros', 'generalize', 'elim', 'intros', 'auto', 'cut', '[ intros nZd0 | auto ].', 'apply', 'auto', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'red', 'intros', 'absurd', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_multTerm_l,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_multTerm_r,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_ppcl,"['intros', 'try', 'lapply', ""[ intros H'3"", 'lapply', 'clear', ""[ intros H'4 | idtac ] | idtac ]"", 'auto', 'auto', 'inversion', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_ppcr,"['intros', 'try', 'lapply', ""[ intros H'3"", 'lapply', 'clear', ""[ intros H'4 | idtac ] | idtac ]"", 'auto', 'auto', 'inversion', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divTerm_compo,"['intros', 'inversion', 'intros', 'inversion', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_comp_ppc0,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_comp_ppc1,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_dec,"['intros', 'elim', 'auto', 'intros', 'left', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,divP_eqT,"['intros', 'inversion', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,eqTerm_multTerm_imp_eqTerm,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,multTerm_eqTerm_inv,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,eqT_nzero_divP,"['intros', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/buchberger/DivTerm.json,eqT_nzero_eqT_divP,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,inv_hmap_L_B,"['intros', 'simpl', 'unfold', 'split', 'generalize', 'tauto', 'split', 'generalize', 'generalize', 'tauto', 'split', 'generalize', 'generalize', 'tauto', 'split', 'unfold', 'rewrite', 'tauto', 'tauto', 'split', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'rewrite', 'elim', 'intro', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto']",1,1,0,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,exd_L_B,"['simpl', 'intros', 'generalize', 'tauto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,A_L_B,"['induction', 'simpl', 'intros', 'unfold', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'intros', 'elim', 'elim', 'intro', 'rewrite', 'intro', 'rewrite', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'intro', 'symmetry', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'tauto', 'intro', 'symmetry', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'rewrite', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'intro', 'symmetry', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'elim', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'simpl', 'intros', 'rewrite', 'tauto', 'tauto']",5,5,0,3,5,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,A_1_L_B,"['induction', 'simpl', 'intros', 'unfold', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'intros', 'elim', 'elim', 'intro', 'rewrite', 'intro', 'rewrite', 'rewrite', 'auto', 'tauto', 'simpl', 'unfold', 'tauto', 'intros', 'simpl', 'rewrite', 'rewrite', 'auto', 'auto', 'tauto', 'intro', 'symmetry', 'tauto', 'simpl', 'intro', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'unfold', 'unfold', 'intros', 'simpl', 'generalize', 'clear', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'elim', 'elim', 'elim', 'symmetry', 'tauto', 'tauto', 'elim', 'tauto', 'tauto', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'symmetry', 'tauto', 'tauto', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'symmetry', 'tauto', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto']",6,6,0,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,F_L_B,"['intros', 'unfold', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",1,1,0,2,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,cA_L_B,"['simpl', 'intros', 'elim', 'intro', 'elim', 'rewrite', 'intro', 'rewrite', 'rewrite', 'generalize', 'intros', 'symmetry', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'rewrite', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'clear', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'rewrite', 'elim', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'rewrite', 'generalize', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",3,1,1,3,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,cA_1_L_B,"['simpl', 'intros', 'elim', 'intro', 'elim', 'rewrite', 'intro', 'rewrite', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'generalize', 'clear', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'generalize', 'elim', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",3,2,1,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,cF_L_B,"['simpl', 'unfold', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",2,1,0,2,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,Iter_cF_L_B,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto']",0,2,0,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,expfo_expf,"['unfold', 'unfold', 'unfold', 'simpl', 'unfold', 'unfold', 'unfold', 'intros', 'unfold', 'unfold', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'split', 'intros', 'decompose', 'clear', 'split', 'tauto', 'generalize', 'split', 'tauto', 'elim', 'intros', 'split', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'intro', 'decompose', 'clear', 'split', 'split', 'apply', 'tauto', 'split', 'generalize', 'tauto', 'split', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'split', 'rewrite', 'tauto', 'tauto', 'split', 'rewrite', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'split', 'generalize', 'tauto', 'elim', 'intros', 'split', 'rewrite', 'tauto', 'tauto', 'tauto']",3,3,1,0,5,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,eqc_B_CN,"['induction', 'simpl', 'unfold', 'simpl', 'tauto', 'rename', 'unfold', 'simpl', 'intros', 'unfold', 'intros', 'unfold', 'decompose', 'clear', 'generalize', 'intros', 'intuition', 'unfold', 'simpl', 'unfold', 'intros', 'generalize', 'clear', 'decompose', 'clear', 'rename', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'simpl', 'intros', 'unfold', 'elim', 'intro', 'generalize', 'tauto', 'intro', 'elim', 'intros', 'decompose', 'clear', 'clear', 'generalize', 'generalize', 'intros', 'elim', 'elim', 'intros', 'tauto', 'intros', 'elim', 'intros', 'clear', 'tauto', 'intro', 'clear', 'tauto', 'intros', 'elim', 'clear', 'intro', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'tauto', 'intro', 'clear', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'tauto', 'intro', 'clear', 'clear', 'decompose', 'clear', 'generalize', 'generalize', 'intros', 'elim', 'intro', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'clear', 'intro', 'tauto', 'tauto', 'simpl', 'intros', 'unfold', 'elim', 'intro', 'generalize', 'tauto', 'intro', 'elim', 'intros', 'decompose', 'clear', 'clear', 'generalize', 'generalize', 'intros', 'elim', 'elim', 'intros', 'tauto', 'intros', 'elim', 'intros', 'clear', 'tauto', 'intro', 'clear', 'tauto', 'intros', 'elim', 'clear', 'intro', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'tauto', 'intro', 'clear', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'tauto', 'intro', 'clear', 'clear', 'decompose', 'clear', 'generalize', 'generalize', 'intros', 'elim', 'intro', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'elim', 'intro', 'tauto', 'intro', 'elim', 'clear', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'clear', 'intro', 'tauto', 'tauto']",7,4,1,1,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,eqc_B_CS,"['induction', 'simpl', 'unfold', 'simpl', 'tauto', 'rename', 'unfold', 'simpl', 'intros', 'unfold', 'decompose', 'clear', 'generalize', 'simpl', 'intros', 'assert', 'intro', 'rewrite', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'rewrite', 'elim', 'apply', 'tauto', 'unfold', 'tauto', 'intuition', 'unfold', 'simpl', 'unfold', 'intros', 'unfold', 'decompose', 'clear', 'rename', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'simpl', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'generalize', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'generalize', 'tauto', 'intro', 'clear', 'generalize', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'decompose', 'clear', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'intro', 'clear', 'intuition', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'elim', 'generalize', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'generalize', 'tauto', 'intro', 'clear', 'generalize', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'decompose', 'clear', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'intro', 'clear', 'intuition', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto']",5,4,2,3,5,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,eqc_B,"['simpl', 'intros', 'split', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'tauto']",1,1,0,0,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,eqco_eqc,"['unfold', 'simpl', 'intros', 'generalize', 'simpl', 'tauto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,eqc_B_eqc,"['unfold', 'induction', 'simpl', 'tauto', 'rename', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'intro', 'tauto', 'intro', 'right', 'apply', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'rename', 'elim', 'elim', 'intros', 'tauto', 'simpl', 'intros', 'intuition', 'left', 'apply', 'tauto', 'tauto', 'tauto', 'right', 'left', 'generalize', 'generalize', 'tauto', 'generalize', 'generalize', 'tauto', 'simpl', 'intros', 'generalize', 'generalize', 'generalize', 'generalize', 'generalize', 'tauto']",5,4,0,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan4.json,eqc_eqc_B,"['intros', 'generalize', 'intro', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'eapply', 'tauto', 'apply', 'apply', 'tauto', 'tauto']",2,0,1,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_exd_exd,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'decompose', 'rewrite', 'rewrite', 'tauto', 'generalize', 'tauto', 'simpl', 'intros', 'generalize', 'generalize', 'generalize', 'generalize', 'generalize', 'tauto']",2,2,0,1,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_dec,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'tauto', 'elim', 'elim', 'tauto', 'tauto', 'tauto', 'simpl', 'intros', 'elim', 'tauto', 'elim', 'elim', 'tauto', 'elim', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'tauto', 'tauto']",1,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_refl,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'generalize', 'intro', 'assert', 'intro', 'symmetry', 'tauto', 'tauto', 'simpl', 'intros', 'generalize', 'tauto']",3,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_symm,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'tauto', 'intro', 'generalize', 'tauto', 'simpl', 'intros', 'elim', 'left', 'apply', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'right', 'split', 'apply', 'tauto', 'apply', 'tauto', 'intros', 'right', 'left', 'split', 'apply', 'tauto', 'apply', 'tauto']",2,2,0,0,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_cA_r,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'generalize', 'intros', 'symmetry', 'tauto', 'intro', 'generalize', 'tauto', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'right', 'left', 'split', 'apply', 'rewrite', 'tauto', 'apply', 'tauto', 'intro', 'elim', 'intro', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'right', 'right', 'rewrite', 'generalize', 'generalize', 'tauto', 'intro', 'generalize', 'tauto', 'generalize', 'tauto']",5,3,1,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_cA_1_r,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'generalize', 'intros', 'symmetry', 'tauto', 'intro', 'generalize', 'tauto', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'right', 'right', 'split', 'apply', 'tauto', 'apply', 'tauto', 'intro', 'elim', 'intro', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'right', 'left', 'rewrite', 'generalize', 'generalize', 'tauto', 'intro', 'generalize', 'tauto', 'generalize', 'tauto']",5,3,0,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_eqc_cA,"['intros', 'apply', 'tauto', 'apply', 'tauto', 'generalize', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_eqc_cA_1,"['intros', 'apply', 'tauto', 'apply', 'tauto', 'generalize', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_cA_1_eqc,"['intros', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'generalize', 'intros', 'generalize', 'tauto', 'tauto']",3,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_cA_eqc,"['intros', 'generalize', 'intros', 'apply', 'tauto', 'apply', 'apply', 'generalize', 'intros', 'generalize', 'tauto']",3,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eqc_eqc_cF,"['unfold', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'eapply', 'tauto', 'tauto']",2,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,exd_Iter_cF,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'generalize', 'tauto']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,expf_eqc,"['intros', 'assert', 'unfold', 'tauto', 'assert', 'tauto', 'unfold', 'rewrite', 'intuition', 'elim', 'intros', 'rewrite', 'apply', 'tauto', 'tauto']",0,0,0,3,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,inv_hmap_dec,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'generalize', 'generalize', 'tauto', 'simpl', 'unfold', 'generalize', 'generalize', 'generalize', 'generalize', 'generalize', 'tauto']",0,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,expf_dec,"['unfold', 'intros', 'generalize', 'generalize', 'tauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,even_ec,"['unfold', 'induction', 'simpl', 'tauto', 'simpl', 'cut', 'intros', 'rewrite', 'apply', 'apply', 'tauto', 'omega', 'induction', 'simpl', 'unfold', 'elim', 'intro', 'assert', 'omega', 'rewrite', 'tauto', 'intro', 'assert', 'unfold', 'omega', 'rewrite', 'intros', 'apply', 'apply', 'tauto', 'simpl', 'unfold', 'elim', 'intro', 'symmetry', 'tauto', 'intros', 'elim', 'intro', 'assert', 'omega', 'rewrite', 'tauto', 'intro', 'assert', 'unfold', 'omega', 'rewrite', 'apply', 'apply', 'tauto']",2,2,1,2,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,genus_corollary,"['intros', 'unfold', 'generalize', 'generalize', 'generalize', 'generalize', 'intros', 'intros', 'cut', 'intro', 'omega', 'assert', 'apply', 'tauto', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'assert', 'apply', 'omega', 'rewrite', 'tauto']",2,0,1,1,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,Euler_Poincare,"['unfold', 'unfold', 'intros', 'omega']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planar_dec,"['unfold', 'intro', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planar_V,"['unfold', 'unfold', 'unfold', 'simpl', 'tauto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planar_I,"['unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'assert', 'omega', 'rewrite', 'rewrite', 'omega', 'omega']",1,3,0,1,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,plf_planar,"['induction', 'simpl', 'intros', 'apply', 'simpl', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'induction', 'simpl', 'intros', 'decompose', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'simpl', 'intros', 'decompose', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,plf_Euler_Poincare,"['intros', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",1,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planarity_criterion_RCP_0,"['unfold', 'unfold', 'unfold', 'simpl', 'intros', 'unfold', 'elim', 'tauto', 'elim', 'intros', 'assert', 'omega', 'rewrite', 'generalize', 'generalize', 'intros', 'assert', 'omega', 'rewrite', 'rewrite', 'absurd', 'omega', 'tauto', 'omega', 'tauto']",3,3,0,1,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planarity_criterion_RCP_1,"['unfold', 'unfold', 'unfold', 'simpl', 'intros', 'unfold', 'elim', 'tauto', 'elim', 'intros', 'assert', 'omega', 'rewrite', 'generalize', 'generalize', 'intros', 'assert', 'apply', 'auto', 'assert', 'omega', 'rewrite', 'assert', 'omega', 'rewrite', 'absurd', 'omega', 'tauto', 'tauto']",3,3,2,0,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planarity_criterion_0,"['intros', 'split', 'intro', 'simpl', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'simpl', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto']",1,1,0,0,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planarity_criterion_1,"['intros', 'split', 'intro', 'simpl', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'simpl', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto']",1,1,0,0,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,incr_genus,"['induction', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,inversion_planarity,"['unfold', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'omega']",2,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,eq_genus_I,"['unfold', 'unfold', 'simpl', 'intros', 'assert', 'omega', 'rewrite', 'rewrite', 'omega', 'omega']",1,3,0,1,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,planar_plf,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'simpl', 'apply', 'tauto', 'rewrite', 'tauto', 'simpl', 'tauto', 'induction', 'simpl', 'simpl', 'generalize', 'tauto', 'simpl', 'simpl', 'generalize', 'tauto']",0,2,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,Euler_Poincare_plf,"['intros', 'apply', 'tauto', 'unfold', 'omega']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan3.json,Euler_Poincare_criterion,"['intros', 'split', 'apply', 'tauto', 'apply', 'tauto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,eq_dim_dec,"['double', 'tauto', 'right', 'discriminate', 'right', 'discriminate', 'tauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,Req_dec_1,"['intros', 'generalize', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,eq_point_dec,"['intros', 'unfold', 'elim', 'elim', 'simpl', 'intros', 'generalize', 'generalize', 'tauto']",3,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,empty_dec,"['intro', 'induction', 'simpl', 'tauto', 'simpl', 'tauto', 'right', 'intro', 'inversion', 'Defined']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_dec,"['induction', 'right', 'intro', 'inversion', 'intro', 'simpl', 'elim', 'left', 'simpl', 'tauto', 'intro', 'elim', 'tauto', 'tauto', 'intro', 'elim', 'left', 'simpl', 'assumption', 'simpl', 'tauto', 'Defined']",1,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,succ_dec,"['intros', 'unfold', 'elim', 'tauto', 'tauto', 'Defined']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,pred_dec,"['intros', 'unfold', 'elim', 'tauto', 'tauto', 'Defined']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_nil,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'tauto', 'simpl', 'tauto']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_not_nil,"['intros', 'elim', 'intro', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'tauto']",0,0,1,1,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_A_nil,"['intros', 'elim', 'tauto', 'intros', 'generalize', 'intro', 'unfold', 'absurd', 'tauto', 'eapply', 'tauto', 'assumption']",3,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_A_1_nil,"['intros', 'elim', 'tauto', 'intros', 'generalize', 'intro', 'unfold', 'absurd', 'tauto', 'eapply', 'tauto', 'assumption']",3,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_nil,"['intros', 'apply', 'tauto', 'apply', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_1_nil,"['intros', 'apply', 'tauto', 'apply', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,succ_exd_A,"['induction', 'simpl', 'unfold', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'intros', 'simpl', 'generalize', 'clear', 'intro', 'right', 'apply', 'tauto', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",5,4,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,pred_exd_A_1,"['induction', 'simpl', 'unfold', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'intros', 'simpl', 'generalize', 'clear', 'intro', 'right', 'apply', 'tauto', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",5,4,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,inj_A,"['intros', 'unfold', 'intros', 'assert', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto']",3,0,0,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,inj_A_1,"['intros', 'unfold', 'intros', 'assert', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto']",3,0,0,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,succ_pred_clos,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'unfold', 'rewrite', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'elim', 'intros', 'split', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'split', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'rewrite', 'elim', 'intros', 'generalize', 'tauto', 'intro', 'generalize', 'tauto', 'elim', 'intros', 'split', 'generalize', 'tauto', 'elim', 'intros', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'tauto', 'intros', 'generalize', 'tauto', 'intros', 'split', 'generalize', 'tauto', 'elim', 'intros', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'tauto', 'intros', 'generalize', 'tauto', 'intros', 'generalize', 'tauto']",5,3,0,2,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_cA_cA_1,"['induction', 'simpl', 'tauto', 'simpl', 'intro', 'unfold', 'intros', 'elim', 'tauto', 'generalize', 'tauto', 'intros', 'simpl', 'unfold', 'intros', 'elim', 'intro', 'elim', 'intro', 'split', 'tauto', 'elim', 'tauto', 'elim', 'intros', 'generalize', 'tauto', 'generalize', 'tauto', 'intro', 'elim', 'split', 'generalize', 'tauto', 'elim', 'tauto', 'elim', 'generalize', 'tauto', 'generalize', 'tauto', 'split', 'generalize', 'tauto', 'elim', 'tauto', 'elim', 'generalize', 'tauto', 'generalize', 'tauto', 'generalize', 'tauto']",6,2,0,0,2,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_cA,"['intros', 'elim', 'tauto', 'intro', 'elim', 'apply', 'tauto', 'tauto']",1,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_cA_1,"['intros', 'elim', 'tauto', 'intro', 'elim', 'apply', 'tauto', 'tauto']",1,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_cA,"['intros', 'generalize', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_cA_1,"['intros', 'generalize', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_cA,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'unfold', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'generalize', 'intros', 'rewrite', 'symmetry', 'tauto', 'elim', 'intros', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'intros', 'rewrite', 'generalize', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",9,3,0,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_cA_1,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'unfold', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'generalize', 'intros', 'rewrite', 'symmetry', 'tauto', 'elim', 'intros', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'intros', 'rewrite', 'generalize', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",9,3,0,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,inj_cA,"['intros', 'unfold', 'intros', 'assert', 'symmetry', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",3,0,1,2,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,inj_cA_1,"['intros', 'unfold', 'intros', 'assert', 'symmetry', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",3,0,1,2,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,fixpt_cA_cA_1,"['induction', 'simpl', 'tauto', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'unfold', 'tauto', 'intros', 'unfold', 'unfold', 'simpl', 'unfold', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'intros', 'absurd', 'tauto', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'absurd', 'tauto', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'intros', 'split', 'assert', 'assert', 'generalize', 'tauto', 'symmetry', 'rewrite', 'assert', 'apply', 'tauto', 'unfold', 'generalize', 'intros', 'apply', 'tauto', 'tauto', 'symmetry', 'tauto', 'symmetry', 'tauto', 'generalize', 'unfold', 'unfold', 'tauto', 'elim', 'intros', 'generalize', 'unfold', 'unfold', 'intros', 'assert', 'assert', 'tauto', 'rewrite', 'assert', 'apply', 'tauto', 'unfold', 'generalize', 'intros', 'symmetry', 'tauto', 'symmetry', 'tauto', 'intros', 'generalize', 'tauto', 'intros', 'generalize', 'tauto']",8,5,1,3,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_cA,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'intuition', 'rewrite', 'generalize', 'rewrite', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'rewrite', 'tauto', 'intuition', 'rewrite', 'absurd', 'tauto', 'rewrite', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'simpl', 'unfold', 'elim', 'elim', 'tauto', 'elim', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",5,2,1,5,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_1_cA_1,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'intuition', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'rewrite', 'tauto', 'intuition', 'rewrite', 'elim', 'rewrite', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'simpl', 'unfold', 'elim', 'elim', 'tauto', 'elim', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",5,2,1,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,surj_cA,"['unfold', 'intros', 'split', 'split', 'generalize', 'tauto', 'apply', 'tauto', 'tauto']",2,0,0,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,surj_cA_1,"['unfold', 'intros', 'split', 'split', 'generalize', 'tauto', 'apply', 'tauto', 'tauto']",2,0,0,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bij_cA,"['unfold', 'intros', 'split', 'apply', 'tauto', 'apply', 'tauto']",2,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bij_cA_1,"['unfold', 'intros', 'split', 'apply', 'tauto', 'apply', 'tauto']",2,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_D,"['induction', 'simpl', 'tauto', 'simpl', 'intro', 'unfold', 'elim', 'intros', 'rewrite', 'tauto', 'simpl', 'intros', 'generalize', 'tauto', 'simpl', 'intros', 'apply', 'tauto']",3,2,0,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_D,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'unfold', 'elim', 'intro', 'rewrite', 'tauto', 'simpl', 'generalize', 'tauto', 'intros', 'simpl', 'apply', 'simpl', 'tauto', 'tauto']",4,4,0,1,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_B,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'generalize', 'tauto', 'simpl', 'intros', 'elim', 'elim', 'generalize', 'tauto', 'simpl', 'generalize', 'tauto', 'simpl', 'intro', 'apply']",2,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_B_1,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'generalize', 'tauto', 'simpl', 'intros', 'elim', 'elim', 'generalize', 'tauto', 'simpl', 'generalize', 'tauto', 'simpl', 'intro', 'apply']",2,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_succ_B,"['induction', 'simpl', 'tauto', 'unfold', 'simpl', 'intros', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'unfold', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto']",6,4,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_pred_B_1,"['induction', 'simpl', 'tauto', 'unfold', 'simpl', 'intros', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'unfold', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto']",6,4,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_B,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'simpl', 'intros', 'elim', 'elim', 'intros', 'unfold', 'rewrite', 'rewrite', 'unfold', 'elim', 'tauto', 'intro', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'apply', 'tauto']",4,2,0,3,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_B_bis,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'intros', 'simpl', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'apply', 'tauto']",4,2,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_B_ter,"['induction', 'simpl', 'tauto', 'simpl', 'tauto', 'intros', 'simpl', 'elim', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'intros', 'apply', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'intros', 'apply', 'tauto']",3,1,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,B_not_exd,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'fold', 'unfold', 'fold', 'intros', 'simpl', 'elim', 'elim', 'intros', 'unfold', 'rewrite', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto']",3,2,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,B_nil,"['intros', 'apply', 'tauto', 'apply', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,B_1_not_exd,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'fold', 'unfold', 'fold', 'intros', 'simpl', 'elim', 'elim', 'intros', 'unfold', 'rewrite', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto']",3,2,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,B_1_nil,"['intros', 'apply', 'tauto', 'apply', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_1_B,"['intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'simpl', 'elim', 'elim', 'intros', 'unfold', 'unfold', 'elim', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'intros', 'unfold', 'assert', 'rewrite', 'symmetry', 'apply', 'tauto', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'rewrite', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'tauto']",4,3,1,4,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_1_B_bis,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'simpl', 'elim', 'elim', 'elim', 'intro', 'symmetry', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto']",4,2,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_1_B_ter,"['induction', 'simpl', 'tauto', 'simpl', 'tauto', 'intros', 'simpl', 'elim', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'intros', 'apply', 'tauto']",3,1,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_1_B_1,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'simpl', 'intros', 'elim', 'elim', 'intros', 'unfold', 'rewrite', 'rewrite', 'unfold', 'elim', 'tauto', 'intro', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'apply', 'tauto']",4,2,0,3,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_1_B_1_bis,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'simpl', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto']",4,2,0,1,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_B_1,"['intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'simpl', 'elim', 'elim', 'intros', 'unfold', 'unfold', 'elim', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'intros', 'unfold', 'assert', 'rewrite', 'symmetry', 'apply', 'tauto', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'rewrite', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'tauto']",4,3,1,4,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_B_1_bis,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'simpl', 'elim', 'elim', 'elim', 'intro', 'symmetry', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto']",4,2,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,A_B_1_ter,"['induction', 'simpl', 'tauto', 'simpl', 'tauto', 'intros', 'simpl', 'elim', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'intros', 'apply', 'tauto']",3,1,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_nil,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto']",4,3,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_nil,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto']",4,3,0,2,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_top,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",5,3,0,1,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_exd_bottom,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",5,3,0,1,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_top,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'tauto', 'intros', 'generalize', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",5,2,0,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,exd_bottom,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'tauto', 'intros', 'generalize', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",5,2,0,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,nosucc_top,"['induction', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'intros', 'elim', 'tauto', 'intro', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'decompose', 'generalize', 'unfold', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto']",5,3,1,1,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,nopred_bottom,"['induction', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'intros', 'elim', 'tauto', 'intro', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'decompose', 'generalize', 'unfold', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto']",5,3,1,1,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_bottom_bis,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'elim', 'elim', 'intros', 'elim', 'intro', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",3,5,0,3,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_top_bis,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'elim', 'elim', 'intros', 'elim', 'intro', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",3,5,0,3,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_bottom,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'decompose', 'elim', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'clear', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'tauto', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'elim', 'intro', 'clear', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto']",5,5,0,4,8,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_top,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'decompose', 'elim', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'clear', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'tauto', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'elim', 'intro', 'clear', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto']",5,5,0,4,8,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_eq_aux,"['intros', 'elim', 'intro', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto']",2,0,1,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_eq,"['intros', 'elim', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,0,2,2,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_eq_aux,"['intros', 'elim', 'intro', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto']",2,0,1,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_eq,"['intros', 'elim', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,0,2,2,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_bottom,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'generalize', 'elim', 'clear', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto']",4,5,0,3,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_top,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'generalize', 'elim', 'clear', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'tauto']",4,5,0,3,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_A,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'elim', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'rewrite', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",6,5,0,4,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_A,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'elim', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'rewrite', 'symmetry', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'rewrite', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",6,5,0,4,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_A_1,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'elim', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'intros', 'elim', 'tauto', 'intro', 'rewrite', 'elim', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'rewrite', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",6,5,0,4,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_A_1,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'elim', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'rewrite', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",6,5,0,4,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_succ_top,"['unfold', 'induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'assert', 'apply', 'tauto', 'rewrite', 'tauto', 'rewrite', 'tauto', 'intro', 'apply', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intro', 'elim', 'intro', 'generalize', 'rewrite', 'elim', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'apply', 'tauto', 'elim', 'tauto', 'intros', 'rewrite', 'apply', 'tauto', 'intro', 'apply', 'tauto']",3,2,1,3,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,not_pred_bottom,"['unfold', 'induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'assert', 'apply', 'tauto', 'rewrite', 'tauto', 'rewrite', 'tauto', 'intro', 'apply', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intro', 'elim', 'intro', 'generalize', 'rewrite', 'elim', 'tauto', 'rewrite', 'tauto', 'tauto', 'intros', 'rewrite', 'apply', 'tauto', 'elim', 'tauto', 'rewrite', 'intros', 'apply', 'tauto', 'intro', 'apply', 'tauto']",4,2,1,2,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_top_1,"['intros', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",1,0,0,3,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_top_2,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'elim', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto', 'simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'generalize', 'clear', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'elim', 'tauto', 'intros', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'rewrite', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",4,5,0,5,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_top,"['intros', 'elim', 'apply', 'tauto', 'apply', 'tauto']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_bottom_1,"['intros', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",1,0,0,3,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_bottom_2,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'elim', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto', 'simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'generalize', 'clear', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'elim', 'tauto', 'intros', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'rewrite', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",4,5,0,5,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_bottom,"['intros', 'elim', 'apply', 'tauto', 'apply', 'tauto']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,succ_bottom,"['induction', 'simpl', 'unfold', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'unfold', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'elim', 'unfold', 'tauto', 'unfold', 'tauto', 'intro', 'intro', 'symmetry', 'tauto', 'elim', 'intros', 'rewrite', 'intro', 'rewrite', 'rewrite', 'generalize', 'rewrite', 'elim', 'unfold', 'tauto', 'symmetry', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'unfold', 'tauto']",6,5,0,3,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_top,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'intros', 'elim', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intros', 'rewrite', 'assert', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",3,2,0,4,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_bottom,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'elim', 'intros', 'decompose', 'clear', 'generalize', 'rewrite', 'elim', 'tauto', 'symmetry', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'intros', 'elim', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intros', 'rewrite', 'assert', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",3,2,0,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_top_bottom,"['intros', 'assert', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto']",0,0,0,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_bottom_top,"['intros', 'assert', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto', 'auto']",0,0,0,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,top_top_bottom_bottom,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'tauto', 'apply']",0,0,1,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,bottom_bottom_top_top,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'tauto', 'apply']",0,0,1,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_cA_1_B,"['induction', 'unfold', 'simpl', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intro', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'split', 'elim', 'intro', 'rewrite', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'generalize', 'clear', 'rename', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'intro', 'elim', 'intro', 'rewrite', 'generalize', 'clear', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'split', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'assert', 'rewrite', 'apply', 'tauto', 'rewrite', 'elim', 'tauto', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'assert', 'rewrite', 'apply', 'tauto', 'rewrite', 'elim', 'tauto', 'intro', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'fold', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'intro', 'split', 'simpl', 'elim', 'intro', 'clear', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'symmetry', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'symmetry', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'intros', 'elim', 'clear', 'intros', 'generalize', 'intros', 'elim', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intro', 'elim', 'tauto', 'intro', 'elim', 'intros', 'rewrite', 'generalize', 'clear', 'rewrite', 'clear', 'elim', 'intros', 'rewrite', 'tauto', 'intro', 'elim', 'intros', 'symmetry', 'tauto', 'intros', 'rewrite', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'rewrite', 'elim', 'tauto', 'intro', 'rewrite', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'intro', 'elim', 'intros', 'elim', 'intros', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'generalize', 'elim', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'generalize', 'clear', 'elim', 'intros', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intros', 'symmetry', 'tauto', 'intros', 'rewrite', 'symmetry', 'tauto', 'symmetry', 'tauto', 'intro', 'generalize', 'intros', 'elim', 'clear', 'intros', 'generalize', 'intros', 'elim', 'clear', 'intros', 'generalize', 'clear', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'intros', 'elim', 'intros', 'generalize', 'clear', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'symmetry', 'tauto', 'intros', 'rewrite', 'generalize', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'elim', 'tauto', 'tauto', 'tauto', 'intros', 'tauto', 'tauto', 'simpl', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'symmetry', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'intro', 'elim', 'clear', 'intros', 'generalize', 'intro', 'elim', 'clear', 'intros', 'generalize', 'clear', 'generalize', 'clear', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intros', 'generalize', 'clear', 'clear', 'elim', 'intros', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'symmetry', 'symmetry', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'intros', 'generalize', 'clear', 'elim', 'intros', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intro', 'symmetry', 'tauto', 'intro', 'generalize', 'intro', 'elim', 'clear', 'intros', 'generalize', 'intro', 'elim', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intros', 'rewrite', 'rewrite', 'generalize', 'clear', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intros', 'tauto', 'intro', 'symmetry', 'tauto', 'intro', 'elim', 'tauto', 'intros', 'elim', 'intro', 'generalize', 'rewrite', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'simpl', 'elim', 'intro', 'split', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'symmetry', 'tauto', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'generalize', 'intro', 'elim', 'clear', 'intros', 'elim', 'intros', 'generalize', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'elim', 'intro', 'symmetry', 'tauto', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'intro', 'clear', 'elim', 'intro', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'generalize', 'elim', 'intro', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'intros', 'rewrite', 'generalize', 'elim', 'tauto', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'rewrite', 'clear', 'elim', 'intro', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intros', 'tauto', 'elim', 'intros', 'symmetry', 'tauto', 'intros', 'generalize', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'clear', 'elim', 'tauto', 'tauto', 'intro', 'generalize', 'intro', 'elim', 'clear', 'intros', 'generalize', 'intro', 'elim', 'clear', 'intros', 'generalize', 'elim', 'intro', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'intro', 'rewrite', 'clear', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'rewrite', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'intros', 'elim', 'intros', 'generalize', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'clear', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intro', 'symmetry', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'generalize', 'rewrite', 'elim', 'tauto', 'intros', 'rewrite', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'intro', 'rewrite', 'clear', 'elim', 'tauto', 'elim', 'intros', 'tauto', 'elim', 'rewrite', 'tauto', 'tauto', 'generalize', 'intro', 'elim', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intro', 'symmetry', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'symmetry', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'symmetry', 'tauto', 'tauto', 'elim', 'intro', 'symmetry', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'clear', 'elim', 'intro', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'rewrite', 'rewrite', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'intros', 'rewrite', 'tauto', 'intro', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'tauto', 'rewrite', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'generalize', 'rewrite', 'elim', 'tauto', 'intros', 'assert', 'rewrite', 'unfold', 'rewrite', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'rewrite', 'elim', 'intros', 'tauto', 'intros', 'rewrite', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'rewrite', 'tauto', 'intro', 'generalize', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'clear', 'elim', 'tauto', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'tauto', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'generalize', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'rewrite', 'tauto', 'tauto', 'intros', 'elim', 'intro', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'fold', 'fold', 'apply', 'tauto', 'tauto']",6,4,2,6,8,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_B,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_B,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_cA_1_B_bis,"['induction', 'simpl', 'tauto', 'unfold', 'unfold', 'simpl', 'unfold', 'intros', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'unfold', 'tauto', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'decompose', 'clear', 'unfold', 'generalize', 'clear', 'elim', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'intros', 'simpl', 'elim', 'split', 'elim', 'tauto', 'elim', 'intros', 'elim', 'intro', 'generalize', 'tauto', 'intro', 'decompose', 'rewrite', 'symmetry', 'tauto', 'intros', 'elim', 'intro', 'decompose', 'rewrite', 'tauto', 'intro', 'decompose', 'tauto', 'elim', 'tauto', 'elim', 'intros', 'elim', 'intro', 'decompose', 'tauto', 'intro', 'decompose', 'rewrite', 'tauto', 'elim', 'intros', 'decompose', 'rewrite', 'tauto', 'intros', 'decompose', 'tauto', 'tauto', 'intros', 'simpl', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'tauto']",5,5,0,0,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_B_bis,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_B_bis,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_cA_1_B_ter,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'elim', 'tauto', 'simpl', 'elim', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'assert', 'rewrite', 'intro', 'symmetry', 'tauto', 'decompose', 'split', 'elim', 'tauto', 'elim', 'elim', 'elim', 'intros', 'decompose', 'tauto', 'intros', 'decompose', 'rewrite', 'tauto', 'elim', 'intros', 'decompose', 'rewrite', 'tauto', 'intros', 'decompose', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'decompose', 'rewrite', 'tauto', 'elim', 'intros', 'decompose', 'rewrite', 'tauto', 'intros', 'decompose', 'tauto', 'elim', 'tauto', 'elim', 'elim', 'decompose', 'tauto', 'intros', 'rewrite', 'tauto', 'elim', 'decompose', 'rewrite', 'tauto', 'decompose', 'tauto', 'intros', 'apply', 'tauto', 'tauto']",4,2,0,1,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_B_ter,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,cA_1_B_ter,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,inv_hmap_B,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'split', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'tauto', 'unfold', 'generalize', 'tauto', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'elim', 'tauto', 'simpl', 'intros', 'split', 'apply', 'tauto', 'unfold', 'split', 'generalize', 'tauto', 'split', 'generalize', 'tauto', 'split', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'split', 'unfold', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'generalize', 'rewrite', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'elim', 'intros', 'intro', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'intro', 'simpl', 'split', 'apply', 'tauto', 'unfold', 'simpl', 'split', 'generalize', 'tauto', 'split', 'generalize', 'tauto', 'split', 'unfold', 'rewrite', 'unfold', 'tauto', 'intro', 'symmetry', 'tauto', 'split', 'unfold', 'rewrite', 'unfold', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'tauto', 'tauto', 'intro', 'symmetry', 'tauto']",5,4,0,5,8,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan1.json,inv_hmap_B_1,"['intros', 'rewrite', 'apply', 'tauto', 'tauto']",0,0,0,2,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,genus_L_B0,"['unfold', 'unfold', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'repeat', 'try', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",2,1,0,2,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,planar_L_B0,"['unfold', 'intros', 'generalize', 'intro', 'rewrite', 'tauto']",4,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,planar_B0,"['intros', 'assert', 'generalize', 'tauto', 'generalize', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'assert', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'assert', 'rewrite', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",1,0,1,1,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,planarity_crit_B0,"['intros', 'assert', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'generalize', 'unfold', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'generalize', 'simpl', 'rewrite', 'rewrite', 'fold', 'fold', 'set', 'set', 'intro', 'elim', 'elim', 'intros', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'clear', 'rewrite', 'rewrite', 'set', 'fold', 'split', 'intro', 'absurd', 'clear', 'omega', 'tauto', 'tauto', 'clear', 'omega', 'clear', 'omega', 'intros', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'clear', 'rewrite', 'rewrite', 'set', 'fold', 'assert', 'clear', 'omega', 'rewrite', 'tauto', 'clear', 'omega', 'clear', 'omega', 'elim', 'intros', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'tauto', 'intros', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'assert', 'apply', 'unfold', 'tauto', 'unfold', 'unfold', 'tauto', 'elim', 'apply', 'unfold', 'tauto', 'rewrite', 'fold', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",1,2,2,2,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,disconnect_planar_criterion_B0,"['intros', 'generalize', 'simpl', 'fold', 'fold', 'intros', 'generalize', 'simpl', 'fold', 'fold', 'intros', 'set', 'fold', 'assert', 'assert', 'rewrite', 'elim', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'assert', 'rewrite', 'rewrite', 'tauto', 'apply', 'tauto', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'set', 'rewrite', 'fold', 'fold', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'split', 'simpl', 'tauto', 'split', 'intro', 'intro', 'assert', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'generalize', 'intro', 'assert', 'intro', 'absurd', 'tauto', 'apply', 'rewrite', 'tauto', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'unfold', 'tauto', 'tauto']",3,0,4,3,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,eqc_bottom_top,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'clear', 'elim', 'intros', 'symmetry', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'intro', 'symmetry', 'tauto', 'intro', 'generalize', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'intro', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'generalize', 'generalize', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'generalize', 'tauto', 'generalize', 'tauto', 'generalize', 'tauto']",3,2,0,2,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,eqc_bottom,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,eqc_top,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,eqc_B_bottom,"['intros', 'elim', 'intro', 'assert', 'generalize', 'elim', 'tauto', 'tauto', 'rewrite', 'apply', 'apply', 'tauto', 'apply', 'generalize', 'tauto', 'intro', 'rewrite', 'generalize', 'tauto', 'tauto', 'tauto']",1,0,1,2,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,eqc_B_top,"['intros', 'assert', 'generalize', 'elim', 'tauto', 'tauto', 'rewrite', 'apply', 'apply', 'tauto', 'apply', 'generalize', 'generalize', 'tauto']",0,0,1,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,B_idem,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'intro', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'rewrite', 'tauto', 'tauto', 'intro', 'elim', 'elim', 'intro', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'rewrite', 'tauto', 'tauto']",4,3,0,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,nc_B_sup,"['intros', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'omega', 'intro', 'omega', 'tauto', 'tauto', 'intro', 'rewrite', 'omega', 'tauto', 'tauto']",1,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA0_MA0,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA0_MA0_Iter,"['induction', 'simpl', 'tauto', 'intros', 'simpl', 'rewrite', 'rewrite', 'tauto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,bottom_cA,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'unfold', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'elim', 'tauto', 'rewrite', 'tauto', 'intro', 'elim', 'symmetry', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'generalize', 'rewrite', 'elim', 'unfold', 'tauto', 'symmetry', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'rewrite', 'generalize', 'elim', 'unfold', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'intros', 'tauto', 'tauto', 'tauto', 'rewrite', 'intros', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto']",4,3,1,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_bottom_ind,"['induction', 'simpl', 'tauto', 'simpl', 'simpl', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'rewrite', 'tauto']",1,2,0,2,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_bottom,"['intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto']",1,0,0,3,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,top_cA_1,"['induction', 'simpl', 'tauto', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'generalize', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'unfold', 'unfold', 'unfold', 'intros', 'decompose', 'clear', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'elim', 'tauto', 'rewrite', 'tauto', 'intro', 'elim', 'symmetry', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'generalize', 'intro', 'assert', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'generalize', 'rewrite', 'elim', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'rewrite', 'generalize', 'elim', 'unfold', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'intros', 'tauto', 'tauto', 'tauto', 'rewrite', 'intros', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto']",5,3,1,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA0_1_MA0_1,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA0_1_MA0_1_Iter,"['induction', 'simpl', 'tauto', 'intros', 'simpl', 'rewrite', 'rewrite', 'tauto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_top_ind,"['intros', 'assert', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'induction', 'simpl', 'tauto', 'simpl', 'generalize', 'clear', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'fold', 'intros', 'assert', 'tauto', 'clear', 'simpl', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'generalize', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'unfold', 'generalize', 'generalize', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto']",0,1,0,3,6,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_top,"['intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto']",1,0,0,3,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,betweene_dec1,"['intros', 'generalize', 'generalize', 'intros', 'intros', 'elim', 'clear', 'elim', 'clear', 'intros', 'generalize', 'generalize', 'intros', 'assert', 'tauto', 'assert', 'tauto', 'clear', 'unfold', 'unfold', 'decompose', 'decompose', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'decompose', 'clear', 'decompose', 'clear', 'elim', 'intro', 'left', 'unfold', 'unfold', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'omega', 'intro', 'right', 'unfold', 'unfold', 'intro', 'assert', 'tauto', 'clear', 'elim', 'intros', 'clear', 'elim', 'intros', 'decompose', 'clear', 'clear', 'set', 'fold', 'fold', 'fold', 'assert', 'apply', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'tauto', 'assert', 'apply', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'tauto', 'absurd', 'omega', 'tauto', 'clear', 'intros', 'right', 'intro', 'unfold', 'generalize', 'tauto', 'clear', 'elim', 'intros', 'clear', 'right', 'intro', 'unfold', 'generalize', 'tauto', 'clear', 'intros', 'right', 'intro', 'unfold', 'generalize', 'tauto']",4,1,1,0,1,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,bottom_B0,"['intros', 'assert', 'apply', 'tauto', 'generalize', 'intro', 'elim', 'intro', 'generalize', 'elim', 'intros', 'generalize', 'elim', 'unfold', 'rewrite', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",3,0,1,3,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,succ_zi,"['intros', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'intro', 'elim', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'assert', 'simpl', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'omega', 'omega', 'simpl', 'tauto', 'inversion']",2,0,1,3,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,bottom_B0_bis,"['simpl', 'intros', 'set', 'fold', 'set', 'set', 'set', 'unfold', 'unfold', 'induction', 'absurd', 'omega', 'tauto', 'fold', 'fold', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'omega', 'generalize', 'unfold', 'unfold', 'unfold', 'unfold', 'fold', 'fold', 'fold', 'unfold', 'intros', 'assert', 'unfold', 'unfold', 'apply', 'omega', 'assert', 'unfold', 'generalize', 'simpl', 'intro', 'apply', 'omega', 'elim', 'intro', 'assert', 'unfold', 'assert', 'simpl', 'tauto', 'assert', 'omega', 'unfold', 'generalize', 'simpl', 'intro', 'assert', 'tauto', 'rewrite', 'clear', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'assert', 'intro', 'generalize', 'elim', 'intros', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'elim', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'intro', 'symmetry', 'tauto', 'assert', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'elim', 'tauto', 'intros', 'generalize', 'elim', 'tauto', 'elim', 'intros', 'clear', 'generalize', 'elim', 'tauto', 'intros', 'fold', 'fold', 'fold', 'rewrite', 'tauto', 'tauto', 'intro', 'simpl', 'set', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'omega', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'omega', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'rewrite', 'apply', 'apply', 'tauto', 'generalize', 'generalize', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'unfold', 'apply', 'omega', 'assert', 'unfold', 'unfold', 'rewrite', 'unfold', 'tauto', 'intro', 'symmetry', 'tauto', 'assert', 'unfold', 'rewrite', 'tauto', 'intro', 'symmetry', 'tauto', 'assert', 'apply', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'apply', 'omega']",5,2,4,5,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,bottom_B0_ter,"['intros', 'elim', 'intro', 'set', 'fold', 'unfold', 'unfold', 'induction', 'simpl', 'simpl', 'assert', 'unfold', 'unfold', 'rewrite', 'unfold', 'tauto', 'tauto', 'intro', 'unfold', 'rewrite', 'rewrite', 'generalize', 'fold', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'assert', 'omega', 'simpl', 'rename', 'set', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'elim', 'intro', 'assert', 'apply', 'tauto', 'omega', 'fold', 'fold', 'tauto', 'absurd', 'omega', 'tauto', 'intro', 'elim', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'fold', 'tauto', 'assert', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'simpl', 'fold', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'assert', 'apply', 'omega', 'omega', 'simpl', 'unfold', 'simpl', 'tauto', 'inversion', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'unfold', 'apply', 'omega', 'unfold', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'tauto', 'intro', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto']",2,4,3,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,bottom_B0_quad,"['intros', 'elim', 'intro', 'assert', 'unfold', 'apply', 'tauto', 'assert', 'unfold', 'elim', 'intro', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'unfold', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'induction', 'simpl', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'set', 'assert', 'unfold', 'assert', 'tauto', 'clear', 'unfold', 'intro', 'elim', 'split', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'omega', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'unfold', 'tauto', 'tauto', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'assert', 'tauto', 'rewrite', 'clear', 'unfold', 'simpl', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'apply', 'omega', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",2,4,1,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,not_between_B0,"['intros', 'unfold', 'elim', 'intro', 'right', 'unfold', 'unfold', 'intros', 'elim', 'tauto', 'intro', 'elim', 'intros', 'clear', 'split', 'split', 'split', 'symmetry', 'tauto', 'split', 'symmetry', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'intro', 'omega', 'tauto', 'tauto']",4,1,0,2,2,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,Iter_cA0_I,"['induction', 'simpl', 'tauto', 'intros', 'set', 'simpl', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'generalize', 'rewrite', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto']",1,3,0,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,nopred_expe_L_i,"['induction', 'simpl', 'intros', 'unfold', 'apply', 'simpl', 'tauto', 'intros', 'simpl', 'unfold', 'set', 'fold', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'omega', 'unfold', 'assert', 'simpl', 'elim', 'intro', 'elim', 'intro', 'assert', 'apply', 'simpl', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'symmetry', 'unfold', 'apply', 'simpl', 'tauto', 'tauto', 'assert', 'unfold', 'tauto', 'generalize', 'rewrite', 'elim', 'rewrite', 'simpl', 'unfold', 'rewrite', 'tauto', 'rewrite', 'unfold', 'unfold', 'assert', 'simpl', 'tauto', 'rewrite', 'intros', 'rewrite', 'assert', 'apply', 'simpl', 'tauto', 'tauto', 'tauto', 'omega', 'rewrite', 'simpl', 'tauto', 'inversion', 'simpl', 'tauto', 'intros', 'elim', 'intro', 'generalize', 'rewrite', 'elim', 'simpl', 'unfold', 'rewrite', 'tauto', 'intros', 'assert', 'rewrite', 'apply', 'simpl', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'assert', 'apply', 'simpl', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'assert', 'apply', 'simpl', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'simpl', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'fold', 'tauto', 'generalize', 'rewrite', 'elim', 'rewrite', 'intro', 'absurd', 'apply', 'simpl', 'tauto', 'tauto', 'intros', 'rewrite', 'unfold', 'unfold', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'assert', 'apply', 'simpl', 'tauto', 'simpl', 'unfold', 'tauto', 'rewrite', 'omega', 'rewrite', 'omega', 'simpl', 'tauto', 'inversion', 'simpl', 'tauto', 'simpl', 'tauto', 'intros', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'rewrite', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'simpl', 'rewrite', 'tauto', 'split', 'rewrite', 'simpl', 'tauto']",4,7,3,5,6,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_bottom_z,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intros', 'apply', 'rewrite', 'simpl', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'unfold', 'elim', 'clear', 'intros', 'unfold', 'simpl', 'split', 'tauto', 'elim', 'clear', 'intros', 'split', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'simpl', 'tauto', 'tauto', 'rename', 'rename', 'rename', 'simpl', 'intros', 'unfold', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'set', 'fold', 'set', 'assert', 'tauto', 'generalize', 'fold', 'intro', 'assert', 'tauto', 'generalize', 'fold', 'intro', 'assert', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'rewrite', 'assert', 'unfold', 'elim', 'clear', 'intros', 'elim', 'intros', 'generalize', 'intros', 'unfold', 'decompose', 'clear', 'set', 'rewrite', 'rewrite', 'unfold', 'apply', 'simpl', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'intros', 'unfold', 'decompose', 'clear', 'set', 'rewrite', 'rewrite', 'unfold', 'apply', 'simpl', 'unfold', 'rewrite', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'simpl', 'tauto', 'split', 'rewrite', 'simpl', 'elim', 'tauto', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'set', 'fold', 'assert', 'generalize', 'tauto', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'rewrite', 'generalize', 'intros', 'unfold', 'rewrite', 'apply', 'simpl', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'set', 'fold', 'assert', 'generalize', 'tauto', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'rewrite', 'generalize', 'intros', 'unfold', 'rewrite', 'apply', 'simpl', 'unfold', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto']",6,6,3,5,8,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,bottom_bottom_expe,"['intros', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto']",1,0,1,1,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,top_top_expe,"['intros', 'generalize', 'intro', 'generalize', 'intro', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",2,0,0,3,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,between_bottom_B0_bis,"['intros', 'unfold', 'unfold', 'split', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'generalize', 'clear', 'intro', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'decompose', 'clear', 'assert', 'unfold', 'apply', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'intro', 'unfold', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'omega', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'unfold', 'generalize', 'simpl', 'fold', 'intros', 'assert', 'apply', 'unfold', 'unfold', 'tauto', 'clear', 'elim', 'clear', 'intro', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'generalize', 'tauto', 'unfold', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'decompose', 'clear', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'clear', 'intros', 'clear', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'elim', 'intro', 'assert', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'unfold', 'decompose', 'clear', 'decompose', 'clear', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'assert', 'apply', 'symmetry', 'tauto', 'symmetry', 'tauto', 'tauto', 'tauto', 'omega', 'intro', 'decompose', 'clear', 'rewrite', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'rewrite', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",2,1,3,5,5,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,not_expe_bottom_B0,"['unfold', 'intros', 'set', 'assert', 'intro', 'unfold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'generalize', 'intros', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'assert', 'intro', 'rewrite', 'elim', 'apply', 'tauto', 'generalize', 'simpl', 'fold', 'tauto']",3,0,2,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,existi_dec,"['induction', 'right', 'intro', 'elim', 'intros', 'omega', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', 'left', 'split', 'split', 'omega', 'tauto', 'clear', 'intro', 'elim', 'intro', 'left', 'split', 'split', 'omega', 'tauto', 'intro', 'right', 'intro', 'elim', 'intros', 'apply', 'split', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'split', 'omega', 'tauto']",2,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,MA0_between_dec,"['intros', 'set', 'generalize', 'generalize', 'intros', 'elim', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'clear', 'intros', 'decompose', 'clear', 'intros', 'elim', 'intro', 'left', 'unfold', 'split', 'split', 'tauto', 'intro', 'right', 'unfold', 'intro', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'decompose', 'clear', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'rewrite', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'omega', 'tauto', 'tauto', 'clear', 'clear', 'intros', 'right', 'unfold', 'intro', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'fold', 'apply', 'split', 'split', 'omega', 'tauto', 'tauto', 'tauto', 'clear', 'clear', 'right', 'unfold', 'intro', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'fold', 'apply', 'split', 'tauto', 'tauto', 'tauto']",3,0,1,1,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,betweene_bottom_x_top,"['unfold', 'unfold', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'assert', 'generalize', 'tauto', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'split', 'generalize', 'intro', 'set', 'fold', 'fold', 'split', 'split', 'tauto', 'split', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'tauto', 'tauto', 'omega']",3,3,1,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA_L_B_top_bot,"['induction', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'clear', 'rewrite', 'rewrite', 'elim', 'intro', 'symmetry', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'elim', 'rewrite', 'elim', 'intros', 'rewrite', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'generalize', 'rewrite', 'elim', 'intro', 'symmetry', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'clear', 'rewrite', 'rewrite', 'elim', 'elim', 'intros', 'symmetry', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'tauto', 'intros', 'rewrite', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'elim', 'rewrite', 'symmetry', 'tauto', 'rewrite', 'tauto', 'tauto', 'elim', 'rewrite', 'intros', 'elim', 'rewrite', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'intro', 'symmetry', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'elim', 'rewrite', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,2,1,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA_L_B_top_bot_ter,"['intros', 'unfold', 'induction', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion']",2,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,A_L_B_top_bot,"['intros', 'simpl', 'elim', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'intro', 'symmetry', 'tauto', 'tauto']",2,0,0,2,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,A_L_B_top_bot_ter,"['intros', 'induction', 'unfold', 'simpl', 'apply', 'intro', 'inversion', 'unfold', 'simpl', 'rewrite', 'tauto', 'intro', 'inversion']",2,3,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA_1_L_B_top_bot,"['induction', 'simpl', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'rename', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'clear', 'rewrite', 'rewrite', 'elim', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'elim', 'intros', 'generalize', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'elim', 'intro', 'generalize', 'rewrite', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'rewrite', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'tauto', 'elim', 'intros', 'generalize', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,2,1,3,6,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA_1_L_B_top_bot_ter,"['intros', 'unfold', 'induction', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion']",2,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,A_1_L_B_top_bot,"['intros', 'simpl', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'apply', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'symmetry', 'tauto', 'tauto']",2,0,0,2,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,A_1_L_B_top_bot_ter,"['intros', 'induction', 'unfold', 'simpl', 'apply', 'intro', 'inversion', 'unfold', 'simpl', 'rewrite', 'tauto', 'intro', 'inversion']",2,3,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,exd_L_B_top_bot,"['intros', 'simpl', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,planar_L_B_top_bot_0,"['intros', 'generalize', 'intro', 'generalize', 'intros', 'simpl', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'tauto', 'clear', 'elim', 'intro', 'assert', 'rewrite', 'set', 'set', 'set', 'generalize', 'simpl', 'set', 'set', 'fold', 'fold', 'fold', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'simpl', 'rewrite', 'fold', 'fold', 'intro', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'assert', 'generalize', 'tauto', 'elim', 'tauto', 'assert', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'fold', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'generalize', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'split', 'simpl', 'tauto', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto']",4,2,2,2,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,between_bottom_x_top,"['unfold', 'unfold', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'assert', 'generalize', 'tauto', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'split', 'generalize', 'intro', 'set', 'fold', 'fold', 'split', 'split', 'tauto', 'split', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'tauto', 'tauto', 'omega']",3,3,1,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,bottom_L_B_top_bot,"['intros', 'unfold', 'simpl', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'generalize', 'simpl', 'rewrite', 'intros', 'generalize', 'simpl', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'intro', 'decompose', 'decompose', 'clear', 'generalize', 'simpl', 'unfold', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'clear', 'rewrite', 'elim', 'intro', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'tauto', 'intro', 'unfold', 'generalize', 'intros', 'elim', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'apply', 'unfold', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'clear', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",7,4,4,2,4,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,top_L_B_top_bot,"['intros', 'generalize', 'intros', 'rewrite', 'unfold', 'fold', 'rewrite', 'elim', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'elim', 'tauto', 'intros', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto']",4,0,2,5,6,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cF_L_B_top_bot,"['intros', 'unfold', 'induction', 'rewrite', 'rewrite', 'simpl', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'simpl', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",1,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cF_1_L_B_top_bot,"['intros', 'unfold', 'induction', 'rewrite', 'rewrite', 'simpl', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'simpl', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",1,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,Iter_f_L_B,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto']",0,2,1,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expf_L_B_top_bot,"['intros', 'unfold', 'generalize', 'intro', 'assert', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'split', 'intros', 'decompose', 'clear', 'elim', 'clear', 'intros', 'split', 'tauto', 'split', 'rewrite', 'symmetry', 'apply', 'tauto', 'tauto', 'intro', 'decompose', 'clear', 'elim', 'clear', 'intros', 'split', 'tauto', 'split', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",3,0,2,1,2,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,nc_L_B_top_bot,"['simpl', 'intros', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'generalize', 'intros', 'elim', 'elim', 'intros', 'omega', 'intros', 'elim', 'apply', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'intros', 'omega', 'tauto', 'tauto']",3,1,2,1,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,eqc_L_B_top_bot,"['simpl', 'intros', 'generalize', 'simpl', 'intro', 'generalize', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'elim', 'clear', 'intros', 'split', 'clear', 'intro', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'clear', 'intro', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'right', 'split', 'apply', 'tauto', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'right', 'left', 'split', 'apply', 'tauto', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'tauto']",3,1,2,0,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,MA0_f_cA0,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,Iter_cA0_L_B,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'induction', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'simpl', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto']",0,2,0,3,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_L_B_top_bot,"['intros', 'unfold', 'split', 'intro', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'unfold', 'tauto', 'generalize', 'clear', 'unfold', 'assert', 'generalize', 'unfold', 'tauto', 'intro', 'split', 'tauto', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'split', 'generalize', 'simpl', 'fold', 'intro', 'rewrite', 'tauto', 'intro', 'assert', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'elim', 'clear', 'intro', 'intro', 'elim', 'intros', 'clear', 'unfold', 'split', 'tauto', 'split', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto']",2,0,2,3,4,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,exd_Br1,"['unfold', 'intros', 'elim', 'elim', 'intros', 'generalize', 'simpl', 'generalize', 'tauto', 'generalize', 'tauto', 'generalize', 'tauto']",3,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,inv_hmap_Br1,"['unfold', 'intros', 'elim', 'intro', 'elim', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'intro', 'elim', 'intro', 'apply', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",4,0,1,1,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,planar_Br1,"['intros', 'unfold', 'elim', 'elim', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intro', 'rewrite', 'unfold', 'tauto', 'intro', 'symmetry', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",3,1,1,2,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,double_link_comm,"['unfold', 'intros', 'split', 'intro', 'symmetry', 'tauto', 'unfold', 'unfold', 'apply', 'tauto', 'tauto']",2,1,1,0,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,double_link_succ,"['intros', 'unfold', 'elim', 'tauto', 'elim', 'tauto', 'intros', 'assert', 'unfold', 'unfold', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto']",2,1,2,2,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,double_link_exd,"['unfold', 'unfold', 'intros', 'generalize', 'intro', 'unfold', 'unfold', 'intros', 'generalize', 'intro', 'assert', 'unfold', 'tauto', 'tauto']",4,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA0_Br1,"['intros', 'generalize', 'intro', 'unfold', 'unfold', 'unfold', 'set', 'elim', 'elim', 'intros', 'unfold', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'clear', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'rewrite', 'unfold', 'tauto', 'intro', 'symmetry', 'tauto', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'generalize', 'intro', 'rewrite', 'symmetry', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'intros', 'rewrite', 'elim', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'rewrite', 'elim', 'intros', 'rewrite', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'generalize', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'generalize', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'generalize', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'generalize', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",4,2,1,5,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA0_1_Br1,"['intros', 'generalize', 'intro', 'elim', 'intro', 'set', 'assert', 'unfold', 'rewrite', 'tauto', 'apply', 'tauto', 'generalize', 'tauto', 'generalize', 'rewrite', 'elim', 'intros', 'elim', 'intro', 'unfold', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'elim', 'intros', 'symmetry', 'tauto', 'symmetry', 'tauto', 'elim', 'intros', 'elim', 'symmetry', 'tauto', 'symmetry', 'tauto', 'elim', 'intros', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'intros', 'symmetry', 'elim', 'intro', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'symmetry', 'tauto', 'tauto', 'unfold', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'unfold', 'assert', 'apply', 'apply', 'tauto', 'generalize', 'generalize', 'generalize', 'tauto', 'elim', 'intro', 'rewrite', 'generalize', 'tauto', 'elim', 'intros', 'rewrite', 'generalize', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto']",3,0,2,5,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA1_Br1,"['unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'apply', 'tauto', 'tauto', 'intro', 'inversion', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion']",3,2,0,1,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA1_1_Br1,"['unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'apply', 'tauto', 'tauto', 'intro', 'inversion', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion']",3,2,0,1,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cF_Br1,"['intros', 'unfold', 'rewrite', 'rewrite', 'elim', 'intro', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",1,0,0,2,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cF_1_Br1,"['intros', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto']",1,0,0,2,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cF_1_Br1_bis,"['intros', 'unfold', 'rewrite', 'rewrite', 'generalize', 'intro', 'elim', 'intro', 'elim', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'generalize', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,0,1,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,disconnect_planar_criterion_Br1,"['intros', 'rename', 'unfold', 'elim', 'elim', 'intros', 'set', 'assert', 'unfold', 'apply', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'elim', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'generalize', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'intros', 'generalize', 'fold', 'intro', 'set', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'tauto', 'generalize', 'fold', 'elim', 'intro', 'intro', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'fold', 'assert', 'unfold', 'rewrite', 'elim', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'fold', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'assert', 'split', 'apply', 'apply', 'assert', 'split', 'apply', 'apply', 'tauto', 'intros', 'unfold', 'unfold', 'unfold', 'tauto', 'intros', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'generalize', 'intro', 'rewrite', 'rewrite', 'assert', 'rewrite', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'generalize', 'intro', 'rewrite', 'rewrite', 'set', 'set', 'generalize', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'generalize', 'simpl', 'intros', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'fold', 'fold', 'rewrite', 'assert', 'split', 'intro', 'intro', 'apply', 'clear', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'intro', 'apply', 'clear', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'unfold', 'unfold', 'tauto', 'intros', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'rewrite', 'elim', 'intro', 'generalize', 'simpl', 'intro', 'assert', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'split', 'apply', 'apply', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'intro', 'unfold', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'elim', 'clear', 'intros', 'assert', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto']",5,2,3,4,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,Br1_comm,"['unfold', 'intros', 'unfold', 'elim', 'elim', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'rewrite', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'elim', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'unfold', 'unfold', 'unfold', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'rewrite', 'rewrite', 'tauto']",5,2,1,3,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,disconnect_planar_criterion_Br1_bis,"['intros', 'rewrite', 'generalize', 'generalize', 'simpl', 'fold', 'fold', 'intros', 'assert', 'split', 'apply', 'apply', 'tauto', 'tauto', 'tauto']",0,0,1,1,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,nc_Br1,"['intros', 'unfold', 'elim', 'elim', 'intros', 'set', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'assert', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'rewrite', 'elim', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'fold', 'intro', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'intro', 'rewrite', 'rewrite', 'assert', 'apply', 'rewrite', 'clear', 'rewrite', 'elim', 'elim', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'unfold', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'tauto', 'intro', 'generalize', 'simpl', 'rewrite', 'intros', 'elim', 'elim', 'intros', 'assert', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'rewrite', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'assert', 'generalize', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'rewrite', 'generalize', 'simpl', 'rewrite', 'intros', 'elim', 'elim', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'tauto']",3,2,3,5,6,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,emptyl_dec,"['induction', 'simpl', 'tauto', 'simpl', 'tauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,isin1_dec,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'intros', 'generalize', 'generalize', 'tauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,isin2_dec,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'intros', 'generalize', 'generalize', 'tauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,exd_Br,"['induction', 'simpl', 'tauto', 'simpl', 'intro', 'intro', 'generalize', 'generalize', 'tauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,inv_hmap_Br,"['induction', 'simpl', 'tauto', 'intro', 'simpl', 'intro', 'apply', 'apply', 'tauto']",2,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,not_succ_Br1_fst,"['unfold', 'intros', 'elim', 'elim', 'intros', 'unfold', 'simpl', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'apply', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto']",4,1,0,4,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,not_succ_Br1_snd,"['unfold', 'intros', 'elim', 'elim', 'intros', 'unfold', 'simpl', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intro', 'simpl', 'elim', 'tauto', 'intro', 'rewrite', 'tauto', 'apply', 'tauto', 'unfold', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'intro', 'symmetry', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto']",4,1,0,4,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA1_Br,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto']",1,2,0,2,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,cA1_1_Br,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto']",1,2,0,2,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,Jordan1,"['unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'decompose', 'clear', 'set', 'set', 'fold', 'fold', 'rewrite', 'fold', 'fold', 'elim', 'tauto', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto']",2,3,0,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,ring1_ring3_connect,"['simpl', 'unfold', 'unfold', 'unfold', 'intros', 'generalize', 'clear', 'set', 'set', 'set', 'set', 'intros', 'decompose', 'clear', 'decompose', 'clear', 'decompose', 'clear', 'intro', 'apply', 'apply', 'tauto', 'tauto']",3,2,1,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_top_z,"['intros', 'generalize', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'set', 'fold', 'fold', 'assert', 'rewrite', 'elim', 'unfold', 'intro', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'apply', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'unfold', 'split', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto']",3,1,3,2,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_top_A,"['intros', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'unfold', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'split', 'simpl', 'tauto']",1,0,2,1,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_B_i,"['induction', 'simpl', 'unfold', 'intros', 'apply', 'tauto', 'simpl', 'intros', 'simpl', 'set', 'fold', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'intro', 'rewrite', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'assert', 'tauto', 'unfold', 'generalize', 'tauto', 'intro', 'elim', 'intro', 'assert', 'tauto', 'unfold', 'apply', 'unfold', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'intro', 'unfold', 'apply', 'fold', 'tauto', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'generalize', 'generalize', 'generalize', 'generalize', 'generalize', 'tauto', 'split', 'simpl', 'tauto', 'tauto', 'tauto']",6,3,2,4,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_B_expe,"['intros', 'assert', 'apply', 'tauto', 'assert', 'unfold', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'elim', 'intro', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'intro', 'generalize', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto']",2,0,1,2,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_Br1_expe,"['intros', 'unfold', 'elim', 'elim', 'intros', 'set', 'fold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'generalize', 'simpl', 'fold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'intro', 'intro', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",4,0,1,1,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,distinct_edge_list_Br1,"['induction', 'simpl', 'tauto', 'simpl', 'rename', 'rename', 'intros', 'simpl', 'split', 'apply', 'tauto', 'tauto', 'simpl', 'tauto', 'intro', 'absurd', 'tauto', 'apply', 'tauto', 'tauto']",2,1,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring0_Br1_aux,"['induction', 'simpl', 'tauto', 'simpl', 'rename', 'rename', 'intros', 'simpl', 'split', 'apply', 'tauto', 'tauto', 'simpl', 'tauto', 'apply', 'tauto', 'tauto', 'simpl', 'tauto']",1,1,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring0_Br1,"['induction', 'simpl', 'tauto', 'intros', 'simpl', 'apply', 'tauto', 'tauto', 'tauto']",2,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expe_expe_B0,"['intros', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'assert', 'unfold', 'unfold', 'tauto', 'unfold', 'elim', 'intro', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'unfold', 'apply', 'unfold', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'generalize', 'fold', 'intro', 'rewrite', 'rewrite', 'apply', 'unfold', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",1,1,3,3,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,double_link_list_Br1_aux,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rename', 'rename', 'split', 'unfold', 'elim', 'elim', 'intros', 'unfold', 'unfold', 'split', 'tauto', 'set', 'unfold', 'generalize', 'intro', 'simpl', 'fold', 'fold', 'assert', 'intro', 'absurd', 'tauto', 'unfold', 'apply', 'unfold', 'tauto', 'unfold', 'tauto', 'assert', 'intro', 'apply', 'generalize', 'intro', 'simpl', 'fold', 'tauto', 'assert', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'fold', 'apply', 'tauto', 'tauto', 'intros', 'unfold', 'split', 'unfold', 'tauto', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'unfold', 'assert', 'intro', 'absurd', 'tauto', 'unfold', 'apply', 'unfold', 'tauto', 'unfold', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto']",4,3,3,1,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,double_link_list_Br1,"['induction', 'simpl', 'tauto', 'intros', 'simpl', 'apply', 'tauto', 'tauto', 'tauto']",2,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,planar_Br,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'simpl', 'tauto', 'generalize', 'simpl', 'tauto', 'apply', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto']",2,2,1,0,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expf_Br1,"['intros', 'unfold', 'elim', 'elim', 'intros', 'set', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'intro', 'elim', 'generalize', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'elim', 'clear', 'intros', 'unfold', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'fold', 'intro', 'apply', 'unfold', 'unfold', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'apply', 'tauto', 'unfold', 'unfold', 'rewrite', 'elim', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'generalize', 'clear', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'assert', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'assert', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",2,1,4,5,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring1_Br1_aux,"['induction', 'simpl', 'tauto', 'simpl', 'rename', 'rename', 'intros', 'induction', 'tauto', 'rename', 'rename', 'clear', 'split', 'apply', 'tauto', 'tauto', 'simpl', 'simpl', 'tauto', 'simpl', 'simpl', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'elim', 'clear', 'intros', 'decompose', 'clear', 'decompose', 'clear', 'clear', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'unfold', 'simpl', 'unfold', 'unfold', 'assert', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'elim', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'apply', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'elim', 'apply', 'tauto', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'apply', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'intros', 'apply', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto']",2,4,3,2,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring1_Br1,"['induction', 'simpl', 'tauto', 'simpl', 'rename', 'rename', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto', 'generalize', 'clear', 'elim', 'simpl', 'tauto', 'intros', 'tauto', 'tauto']",2,1,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,expf_Br1_link,"['intros', 'set', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'elim', 'elim', 'intros', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'inversion', 'intros', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'intro', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'generalize', 'tauto', 'assert', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'assert', 'generalize', 'tauto', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'tauto', 'assert', 'rewrite', 'unfold', 'split', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'assert', 'unfold', 'generalize', 'assert', 'generalize', 'tauto', 'tauto', 'tauto', 'split', 'simpl', 'tauto', 'unfold', 'unfold', 'fold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'tauto', 'apply', 'tauto', 'apply', 'tauto']",1,1,1,5,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,distinct_last_darts,"['induction', 'simpl', 'intros', 'decompose', 'clear', 'decompose', 'clear', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', 'assert', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'split', 'intro', 'rewrite', 'apply', 'apply', 'unfold', 'tauto', 'intro', 'rewrite', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'intros', 'induction', 'simpl', 'simpl', 'simpl', 'rename', 'rename', 'simpl', 'apply', 'tauto', 'tauto', 'tauto', 'simpl', 'simpl', 'apply', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto']",2,4,2,2,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring2_Br1,"['induction', 'simpl', 'tauto', 'simpl', 'rename', 'rename', 'simpl', 'set', 'set', 'intros', 'decompose', 'clear', 'decompose', 'clear', 'induction', 'simpl', 'tauto', 'rename', 'rename', 'simpl', 'simpl', 'induction', 'unfold', 'clear', 'unfold', 'simpl', 'unfold', 'simpl', 'simpl', 'simpl', 'simpl', 'unfold', 'unfold', 'decompose', 'clear', 'decompose', 'clear', 'decompose', 'clear', 'decompose', 'clear', 'clear', 'fold', 'fold', 'unfold', 'unfold', 'unfold', 'assert', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'apply', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'tauto', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'apply', 'unfold', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'intros', 'unfold', 'elim', 'elim', 'intros', 'set', 'assert', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'generalize', 'fold', 'tauto', 'assert', 'generalize', 'fold', 'tauto', 'assert', 'generalize', 'fold', 'tauto', 'assert', 'rewrite', 'rewrite', 'intro', 'apply', 'apply', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'generalize', 'intros', 'assert', 'elim', 'tauto', 'intro', 'simpl', 'simpl', 'simpl', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'intros', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'symmetry', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'elim', 'tauto', 'intro', 'fold', 'assert', 'apply', 'tauto', 'rewrite', 'fold', 'tauto', 'intro', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'rewrite', 'unfold', 'apply', 'tauto', 'generalize', 'unfold', 'unfold', 'tauto', 'elim', 'intro', 'elim', 'apply', 'tauto', 'intro', 'fold', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'rename', 'rename', 'clear', 'assert', 'simpl', 'tauto', 'rewrite', 'decompose', 'clear', 'generalize', 'unfold', 'set', 'assert', 'apply', 'tauto', 'simpl', 'simpl', 'tauto', 'simpl', 'simpl', 'simpl', 'tauto', 'generalize', 'clear', 'simpl', 'assert', 'unfold', 'unfold', 'assert', 'intro', 'absurd', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'unfold', 'split', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'unfold', 'tauto', 'intro', 'rewrite', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'generalize', 'intro', 'elim', 'intros', 'rename', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",3,4,5,6,8,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,not_expf_B,"['simpl', 'intros', 'set', 'set', 'fold', 'fold', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'assert', 'unfold', 'unfold', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'rename', 'generalize', 'simpl', 'fold', 'fold', 'elim', 'intros', 'assert', 'tauto', 'clear', 'elim', 'clear', 'intro', 'decompose', 'clear', 'generalize', 'intro', 'generalize', 'intro', 'assert', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'decompose', 'clear', 'generalize', 'intro', 'generalize', 'intro', 'rewrite', 'assert', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto']",3,2,1,3,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,not_expf_Br1,"['intros', 'unfold', 'elim', 'elim', 'intros', 'set', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'generalize', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'assert', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'rewrite', 'elim', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'elim', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'clear', 'intro', 'decompose', 'clear', 'assert', 'intro', 'apply', 'generalize', 'fold', 'tauto', 'assert', 'intro', 'apply', 'generalize', 'fold', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'decompose', 'clear', 'assert', 'intro', 'apply', 'generalize', 'fold', 'tauto', 'assert', 'intro', 'apply', 'generalize', 'fold', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intros', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'intro', 'symmetry', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'assert', 'unfold', 'rewrite', 'elim', 'elim', 'tauto', 'intro', 'tauto', 'intro', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",2,1,3,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,distinct_face_list_Br1_aux,"['induction', 'simpl', 'tauto', 'rename', 'rename', 'intros', 'simpl', 'split', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'unfold', 'simpl', 'generalize', 'clear', 'unfold', 'intros', 'decompose', 'clear', 'unfold', 'simpl', 'decompose', 'clear', 'unfold', 'unfold', 'simpl', 'decompose', 'clear', 'unfold', 'unfold', 'unfold', 'unfold', 'assert', 'intro', 'apply', 'unfold', 'apply', 'unfold', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'unfold', 'apply', 'unfold', 'tauto', 'tauto', 'assert', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'unfold', 'apply', 'unfold', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'elim', 'apply', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'unfold', 'apply', 'unfold', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'elim', 'apply', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'intro', 'elim', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,3,3,3,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,distinct_faces_Br1,"['simpl', 'unfold', 'unfold', 'unfold', 'intros', 'decompose', 'clear', 'decompose', 'clear', 'decompose', 'clear', 'assert', 'intro', 'rewrite', 'elim', 'apply', 'unfold', 'tauto', 'assert', 'assert', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'intro', 'rewrite', 'elim', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'rewrite', 'elim', 'apply', 'unfold', 'tauto', 'assert', 'assert', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'intro', 'rewrite', 'elim', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'rewrite', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'assert', 'rewrite', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'rewrite', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'intro', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,2,3,3,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,distinct_face_list_Br1_aux_bis,"['induction', 'simpl', 'tauto', 'rename', 'rename', 'intros', 'simpl', 'split', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'tauto']",1,2,0,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring3_Br1_aux,"['induction', 'simpl', 'tauto', 'rename', 'rename', 'intros', 'simpl', 'assert', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'unfold', 'simpl', 'split', 'split', 'tauto', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'tauto', 'split', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'simpl', 'unfold', 'simpl', 'tauto', 'tauto', 'simpl', 'simpl', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'tauto', 'simpl', 'tauto']",1,3,1,0,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring3_Br1_aux_bis,"['intros', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'unfold', 'tauto', 'unfold', 'simpl', 'tauto', 'fold', 'tauto']",1,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,pre_ring3_Br1,"['induction', 'simpl', 'tauto', 'simpl', 'rename', 'rename', 'intros', 'induction', 'simpl', 'tauto', 'rename', 'rename', 'apply', 'tauto', 'tauto', 'simpl', 'simpl', 'tauto', 'simpl', 'simpl', 'tauto', 'simpl', 'simpl', 'tauto', 'simpl', 'simpl', 'tauto']",0,1,0,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,ring_Br1_aux,"['unfold', 'intros', 'set', 'set', 'elim', 'tauto', 'right', 'split', 'tauto', 'split', 'generalize', 'induction', 'simpl', 'simpl', 'fold', 'fold', 'tauto', 'split', 'generalize', 'induction', 'simpl', 'simpl', 'fold', 'fold', 'tauto', 'split', 'generalize', 'induction', 'simpl', 'simpl', 'fold', 'fold', 'simpl', 'simpl', 'fold', 'fold', 'tauto', 'split', 'generalize', 'induction', 'simpl', 'simpl', 'simpl', 'simpl', 'fold', 'fold', 'fold', 'fold', 'tauto', 'generalize', 'induction', 'simpl', 'simpl', 'fold', 'fold', 'simpl', 'fold', 'fold', 'tauto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,ring_Br1,"['intros', 'unfold', 'unfold', 'induction', 'unfold', 'simpl', 'tauto', 'simpl', 'simpl', 'simpl', 'fold', 'fold', 'induction', 'simpl', 'tauto', 'rename', 'rename', 'set', 'set', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'intros', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto']",2,3,1,0,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan10.json,Jordan,"['induction', 'unfold', 'simpl', 'tauto', 'rename', 'rename', 'simpl', 'intros', 'induction', 'simpl', 'generalize', 'simpl', 'tauto', 'rename', 'rename', 'set', 'set', 'assert', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'fold', 'fold', 'elim', 'tauto', 'intro', 'omega', 'tauto', 'tauto', 'unfold', 'simpl', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'tauto']",2,5,1,1,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_dec,"['induction', 'simpl', 'tauto', 'simpl', 'intro', 'generalize', 'generalize', 'tauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_Vs,"['intros', 'induction', 'tauto', 'generalize', 'simpl', 'tauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_diff,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'intro', 'symmetry', 'tauto', 'apply', 'tauto']",0,1,0,1,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_Ds,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'apply', 'simpl', 'generalize', 'tauto']",1,3,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_Ds,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'generalize', 'tauto', 'intro', 'simpl', 'generalize', 'tauto']",2,2,0,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_Ds_diff,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'apply', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'intro', 'rewrite', 'tauto', 'apply']",1,3,0,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Ds_s,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'rewrite', 'generalize', 'intros', 'split', 'tauto', 'intro', 'assert', 'simpl', 'tauto', 'rewrite', 'absurd', 'apply', 'tauto', 'intro', 'split', 'intros', 'generalize', 'intros', 'assert', 'tauto', 'rewrite', 'tauto', 'intros', 'injection', 'generalize', 'tauto']",4,2,0,1,5,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_Ds_bis,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'apply', 'tauto', 'simpl', 'intro', 'generalize', 'tauto']",1,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_Ds_exds,"['intros', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,card_Ds,"['induction', 'simpl', 'intro', 'omega', 'simpl', 'intro', 'elim', 'intro', 'elim', 'intro', 'apply', 'intro', 'generalize', 'intro', 'omega', 'simpl', 'elim', 'elim', 'intros', 'apply', 'intros', 'generalize', 'assert', 'intro', 'rewrite', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'intro', 'omega', 'intros', 'generalize', 'intro', 'omega']",5,1,1,1,2,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_card_Ds,"['intros', 'generalize', 'intros', 'assert', 'tauto', 'rewrite', 'tauto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_card_pos,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'apply', 'tauto', 'intro', 'omega']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_card_Ds,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'intro', 'rewrite', 'rewrite', 'omega', 'tauto', 'simpl', 'elim', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'intros', 'generalize', 'assert', 'intro', 'rewrite', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'assert', 'intro', 'rewrite', 'tauto', 'tauto', 'intros', 'rewrite', 'assert', 'apply', 'tauto', 'omega', 'tauto']",3,2,1,4,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_card_Ds_inf,"['intros', 'generalize', 'generalize', 'intros', 'omega']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exd_exds,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'generalize', 'tauto', 'simpl', 'tauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,nd_card,"['induction', 'simpl', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'intros', 'generalize', 'tauto', 'elim', 'intros', 'generalize', 'tauto', 'rewrite', 'tauto', 'simpl', 'tauto']",2,1,0,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_minus,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'apply', 'tauto', 'simpl', 'intro', 'generalize', 'tauto']",1,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_set_minus,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'intro', 'elim', 'tauto', 'generalize', 'tauto']",2,2,0,1,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_set_minus,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'apply', 'tauto', 'simpl', 'intro', 'generalize', 'intro', 'assert', 'intro', 'rewrite', 'tauto', 'tauto']",2,2,0,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_set_minus_eq,"['intros', 'generalize', 'generalize', 'generalize', 'generalize', 'generalize', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,set_minus_s_Ds,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'elim', 'intros', 'apply', 'tauto', 'tauto', 'intros', 'generalize', 'intros', 'assert', 'intro', 'rewrite', 'tauto', 'tauto', 'elim', 'intros', 'generalize', 'intros', 'assert', 'intro', 'rewrite', 'tauto', 'tauto', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto']",5,2,0,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,card_minus_set,"['induction', 'simpl', 'intros', 'inversion', 'simpl', 'generalize', 'intro', 'rewrite', 'simpl', 'tauto', 'simpl', 'intros', 'inversion', 'simpl', 'elim', 'elim', 'intros', 'apply', 'constructor', 'intros', 'elim', 'intro', 'rewrite', 'tauto', 'tauto', 'intros', 'generalize', 'intros', 'inversion', 'assert', 'constructor', 'intros', 'assert', 'intro', 'rewrite', 'apply', 'generalize', 'intro', 'assert', 'tauto', 'assert', 'apply', 'tauto', 'simpl', 'tauto', 'generalize', 'intro', 'rewrite', 'generalize', 'intro', 'rewrite', 'rewrite', 'generalize', 'intro', 'omega', 'tauto', 'intro', 'simpl', 'elim', 'elim', 'intros', 'apply', 'constructor', 'intros', 'elim', 'intro', 'rewrite', 'tauto', 'tauto', 'intros', 'generalize', 'tauto', 'elim', 'intros', 'elim', 'apply', 'intros', 'rewrite', 'omega', 'constructor', 'intros', 'elim', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto']",6,3,2,4,5,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Acc_set,"['induction', 'apply', 'unfold', 'simpl', 'intros', 'inversion', 'apply', 'intro', 'unfold', 'simpl', 'inversion', 'intro', 'elim', 'intro', 'apply', 'intro', 'unfold', 'rewrite', 'intro', 'apply', 'unfold', 'tauto', 'intro', 'apply', 'unfold', 'intros', 'generalize', 'clear', 'elim', 'intros', 'apply', 'unfold', 'omega', 'intros', 'apply', 'unfold', 'omega']",7,2,1,1,0,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Rs_wf,"['unfold', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_Rs_Ds,"['unfold', 'simpl', 'intros', 'apply', 'tauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exd_Iter_f,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'generalize', 'generalize', 'generalize', 'tauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exd_Iter_f_1,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'generalize', 'generalize', 'generalize', 'tauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_rem_F,"['intros', 'refine', 'apply', 'tauto', 'Defined']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_rem_aux_equation,"['intros', 'unfold', 'rewrite', 'auto', 'intros', 'unfold', 'destruct', 'rewrite', 'trivial', 'trivial']",1,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_rem_upb,"['intros', 'refine', 'unfold', 'unfold', 'simpl', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'apply', 'unfold', 'simpl', 'apply', 'tauto', 'tauto']",1,5,1,1,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_Iter_rem_upb,"['unfold', 'unfold', 'intros', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exd_Iter_upb,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exd_Iter_orb_upb,"['unfold', 'intros', 'apply', 'generalize', 'intro', 'generalize', 'tauto', 'apply']",4,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_rem_orb,"['intros', 'unfold', 'generalize', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,LR3,"['intros', 'refine', 'unfold', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'apply', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",2,1,2,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,LR2,"['intros', 'simpl', 'refine', 'unfold', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'apply', 'apply', 'tauto']",3,1,1,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,LR1,"['intros', 'refine', 'unfold', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'apply', 'intro', 'generalize', 'rewrite', 'simpl', 'elim', 'intros', 'apply', 'unfold', 'apply', 'tauto', 'split', 'generalize', 'intro', 'rewrite', 'elim', 'intros', 'clear', 'omega', 'tauto', 'intros', 'clear', 'omega']",6,2,2,2,2,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exds_Iter_f_i,"['simpl', 'unfold', 'unfold', 'intros', 'apply', 'generalize', 'intro', 'rewrite', 'simpl', 'unfold', 'unfold', 'omega']",4,3,0,1,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_Iter_f_i,"['intros', 'assert', 'generalize', 'intro', 'tauto', 'generalize', 'unfold', 'intros', 'generalize', 'simpl', 'tauto']",4,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,card_rem_aux,"['intros', 'refine', 'unfold', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'apply', 'unfold', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'omega', 'tauto']",2,1,3,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,card_rem_aux_bis,"['intros', 'refine', 'unfold', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'apply', 'unfold', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'omega', 'tauto']",2,1,3,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,upb_pos_aux,"['intros', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'apply', 'assert', 'apply', 'tauto', 'generalize', 'intro', 'omega', 'intro', 'generalize', 'intro', 'assert', 'omega', 'rewrite', 'simpl', 'generalize', 'intro', 'generalize', 'tauto']",2,1,1,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,upb_pos,"['unfold', 'intros', 'generalize', 'intros', 'generalize', 'intro', 'omega']",4,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,LQ1,"['intros', 'refine', 'unfold', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'assert', 'apply', 'tauto', 'assert', 'apply', 'unfold', 'tauto', 'omega', 'intro', 'omega']",2,1,2,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,LQ2,"['intros', 'refine', 'unfold', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'assert', 'apply', 'tauto', 'assert', 'apply', 'omega', 'tauto']",2,1,1,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,L2,"['intros', 'refine', 'unfold', 'intros', 'generalize', 'clear', 'rewrite', 'simpl', 'elim', 'tauto', 'tauto']",3,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,L3,"['intros', 'refine', 'unfold', 'intros', 'generalize', 'clear', 'rewrite', 'simpl', 'elim', 'tauto', 'tauto']",3,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,ex_i,"['unfold', 'unfold', 'intros', 'generalize', 'simpl', 'unfold', 'unfold', 'intros', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'rewrite', 'omega', 'tauto']",4,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,ex_i_upb,"['intros', 'unfold', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'generalize', 'simpl', 'intros', 'unfold', 'unfold', 'unfold', 'unfold', 'apply']",2,2,1,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_plus,"['induction', 'simpl', 'assert', 'omega', 'rewrite', 'tauto', 'simpl', 'assert', 'omega', 'rewrite', 'simpl', 'clear', 'intros', 'assert', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'generalize', 'tauto']",0,2,0,2,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_plus_inv,"['induction', 'simpl', 'assert', 'omega', 'rewrite', 'tauto', 'simpl', 'assert', 'omega', 'rewrite', 'simpl', 'clear', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto']",0,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_mult,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",1,2,0,2,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_plus_mult,"['intros', 'induction', 'simpl', 'assert', 'omega', 'rewrite', 'tauto', 'simpl', 'assert', 'omega', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto']",0,1,0,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_comp,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'tauto']",1,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,f_1_Iter_f,"['induction', 'simpl', 'intros', 'apply', 'trivial', 'trivial', 'simpl', 'intros', 'rewrite', 'tauto', 'tauto', 'assert', 'simpl', 'tauto', 'rewrite', 'generalize', 'tauto']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_f_f_1,"['induction', 'intros', 'assert', 'omega', 'rewrite', 'simpl', 'trivial', 'induction', 'simpl', 'tauto', 'intros', 'simpl', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'apply', 'trivial', 'trivial', 'trivial', 'trivial', 'omega']",3,2,0,2,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_f_f_1_i,"['intros', 'rewrite', 'assert', 'omega', 'rewrite', 'simpl', 'trivial', 'trivial', 'trivial', 'omega']",0,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_f_Si,"['simpl', 'intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'tauto']",1,3,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_f_1_Si,"['simpl', 'intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'tauto']",1,3,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,diff_int_aux_dec,"['intros', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'right', 'unfold', 'intro', 'generalize', 'apply', 'omega', 'intro', 'left', 'unfold', 'intros', 'assert', 'omega', 'rewrite', 'tauto', 'intro', 'left', 'unfold', 'intros', 'omega', 'induction', 'intro', 'absurd', 'omega', 'tauto', 'intro', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'right', 'unfold', 'intro', 'generalize', 'apply', 'omega', 'intro', 'elim', 'intro', 'right', 'unfold', 'intro', 'generalize', 'apply', 'omega', 'intro', 'left', 'unfold', 'intros', 'assert', 'omega', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'rewrite', 'tauto', 'intro', 'assert', 'omega', 'elim', 'intro', 'elim', 'intro', 'right', 'unfold', 'intro', 'generalize', 'apply', 'omega', 'intro', 'left', 'unfold', 'intros', 'unfold', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'assert', 'omega', 'apply', 'intro', 'right', 'unfold', 'unfold', 'intro', 'apply', 'intros', 'apply', 'omega']",7,1,1,1,1,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,diff_int_le,"['intros', 'unfold', 'intros', 'omega']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,diff_int_dec,"['intros', 'induction', 'left', 'unfold', 'intros', 'omega', 'elim', 'intro', 'generalize', 'intros', 'elim', 'intro', 'clear', 'left', 'unfold', 'intros', 'unfold', 'unfold', 'elim', 'intro', 'rewrite', 'apply', 'omega', 'intro', 'apply', 'omega', 'intro', 'clear', 'unfold', 'right', 'unfold', 'intro', 'apply', 'intros', 'apply', 'omega', 'intro', 'unfold', 'right', 'unfold', 'intro', 'apply', 'intros', 'apply', 'omega']",6,1,1,2,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_int_gt,"['intros', 'unfold', 'intros', 'absurd', 'omega', 'tauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_int_dec,"['intros', 'elim', 'intro', 'induction', 'elim', 'intro', 'left', 'unfold', 'intros', 'assert', 'omega', 'rewrite', 'simpl', 'tauto', 'intro', 'right', 'unfold', 'intro', 'apply', 'assert', 'apply', 'omega', 'simpl', 'tauto', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'left', 'unfold', 'intros', 'assert', 'omega', 'rewrite', 'tauto', 'intro', 'right', 'unfold', 'intro', 'apply', 'apply', 'omega', 'intro', 'assert', 'omega', 'elim', 'intro', 'elim', 'intro', 'left', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'unfold', 'apply', 'omega', 'intro', 'right', 'unfold', 'intro', 'apply', 'apply', 'omega', 'intro', 'right', 'unfold', 'intro', 'apply', 'unfold', 'intros', 'apply', 'omega', 'intro', 'left', 'apply', 'omega']",4,1,4,1,1,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,rem_1_step,"['simpl', 'intros', 'generalize', 'simpl', 'intro', 'split', 'intro', 'generalize', 'elim', 'tauto', 'intros', 'rewrite', 'absurd', 'omega', 'tauto', 'intro', 'generalize', 'intro', 'omega']",4,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,rem_2_steps,"['intros', 'generalize', 'simpl', 'generalize', 'simpl', 'intros', 'assert', 'unfold', 'clear', 'omega', 'assert', 'tauto', 'generalize', 'simpl', 'elim', 'intros', 'assert', 'rewrite', 'clear', 'omega', 'tauto', 'assert', 'clear', 'omega', 'unfold', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'assert', 'clear', 'omega', 'rewrite', 'tauto', 'tauto']",2,1,0,2,2,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,LP7,"['intros', 'refine', 'unfold', 'unfold', 'intros', 'generalize', 'generalize', 'simpl', 'intro', 'assert', 'tauto', 'clear', 'intro', 'clear', 'elim', 'intro', 'clear', 'omega', 'intro', 'assert', 'omega', 'generalize', 'intro', 'clear', 'elim', 'intros', 'assert', 'rewrite', 'tauto', 'tauto', 'assert', 'omega', 'generalize', 'simpl', 'intros', 'rewrite', 'unfold', 'generalize', 'simpl', 'elim', 'intros', 'clear', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'generalize', 'intro', 'clear', 'unfold', 'assert', 'apply', 'split', 'clear', 'omega', 'apply', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'intros', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'generalize', 'intro', 'assert', 'apply', 'unfold', 'rewrite', 'clear', 'omega', 'tauto', 'tauto', 'generalize', 'intro', 'rewrite', 'clear', 'omega', 'generalize', 'intro', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'tauto', 'clear', 'generalize', 'intro', 'rewrite', 'generalize', 'simpl', 'elim', 'intros', 'clear', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'intro', 'assert', 'simpl', 'rewrite', 'tauto', 'generalize', 'assert', 'clear', 'clear', 'clear', 'omega', 'rewrite', 'apply', 'split', 'rewrite', 'apply', 'tauto', 'clear', 'clear', 'clear', 'clear', 'clear', 'elim', 'intros', 'clear', 'clear', 'omega', 'tauto']",6,3,3,5,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,LP8,"['intros', 'refine', 'unfold', 'unfold', 'intros', 'generalize', 'simpl', 'intro', 'assert', 'tauto', 'clear', 'elim', 'intro', 'clear', 'assert', 'omega', 'rewrite', 'apply', 'apply', 'intro', 'assert', 'omega', 'clear', 'generalize', 'intro', 'generalize', 'intro', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'unfold', 'apply', 'split', 'rewrite', 'tauto', 'tauto', 'intro', 'assert', 'rewrite', 'tauto', 'tauto', 'generalize', 'simpl', 'elim', 'intros', 'clear', 'clear', 'generalize', 'intros', 'assert', 'apply', 'unfold', 'apply', 'tauto', 'tauto', 'rewrite', 'omega', 'rewrite', 'assert', 'clear', 'clear', 'clear', 'omega', 'rewrite', 'tauto', 'clear', 'rewrite', 'unfold', 'rewrite', 'apply', 'split', 'clear', 'clear', 'clear', 'omega', 'tauto', 'tauto']",7,1,4,4,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exd_diff_orb,"['intros', 'unfold', 'generalize', 'intro', 'assert', 'rewrite', 'omega', 'cut', 'rewrite', 'tauto', 'apply', 'tauto', 'rewrite', 'apply', 'rewrite', 'simpl', 'generalize', 'tauto']",2,1,1,1,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_upb_period,"['simpl', 'intros', 'generalize', 'simpl', 'intros', 'elim', 'intros', 'clear', 'elim', 'intro', 'rewrite', 'simpl', 'symmetry', 'tauto', 'intro', 'decompose', 'clear', 'assert', 'rewrite', 'tauto', 'set', 'set', 'assert', 'unfold', 'omega', 'assert', 'unfold', 'omega', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'unfold', 'unfold', 'absurd', 'generalize', 'simpl', 'intros', 'unfold', 'assert', 'apply', 'rewrite', 'apply', 'assert', 'rewrite', 'simpl', 'omega', 'rewrite', 'simpl', 'generalize', 'tauto', 'apply', 'split', 'clear', 'clear', 'clear', 'rewrite', 'omega', 'clear', 'clear', 'split', 'omega', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'generalize', 'tauto']",4,4,3,4,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,Iter_period,"['intros', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'rewrite', 'trivial', 'assumption', 'assumption', 'assumption']",0,0,1,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,mod_p,"['intros', 'assert', 'unfold', 'generalize', 'intro', 'omega', 'generalize', 'intro', 'elim', 'intros', 'split', 'elim', 'intros', 'elim', 'clear', 'intros', 'split', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'trivial', 'tauto', 'tauto', 'omega']",1,0,0,3,1,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,period_uniform,"['intros', 'set', 'set', 'set', 'generalize', 'simpl', 'fold', 'intro', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'intro', 'assert', 'unfold', 'rewrite', 'apply', 'assert', 'apply', 'fold', 'rewrite', 'rewrite', 'tauto', 'assert', 'unfold', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'unfold', 'rewrite', 'trivial', 'trivial', 'trivial', 'clear', 'elim', 'intro', 'elim', 'clear', 'intro', 'generalize', 'unfold', 'unfold', 'unfold', 'unfold', 'fold', 'unfold', 'intros', 'absurd', 'intro', 'symmetry', 'replace', 'generalize', 'clear', 'apply', 'split', 'omega', 'split', 'unfold', 'apply', 'tauto', 'omega', 'simpl', 'trivial', 'tauto', 'tauto', 'intro', 'generalize', 'unfold', 'unfold', 'unfold', 'unfold', 'fold', 'unfold', 'intros', 'symmetry', 'absurd', 'replace', 'apply', 'split', 'omega', 'split', 'unfold', 'apply', 'tauto', 'omega', 'simpl', 'trivial', 'tauto']",3,1,2,4,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,unicity_mod_p,"['intros', 'generalize', 'unfold', 'unfold', 'unfold', 'unfold', 'fold', 'unfold', 'intros', 'elim', 'elim', 'intros', 'tauto', 'intros', 'absurd', 'apply', 'omega', 'tauto', 'intro', 'symmetry', 'absurd', 'apply', 'omega', 'tauto']",4,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_expo1,"['unfold', 'unfold', 'intros', 'unfold', 'unfold', 'intros', 'split', 'intros', 'elim', 'clear', 'intros', 'split', 'tauto', 'elim', 'intros', 'clear', 'generalize', 'simpl', 'intros', 'elim', 'intros', 'split', 'split', 'tauto', 'rewrite', 'symmetry', 'tauto', 'intros', 'elim', 'clear', 'intros', 'split', 'tauto', 'elim', 'intros', 'split', 'tauto']",5,2,0,0,2,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,modulo,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'simpl', 'elim', 'intros', 'apply', 'Defined']",1,0,1,0,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_exd,"['unfold', 'intros', 'decompose', 'elim', 'intros', 'rewrite', 'generalize', 'tauto']",2,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_refl,"['intros', 'unfold', 'split', 'tauto', 'split', 'simpl', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_trans,"['unfold', 'intros', 'intuition', 'elim', 'intros', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'tauto']",2,0,0,1,1,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_symm,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'unfold', 'unfold', 'intuition', 'elim', 'intros', 'rewrite', 'clear', 'generalize', 'intro', 'simpl', 'elim', 'intros', 'elim', 'clear', 'intros', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'apply', 'tauto', 'tauto']",1,1,1,3,3,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,ex_j_dec,"['induction', 'simpl', 'apply', 'simpl', 'generalize', 'tauto']",0,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,ex_j_exist_j,"['induction', 'simpl', 'split', 'intro', 'split', 'split', 'omega', 'simpl', 'tauto', 'intro', 'elim', 'intros', 'intuition', 'inversion', 'rewrite', 'simpl', 'simpl', 'tauto', 'simpl', 'split', 'intro', 'elim', 'intro', 'split', 'split', 'clear', 'omega', 'simpl', 'tauto', 'intro', 'assert', 'tauto', 'elim', 'intros', 'split', 'split', 'decompose', 'clear', 'omega', 'tauto', 'intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'simpl', 'tauto', 'intro', 'assert', 'split', 'split', 'clear', 'omega', 'tauto', 'tauto']",1,2,0,1,3,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo1_ex_j,"['intros', 'generalize', 'generalize', 'rename', 'rename', 'fold', 'intros', 'generalize', 'unfold', 'fold', 'intros', 'split', 'intro', 'assert', 'tauto', 'elim', 'intros', 'split', 'tauto', 'split', 'split', 'clear', 'omega', 'tauto', 'intro', 'elim', 'intros', 'elim', 'clear', 'intros', 'assert', 'split', 'split', 'clear', 'omega', 'tauto', 'tauto']",2,0,0,0,1,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo1_dec,"['intros', 'set', 'generalize', 'intro', 'elim', 'intro', 'left', 'generalize', 'simpl', 'fold', 'tauto', 'intro', 'right', 'intro', 'generalize', 'simpl', 'fold', 'tauto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_dec,"['intros', 'generalize', 'generalize', 'intros', 'elim', 'tauto', 'unfold', 'tauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,period_expo,"['unfold', 'intros', 'elim', 'clear', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'tauto', 'tauto']",2,0,0,2,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,period_lub,"['intros', 'split', 'unfold', 'apply', 'tauto', 'split', 'unfold', 'apply', 'tauto', 'tauto', 'intros', 'generalize', 'unfold', 'unfold', 'unfold', 'unfold', 'fold', 'unfold', 'intros', 'assert', 'tauto', 'clear', 'generalize', 'intros', 'simpl', 'intro', 'symmetry', 'apply', 'split', 'omega', 'omega', 'assumption']",7,1,2,0,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,ndN_pos,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'elim', 'intro', 'apply', 'tauto', 'intro', 'omega', 'simpl', 'tauto']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_pos_aux,"['unfold', 'intros', 'apply', 'intros', 'unfold', 'tauto', 'intros', 'unfold', 'intros', 'omega', 'intros', 'unfold', 'unfold', 'assert', 'omega', 'tauto', 'intros', 'unfold', 'intros', 'omega']",6,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_pos,"['unfold', 'intros', 'generalize', 'unfold', 'unfold', 'intros', 'assert', 'omega', 'tauto']",3,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_diff_aux,"['unfold', 'intros', 'apply', 'intros', 'unfold', 'intros', 'omega', 'intros', 'unfold', 'intros', 'rewrite', 'assert', 'rewrite', 'omega', 'rewrite', 'intro', 'symmetry', 'assert', 'apply', 'tauto', 'intros', 'unfold', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'intro', 'assert', 'apply', 'symmetry', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'omega', 'split', 'omega', 'tauto', 'intros', 'unfold', 'intros', 'omega']",6,1,2,2,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_diff,"['intros', 'generalize', 'unfold', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'omega', 'apply', 'omega']",3,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_bound,"['intros', 'elim', 'tauto', 'intro', 'generalize', 'intro', 'set', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'omega', 'absurd', 'apply', 'split', 'unfold', 'apply', 'tauto', 'omega', 'tauto']",2,1,1,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_per_aux,"['unfold', 'intros', 'apply', 'intros', 'unfold', 'symmetry', 'tauto', 'intros', 'unfold', 'intros', 'absurd', 'omega', 'tauto', 'intros', 'unfold', 'unfold', 'intros', 'apply', 'tauto', 'tauto', 'omega', 'tauto', 'intros', 'unfold', 'intros', 'absurd', 'omega', 'tauto']",6,1,1,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_per,"['intros', 'apply', 'tauto', 'tauto', 'omega', 'apply', 'tauto', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_lub,"['intros', 'unfold', 'split', 'apply', 'tauto', 'split', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'tauto']",1,0,0,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,upb_eq_degree,"['intros', 'set', 'set', 'generalize', 'generalize', 'simpl', 'fold', 'fold', 'intros', 'decompose', 'clear', 'decompose', 'clear', 'elim', 'intro', 'elim', 'intro', 'absurd', 'apply', 'omega', 'tauto', 'tauto', 'intro', 'absurd', 'apply', 'omega', 'tauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_degree,"['intros', 'generalize', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'unfold', 'tauto']",1,0,0,1,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_uniform,"['intros', 'generalize', 'rewrite', 'rewrite', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto']",1,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_unicity,"['intros', 'generalize', 'simpl', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,incls_orbit,"['intros', 'apply', 'intro', 'unfold', 'generalize', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_orb_exd,"['intros', 'generalize', 'intro', 'inversion', 'generalize', 'intro', 'generalize', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,incls_rem,"['unfold', 'intros', 'apply', 'intro', 'intro', 'generalize', 'simpl', 'generalize', 'generalize', 'tauto']",4,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,card_orbit,"['unfold', 'unfold', 'intros', 'generalize', 'intros', 'rewrite', 'generalize', 'intro', 'omega']",4,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_orb_ex,"['intros', 'intros', 'assert', 'generalize', 'intro', 'inversion', 'generalize', 'intro', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'apply']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_orb_eq_ex,"['split', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'elim', 'intros', 'split', 'tauto', 'intros', 'elim', 'intros', 'clear', 'decompose', 'clear', 'rewrite', 'apply', 'tauto', 'tauto', 'omega']",2,0,0,1,3,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,exds_orb_eq_ex_large,"['split', 'intro', 'generalize', 'intro', 'generalize', 'simpl', 'intro', 'assert', 'tauto', 'clear', 'elim', 'intros', 'split', 'tauto', 'intro', 'assert', 'unfold', 'split', 'tauto', 'tauto', 'generalize', 'unfold', 'intro', 'assert', 'tauto', 'generalize', 'simpl', 'tauto']",4,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_eq_exds_orb,"['intros', 'generalize', 'simpl', 'intro', 'unfold', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo1_eq_exds_orb,"['intros', 'generalize', 'simpl', 'intro', 'unfold', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,impls_orb,"['unfold', 'intros', 'assert', 'generalize', 'tauto', 'generalize', 'intros', 'generalize', 'intro', 'assert', 'generalize', 'intro', 'generalize', 'intro', 'inversion', 'generalize', 'tauto', 'simpl', 'assert', 'tauto', 'elim', 'clear', 'intros', 'assert', 'unfold', 'split', 'tauto', 'split', 'tauto', 'assert', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'tauto', 'simpl', 'tauto']",4,0,2,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,eqs_orb,"['unfold', 'intros', 'assert', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'split', 'generalize', 'unfold', 'intro', 'apply', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'unfold', 'intro', 'apply']",2,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,orb_impls_expo,"['intros', 'unfold', 'generalize', 'intro', 'assert', 'generalize', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'generalize', 'tauto']",2,0,1,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_eq_eqs_orb,"['split', 'apply', 'unfold', 'intro', 'generalize', 'unfold', 'intro', 'assert', 'intro', 'intro', 'generalize', 'tauto', 'tauto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,disjs_orb,"['unfold', 'intros', 'assert', 'generalize', 'intro', 'inversion', 'clear', 'generalize', 'intro', 'assert', 'tauto', 'clear', 'generalize', 'tauto', 'generalize', 'generalize', 'simpl', 'set', 'set', 'intros', 'assert', 'tauto', 'clear', 'assert', 'tauto', 'clear', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'clear', 'intros', 'decompose', 'clear', 'intros', 'assert', 'unfold', 'split', 'tauto', 'split', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'split', 'tauto', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",3,0,0,0,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,disjs_orb_not_expo,"['unfold', 'intros', 'generalize', 'intros', 'assert', 'generalize', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'tauto']",5,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_expo_disjs_orb,"['split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,incls_minus,"['intros', 'apply', 'intros', 'apply', 'generalize', 'intro', 'inversion', 'fold', 'apply', 'fold', 'tauto', 'intro', 'generalize', 'unfold', 'intro', 'apply']",5,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,upb_sum_bound,"['intros', 'rewrite', 'rewrite', 'set', 'set', 'set', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'intro', 'generalize', 'fold', 'fold', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'fold', 'rewrite', 'clear', 'omega', 'tauto', 'tauto', 'tauto', 'tauto']",1,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,degree_sum_bound,"['intros', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",0,0,0,3,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,between_expo1,"['unfold', 'intros', 'generalize', 'clear', 'intro', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'decompose', 'clear', 'unfold', 'split', 'split', 'tauto', 'split', 'split', 'omega', 'tauto', 'split', 'tauto', 'split', 'split', 'tauto', 'tauto']",3,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,between_expo,"['intros', 'generalize', 'intros', 'generalize', 'generalize', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,between_expo_refl_1,"['intros', 'unfold', 'unfold', 'split', 'intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'intros', 'split', 'tauto', 'split', 'tauto', 'intros', 'intuition', 'elim', 'intros', 'clear', 'split', 'split', 'simpl', 'split', 'tauto', 'split', 'tauto', 'omega']",3,1,0,0,1,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,between_expo_refl_2,"['intros', 'unfold', 'unfold', 'split', 'intros', 'generalize', 'clear', 'intro', 'intuition', 'elim', 'clear', 'intros', 'elim', 'intros', 'split', 'tauto', 'intros', 'decompose', 'clear', 'elim', 'clear', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'split', 'omega', 'tauto']",3,1,0,0,1,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_between_1,"['intros', 'rename', 'unfold', 'unfold', 'split', 'intros', 'intuition', 'elim', 'intros', 'clear', 'split', 'split', 'split', 'tauto', 'split', 'set', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'assert', 'rewrite', 'tauto', 'rewrite', 'simpl', 'tauto', 'tauto', 'tauto', 'omega', 'omega', 'intros', 'split', 'tauto', 'intuition', 'elim', 'clear', 'intros', 'elim', 'intros', 'split', 'split', 'omega', 'tauto']",0,2,1,0,4,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,expo_between_3,"['unfold', 'unfold', 'intros', 'intuition', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'elim', 'intro', 'left', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'omega', 'intro', 'right', 'intros', 'intuition', 'split', 'split', 'assert', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'split', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'tauto', 'split', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'omega']",2,1,0,1,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,succf_dec,"['intros', 'unfold', 'elim', 'elim', 'tauto', 'tauto', 'tauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,succf_exd,"['unfold', 'intros', 'unfold', 'elim', 'tauto', 'intro', 'elim', 'intros', 'clear', 'elim', 'apply', 'tauto', 'tauto']",4,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,predf_dec,"['unfold', 'intros', 'generalize', 'generalize', 'tauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,predf_exd,"['unfold', 'intros', 'apply', 'tauto', 'tauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,F_nil,"['intros', 'unfold', 'assert', 'apply', 'tauto', 'rewrite', 'apply', 'tauto']",1,0,1,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,F_1_nil,"['intros', 'unfold', 'assert', 'apply', 'tauto', 'rewrite', 'apply', 'tauto']",1,0,1,1,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,succf_exd_F,"['unfold', 'unfold', 'intros', 'apply', 'tauto', 'tauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,predf_exd_F_1,"['unfold', 'unfold', 'intros', 'apply', 'tauto', 'tauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,succf_F,"['intros', 'unfold', 'unfold', 'unfold', 'intuition', 'rewrite', 'apply', 'apply', 'tauto']",1,1,1,1,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,predf_F_1,"['intros', 'unfold', 'unfold', 'unfold', 'intuition', 'rewrite', 'apply', 'apply', 'tauto']",1,1,1,1,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exd_F_nil,"['unfold', 'intros', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto']",3,0,1,1,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,not_exd_F_1_nil,"['unfold', 'intros', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto']",3,0,1,1,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,F_F_1,"['unfold', 'unfold', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'intro', 'rewrite', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto']",2,1,0,3,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,F_1_F,"['unfold', 'unfold', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'intro', 'rewrite', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'intro', 'rewrite', 'absurd', 'apply', 'tauto', 'tauto']",2,1,0,3,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,inj_F_succf,"['intros', 'unfold', 'unfold', 'unfold', 'intros', 'intuition', 'generalize', 'unfold', 'intro', 'apply', 'tauto', 'tauto', 'generalize', 'unfold', 'intro', 'apply', 'tauto', 'tauto', 'tauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,inj_F_1_predf,"['intros', 'unfold', 'unfold', 'unfold', 'intros', 'intuition', 'generalize', 'unfold', 'intro', 'apply', 'tauto', 'tauto', 'generalize', 'unfold', 'intro', 'apply', 'tauto', 'tauto', 'tauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,inj_cF,"['unfold', 'unfold', 'intros', 'generalize', 'intros', 'generalize', 'unfold', 'intros', 'eapply', 'tauto', 'tauto', 'generalize', 'unfold', 'intro', 'eapply', 'generalize', 'tauto', 'generalize', 'tauto', 'tauto']",4,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,inj_cF_1,"['unfold', 'unfold', 'intros', 'generalize', 'intros', 'generalize', 'unfold', 'intros', 'eapply', 'tauto', 'tauto', 'generalize', 'unfold', 'intro', 'eapply', 'generalize', 'tauto', 'generalize', 'tauto', 'tauto']",4,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,cF_cF_1,"['intros', 'unfold', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto']",1,1,0,2,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,cF_1_cF,"['intros', 'unfold', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto']",1,1,0,2,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,surj_cF,"['unfold', 'intros', 'split', 'rewrite', 'split', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,bij_cF,"['unfold', 'intros', 'split', 'apply', 'tauto', 'apply', 'tauto']",2,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,surj_cF_1,"['unfold', 'intros', 'split', 'rewrite', 'split', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan2.json,bij_cF_1,"['unfold', 'intros', 'split', 'apply', 'tauto', 'apply', 'tauto']",2,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1,"['intros', 'elim', 'intro', 'rename', 'generalize', 'elim', 'intro', 'inversion', 'intros', 'generalize', 'clear', 'elim', 'intro', 'elim', 'fold', 'tauto', 'intros', 'elim', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'fold', 'intros', 'elim', 'unfold', 'intro', 'elim', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'unfold', 'tauto', 'intros', 'unfold', 'elim', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intro', 'unfold', 'elim', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'elim', 'unfold', 'intros', 'unfold', 'elim', 'rewrite', 'rewrite', 'tauto', 'tauto', 'generalize', 'unfold', 'tauto', 'fold', 'fold', 'tauto', 'intros', 'elim', 'intro', 'unfold', 'elim', 'rewrite', 'generalize', 'unfold', 'tauto', 'elim', 'unfold', 'intros', 'elim', 'rewrite', 'generalize', 'unfold', 'tauto', 'generalize', 'intro', 'assert', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'simpl', 'tauto', 'generalize', 'intro', 'intros', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'generalize', 'intros', 'assert', 'tauto', 'assert', 'tauto', 'rewrite', 'tauto']",6,1,0,2,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_y0_y_1,"['intros', 'assert', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'unfold', 'unfold', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto']",0,2,0,2,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_y0_y_1,"['intros', 'apply', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'unfold', 'tauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_x_x10,"['intros', 'unfold', 'assert', 'tauto', 'generalize', 'simpl', 'fold', 'intros', 'decompose', 'clear', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'set', 'set', 'fold', 'elim', 'intro', 'elim', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'rewrite', 'split', 'tauto', 'elim', 'intros', 'assert', 'apply', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'rewrite', 'omega', 'rewrite', 'fold', 'omega', 'tauto', 'tauto', 'rewrite', 'rewrite', 'unfold', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'omega', 'absurd', 'omega', 'tauto', 'intros', 'tauto', 'tauto', 'unfold', 'tauto', 'omega']",2,3,2,3,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,diff_x_x10,"['intros', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'intros', 'generalize', 'clear', 'intro', 'rewrite', 'unfold', 'assert', 'tauto', 'generalize', 'simpl', 'fold', 'intros', 'decompose', 'clear', 'apply', 'split', 'omega', 'omega', 'omega']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_x10,"['intros', 'unfold', 'assert', 'tauto', 'generalize', 'simpl', 'fold', 'intros', 'decompose', 'clear', 'set', 'assert', 'unfold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'tauto', 'tauto', 'tauto', 'omega', 'assert', 'omega', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'fold', 'fold', 'fold', 'elim', 'unfold', 'intro', 'elim', 'rewrite', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'omega']",2,3,2,3,5,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,diff_x10,"['intros', 'unfold', 'unfold', 'rewrite', 'intro', 'apply', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'rewrite', 'split', 'simpl', 'tauto', 'tauto', 'tauto', 'fold', 'tauto']",1,1,1,2,6,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_y_1_y0_aux,"['intros', 'unfold', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'induction', 'simpl', 'tauto', 'assert', 'simpl', 'tauto', 'rewrite', 'clear', 'rewrite', 'rewrite', 'set', 'rewrite', 'fold', 'fold', 'elim', 'unfold', 'intro', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'rewrite', 'assert', 'simpl', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'intros', 'decompose', 'clear', 'generalize', 'intros', 'elim', 'omega', 'tauto', 'intro', 'elim', 'intros', 'unfold', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'simpl', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'intro', 'unfold', 'simpl', 'tauto', 'tauto', 'unfold', 'tauto', 'omega', 'tauto', 'unfold', 'tauto', 'fold', 'tauto']",4,5,1,3,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_y_1_y0,"['intros', 'set', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'assert', 'symmetry', 'apply', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'rewrite', 'tauto']",0,1,2,2,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,diff_y_1_y0_aux,"['intros', 'generalize', 'fold', 'fold', 'fold', 'fold', 'fold', 'intros', 'generalize', 'intro', 'clear', 'assert', 'unfold', 'generalize', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'intros', 'decompose', 'clear', 'rewrite', 'intro', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'tauto', 'elim', 'apply', 'rewrite', 'apply', 'tauto', 'apply', 'tauto']",2,0,1,3,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,diff_y_1_y0,"['intros', 'set', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'assert', 'symmetry', 'apply', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'rewrite', 'tauto']",0,1,2,2,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_y0,"['intros', 'assert', 'tauto', 'set', 'set', 'assert', 'unfold', 'generalize', 'unfold', 'tauto', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'assert', 'symmetry', 'apply', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'rewrite', 'generalize', 'simpl', 'fold', 'intro', 'decompose', 'clear', 'assert', 'omega', 'rewrite', 'simpl', 'unfold', 'unfold', 'rewrite', 'fold', 'assert', 'rewrite', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'assert', 'unfold', 'generalize', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'intros', 'symmetry', 'tauto', 'rewrite', 'rewrite', 'elim', 'fold', 'tauto', 'elim', 'intros', 'elim', 'rewrite', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'fold', 'fold', 'rewrite', 'omega']",0,3,3,4,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,ndN_L,"['simpl', 'tauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_MAX,"['intros', 'rewrite', 'unfold', 'rewrite', 'set', 'set', 'fold', 'fold', 'elim', 'intro', 'elim', 'tauto', 'intro', 'elim', 'unfold', 'unfold', 'unfold', 'assert', 'tauto', 'rewrite', 'symmetry', 'unfold', 'apply', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto', 'fold', 'tauto', 'intro', 'unfold', 'unfold', 'simpl', 'assert', 'tauto', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'assert', 'tauto', 'generalize', 'fold', 'fold', 'omega']",1,2,2,3,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_aux,"['induction', 'intros', 'assert', 'omega', 'rewrite', 'unfold', 'unfold', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'intros', 'rewrite', 'unfold', 'simpl', 'elim', 'intro', 'elim', 'intros', 'fold', 'set', 'fold', 'assert', 'tauto', 'rewrite', 'symmetry', 'fold', 'fold', 'set', 'fold', 'set', 'fold', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'generalize', 'simpl', 'fold', 'rewrite', 'intros', 'generalize', 'simpl', 'fold', 'intros', 'rewrite', 'elim', 'intro', 'absurd', 'unfold', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'intro', 'elim', 'intros', 'absurd', 'unfold', 'set', 'assert', 'unfold', 'omega', 'rewrite', 'apply', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'omega', 'tauto', 'intro', 'unfold', 'unfold', 'omega', 'intros', 'elim', 'intro', 'unfold', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'tauto', 'generalize', 'intro', 'unfold', 'unfold', 'generalize', 'intro', 'omega', 'intro', 'assert', 'omega', 'rewrite', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'omega', 'intro', 'unfold', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'tauto', 'generalize', 'intro', 'unfold', 'omega']",4,3,2,3,5,7
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_x,"['intros', 'set', 'set', 'fold', 'set', 'generalize', 'fold', 'fold', 'fold', 'fold', 'fold', 'intros', 'simpl', 'unfold', 'decompose', 'clear', 'generalize', 'simpl', 'fold', 'intros', 'assert', 'unfold', 'omega', 'assert', 'omega', 'rewrite', 'unfold', 'apply', 'omega']",1,1,1,1,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,orb_x_eqs_orb_y0,"['intros', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'simpl', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'fold', 'elim', 'tauto', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto']",1,2,0,2,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_y_1,"['intros', 'set', 'assert', 'intro', 'unfold', 'simpl', 'decompose', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'unfold', 'rewrite', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'unfold', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto']",0,2,1,2,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_x_y0,"['intros', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'unfold', 'simpl', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'elim', 'tauto', 'fold', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto']",1,3,1,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_y0,"['intros', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'unfold', 'simpl', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'elim', 'tauto', 'fold', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto', 'rewrite', 'unfold', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'unfold', 'tauto']",0,3,1,2,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,not_expf_L1_x,"['intros', 'intro', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'unfold', 'rewrite', 'rewrite', 'set', 'fold', 'set', 'fold', 'decompose', 'clear', 'elim', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'tauto', 'elim', 'intro', 'unfold', 'split', 'tauto', 'rewrite', 'split', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'intro', 'elim', 'intro', 'elim', 'unfold', 'split', 'tauto', 'set', 'assert', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'rewrite', 'unfold', 'rewrite', 'fold', 'assert', 'omega', 'rewrite', 'fold', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'omega', 'intro', 'absurd', 'omega', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'simpl', 'tauto']",1,4,0,3,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,not_expf_L1_y0,"['intros', 'intro', 'assert', 'unfold', 'unfold', 'apply', 'fold', 'tauto', 'generalize', 'fold', 'intro', 'elim', 'apply', 'tauto', 'tauto']",0,1,1,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,Iter_cF_L1_i,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'set', 'unfold', 'rewrite', 'fold', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'decompose', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'elim', 'apply', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'apply', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto']",0,4,2,4,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_eq,"['intros', 'split', 'unfold', 'unfold', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'unfold', 'decompose', 'clear', 'simpl', 'elim', 'intros', 'clear', 'assert', 'tauto', 'unfold', 'split', 'tauto', 'split', 'tauto', 'split', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'unfold', 'simpl', 'intros', 'split', 'unfold', 'simpl', 'tauto', 'unfold', 'decompose', 'clear', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'elim', 'intros', 'split', 'assert', 'tauto', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto']",3,4,0,3,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_impl_expf_L1,"['intros', 'assert', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'generalize', 'tauto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,orb_L1_eqs,"['intros', 'unfold', 'intro', 'generalize', 'fold', 'intro', 'generalize', 'intros', 'generalize', 'intros', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'unfold', 'simpl', 'tauto', 'split', 'intro', 'assert', 'unfold', 'simpl', 'tauto', 'generalize', 'intros', 'assert', 'unfold', 'simpl', 'tauto', 'rewrite', 'inversion', 'generalize', 'intro', 'generalize', 'intro', 'clear', 'assert', 'tauto', 'assert', 'unfold', 'simpl', 'tauto', 'unfold', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'tauto', 'generalize', 'intros', 'assert', 'unfold', 'simpl', 'tauto', 'generalize', 'intros', 'inversion', 'generalize', 'intro', 'unfold', 'generalize', 'intro', 'clear', 'assert', 'unfold', 'simpl', 'tauto', 'assert', 'tauto', 'tauto']",5,2,0,0,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_x_others_aux,"['induction', 'intros', 'rename', 'assert', 'omega', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'fold', 'rewrite', 'elim', 'elim', 'intros', 'unfold', 'elim', 'tauto', 'intro', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'intro', 'generalize', 'simpl', 'fold', 'intro', 'elim', 'symmetry', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'simpl', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'intros', 'rename', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'elim', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'tauto', 'intros', 'elim', 'tauto', 'intros', 'assert', 'assert', 'intro', 'rewrite', 'simpl', 'assert', 'omega', 'rewrite', 'simpl', 'tauto', 'generalize', 'simpl', 'fold', 'unfold', 'intro', 'assert', 'simpl', 'tauto', 'omega', 'rewrite', 'unfold', 'apply', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto']",4,3,1,4,5,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_x_others,"['intros', 'unfold', 'unfold', 'generalize', 'simpl', 'set', 'intro', 'assert', 'unfold', 'simpl', 'tauto', 'assert', 'omega', 'rewrite', 'unfold', 'apply', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'omega']",1,2,1,1,1,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_x,"['intros', 'unfold', 'split', 'tauto', 'unfold', 'decompose', 'clear', 'generalize', 'intros', 'assert', 'tauto', 'unfold', 'set', 'fold', 'assert', 'tauto', 'elim', 'intros', 'decompose', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'split', 'rewrite', 'unfold', 'rewrite', 'apply', 'tauto', 'unfold', 'simpl', 'tauto', 'fold', 'tauto', 'fold', 'rewrite', 'fold', 'omega', 'tauto', 'tauto']",2,1,0,3,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_y0,"['intros', 'set', 'assert', 'apply', 'apply', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'apply', 'apply', 'unfold', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'unfold', 'unfold', 'assert', 'generalize', 'intro', 'assert', 'tauto', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'set', 'fold', 'decompose', 'clear', 'split', 'unfold', 'tauto', 'unfold', 'split', 'unfold', 'simpl', 'unfold', 'simpl', 'unfold', 'tauto', 'set', 'unfold', 'split', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'rewrite', 'tauto', 'unfold', 'tauto', 'unfold', 'simpl', 'tauto', 'fold', 'tauto', 'rewrite', 'fold', 'omega', 'unfold', 'tauto', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto']",1,3,4,2,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_merge_summary,"['intros', 'elim', 'intro', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'assert', 'unfold', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'unfold', 'apply', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'unfold', 'apply', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'fold', 'tauto']",2,1,1,1,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,or_and_dec,"['unfold', 'intros', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_I_CS,"['intros', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'unfold', 'intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intro', 'elim', 'clear', 'intro', 'set', 'assert', 'unfold', 'apply', 'apply', 'tauto', 'fold', 'tauto', 'apply', 'tauto', 'assert', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'set', 'clear', 'assert', 'unfold', 'apply', 'apply', 'tauto', 'fold', 'tauto', 'apply', 'tauto', 'assert', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'apply', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'set', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'elim', 'clear', 'intro', 'decompose', 'clear', 'elim', 'intro', 'assert', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'assert', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'intro', 'unfold', 'apply', 'apply', 'tauto', 'fold', 'tauto', 'intro', 'elim', 'apply', 'tauto', 'fold', 'intro', 'elim', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'decompose', 'clear', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'unfold', 'generalize', 'intro', 'apply', 'assert', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'intro', 'assert', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'apply', 'tauto', 'fold', 'tauto', 'apply', 'tauto', 'assert', 'apply', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'intro', 'unfold', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'generalize', 'tauto']",5,1,4,0,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_I_CN,"['intros', 'elim', 'tauto', 'intro', 'right', 'elim', 'intro', 'elim', 'tauto', 'intro', 'right', 'assert', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'generalize', 'tauto', 'intro', 'elim', 'intro', 'assert', 'intro', 'elim', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'generalize', 'tauto', 'intro', 'right', 'elim', 'intro', 'elim', 'tauto', 'intro', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'generalize', 'tauto', 'intro', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'intro', 'elim', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'generalize', 'tauto']",1,0,2,0,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_x_y0,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'unfold', 'rewrite', 'fold', 'assert', 'tauto', 'rewrite', 'assert', 'tauto', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'omega', 'fold', 'omega', 'tauto', 'absurd', 'omega', 'tauto', 'elim', 'intros', 'assert', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'intros', 'decompose', 'symmetry', 'absurd', 'apply', 'omega', 'tauto', 'tauto', 'tauto', 'tauto', 'omega']",0,2,1,4,6,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,diff_cF_L1_x_y0,"['intros', 'unfold', 'rewrite', 'assert', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'intro', 'decompose', 'clear', 'apply', 'omega', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'omega']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_y0_x,"['intros', 'assert', 'omega', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'fold', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'omega']",0,2,0,2,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_y_1_x10,"['intros', 'intros', 'induction', 'simpl', 'assert', 'omega', 'rewrite', 'simpl', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'omega', 'rewrite', 'simpl', 'clear', 'rewrite', 'unfold', 'rewrite', 'fold', 'elim', 'intros', 'rewrite', 'assert', 'assert', 'unfold', 'tauto', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'tauto', 'absurd', 'omega', 'tauto', 'elim', 'intros', 'assert', 'simpl', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'symmetry', 'absurd', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'omega', 'tauto', 'tauto', 'tauto', 'tauto', 'omega']",0,4,0,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,diff_cF_L1_y_1_x10,"['intros', 'unfold', 'unfold', 'rewrite', 'assert', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'intro', 'decompose', 'clear', 'apply', 'omega', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'fold', 'omega']",1,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,diff_cF_L1_y_1_y_1,"['intros', 'unfold', 'unfold', 'rewrite', 'fold', 'assert', 'simpl', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'intro', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'omega', 'fold', 'omega', 'tauto', 'absurd', 'omega', 'tauto', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'omega', 'fold', 'tauto']",1,2,1,2,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,cF_L1_x10_y_1,"['intros', 'assert', 'omega', 'rewrite', 'clear', 'simpl', 'unfold', 'unfold', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'simpl', 'unfold', 'rewrite', 'assert', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'rewrite', 'rewrite', 'elim', 'intro', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'unfold', 'rewrite', 'symmetry', 'unfold', 'tauto', 'tauto', 'generalize', 'unfold', 'tauto', 'intro', 'elim', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'unfold', 'tauto', 'omega', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'fold', 'omega']",1,3,0,2,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_split_x_aux,"['intros', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'decompose', 'clear', 'generalize', 'fold', 'intro', 'assert', 'tauto', 'intros', 'induction', 'assert', 'omega', 'rewrite', 'rewrite', 'unfold', 'simpl', 'fold', 'clear', 'elim', 'intro', 'elim', 'intro', 'symmetry', 'absurd', 'unfold', 'rewrite', 'rewrite', 'apply', 'fold', 'omega', 'tauto', 'unfold', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'tauto', 'elim', 'intros', 'omega', 'intros', 'unfold', 'rewrite', 'simpl', 'fold', 'elim', 'intro', 'elim', 'tauto', 'intro', 'elim', 'assert', 'omega', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'fold', 'elim', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'intro', 'omega', 'intro', 'omega', 'unfold', 'rewrite', 'simpl', 'fold', 'elim', 'intro', 'elim', 'intro', 'symmetry', 'absurd', 'unfold', 'rewrite', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'split', 'omega', 'omega', 'tauto', 'intro', 'elim', 'intro', 'omega', 'intro', 'assert', 'omega', 'rewrite', 'apply', 'omega', 'intros', 'omega']",2,3,0,4,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_split_x_y0,"['intros', 'assert', 'tauto', 'intros', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'decompose', 'clear', 'generalize', 'generalize', 'fold', 'intros', 'unfold', 'elim', 'intro', 'rewrite', 'simpl', 'simpl', 'rewrite', 'elim', 'intro', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'elim', 'simpl', 'unfold', 'assert', 'tauto', 'rewrite', 'rewrite', 'fold', 'elim', 'tauto', 'rewrite', 'simpl', 'tauto', 'tauto', 'unfold', 'tauto', 'unfold', 'simpl', 'intro', 'omega', 'intro', 'unfold', 'assert', 'omega', 'rewrite', 'unfold', 'rewrite', 'omega', 'fold', 'tauto', 'fold', 'omega', 'fold', 'tauto', 'fold', 'tauto']",3,4,0,4,4,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_split_x_y_1,"['intros', 'assert', 'omega', 'assert', 'rewrite', 'simpl', 'assert', 'rewrite', 'rewrite', 'tauto', 'unfold', 'simpl', 'tauto', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'unfold', 'rewrite', 'fold', 'symmetry', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'rewrite', 'omega', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'fold', 'tauto']",0,4,0,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_split_y_1_aux,"['intros', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'decompose', 'clear', 'generalize', 'fold', 'intro', 'assert', 'tauto', 'induction', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'simpl', 'fold', 'elim', 'intro', 'elim', 'tauto', 'intro', 'elim', 'symmetry', 'rewrite', 'assert', 'omega', 'rewrite', 'simpl', 'unfold', 'unfold', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'intro', 'unfold', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'clear', 'omega', 'clear', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'clear', 'omega', 'fold', 'clear', 'omega', 'intro', 'omega', 'rewrite', 'unfold', 'simpl', 'fold', 'elim', 'intro', 'elim', 'intro', 'symmetry', 'absurd', 'unfold', 'unfold', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'omega', 'tauto', 'elim', 'intro', 'intro', 'omega', 'intros', 'assert', 'omega', 'rewrite', 'apply', 'clear', 'omega', 'intro', 'omega']",1,4,1,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_split_y_1,"['intros', 'unfold', 'unfold', 'unfold', 'unfold', 'set', 'assert', 'unfold', 'omega', 'rewrite', 'unfold', 'rewrite', 'fold', 'rewrite', 'tauto', 'fold', 'tauto', 'fold', 'omega', 'fold', 'tauto', 'unfold', 'tauto']",1,1,0,2,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,degree_L1_split,"['intros', 'assert', 'unfold', 'assert', 'unfold', 'tauto', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'set', 'fold', 'assert', 'unfold', 'apply', 'simpl', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'assert', 'intro', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'assert', 'rewrite', 'rewrite', 'tauto', 'simpl', 'tauto', 'simpl', 'unfold', 'tauto', 'rewrite', 'simpl', 'unfold', 'tauto', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'unfold', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'omega', 'unfold', 'unfold', 'rewrite', 'rewrite', 'omega', 'fold', 'symmetry', 'tauto', 'rewrite', 'omega', 'fold', 'tauto', 'tauto', 'fold', 'symmetry', 'tauto', 'tauto', 'rewrite', 'omega', 'fold', 'tauto']",0,4,1,4,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_not_orbit_x_aux,"['induction', 'simpl', 'intros', 'apply', 'simpl', 'tauto', 'simpl', 'tauto', 'intros', 'unfold', 'set', 'apply', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'simpl', 'fold', 'set', 'assert', 'unfold', 'rewrite', 'fold', 'elim', 'fold', 'intro', 'unfold', 'assert', 'unfold', 'split', 'simpl', 'tauto', 'unfold', 'split', 'tauto', 'split', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'elim', 'intro', 'intros', 'assert', 'rewrite', 'rewrite', 'tauto', 'simpl', 'tauto', 'simpl', 'unfold', 'tauto', 'elim', 'apply', 'rewrite', 'unfold', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'simpl', 'tauto', 'rewrite', 'unfold', 'split', 'unfold', 'tauto', 'unfold', 'split', 'unfold', 'simpl', 'unfold', 'generalize', 'simpl', 'tauto', 'split', 'simpl', 'tauto']",4,6,3,3,8,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_not_orbit_x,"['intros', 'unfold', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'clear', 'rewrite', 'apply']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,and_not,"['unfold', 'intros', 'tauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_II_CS,"['intros', 'generalize', 'generalize', 'intros', 'fold', 'fold', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'decompose', 'clear', 'unfold', 'unfold', 'simpl', 'unfold', 'elim', 'clear', 'intros', 'elim', 'intros', 'decompose', 'clear', 'clear', 'unfold', 'unfold', 'elim', 'clear', 'intros', 'elim', 'intros', 'decompose', 'clear', 'assert', 'apply', 'simpl', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'assert', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'rename', 'assert', 'tauto', 'rename', 'assert', 'intro', 'rewrite', 'generalize', 'rewrite', 'rewrite', 'simpl', 'intro', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'symmetry', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'rewrite', 'rewrite', 'assert', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'unfold', 'split', 'simpl', 'tauto', 'split', 'rewrite', 'rewrite', 'tauto', 'assert', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'unfold', 'split', 'simpl', 'tauto', 'split', 'rewrite', 'rewrite', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'clear', 'decompose', 'clear', 'unfold', 'unfold', 'simpl', 'unfold', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'assert', 'apply', 'tauto', 'tauto', 'omega', 'omega', 'rewrite', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'rename', 'assert', 'tauto', 'rename', 'assert', 'apply', 'tauto', 'tauto', 'set', 'fold', 'fold', 'fold', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'simpl', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'rewrite', 'assert', 'rewrite', 'intro', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'omega', 'assert', 'simpl', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'simpl', 'unfold', 'unfold', 'fold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'tauto', 'rewrite', 'symmetry', 'tauto', 'assert', 'omega', 'rewrite', 'clear', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'fold', 'fold', 'assert', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'unfold', 'split', 'simpl', 'tauto', 'split', 'tauto', 'assert', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'unfold', 'split', 'simpl', 'tauto', 'split', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'symmetry', 'tauto', 'tauto', 'tauto', 'rewrite', 'omega', 'assert', 'unfold', 'rewrite', 'fold', 'symmetry', 'tauto', 'tauto', 'tauto', 'rewrite', 'omega', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'symmetry', 'tauto', 'tauto', 'tauto', 'rewrite', 'omega', 'assert', 'unfold', 'rewrite', 'fold', 'symmetry', 'tauto', 'tauto', 'tauto', 'rewrite', 'omega', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'clear', 'generalize', 'generalize', 'tauto']",4,6,3,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_II_CNA_aux,"['induction', 'simpl', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'set', 'set', 'set', 'intros', 'assert', 'tauto', 'assert', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'split', 'rewrite', 'fold', 'tauto', 'assert', 'apply', 'simpl', 'tauto', 'tauto', 'generalize', 'unfold', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'apply', 'tauto', 'unfold', 'rewrite', 'fold', 'set', 'set', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'elim', 'intros', 'rewrite', 'apply', 'apply', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'intros', 'unfold', 'unfold', 'split', 'tauto', 'split', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'tauto', 'tauto']",4,5,2,5,8,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_II_CNA,"['intros', 'assert', 'tauto', 'unfold', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'clear', 'rewrite', 'rewrite', 'apply']",0,1,0,2,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,not_expf_L1_x_y0,"['intros', 'assert', 'tauto', 'rename', 'intro', 'unfold', 'assert', 'generalize', 'tauto', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'apply', 'tauto', 'simpl', 'tauto', 'assert', 'intro', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'assert', 'simpl', 'rewrite', 'symmetry', 'tauto', 'assert', 'intro', 'rewrite', 'unfold', 'rewrite', 'symmetry', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'set', 'fold', 'assert', 'tauto', 'assert', 'tauto', 'unfold', 'assert', 'generalize', 'tauto', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'set', 'fold', 'assert', 'tauto', 'generalize', 'fold', 'fold', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'tauto', 'rewrite', 'rewrite', 'fold', 'fold', 'assert', 'unfold', 'rewrite', 'unfold', 'apply', 'fold', 'symmetry', 'tauto', 'tauto', 'rewrite', 'fold', 'omega', 'fold', 'tauto', 'assert', 'rewrite', 'rewrite', 'fold', 'rewrite', 'tauto', 'tauto', 'simpl', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'fold', 'omega', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'tauto', 'absurd', 'omega', 'tauto']",1,3,2,4,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_II_CN,"['intros', 'elim', 'intro', 'set', 'fold', 'assert', 'tauto', 'simpl', 'unfold', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'assert', 'generalize', 'fold', 'tauto', 'unfold', 'set', 'fold', 'decompose', 'clear', 'assert', 'tauto', 'elim', 'intros', 'clear', 'decompose', 'clear', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'elim', 'intros', 'clear', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'set', 'fold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'decompose', 'clear', 'fold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'clear', 'clear', 'assert', 'intro', 'assert', 'assert', 'omega', 'rewrite', 'clear', 'simpl', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'rewrite', 'unfold', 'rewrite', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'set', 'assert', 'apply', 'unfold', 'tauto', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'rewrite', 'fold', 'rewrite', 'assert', 'rewrite', 'unfold', 'apply', 'fold', 'symmetry', 'tauto', 'tauto', 'rewrite', 'omega', 'fold', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'split', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'assert', 'rewrite', 'rewrite', 'fold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'left', 'unfold', 'unfold', 'split', 'intros', 'fold', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'omega', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'fold', 'omega', 'intro', 'set', 'assert', 'rewrite', 'rewrite', 'fold', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'unfold', 'omega', 'left', 'unfold', 'unfold', 'fold', 'split', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'omega', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'unfold', 'omega', 'intro', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'rewrite', 'omega', 'set', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'split', 'tauto', 'set', 'elim', 'intro', 'rewrite', 'rewrite', 'fold', 'assert', 'rewrite', 'rewrite', 'fold', 'fold', 'rewrite', 'tauto', 'tauto', 'fold', 'fold', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'rewrite', 'unfold', 'omega', 'assert', 'simpl', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'omega', 'rewrite', 'clear', 'assert', 'unfold', 'omega', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'right', 'left', 'unfold', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'tauto', 'unfold', 'split', 'intros', 'rewrite', 'split', 'split', 'split', 'tauto', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'simpl', 'unfold', 'unfold', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'unfold', 'omega', 'intros', 'split', 'split', 'rewrite', 'split', 'tauto', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'simpl', 'unfold', 'unfold', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'omega', 'unfold', 'intro', 'assert', 'rewrite', 'rewrite', 'tauto', 'assert', 'rewrite', 'assert', 'omega', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'apply', 'tauto', 'unfold', 'simpl', 'tauto', 'assert', 'rewrite', 'rewrite', 'fold', 'fold', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'rewrite', 'omega', 'assert', 'rewrite', 'rewrite', 'fold', 'fold', 'rewrite', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'fold', 'symmetry', 'tauto', 'fold', 'tauto', 'rewrite', 'omega', 'rewrite', 'omega', 'right', 'left', 'assert', 'assert', 'omega', 'rewrite', 'clear', 'simpl', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'omega', 'rewrite', 'clear', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'simpl', 'unfold', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'tauto', 'unfold', 'unfold', 'split', 'intros', 'rewrite', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'omega', 'intros', 'rewrite', 'split', 'split', 'split', 'tauto', 'split', 'tauto', 'omega', 'intro', 'right', 'right', 'split', 'tauto', 'apply']",1,5,3,5,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_CNS,"['intros', 'split', 'intros', 'unfold', 'unfold', 'unfold', 'unfold', 'elim', 'intro', 'apply', 'intro', 'apply', 'simpl', 'elim', 'intros', 'apply', 'intro', 'intro', 'apply']",3,2,0,0,0,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_CN,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan6.json,expf_L1_CS,"['intros', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,ndZ_B,"['intros', 'simpl', 'induction', 'simpl', 'tauto', 'simpl', 'unfold', 'simpl', 'intros', 'unfold', 'unfold', 'simpl', 'assert', 'apply', 'simpl', 'tauto', 'tauto', 'omega', 'simpl', 'unfold', 'simpl', 'generalize', 'clear', 'simpl', 'elim', 'elim', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'intro', 'apply', 'tauto']",4,6,1,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,ndZ_L_B,"['simpl', 'induction', 'simpl', 'tauto', 'simpl', 'unfold', 'simpl', 'intros', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'omega', 'simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'elim', 'tauto', 'simpl', 'intros', 'apply', 'tauto', 'tauto', 'simpl', 'intro', 'apply', 'tauto']",3,5,1,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,ne_B,"['intros', 'induction', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'simpl', 'simpl', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'omega', 'simpl', 'unfold', 'simpl', 'generalize', 'clear', 'induction', 'simpl', 'elim', 'elim', 'intros', 'induction', 'omega', 'inversion', 'simpl', 'intros', 'induction', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'clear', 'elim', 'intros', 'omega', 'tauto', 'inversion', 'simpl', 'induction', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'generalize', 'clear', 'elim', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'elim', 'intros', 'inversion', 'intros', 'omega', 'simpl', 'intros', 'elim', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'generalize', 'elim', 'intro', 'inversion', 'intros', 'omega', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'generalize', 'elim', 'intro', 'inversion', 'tauto', 'simpl', 'intros', 'elim', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'generalize', 'elim', 'intro', 'inversion', 'intros', 'omega', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'generalize', 'elim', 'intro', 'inversion', 'intros', 'omega']",2,4,1,0,5,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,ne_L_B,"['simpl', 'intros', 'generalize', 'induction', 'elim', 'intros', 'omega', 'tauto', 'elim', 'intro', 'inversion', 'intros', 'omega']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,nv_B,"['intros', 'induction', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'simpl', 'simpl', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'omega', 'simpl', 'unfold', 'simpl', 'generalize', 'clear', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'intro', 'inversion', 'intro', 'omega', 'elim', 'intro', 'omega', 'tauto', 'simpl', 'intros', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'generalize', 'clear', 'rewrite', 'rewrite', 'induction', 'tauto', 'intros', 'omega', 'simpl', 'intros', 'elim', 'apply', 'tauto', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'omega']",2,3,1,2,4,7
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,nv_L_B,"['intros', 'generalize', 'induction', 'elim', 'unfold', 'intro', 'inversion', 'unfold', 'simpl', 'intros', 'omega', 'unfold', 'simpl', 'intros', 'omega']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,nc_B,"['induction', 'unfold', 'simpl', 'tauto', 'rename', 'unfold', 'simpl', 'intros', 'decompose', 'clear', 'unfold', 'generalize', 'elim', 'simpl', 'unfold', 'intro', 'elim', 'clear', 'intro', 'absurd', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'intros', 'omega', 'tauto', 'simpl', 'intro', 'elim', 'tauto', 'intros', 'omega', 'simpl', 'unfold', 'unfold', 'simpl', 'intros', 'decompose', 'clear', 'rename', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'omega', 'simpl', 'intros', 'unfold', 'generalize', 'intro', 'elim', 'rewrite', 'simpl', 'intro', 'generalize', 'clear', 'elim', 'intros', 'assert', 'omega', 'clear', 'rewrite', 'assert', 'split', 'apply', 'tauto', 'unfold', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'clear', 'omega', 'intros', 'generalize', 'generalize', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'generalize', 'tauto', 'intro', 'clear', 'omega', 'intros', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'elim', 'intro', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'omega', 'intro', 'generalize', 'unfold', 'generalize', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'intro', 'elim', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'clear', 'omega', 'intros', 'generalize', 'unfold', 'tauto', 'simpl', 'intros', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'elim', 'intro', 'elim', 'intro', 'omega', 'intro', 'generalize', 'unfold', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'unfold', 'intro', 'generalize', 'generalize', 'tauto', 'intro', 'omega', 'simpl', 'intros', 'unfold', 'generalize', 'intro', 'elim', 'simpl', 'intro', 'generalize', 'clear', 'elim', 'intros', 'assert', 'omega', 'clear', 'rewrite', 'assert', 'split', 'apply', 'tauto', 'unfold', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'clear', 'omega', 'intros', 'generalize', 'generalize', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'generalize', 'tauto', 'intro', 'clear', 'omega', 'intros', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'elim', 'intro', 'elim', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'clear', 'omega', 'intro', 'generalize', 'unfold', 'generalize', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'intro', 'elim', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'omega', 'intros', 'generalize', 'unfold', 'tauto', 'simpl', 'intros', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'elim', 'intro', 'elim', 'intro', 'omega', 'intro', 'generalize', 'unfold', 'tauto', 'intro', 'elim', 'intro', 'generalize', 'unfold', 'intro', 'generalize', 'generalize', 'tauto', 'intro', 'omega']",6,5,1,2,6,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,nc_L_B,"['simpl', 'intros', 'generalize', 'simpl', 'intros', 'assert', 'tauto', 'omega']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,A_not_cA,"['intros', 'generalize', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'elim', 'intros', 'rewrite', 'intro', 'symmetry', 'tauto', 'tauto']",2,0,1,1,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,nf_L_B_aux,"['simpl', 'tauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,cA_I,"['simpl', 'intros', 'elim', 'tauto', 'tauto']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,cA_1_I,"['simpl', 'intros', 'elim', 'tauto', 'tauto']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_refl,"['unfold', 'split', 'tauto', 'apply', 'tauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_symm,"['unfold', 'split', 'tauto', 'apply', 'tauto', 'tauto']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_trans,"['unfold', 'split', 'tauto', 'apply', 'tauto', 'tauto']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,cF_I,"['unfold', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'tauto', 'intro', 'intro', 'unfold', 'generalize', 'rewrite', 'tauto']",3,0,0,2,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,Iter_cF_I,"['induction', 'simpl', 'tauto', 'simpl', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'tauto', 'rewrite', 'generalize', 'tauto', 'intro', 'unfold', 'rewrite', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",2,2,0,3,4,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_I,"['intros', 'unfold', 'unfold', 'simpl', 'assert', 'tauto', 'rewrite', 'split', 'intros', 'decompose', 'clear', 'elim', 'intros', 'split', 'tauto', 'split', 'tauto', 'split', 'generalize', 'intro', 'rewrite', 'tauto', 'intros', 'decompose', 'clear', 'split', 'tauto', 'split', 'tauto', 'elim', 'intros', 'split', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,2,0,1,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,cF_L,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'inversion', 'tauto', 'intro', 'elim', 'tauto', 'intro', 'induction', 'tauto', 'tauto']",4,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_y_x_1,"['intros', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'elim', 'unfold', 'tauto', 'tauto', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto']",1,1,0,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_x0_y_0_1,"['intros', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'simpl', 'unfold', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'unfold', 'symmetry', 'fold', 'tauto', 'elim', 'intros', 'unfold', 'unfold', 'tauto', 'fold', 'tauto', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto']",2,2,0,1,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,cF_L0_1,"['unfold', 'unfold', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'assert', 'generalize', 'tauto', 'generalize', 'clear', 'intro', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'clear', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'tauto', 'elim', 'intros', 'set', 'fold', 'assert', 'assert', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'rewrite', 'generalize', 'tauto', 'rewrite', 'assert', 'rewrite', 'assert', 'assert', 'omega', 'rewrite', 'simpl', 'assert', 'omega', 'rewrite', 'tauto', 'rewrite', 'unfold', 'set', 'generalize', 'simpl', 'intros', 'rewrite', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'generalize', 'tauto', 'assert', 'eapply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'rewrite', 'tauto', 'assert', 'omega', 'rewrite', 'rewrite', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto']",3,5,0,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,cF_L0_2,"['unfold', 'unfold', 'simpl', 'unfold', 'intros', 'decompose', 'clear', 'assert', 'generalize', 'tauto', 'generalize', 'clear', 'intro', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'clear', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'elim', 'rewrite', 'tauto', 'intro', 'set', 'fold', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'rewrite', 'tauto', 'assert', 'rewrite', 'assert', 'omega', 'rewrite', 'simpl', 'assert', 'apply', 'tauto', 'unfold', 'apply', 'tauto', 'generalize', 'tauto', 'tauto', 'assert', 'omega', 'generalize', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'intro', 'assert', 'omega', 'generalize', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'intro', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'clear', 'clear', 'clear', 'assert', 'omega', 'rewrite', 'clear', 'assert', 'apply', 'tauto', 'rewrite', 'tauto', 'rewrite', 'omega', 'rewrite', 'omega', 'rewrite', 'simpl', 'tauto', 'assert', 'omega', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'elim', 'unfold', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto']",3,4,2,3,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,between_expf_L0_1,"['intros', 'induction', 'assert', 'unfold', 'simpl', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'simpl', 'unfold', 'unfold', 'generalize', 'tauto', 'simpl', 'generalize', 'clear', 'unfold', 'unfold', 'simpl', 'intro', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'generalize', 'tauto', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'intros', 'decompose', 'clear', 'clear', 'assert', 'tauto', 'rewrite', 'rewrite', 'induction', 'simpl', 'rewrite', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'apply', 'simpl', 'tauto', 'simpl', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'rewrite', 'generalize', 'tauto', 'rewrite', 'rewrite', 'assert', 'rewrite', 'unfold', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'apply', 'simpl', 'unfold', 'rewrite', 'assert', 'unfold', 'unfold', 'fold', 'intros', 'clear', 'split', 'split', 'split', 'rewrite', 'tauto', 'split', 'tauto', 'omega', 'tauto', 'rewrite', 'assert', 'rewrite', 'elim', 'intro', 'rewrite', 'assert', 'apply', 'unfold', 'tauto', 'tauto', 'omega', 'rewrite', 'tauto', 'absurd', 'omega', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'fold', 'unfold', 'unfold', 'fold', 'intros', 'clear', 'split', 'split', 'split', 'rewrite', 'tauto', 'split', 'tauto', 'omega', 'rewrite', 'rewrite', 'unfold', 'split', 'simpl', 'generalize', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'tauto', 'rewrite', 'generalize', 'unfold', 'tauto']",1,6,2,4,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,between_expf_L0_2,"['intros', 'induction', 'simpl', 'unfold', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'simpl', 'unfold', 'unfold', 'generalize', 'tauto', 'generalize', 'clear', 'unfold', 'unfold', 'simpl', 'intro', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'generalize', 'tauto', 'assert', 'unfold', 'unfold', 'generalize', 'tauto', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'intros', 'decompose', 'clear', 'clear', 'assert', 'tauto', 'rewrite', 'rewrite', 'induction', 'simpl', 'rewrite', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'apply', 'simpl', 'tauto', 'simpl', 'set', 'assert', 'unfold', 'unfold', 'simpl', 'rewrite', 'tauto', 'tauto', 'generalize', 'tauto', 'assert', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'rewrite', 'generalize', 'tauto', 'apply', 'rewrite', 'apply', 'unfold', 'unfold', 'intros', 'clear', 'split', 'split', 'split', 'symmetry', 'rewrite', 'tauto', 'split', 'rewrite', 'tauto', 'omega', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'unfold', 'split', 'simpl', 'rewrite', 'generalize', 'rewrite', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'simpl', 'elim', 'intro', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'rewrite', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'rewrite', 'tauto', 'assert', 'apply', 'omega', 'omega', 'simpl', 'rewrite', 'rewrite', 'tauto', 'inversion', 'elim', 'intros', 'assert', 'apply', 'omega', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'symmetry', 'unfold', 'tauto', 'absurd', 'omega', 'tauto', 'intros', 'fold', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'rewrite', 'tauto']",4,6,3,4,7,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,between_expf_L0,"['intros', 'assert', 'tauto', 'rename', 'simpl', 'unfold', 'decompose', 'assert', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'generalize', 'tauto', 'intuition', 'generalize', 'unfold', 'unfold', 'simpl', 'intros', 'fold', 'generalize', 'clear', 'intro', 'elim', 'intros', 'elim', 'intros', 'clear', 'clear', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'generalize', 'simpl', 'decompose', 'assert', 'tauto', 'rewrite', 'fold', 'rewrite', 'unfold', 'tauto', 'decompose', 'assert', 'clear', 'tauto', 'generalize', 'simpl', 'fold', 'rewrite', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'generalize', 'unfold', 'unfold', 'simpl', 'intros', 'fold', 'generalize', 'clear', 'intro', 'elim', 'intros', 'elim', 'intros', 'clear', 'clear', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'assert', 'tauto', 'decompose', 'clear', 'decompose', 'clear', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'generalize', 'simpl', 'fold', 'rewrite', 'rewrite', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'rewrite', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto']",1,4,1,2,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_expf_L0_1,"['intros', 'induction', 'simpl', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'unfold', 'tauto', 'simpl', 'set', 'fold', 'unfold', 'assert', 'tauto', 'assert', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'elim', 'unfold', 'split', 'simpl', 'tauto', 'apply', 'unfold', 'tauto', 'apply', 'simpl', 'tauto', 'unfold', 'split', 'tauto', 'split', 'unfold', 'tauto', 'intro', 'elim', 'intro', 'assert', 'rewrite', 'unfold', 'unfold', 'split', 'simpl', 'tauto', 'apply', 'simpl', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'unfold', 'split', 'simpl', 'tauto', 'unfold', 'split', 'tauto', 'split', 'rewrite', 'tauto', 'elim', 'unfold', 'split', 'simpl', 'tauto', 'apply', 'unfold', 'tauto', 'apply', 'simpl', 'tauto', 'unfold', 'tauto', 'unfold', 'tauto', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto', 'rewrite', 'unfold', 'simpl', 'split', 'unfold', 'generalize', 'rewrite', 'simpl', 'tauto', 'split', 'simpl', 'rewrite', 'tauto']",1,7,1,3,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,between_expf_L0_3,"['intros', 'induction', 'simpl', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'simpl', 'unfold', 'unfold', 'generalize', 'tauto', 'generalize', 'clear', 'unfold', 'unfold', 'simpl', 'intro', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'generalize', 'tauto', 'fold', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'assert', 'tauto', 'rewrite', 'rewrite', 'induction', 'simpl', 'rewrite', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'apply', 'simpl', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'apply', 'simpl', 'assert', 'apply', 'unfold', 'unfold', 'intros', 'split', 'split', 'split', 'unfold', 'simpl', 'assert', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'rewrite', 'generalize', 'tauto', 'tauto', 'rewrite', 'generalize', 'tauto', 'split', 'tauto', 'omega', 'unfold', 'tauto', 'unfold', 'simpl', 'set', 'elim', 'intro', 'simpl', 'fold', 'rewrite', 'rewrite', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'assert', 'apply', 'unfold', 'unfold', 'intros', 'split', 'split', 'rewrite', 'split', 'tauto', 'split', 'tauto', 'omega', 'unfold', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'elim', 'unfold', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'tauto', 'elim', 'fold', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'unfold', 'simpl', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'tauto']",4,6,3,4,6,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_expf_L0_3_bis,"['intros', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'clear', 'decompose', 'clear', 'rewrite', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'unfold', 'unfold', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'rewrite', 'fold', 'rewrite', 'unfold', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'split', 'omega', 'fold', 'omega']",2,3,1,2,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,between_expf_L0_4_prel,"['intros', 'assert', 'tauto', 'rename', 'simpl', 'unfold', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'induction', 'simpl', 'unfold', 'apply', 'simpl', 'unfold', 'tauto', 'simpl', 'tauto', 'decompose', 'clear', 'generalize', 'clear', 'unfold', 'unfold', 'simpl', 'intro', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'assert', 'unfold', 'simpl', 'fold', 'tauto', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'rewrite', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'unfold', 'fold', 'rewrite', 'tauto', 'rewrite', 'apply', 'simpl', 'unfold', 'tauto', 'simpl', 'tauto', 'intro', 'assert', 'intro', 'rewrite', 'simpl', 'elim', 'clear', 'rewrite', 'rewrite', 'unfold', 'unfold', 'unfold', 'fold', 'fold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'omega', 'assert', 'rewrite', 'elim', 'elim', 'intros', 'symmetry', 'tauto', 'intros', 'elim', 'intro', 'assert', 'rewrite', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'rewrite', 'apply', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'tauto', 'unfold', 'unfold', 'split', 'tauto', 'split', 'tauto', 'split', 'tauto', 'fold', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'apply', 'apply', 'unfold', 'unfold', 'intros', 'clear', 'split', 'split', 'rewrite', 'fold', 'split', 'tauto', 'split', 'tauto', 'omega', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'rewrite', 'tauto', 'split', 'simpl', 'rewrite', 'rewrite', 'symmetry', 'tauto']",4,7,3,5,7,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_expf_L0_4_bis_prel,"['intros', 'assert', 'tauto', 'rename', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'clear', 'decompose', 'clear', 'rewrite', 'rewrite', 'generalize', 'fold', 'fold', 'rewrite', 'rewrite', 'intro', 'simpl', 'unfold', 'assert', 'unfold', 'generalize', 'tauto', 'rename', 'assert', 'unfold', 'unfold', 'intros', 'split', 'split', 'split', 'tauto', 'split', 'rewrite', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'omega', 'tauto']",2,3,0,3,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_expf_L0_4_bis,"['intros', 'set', 'set', 'apply', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'apply', 'unfold', 'split', 'simpl', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'unfold', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'apply', 'apply', 'unfold', 'split', 'simpl', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'tauto', 'tauto']",0,2,3,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_5,"['intros', 'rename', 'assert', 'tauto', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'elim', 'clear', 'intro', 'apply', 'apply', 'tauto', 'unfold', 'assert', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'unfold', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'assert', 'apply', 'tauto', 'fold', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'fold', 'tauto', 'tauto', 'unfold', 'tauto', 'clear', 'intros', 'apply', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'fold', 'tauto', 'tauto', 'unfold', 'tauto', 'apply', 'unfold', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'unfold', 'tauto']",1,2,4,0,5,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_5bis,"['intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'unfold', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'unfold', 'tauto', 'clear', 'intro', 'decompose', 'clear', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'fold', 'tauto', 'tauto', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'fold', 'tauto', 'tauto', 'unfold', 'tauto']",0,0,3,0,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_expf_L0_2,"['assert', 'tauto', 'rename', 'intros', 'assert', 'tauto', 'simpl', 'unfold', 'decompose', 'clear', 'induction', 'simpl', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'tauto', 'simpl', 'set', 'fold', 'fold', 'simpl', 'unfold', 'split', 'tauto', 'unfold', 'apply', 'tauto', 'unfold', 'assert', 'simpl', 'tauto', 'generalize', 'elim', 'elim', 'intros', 'rewrite', 'elim', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'unfold', 'rewrite', 'tauto', 'elim', 'intros', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'elim', 'rewrite', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'rewrite', 'unfold', 'split', 'simpl', 'tauto', 'intros', 'unfold', 'rewrite', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto']",2,5,1,4,8,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_expf_L0_2_bis,"['intros', 'unfold', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'rewrite', 'assert', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'tauto']",1,1,0,2,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_6,"['intros', 'assert', 'intro', 'elim', 'unfold', 'split', 'simpl', 'tauto', 'apply', 'unfold', 'unfold', 'tauto', 'unfold', 'tauto', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'tauto']",0,1,1,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_CS,"['intros', 'rename', 'rename', 'generalize', 'clear', 'assert', 'tauto', 'simpl', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'generalize', 'simpl', 'intros', 'unfold', 'unfold', 'unfold', 'unfold', 'elim', 'tauto', 'intro', 'elim', 'tauto', 'clear', 'clear', 'intro', 'elim', 'intros', 'unfold', 'elim', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'assert', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'intros', 'assert', 'tauto', 'clear', 'assert', 'generalize', 'generalize', 'generalize', 'generalize', 'tauto', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'intro', 'clear', 'assert', 'generalize', 'generalize', 'generalize', 'generalize', 'tauto', 'elim', 'clear', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'assert', 'assert', 'unfold', 'intros', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'assert', 'unfold', 'intros', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'tauto', 'unfold', 'tauto', 'assert', 'intro', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'tauto', 'tauto', 'tauto']",6,3,2,2,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_CN_1,"['assert', 'tauto', 'intros', 'assert', 'tauto', 'rename', 'rename', 'simpl', 'unfold', 'decompose', 'clear', 'induction', 'simpl', 'unfold', 'elim', 'intro', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'intro', 'elim', 'left', 'unfold', 'tauto', 'right', 'left', 'unfold', 'unfold', 'unfold', 'unfold', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'unfold', 'fold', 'tauto', 'tauto', 'tauto', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'simpl', 'set', 'fold', 'simpl', 'fold', 'assert', 'generalize', 'generalize', 'tauto', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'left', 'split', 'tauto', 'unfold', 'rewrite', 'elim', 'elim', 'intros', 'fold', 'generalize', 'unfold', 'unfold', 'unfold', 'generalize', 'unfold', 'tauto', 'elim', 'intros', 'fold', 'rewrite', 'absurd', 'unfold', 'unfold', 'intro', 'assert', 'unfold', 'unfold', 'tauto', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'rewrite', 'unfold', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'omega', 'assert', 'apply', 'tauto', 'unfold', 'unfold', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'symmetry', 'tauto', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'unfold', 'tauto', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'intros', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'unfold', 'unfold', 'intros', 'split', 'split', 'split', 'assert', 'omega', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'unfold', 'tauto', 'simpl', 'split', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'intro', 'omega', 'tauto', 'unfold', 'unfold', 'tauto', 'tauto', 'tauto', 'simpl', 'tauto', 'intro', 'elim', 'clear', 'intro', 'right', 'left', 'split', 'tauto', 'unfold', 'assert', 'unfold', 'generalize', 'unfold', 'generalize', 'tauto', 'rename', 'assert', 'tauto', 'rename', 'set', 'assert', 'generalize', 'unfold', 'tauto', 'rename', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'clear', 'decompose', 'clear', 'rename', 'rename', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'unfold', 'unfold', 'fold', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'fold', 'rewrite', 'rewrite', 'elim', 'elim', 'intros', 'fold', 'unfold', 'rewrite', 'absurd', 'unfold', 'unfold', 'intros', 'intro', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'decompose', 'clear', 'fold', 'assert', 'unfold', 'unfold', 'fold', 'rewrite', 'rewrite', 'simpl', 'assert', 'unfold', 'unfold', 'unfold', 'fold', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'generalize', 'tauto', 'omega', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'tauto', 'assert', 'omega', 'rewrite', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'unfold', 'unfold', 'fold', 'unfold', 'generalize', 'intro', 'generalize', 'intro', 'assert', 'generalize', 'tauto', 'cut', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'tauto', 'apply', 'tauto', 'apply', 'unfold', 'unfold', 'unfold', 'split', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'tauto', 'intros', 'fold', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'fold', 'unfold', 'unfold', 'intros', 'clear', 'split', 'split', 'split', 'simpl', 'rewrite', 'rewrite', 'tauto', 'split', 'tauto', 'fold', 'elim', 'intro', 'rewrite', 'rewrite', 'unfold', 'tauto', 'intro', 'omega', 'tauto', 'tauto', 'tauto', 'tauto', 'simpl', 'tauto', 'intros', 'clear', 'clear', 'elim', 'tauto', 'intro', 'clear', 'assert', 'unfold', 'tauto', 'generalize', 'clear', 'rewrite', 'elim', 'elim', 'intros', 'fold', 'rewrite', 'absurd', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'elim', 'intros', 'fold', 'rewrite', 'fold', 'absurd', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'unfold', 'unfold', 'split', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'intros', 'fold', 'rewrite', 'absurd', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'simpl', 'rewrite', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'tauto']",5,5,3,5,8,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_CN_2,"['assert', 'tauto', 'assert', 'tauto', 'intros', 'assert', 'tauto', 'rename', 'simpl', 'unfold', 'decompose', 'clear', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'induction', 'simpl', 'unfold', 'left', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'simpl', 'set', 'fold', 'assert', 'unfold', 'tauto', 'generalize', 'rewrite', 'elim', 'elim', 'intros', 'fold', 'fold', 'elim', 'clear', 'intro', 'rewrite', 'rewrite', 'right', 'left', 'split', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'rewrite', 'clear', 'intro', 'elim', 'clear', 'rewrite', 'intro', 'absurd', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'clear', 'intro', 'rewrite', 'left', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'fold', 'fold', 'intros', 'rewrite', 'fold', 'simpl', 'rewrite', 'elim', 'clear', 'intro', 'right', 'right', 'split', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto', 'clear', 'intros', 'elim', 'intro', 'clear', 'left', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'clear', 'intro', 'right', 'right', 'split', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto', 'intros', 'fold', 'fold', 'simpl', 'rewrite', 'elim', 'clear', 'intro', 'left', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'tauto', 'unfold', 'split', 'apply', 'tauto', 'unfold', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'clear', 'intros', 'elim', 'clear', 'intro', 'right', 'left', 'split', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'unfold', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'unfold', 'tauto', 'clear', 'intro', 'right', 'right', 'split', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'unfold', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'simpl', 'tauto']",1,4,2,5,8,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_CN,"['intros', 'unfold', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'unfold', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'intro', 'unfold', 'apply', 'tauto', 'tauto', 'tauto']",2,1,1,1,3,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_L0_CNS,"['intros', 'split', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'tauto', 'simpl', 'generalize', 'elim', 'tauto', 'clear', 'intros', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'left', 'split', 'unfold', 'split', 'simpl', 'tauto', 'apply', 'simpl', 'tauto', 'unfold', 'decompose', 'clear', 'set', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'rewrite', 'fold', 'fold', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'decompose', 'split', 'tauto', 'elim', 'intros', 'split', 'simpl', 'rewrite', 'tauto', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'tauto', 'clear', 'left', 'generalize', 'unfold', 'intros', 'decompose', 'simpl', 'unfold', 'clear', 'split', 'split', 'tauto', 'apply', 'tauto', 'generalize', 'clear', 'unfold', 'intros', 'split', 'tauto', 'decompose', 'elim', 'intros', 'split', 'simpl', 'set', 'fold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'fold', 'assert', 'tauto', 'rewrite', 'tauto', 'split', 'tauto', 'apply', 'tauto', 'tauto']",3,4,0,3,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,y_L0,"['simpl', 'intros', 'elim', 'tauto', 'tauto']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,x0_L0,"['simpl', 'intros', 'elim', 'intros', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'unfold', 'intro', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto']",3,1,0,2,2,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,x_1_L0,"['simpl', 'tauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,y_0_L0,"['simpl', 'unfold', 'intros', 'rewrite', 'elim', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,1,0,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,y_0_1_L0,"['intros', 'unfold', 'unfold', 'rewrite', 'simpl', 'tauto', 'fold', 'tauto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,not_expf_expf_L0_CN,"['intros', 'assert', 'tauto', 'rename', 'simpl', 'unfold', 'apply', 'tauto', 'tauto', 'elim', 'fold', 'tauto', 'fold', 'intros', 'right', 'left', 'split', 'unfold', 'split', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'tauto']",0,2,1,2,6,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_not_expf_L0_CV,"['intros', 'assert', 'tauto', 'rename', 'simpl', 'unfold', 'decompose', 'clear', 'generalize', 'simpl', 'fold', 'elim', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'generalize', 'clear', 'unfold', 'unfold', 'intros', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'rewrite', 'unfold', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'omega', 'assert', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'symmetry', 'tauto', 'absurd', 'elim', 'intro', 'rewrite', 'assert', 'rewrite', 'tauto', 'unfold', 'tauto', 'intro', 'omega', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'clear', 'fold', 'fold', 'intro', 'decompose', 'clear', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'clear', 'unfold', 'unfold', 'intros', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'fold', 'fold', 'set', 'fold', 'fold', 'assert', 'rewrite', 'unfold', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'omega', 'assert', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'unfold', 'tauto', 'intro', 'elim', 'omega', 'tauto', 'generalize', 'tauto', 'clear', 'tauto', 'tauto']",3,3,1,4,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan5.json,expf_not_expf_L0,"['intros', 'generalize', 'simpl', 'fold', 'fold', 'intros', 'generalize', 'simpl', 'fold', 'fold', 'intro', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'clear', 'elim', 'clear', 'intro', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'tauto']",3,4,2,3,6,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'clear', 'intro', 'generalize', 'elim', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'elim', 'apply', 'apply', 'tauto', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'rewrite', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto']",2,4,3,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'clear', 'intro', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intros', 'apply', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'clear', 'absurd', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'elim', 'clear', 'intro', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'intro', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,4,2,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VI,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIIA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'elim', 'clear', 'intro', 'elim', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'tauto', 'intro', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'tauto']",2,4,2,2,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIIB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'elim', 'clear', 'intro', 'generalize', 'tauto', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'absurd', 'tauto', 'rewrite', 'apply', 'rewrite', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'elim', 'clear', 'intro', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'intro', 'clear', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto']",3,4,3,4,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIIC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'clear', 'intro', 'generalize', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intros', 'apply', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'absurd', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'elim', 'clear', 'intro', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'intro', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,4,2,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VII,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIIIA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'elim', 'right', 'right', 'split', 'apply', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto']",1,4,1,2,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIIIB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'split', 'rewrite', 'tauto', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'tauto']",1,4,2,3,7,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIIIC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'tauto', 'tauto']",1,4,1,3,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_VIII,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_IXA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'rewrite', 'elim', 'clear', 'elim', 'tauto', 'intro', 'elim', 'clear', 'intro', 'left', 'tauto', 'clear', 'intro', 'tauto']",1,4,1,3,4,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_IXB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'clear', 'elim', 'clear', 'intro', 'right', 'left', 'split', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'absurd', 'rewrite', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'apply', 'apply', 'tauto', 'tauto']",1,4,2,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_IXC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'rewrite', 'elim', 'clear', 'elim', 'clear', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'left', 'apply', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'clear', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'right', 'split', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'right', 'left', 'split', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto']",1,4,2,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_IX,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_XA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'elim', 'clear', 'elim', 'tauto', 'intro', 'elim', 'clear', 'intro', 'elim', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'right', 'right', 'split', 'apply', 'tauto', 'tauto', 'tauto']",1,4,2,2,6,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_XB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'left', 'apply', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'clear', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'left', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'right', 'left', 'split', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'generalize', 'tauto']",1,4,2,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_XC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'clear', 'elim', 'clear', 'intro', 'right', 'right', 'split', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'right', 'split', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'elim', 'apply', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'elim', 'clear', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'right', 'split', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'right', 'left', 'split', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto']",1,4,2,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1_X,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L0L1,"['intros', 'unfold', 'unfold', 'set', 'set', 'unfold', 'fold', 'set', 'set', 'set', 'set', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'simpl', 'fold', 'tauto', 'set', 'set', 'rewrite', 'rewrite', 'unfold', 'unfold', 'elim', 'elim', 'elim', 'elim', 'intros', 'omega', 'intros', 'elim', 'elim', 'intros', 'elim', 'intros', 'tauto', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'omega', 'intros', 'elim', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'omega', 'intros', 'elim', 'elim', 'elim', 'intros', 'omega', 'intros', 'elim', 'elim', 'intros', 'elim', 'intros', 'omega']",1,2,0,2,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,B_L,"['intros', 'simpl', 'elim', 'tauto', 'elim', 'tauto', 'tauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,B_L_ter,"['intros', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'tauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,expf_L_B,"['intros', 'unfold', 'unfold', 'assert', 'tauto', 'rewrite', 'simpl', 'split', 'intros', 'decompose', 'clear', 'split', 'tauto', 'split', 'generalize', 'tauto', 'elim', 'intros', 'rewrite', 'split', 'tauto', 'tauto', 'tauto', 'intros', 'decompose', 'clear', 'split', 'split', 'apply', 'tauto', 'unfold', 'unfold', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'split', 'generalize', 'tauto', 'split', 'generalize', 'tauto', 'split', 'rewrite', 'tauto', 'tauto', 'split', 'rewrite', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'split', 'generalize', 'tauto', 'elim', 'intros', 'split', 'rewrite', 'tauto', 'tauto', 'tauto']",2,2,1,1,6,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_L_B0,"['intros', 'induction', 'simpl', 'unfold', 'simpl', 'tauto', 'rename', 'simpl', 'simpl', 'unfold', 'unfold', 'simpl', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'elim', 'intro', 'rewrite', 'tauto', 'intro', 'assert', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'intro', 'generalize', 'tauto', 'assert', 'generalize', 'generalize', 'tauto', 'assert', 'rewrite', 'intro', 'rewrite', 'absurd', 'tauto', 'generalize', 'tauto', 'tauto', 'intro', 'inversion', 'assert', 'apply', 'tauto', 'unfold', 'tauto', 'simpl', 'generalize', 'intro', 'generalize', 'clear', 'elim', 'intro', 'elim', 'intros', 'clear', 'omega', 'intro', 'absurd', 'tauto', 'tauto', 'elim', 'intros', 'absurd', 'tauto', 'tauto', 'intros', 'clear', 'omega', 'unfold', 'assert', 'tauto', 'simpl', 'unfold', 'decompose', 'clear', 'induction', 'elim', 'intro', 'assert', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'tauto', 'intro', 'rewrite', 'assert', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'simpl', 'tauto', 'set', 'unfold', 'fold', 'rewrite', 'unfold', 'rewrite', 'fold', 'assert', 'unfold', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'rewrite', 'assert', 'unfold', 'generalize', 'intro', 'apply', 'unfold', 'rewrite', 'tauto', 'elim', 'elim', 'intros', 'trivial', 'tauto', 'elim', 'tauto', 'intros', 'clear', 'omega', 'tauto', 'unfold', 'rewrite', 'tauto', 'simpl', 'split', 'split', 'apply', 'tauto', 'assert', 'unfold', 'split', 'generalize', 'tauto', 'split', 'generalize', 'tauto', 'split', 'unfold', 'rewrite', 'unfold', 'tauto', 'tauto', 'split', 'unfold', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'intro', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'symmetry', 'tauto', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'unfold', 'rewrite', 'absurd', 'tauto', 'intro', 'rewrite', 'simpl', 'rewrite', 'absurd', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'split', 'simpl', 'generalize', 'assert', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'simpl', 'split', 'generalize', 'assert', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'split', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'split', 'unfold', 'simpl', 'elim', 'intro', 'rewrite', 'unfold', 'rewrite', 'elim', 'assert', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intro', 'rewrite', 'tauto', 'tauto', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intros', 'generalize', 'clear', 'rewrite', 'elim', 'intros', 'rewrite', 'tauto', 'elim', 'intros', 'rewrite', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'rewrite', 'generalize', 'elim', 'tauto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'intro', 'assert', 'assert', 'unfold', 'rewrite', 'tauto', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'elim', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'intros', 'rewrite', 'elim', 'intros', 'intro', 'apply', 'rewrite', 'unfold', 'rewrite', 'apply', 'tauto', 'apply', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'assert', 'simpl', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'rewrite', 'assert', 'apply', 'tauto', 'assert', 'simpl', 'split', 'tauto', 'unfold', 'unfold', 'unfold', 'assert', 'generalize', 'tauto', 'assert', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'assert', 'rewrite', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'simpl', 'split', 'split', 'tauto', 'simpl', 'tauto', 'unfold', 'simpl', 'assert', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'tauto', 'intro', 'inversion', 'assert', 'unfold', 'rewrite', 'unfold', 'tauto', 'intro', 'inversion', 'assert', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'rewrite', 'set', 'unfold', 'fold', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'generalize', 'intro', 'elim', 'elim', 'intros', 'clear', 'omega', 'tauto', 'elim', 'tauto', 'intros', 'clear', 'omega', 'tauto', 'intro', 'inversion']",3,6,4,6,8,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,nf_B0,"['simpl', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'simpl', 'generalize', 'clear', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'rewrite', 'rewrite', 'generalize', 'simpl', 'intro', 'elim', 'elim', 'intros', 'tauto', 'intros', 'clear', 'clear', 'omega', 'elim', 'intros', 'clear', 'omega', 'tauto']",2,1,1,1,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,face_cut_join_criterion_B0,"['intros', 'generalize', 'intros', 'simpl', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'fold', 'assert', 'unfold', 'unfold', 'assert', 'apply', 'tauto', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'rewrite', 'rewrite', 'assert', 'assert', 'unfold', 'split', 'generalize', 'assert', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'generalize', 'generalize', 'tauto', 'split', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'intro', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'generalize', 'tauto']",4,1,2,3,5,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan9.json,other_faces_in_cut_B0,"['simpl', 'intros', 'generalize', 'simpl', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'rewrite', 'tauto', 'intro', 'rewrite', 'rewrite', 'tauto']",3,1,0,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,cF_B,"['intros', 'unfold', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'rewrite', 'tauto', 'intro', 'induction', 'tauto', 'rewrite', 'tauto', 'tauto', 'tauto']",2,0,0,2,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,B_B,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'tauto', 'simpl', 'elim', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'intro', 'simpl', 'elim', 'elim', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'simpl', 'elim', 'tauto', 'elim', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'simpl', 'elim', 'tauto', 'rewrite', 'tauto', 'tauto', 'simpl', 'elim', 'elim', 'tauto', 'simpl', 'elim', 'tauto', 'rewrite', 'tauto', 'simpl', 'elim', 'tauto', 'rewrite', 'tauto']",1,2,0,2,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_a_prel1,"['intros', 'unfold', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'split', 'apply', 'tauto', 'unfold', 'split', 'generalize', 'tauto', 'split', 'assert', 'tauto', 'rewrite', 'induction', 'simpl', 'simpl', 'unfold', 'tauto', 'simpl', 'simpl', 'simpl', 'rewrite', 'set', 'fold', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'set', 'fold', 'assert', 'assert', 'unfold', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'unfold', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'tauto', 'assert', 'omega', 'rewrite', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'rewrite', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'rewrite', 'fold', 'symmetry', 'tauto', 'absurd', 'omega', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'fold', 'rewrite', 'unfold', 'symmetry', 'tauto', 'absurd', 'omega', 'tauto', 'intro', 'rewrite', 'unfold', 'unfold', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto', 'tauto', 'omega']",2,4,2,4,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_a_prel2,"['intros', 'generalize', 'clear', 'unfold', 'unfold', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'unfold', 'decompose', 'clear', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'symmetry', 'tauto', 'fold', 'omega', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto']",4,1,2,1,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_a_aux,"['intros', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'generalize', 'unfold', 'split', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'tauto']",0,0,2,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_a,"['intros', 'assert', 'unfold', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'clear', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'clear', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'generalize', 'tauto', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto']",0,1,1,0,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_b_prel1,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'split', 'apply', 'tauto', 'unfold', 'split', 'generalize', 'tauto', 'split', 'assert', 'tauto', 'rewrite', 'induction', 'simpl', 'simpl', 'unfold', 'tauto', 'simpl', 'simpl', 'simpl', 'rewrite', 'set', 'fold', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'fold', 'assert', 'rewrite', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'fold', 'rewrite', 'tauto', 'absurd', 'omega', 'tauto', 'intro', 'elim', 'intro', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'fold', 'rewrite', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'simpl', 'fold', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'inversion', 'intro', 'rewrite', 'fold', 'fold', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto', 'tauto', 'omega']",1,4,2,4,6,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_b_prel2,"['intros', 'generalize', 'clear', 'unfold', 'unfold', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'unfold', 'decompose', 'clear', 'rewrite', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'fold', 'fold', 'symmetry', 'tauto', 'fold', 'fold', 'omega', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto']",4,1,1,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_b_aux,"['intros', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'apply', 'apply', 'tauto', 'tauto']",0,1,2,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_b,"['intros', 'assert', 'unfold', 'unfold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'clear', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'clear', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'generalize', 'tauto', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'fold', 'tauto']",0,1,2,0,3,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1_c,"['intros', 'decompose', 'clear', 'unfold', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'clear', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'tauto']",0,1,0,1,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_1,"['intros', 'elim', 'clear', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'clear', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'tauto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,between_expf_B0_1,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'induction', 'simpl', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'generalize', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'assert', 'omega', 'tauto', 'set', 'simpl', 'fold', 'unfold', 'assert', 'rewrite', 'elim', 'elim', 'intros', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'clear', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'assert', 'assert', 'omega', 'rewrite', 'rewrite', 'simpl', 'tauto', 'rewrite', 'assert', 'simpl', 'tauto', 'assert', 'generalize', 'intro', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'clear', 'unfold', 'unfold', 'assert', 'tauto', 'assert', 'apply', 'split', 'omega', 'split', 'omega', 'assert', 'unfold', 'symmetry', 'assert', 'simpl', 'rewrite', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'omega', 'simpl', 'rewrite', 'tauto', 'inversion', 'intros', 'elim', 'intro', 'fold', 'rewrite', 'elim', 'unfold', 'split', 'tauto', 'apply', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'tauto', 'unfold', 'unfold', 'split', 'tauto', 'assert', 'tauto', 'rewrite', 'split', 'tauto', 'intro', 'rewrite', 'unfold', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto', 'tauto', 'unfold', 'split', 'generalize', 'assert', 'unfold', 'generalize', 'tauto', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'tauto']",2,6,2,5,6,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,between_expf_B0_2,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'rename', 'assert', 'apply', 'tauto', 'induction', 'simpl', 'unfold', 'unfold', 'split', 'tauto', 'apply', 'generalize', 'tauto', 'unfold', 'split', 'tauto', 'apply', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'assert', 'omega', 'tauto', 'set', 'simpl', 'fold', 'unfold', 'assert', 'rewrite', 'elim', 'elim', 'intros', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'clear', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'fold', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'elim', 'apply', 'rewrite', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'unfold', 'assert', 'tauto', 'rewrite', 'fold', 'tauto', 'apply', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'apply', 'tauto', 'tauto', 'split', 'simpl', 'tauto', 'intros', 'elim', 'intros', 'fold', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'rewrite', 'assert', 'simpl', 'tauto', 'assert', 'simpl', 'fold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'simpl', 'tauto', 'inversion', 'intro', 'rewrite', 'fold', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto', 'tauto', 'unfold', 'split', 'generalize', 'generalize', 'assert', 'tauto', 'rewrite', 'fold', 'tauto', 'split', 'simpl', 'rewrite', 'tauto']",1,5,4,4,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_xb0_xh0_1,"['intros', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'assert', 'tauto', 'fold', 'rewrite', 'split', 'simpl', 'tauto']",0,1,1,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_x0_x_1,"['intros', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'fold', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'rewrite', 'split', 'simpl', 'tauto']",0,0,0,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_transfert,"['intros', 'assert', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'elim', 'intro', 'elim', 'tauto', 'elim', 'tauto', 'intros', 'assert', 'intro', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'tauto', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'elim', 'tauto', 'intros', 'assert', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'tauto', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'intros', 'assert', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'assert', 'tauto', 'tauto']",1,1,2,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_x0_xh0_1,"['intros', 'unfold', 'split', 'apply', 'tauto', 'unfold', 'split', 'assert', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'elim', 'intro', 'rewrite', 'intro', 'unfold', 'unfold', 'tauto', 'tauto', 'intro', 'inversion', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",2,1,1,3,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_xb0_x_1,"['intros', 'unfold', 'split', 'apply', 'tauto', 'unfold', 'split', 'assert', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'generalize', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'rewrite', 'elim', 'elim', 'intro', 'rewrite', 'symmetry', 'unfold', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'inversion', 'elim', 'intros', 'rewrite', 'unfold', 'tauto', 'tauto', 'intro', 'inversion', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto']",2,0,1,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_a_I,"['intros', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'unfold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'clear', 'set', 'fold', 'fold', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'apply', 'apply', 'tauto', 'tauto']",0,1,2,1,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_a_II,"['intros', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'unfold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'clear', 'set', 'fold', 'fold', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'apply', 'apply', 'tauto', 'tauto']",0,1,2,1,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,xb0_ind,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'intro', 'fold', 'omega']",1,2,2,3,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,x0_ind,"['intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'unfold', 'rewrite', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'fold', 'intro', 'omega']",0,2,1,3,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_a_III,"['intros', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'unfold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'clear', 'set', 'fold', 'set', 'fold', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'omega', 'assert', 'rewrite', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'omega', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'fold', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",0,1,2,2,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_a_IV,"['intros', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'unfold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'clear', 'set', 'fold', 'set', 'fold', 'elim', 'clear', 'intros', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'rewrite', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'omega', 'assert', 'rewrite', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'omega', 'assert', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'apply', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",0,1,2,2,4,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_a,"['intros', 'decompose', 'clear', 'elim', 'clear', 'elim', 'clear', 'intros', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'clear', 'intros', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'clear', 'elim', 'clear', 'intros', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'tauto', 'clear', 'intros', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_b_ind,"['intros', 'assert', 'apply', 'tauto', 'assert', 'generalize', 'tauto', 'assert', 'tauto', 'induction', 'simpl', 'unfold', 'apply', 'tauto', 'tauto', 'simpl', 'set', 'simpl', 'fold', 'unfold', 'fold', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'unfold', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'split', 'tauto', 'rewrite', 'split', 'simpl', 'rewrite', 'elim', 'elim', 'intros', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'clear', 'fold', 'rewrite', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'unfold', 'rewrite', 'tauto', 'absurd', 'tauto', 'apply', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'apply', 'tauto', 'elim', 'intros', 'rewrite', 'fold', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'unfold', 'rewrite', 'tauto', 'absurd', 'tauto', 'apply', 'apply', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'apply', 'rewrite', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'inversion', 'rewrite', 'unfold', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto', 'tauto']",1,4,5,4,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_b,"['intros', 'unfold', 'decompose', 'clear', 'unfold', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'tauto']",1,0,0,2,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2_aux,"['intros', 'elim', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'clear', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'fold', 'tauto']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS_2,"['intros', 'intros', 'set', 'set', 'set', 'assert', 'unfold', 'unfold', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto']",0,1,1,0,3,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CS,"['intros', 'generalize', 'clear', 'elim', 'intros', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'fold', 'tauto', 'intro', 'intro', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'tauto', 'fold', 'fold', 'tauto']",3,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CN_i,"['induction', 'simpl', 'set', 'set', 'set', 'set', 'set', 'elim', 'intros', 'rename', 'elim', 'intro', 'assert', 'apply', 'apply', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'fold', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'split', 'simpl', 'tauto', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'generalize', 'intros', 'assert', 'unfold', 'unfold', 'unfold', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'assert', 'assert', 'tauto', 'rewrite', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'unfold', 'tauto', 'intro', 'right', 'right', 'split', 'tauto', 'apply', 'tauto', 'tauto', 'intros', 'right', 'right', 'apply', 'tauto', 'tauto', 'intros', 'generalize', 'clear', 'intro', 'simpl', 'fold', 'fold', 'fold', 'fold', 'fold', 'set', 'fold', 'generalize', 'clear', 'simpl', 'fold', 'assert', 'tauto', 'assert', 'rewrite', 'tauto', 'fold', 'rewrite', 'generalize', 'clear', 'elim', 'intro', 'clear', 'rewrite', 'intro', 'elim', 'intros', 'elim', 'clear', 'intro', 'elim', 'intro', 'left', 'split', 'tauto', 'generalize', 'elim', 'intros', 'rewrite', 'unfold', 'absurd', 'symmetry', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'intro', 'fold', 'rewrite', 'clear', 'assert', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'intros', 'unfold', 'generalize', 'tauto', 'symmetry', 'unfold', 'tauto', 'intro', 'left', 'split', 'tauto', 'decompose', 'clear', 'generalize', 'clear', 'unfold', 'unfold', 'intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'assert', 'intro', 'rewrite', 'rewrite', 'tauto', 'split', 'split', 'split', 'simpl', 'generalize', 'elim', 'intro', 'intro', 'clear', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'fold', 'rewrite', 'rewrite', 'assert', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'assert', 'simpl', 'rewrite', 'symmetry', 'tauto', 'assert', 'apply', 'omega', 'apply', 'tauto', 'simpl', 'simpl', 'tauto', 'inversion', 'intro', 'elim', 'fold', 'intro', 'symmetry', 'tauto', 'fold', 'rewrite', 'intros', 'rewrite', 'symmetry', 'tauto', 'split', 'tauto', 'omega', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'left', 'assert', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'fold', 'assert', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'rewrite', 'unfold', 'tauto', 'split', 'tauto', 'generalize', 'clear', 'elim', 'intros', 'fold', 'fold', 'fold', 'rewrite', 'decompose', 'clear', 'generalize', 'clear', 'unfold', 'intros', 'assert', 'unfold', 'generalize', 'assert', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'intro', 'generalize', 'tauto', 'elim', 'fold', 'intros', 'fold', 'rewrite', 'decompose', 'clear', 'rewrite', 'rewrite', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'rewrite', 'fold', 'tauto', 'tauto', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'unfold', 'unfold', 'assert', 'unfold', 'generalize', 'assert', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'clear', 'intro', 'elim', 'intros', 'clear', 'elim', 'clear', 'intros', 'decompose', 'clear', 'assert', 'intro', 'rewrite', 'rewrite', 'tauto', 'assert', 'simpl', 'rewrite', 'rewrite', 'tauto', 'assert', 'apply', 'omega', 'apply', 'tauto', 'simpl', 'simpl', 'tauto', 'inversion', 'intros', 'fold', 'rewrite', 'fold', 'decompose', 'clear', 'generalize', 'clear', 'unfold', 'unfold', 'intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'assert', 'intro', 'rewrite', 'rewrite', 'tauto', 'split', 'split', 'split', 'simpl', 'rewrite', 'rewrite', 'symmetry', 'tauto', 'split', 'tauto', 'split', 'omega', 'omega', 'clear', 'intro', 'right', 'right', 'split', 'tauto', 'decompose', 'clear', 'generalize', 'clear', 'elim', 'intros', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'generalize', 'clear', 'rewrite', 'fold', 'assert', 'rewrite', 'elim', 'unfold', 'intro', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'intro', 'assert', 'unfold', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'split', 'simpl', 'rewrite', 'symmetry', 'tauto', 'apply', 'tauto', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'elim', 'fold', 'intros', 'rewrite', 'assert', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'apply', 'tauto', 'tauto', 'rewrite', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'fold', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'rewrite', 'tauto', 'fold', 'intros', 'apply', 'tauto', 'rewrite', 'generalize', 'unfold', 'intro', 'split', 'tauto', 'unfold', 'split', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'elim', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'rewrite', 'apply', 'tauto', 'tauto', 'elim', 'clear', 'intro', 'decompose', 'clear', 'generalize', 'clear', 'elim', 'rewrite', 'fold', 'assert', 'rewrite', 'elim', 'unfold', 'intro', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'intros', 'fold', 'right', 'right', 'apply', 'apply', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto', 'tauto', 'intro', 'rewrite', 'elim', 'fold', 'intro', 'rewrite', 'tauto', 'fold', 'intros', 'left', 'split', 'tauto', 'apply', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'clear', 'intros', 'elim', 'clear', 'intro', 'generalize', 'clear', 'elim', 'rewrite', 'rewrite', 'fold', 'assert', 'rewrite', 'elim', 'unfold', 'intro', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'right', 'left', 'split', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'elim', 'fold', 'rewrite', 'intros', 'fold', 'right', 'right', 'apply', 'apply', 'tauto', 'rewrite', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'fold', 'intros', 'rewrite', 'fold', 'right', 'left', 'split', 'apply', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'decompose', 'clear', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto', 'clear', 'intro', 'generalize', 'clear', 'rewrite', 'elim', 'rewrite', 'fold', 'assert', 'rewrite', 'elim', 'unfold', 'intro', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'intros', 'right', 'left', 'split', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'elim', 'fold', 'intros', 'left', 'split', 'rewrite', 'apply', 'tauto', 'rewrite', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'fold', 'intros', 'right', 'right', 'apply', 'tauto', 'rewrite', 'unfold', 'unfold', 'split', 'tauto', 'unfold', 'split', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'tauto', 'tauto', 'intro', 'inversion', 'tauto', 'tauto', 'tauto']",7,3,4,6,8,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CN,"['intros', 'unfold', 'unfold', 'decompose', 'clear', 'elim', 'clear', 'intros', 'assert', 'generalize', 'tauto', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",1,1,0,2,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_B0_CNS,"['simpl', 'split', 'apply', 'tauto', 'tauto', 'apply', 'tauto', 'tauto']",0,0,0,0,3,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,expf_not_expf_B0,"['intros', 'split', 'intro', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'intro', 'unfold', 'unfold', 'generalize', 'rewrite', 'elim', 'intros', 'symmetry', 'absurd', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'unfold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'set', 'fold', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'rewrite', 'assert', 'tauto', 'rewrite', 'assert', 'apply', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'unfold', 'tauto', 'fold', 'omega', 'fold', 'omega', 'tauto', 'fold', 'decompose', 'assert', 'omega', 'rewrite', 'rewrite', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'generalize', 'unfold', 'tauto', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'apply', 'tauto', 'tauto', 'unfold', 'unfold', 'elim', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'set', 'fold', 'clear', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'elim', 'intro', 'rewrite', 'unfold', 'rewrite', 'assert', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'unfold', 'generalize', 'tauto', 'unfold', 'assert', 'assert', 'fold', 'rewrite', 'tauto', 'unfold', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'absurd', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'unfold', 'generalize', 'unfold', 'generalize', 'tauto', 'intro', 'assert', 'apply', 'unfold', 'generalize', 'unfold', 'generalize', 'tauto', 'fold', 'omega', 'fold', 'omega', 'tauto', 'absurd', 'omega', 'tauto', 'tauto', 'unfold', 'generalize', 'unfold', 'generalize', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'generalize', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intro', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'fold', 'intros', 'generalize', 'clear', 'elim', 'tauto', 'intros', 'apply', 'clear', 'clear', 'right', 'right', 'apply', 'unfold', 'unfold', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",3,1,3,5,7,7
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,inv_hmap_L0L0,"['simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'intros', 'decompose', 'clear', 'generalize', 'clear', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'intros', 'split', 'assert', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'split', 'tauto', 'split', 'tauto', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'intro', 'assert', 'intro', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",2,4,0,2,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,inv_hmap_L0L1,"['simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'intros', 'decompose', 'clear', 'tauto']",1,4,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,betweenf_expf,"['unfold', 'unfold', 'intros', 'generalize', 'intros', 'generalize', 'generalize', 'tauto']",4,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,B0_L0_L0,"['simpl', 'intros', 'decompose', 'clear', 'unfold', 'unfold', 'unfold', 'simpl', 'decompose', 'clear', 'generalize', 'clear', 'unfold', 'generalize', 'clear', 'unfold', 'unfold', 'decompose', 'clear', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'elim', 'intro', 'rewrite', 'tauto', 'elim', 'tauto', 'tauto']",1,3,0,1,4,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,B0_L1_L0,"['simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'tauto', 'tauto']",1,4,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,B1_L0_L1,"['simpl', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'tauto', 'tauto']",1,4,0,0,1,1
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,betweenf1,"['intros', 'assert', 'tauto', 'rename', 'unfold', 'unfold', 'decompose', 'clear', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'fold', 'fold', 'decompose', 'clear', 'unfold', 'generalize', 'intro', 'unfold', 'generalize', 'intro', 'decompose', 'decompose', 'clear', 'assert', 'tauto', 'assert', 'apply', 'tauto', 'assert', 'generalize', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'tauto', 'generalize', 'intro', 'generalize', 'intro', 'fold', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'tauto', 'rewrite', 'rewrite', 'tauto', 'assert', 'intro', 'rewrite', 'simpl', 'symmetry', 'tauto', 'assert', 'intro', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'assert', 'generalize', 'generalize', 'tauto', 'elim', 'intro', 'right', 'split', 'unfold', 'unfold', 'intros', 'split', 'split', 'rewrite', 'split', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'split', 'assert', 'tauto', 'assert', 'omega', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'generalize', 'tauto', 'clear', 'omega', 'tauto', 'generalize', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'omega', 'assert', 'tauto', 'unfold', 'unfold', 'intros', 'split', 'split', 'rewrite', 'split', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'tauto', 'split', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'intro', 'left', 'split', 'unfold', 'unfold', 'intros', 'split', 'split', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'split', 'rewrite', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'fold', 'rewrite', 'omega', 'unfold', 'unfold', 'intros', 'split', 'split', 'split', 'rewrite', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'tauto', 'split', 'rewrite', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'apply', 'tauto', 'tauto', 'unfold', 'apply', 'tauto', 'tauto', 'omega']",3,2,2,4,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,betweenf2,"['intros', 'assert', 'tauto', 'rename', 'unfold', 'unfold', 'decompose', 'clear', 'assert', 'generalize', 'tauto', 'rename', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'fold', 'fold', 'decompose', 'clear', 'unfold', 'generalize', 'intro', 'unfold', 'generalize', 'intro', 'decompose', 'decompose', 'clear', 'assert', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'tauto', 'fold', 'tauto', 'rewrite', 'tauto', 'rewrite', 'clear', 'clear', 'assert', 'tauto', 'elim', 'intro', 'assert', 'rewrite', 'unfold', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'tauto', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'symmetry', 'rewrite', 'rewrite', 'symmetry', 'tauto', 'intro', 'assert', 'rewrite', 'generalize', 'tauto', 'assert', 'generalize', 'tauto', 'elim', 'intro', 'assert', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'intro', 'set', 'fold', 'fold', 'fold', 'fold', 'fold', 'fold', 'fold', 'fold', 'fold', 'fold', 'fold', 'set', 'fold', 'fold', 'fold', 'fold', 'fold', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'assert', 'generalize', 'tauto', 'set', 'set', 'assert', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'elim', 'clear', 'intros', 'elim', 'intros', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'elim', 'intro', 'right', 'split', 'unfold', 'unfold', 'intros', 'elim', 'intro', 'assert', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'clear', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'intro', 'rewrite', 'tauto', 'assert', 'intro', 'rewrite', 'simpl', 'symmetry', 'tauto', 'clear', 'clear', 'split', 'split', 'rewrite', 'split', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'simpl', 'rewrite', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'split', 'unfold', 'rewrite', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'omega', 'tauto', 'tauto', 'omega', 'intro', 'elim', 'intro', 'assert', 'rewrite', 'simpl', 'symmetry', 'tauto', 'split', 'split', 'rewrite', 'split', 'unfold', 'rewrite', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'simpl', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'split', 'unfold', 'rewrite', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'simpl', 'rewrite', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'omega', 'intro', 'split', 'split', 'rewrite', 'split', 'unfold', 'rewrite', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'simpl', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'split', 'unfold', 'rewrite', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'clear', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'omega', 'tauto', 'tauto', 'omega', 'assert', 'simpl', 'rewrite', 'tauto', 'rewrite', 'unfold', 'unfold', 'intros', 'clear', 'rewrite', 'elim', 'split', 'split', 'split', 'unfold', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'generalize', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'split', 'unfold', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'omega', 'intro', 'split', 'split', 'split', 'unfold', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'generalize', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'split', 'unfold', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'omega', 'tauto', 'tauto', 'omega', 'intro', 'left', 'unfold', 'assert', 'rewrite', 'unfold', 'apply', 'tauto', 'tauto', 'split', 'unfold', 'intros', 'clear', 'split', 'split', 'rewrite', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'simpl', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'omega', 'unfold', 'unfold', 'intros', 'clear', 'split', 'split', 'rewrite', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'generalize', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'split', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'simpl', 'tauto', 'tauto', 'tauto', 'omega']",4,4,2,5,5,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,nf_L0L0_I,"['intros', 'rename', 'rename', 'rename', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'unfold', 'unfold', 'simpl', 'assert', 'tauto', 'assert', 'tauto', 'unfold', 'unfold', 'simpl', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'simpl', 'decompose', 'clear', 'decompose', 'clear', 'generalize', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'auto', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'intros', 'clear', 'clear', 'clear', 'clear', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'clear', 'elim', 'generalize', 'clear', 'elim', 'intros', 'elim', 'elim', 'tauto', 'intros', 'clear', 'assert', 'clear', 'clear', 'tauto', 'clear', 'clear', 'generalize', 'intro', 'assert', 'clear', 'tauto', 'clear', 'elim', 'clear', 'elim', 'clear', 'intro', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'intro', 'symmetry', 'tauto', 'assert', 'intro', 'assert', 'rewrite', 'tauto', 'unfold', 'unfold', 'rewrite', 'rewrite', 'symmetry', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'clear', 'tauto', 'clear', 'intros', 'elim', 'clear', 'intro', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'intro', 'symmetry', 'tauto', 'assert', 'intro', 'assert', 'rewrite', 'tauto', 'unfold', 'unfold', 'rewrite', 'rewrite', 'symmetry', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'clear', 'tauto', 'right', 'right', 'split', 'intro', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto']",3,3,2,2,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,nf_L0L0_II,"['intros', 'rename', 'rename', 'rename', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'unfold', 'unfold', 'simpl', 'assert', 'tauto', 'assert', 'tauto', 'unfold', 'unfold', 'simpl', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'simpl', 'decompose', 'clear', 'decompose', 'clear', 'generalize', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'auto', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'intros', 'clear', 'clear', 'clear', 'clear', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'clear', 'elim', 'generalize', 'clear', 'elim', 'intros', 'tauto', 'elim', 'elim', 'intros', 'clear', 'assert', 'clear', 'tauto', 'clear', 'clear', 'elim', 'clear', 'elim', 'clear', 'intro', 'decompose', 'clear', 'generalize', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'elim', 'clear', 'intros', 'decompose', 'clear', 'assert', 'unfold', 'generalize', 'assert', 'unfold', 'generalize', 'tauto', 'tauto', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'tauto', 'tauto', 'tauto', 'tauto']",4,3,2,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,nf_L0L0_III,"['intros', 'unfold', 'unfold', 'simpl', 'fold', 'fold', 'elim', 'elim', 'tauto', 'elim', 'elim', 'tauto', 'intros', 'omega', 'tauto', 'tauto']",2,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,nf_L0L0_IV,"['intros', 'rename', 'rename', 'rename', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'unfold', 'unfold', 'simpl', 'assert', 'tauto', 'assert', 'tauto', 'unfold', 'unfold', 'simpl', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'simpl', 'decompose', 'clear', 'decompose', 'clear', 'generalize', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'auto', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'intros', 'clear', 'clear', 'clear', 'clear', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'clear', 'elim', 'generalize', 'clear', 'elim', 'intros', 'tauto', 'elim', 'tauto', 'elim', 'intros', 'clear', 'assert', 'clear', 'generalize', 'tauto', 'clear', 'clear', 'tauto', 'tauto', 'tauto']",2,3,1,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,nf_L0L0_V,"['intros', 'rename', 'rename', 'rename', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'unfold', 'unfold', 'simpl', 'assert', 'tauto', 'assert', 'tauto', 'unfold', 'unfold', 'simpl', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'simpl', 'decompose', 'clear', 'decompose', 'clear', 'generalize', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'auto', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'intros', 'clear', 'clear', 'clear', 'clear', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'clear', 'elim', 'tauto', 'elim', 'tauto', 'generalize', 'clear', 'elim', 'tauto', 'elim', 'intros', 'clear', 'assert', 'clear', 'tauto', 'clear', 'assert', 'generalize', 'clear', 'tauto', 'clear', 'elim', 'clear', 'elim', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'right', 'left', 'split', 'apply', 'apply', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'simpl', 'split', 'simpl', 'tauto', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'apply', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'simpl', 'split', 'simpl', 'tauto', 'right', 'right', 'split', 'apply', 'tauto', 'apply', 'apply', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'simpl', 'split', 'simpl', 'tauto', 'apply', 'apply', 'tauto', 'unfold', 'assert', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'fold', 'apply', 'assert', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'simpl', 'split', 'simpl', 'tauto', 'tauto']",2,3,3,2,8,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,nf_L0L0_VI,"['intros', 'rename', 'rename', 'rename', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'unfold', 'unfold', 'simpl', 'assert', 'tauto', 'assert', 'tauto', 'unfold', 'unfold', 'simpl', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'simpl', 'decompose', 'clear', 'decompose', 'clear', 'generalize', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'auto', 'clear', 'intros', 'generalize', 'clear', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'elim', 'intros', 'elim', 'apply', 'tauto', 'tauto', 'intros', 'clear', 'clear', 'clear', 'clear', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'set', 'fold', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'intro', 'generalize', 'clear', 'elim', 'generalize', 'clear', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'tauto', 'intros', 'clear', 'assert', 'clear', 'generalize', 'tauto', 'clear', 'tauto', 'tauto']",2,3,1,0,4,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan7.json,nf_L0L0,"['intros', 'unfold', 'unfold', 'unfold', 'simpl', 'elim', 'elim', 'elim', 'elim', 'intros', 'omega', 'intros', 'generalize', 'simpl', 'elim', 'elim', 'elim', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'tauto', 'tauto', 'elim', 'tauto', 'tauto', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'generalize', 'simpl', 'elim', 'elim', 'elim', 'tauto', 'elim', 'intros', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'tauto', 'elim', 'elim', 'intros', 'generalize', 'simpl', 'elim', 'elim', 'tauto', 'elim', 'elim', 'intros', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'generalize', 'simpl', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'omega', 'intros', 'generalize', 'simpl', 'elim', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'elim', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'generalize', 'simpl', 'elim', 'tauto', 'elim', 'elim', 'elim', 'intros', 'symmetry', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'generalize', 'simpl', 'elim', 'tauto', 'elim', 'elim', 'elim', 'tauto', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'symmetry', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'omega', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'generalize', 'simpl', 'elim', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'tauto', 'intros', 'symmetry', 'tauto', 'tauto', 'elim', 'elim', 'intros', 'omega', 'intros', 'generalize', 'simpl', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'elim', 'intros', 'assert', 'unfold', 'apply', 'tauto', 'generalize', 'simpl', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'tauto', 'elim', 'intros', 'symmetry', 'tauto', 'tauto', 'intros', 'omega']",3,2,1,1,5,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'assert', 'fold', 'tauto', 'simpl', 'fold', 'elim', 'intro', 'set', 'fold', 'assert', 'rewrite', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'clear', 'rewrite', 'assert', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'assert', 'unfold', 'simpl', 'unfold', 'simpl', 'unfold', 'tauto', 'clear', 'assert', 'tauto', 'clear', 'elim', 'clear', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'absurd', 'rewrite', 'unfold', 'unfold', 'intro', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'intro', 'rewrite', 'simpl', 'generalize', 'unfold', 'unfold', 'unfold', 'intro', 'assert', 'unfold', 'rewrite', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'tauto', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'intro', 'assert', 'omega', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'unfold', 'rewrite', 'symmetry', 'unfold', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'unfold', 'generalize', 'generalize', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'unfold', 'unfold', 'fold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'unfold', 'fold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'omega', 'assert', 'apply', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'unfold', 'fold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'unfold', 'fold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'omega', 'omega', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'unfold', 'fold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'rewrite', 'apply', 'unfold', 'simpl', 'unfold', 'tauto', 'rewrite', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'assert', 'unfold', 'simpl', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'elim', 'intro', 'intro', 'elim', 'rewrite', 'set', 'fold', 'assert', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'clear', 'assert', 'intro', 'rewrite', 'assert', 'rewrite', 'tauto', 'elim', 'rewrite', 'unfold', 'rewrite', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'rename', 'unfold', 'unfold', 'intros', 'split', 'split', 'assert', 'unfold', 'assert', 'rewrite', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'apply', 'tauto', 'unfold', 'tauto', 'rewrite', 'split', 'assert', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'assert', 'omega', 'rewrite', 'tauto', 'split', 'assert', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'fold', 'assert', 'omega', 'rewrite', 'clear', 'rewrite', 'unfold', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'omega', 'split', 'fold', 'omega', 'fold', 'omega', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'assert', 'assert', 'unfold', 'split', 'simpl', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'split', 'simpl', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'rewrite', 'apply', 'tauto', 'assert', 'generalize', 'unfold', 'simpl', 'tauto', 'generalize', 'unfold', 'unfold', 'tauto', 'tauto', 'tauto', 'intro', 'assert', 'rewrite', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'assert', 'unfold', 'simpl', 'unfold', 'simpl', 'unfold', 'tauto', 'clear', 'assert', 'tauto', 'clear', 'clear', 'elim', 'clear', 'set', 'set', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'fold', 'elim', 'intros', 'clear', 'fold', 'assert', 'intro', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'intro', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'simpl', 'tauto', 'simpl', 'unfold', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'elim', 'clear', 'intro', 'generalize', 'rewrite', 'rewrite', 'tauto', 'intro', 'clear', 'elim', 'clear', 'intro', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'clear', 'intro', 'decompose', 'clear', 'assert', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,5,4,5,7,7
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_I,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'unfold', 'unfold', 'set', 'set', 'unfold', 'fold', 'unfold', 'fold', 'unfold', 'fold', 'simpl', 'elim', 'intro', 'assert', 'unfold', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'assert', 'generalize', 'simpl', 'fold', 'fold', 'intro', 'assert', 'unfold', 'simpl', 'generalize', 'elim', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'clear', 'elim', 'tauto', 'intros', 'clear', 'elim', 'intros', 'clear', 'decompose', 'clear', 'unfold', 'unfold', 'assert', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'fold', 'generalize', 'tauto', 'assert', 'tauto', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'assert', 'unfold', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'set', 'fold', 'assert', 'apply', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'unfold', 'simpl', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'tauto', 'omega', 'assert', 'omega', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'simpl', 'unfold', 'symmetry', 'tauto', 'intro', 'clear', 'unfold', 'rewrite', 'assert', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'unfold', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'apply', 'rewrite', 'unfold', 'split', 'unfold', 'simpl', 'tauto', 'unfold', 'split', 'generalize', 'assert', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'split', 'simpl', 'tauto', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'elim', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'simpl', 'tauto', 'generalize', 'simpl', 'intro', 'assert', 'generalize', 'elim', 'tauto', 'clear', 'tauto', 'clear', 'clear', 'assert', 'rewrite', 'set', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'intro', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'decompose', 'clear', 'set', 'fold', 'assert', 'unfold', 'apply', 'rewrite', 'unfold', 'split', 'tauto', 'split', 'tauto', 'rewrite', 'split', 'split', 'split', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'tauto', 'split', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'assert', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'clear', 'omega', 'assert', 'simpl', 'generalize', 'intros', 'fold', 'unfold', 'unfold', 'fold', 'assert', 'generalize', 'tauto', 'tauto', 'tauto', 'elim', 'intros', 'assert', 'unfold', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'set', 'fold', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'unfold', 'simpl', 'simpl', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'set', 'assert', 'fold', 'rewrite', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'fold', 'intro', 'assert', 'unfold', 'simpl', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'elim', 'tauto', 'tauto', 'clear', 'elim', 'intro', 'clear', 'decompose', 'clear', 'unfold', 'unfold', 'assert', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'unfold', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'fold', 'omega', 'assert', 'omega', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'elim', 'clear', 'intro', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'tauto', 'apply', 'rewrite', 'tauto', 'elim', 'simpl', 'assert', 'intro', 'assert', 'unfold', 'rewrite', 'rewrite', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'rewrite', 'assert', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'unfold', 'fold', 'generalize', 'tauto', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'clear', 'clear', 'decompose', 'clear', 'set', 'fold', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'rewrite', 'elim', 'intro', 'assert', 'omega', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'unfold', 'rewrite', 'symmetry', 'unfold', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'omega', 'intro', 'assert', 'intro', 'rewrite', 'simpl', 'generalize', 'unfold', 'unfold', 'fold', 'intros', 'assert', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'unfold', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'omega', 'fold', 'omega', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'omega', 'omega', 'tauto', 'tauto', 'assert', 'unfold', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'generalize', 'assert', 'unfold', 'simpl', 'simpl', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'simpl', 'tauto', 'intro', 'simpl', 'fold', 'fold', 'assert', 'generalize', 'elim', 'tauto', 'tauto', 'clear', 'assert', 'rewrite', 'unfold', 'unfold', 'assert', 'unfold', 'generalize', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'simpl', 'tauto', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'decompose', 'clear', 'set', 'fold', 'unfold', 'unfold', 'intros', 'split', 'split', 'assert', 'intro', 'rewrite', 'simpl', 'assert', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'split', 'apply', 'rewrite', 'split', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'simpl', 'rewrite', 'unfold', 'unfold', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'split', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'rewrite', 'simpl', 'unfold', 'rewrite', 'unfold', 'unfold', 'fold', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'split', 'elim', 'intro', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'assert', 'rewrite', 'unfold', 'unfold', 'fold', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'intros', 'clear', 'omega', 'clear', 'omega', 'simpl', 'tauto', 'tauto', 'assert', 'rewrite', 'unfold', 'generalize', 'assert', 'rewrite', 'generalize', 'simpl', 'unfold', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'apply']",5,5,4,4,8,8
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IIA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'unfold', 'unfold', 'set', 'set', 'unfold', 'fold', 'unfold', 'fold', 'unfold', 'fold', 'rename', 'rename', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'rewrite', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'set', 'fold', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'elim', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intro', 'clear', 'intro', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'simpl', 'rewrite', 'tauto', 'intro', 'elim', 'intros', 'clear', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'assert', 'unfold', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'split', 'split', 'simpl', 'split', 'tauto', 'split', 'rewrite', 'tauto', 'rewrite', 'clear', 'omega', 'intro', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'set', 'fold', 'assert', 'intro', 'rewrite', 'unfold', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'assert', 'rewrite', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'unfold', 'unfold', 'rewrite', 'fold', 'symmetry', 'tauto', 'tauto', 'simpl', 'simpl', 'unfold', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'fold', 'clear', 'omega', 'assert', 'apply', 'tauto', 'rewrite', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'tauto', 'rewrite', 'split', 'split', 'split', 'assert', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'clear', 'assert', 'clear', 'omega', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'simpl', 'unfold', 'tauto', 'split', 'assert', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'rewrite', 'rewrite', 'unfold', 'assert', 'apply', 'tauto', 'rewrite', 'apply', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'tauto', 'fold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'clear', 'omega', 'assert', 'unfold', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'tauto', 'tauto', 'simpl', 'tauto', 'tauto', 'intro', 'elim', 'clear', 'clear', 'intro', 'decompose', 'clear', 'elim', 'intro', 'rewrite', 'assert', 'unfold', 'assert', 'assert', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'generalize', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'tauto', 'assert', 'unfold', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'tauto', 'rewrite', 'tauto', 'intro', 'assert', 'unfold', 'unfold', 'rewrite', 'tauto', 'rewrite', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'intro', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'tauto', 'simpl', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'simpl', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'assert', 'apply', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'simpl', 'unfold', 'tauto', 'tauto', 'fold', 'clear', 'omega', 'fold', 'clear', 'omega', 'simpl', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'tauto', 'simpl', 'unfold', 'tauto', 'tauto', 'simpl', 'unfold', 'tauto', 'generalize', 'simpl', 'unfold', 'tauto', 'absurd', 'clear', 'omega', 'tauto', 'unfold', 'unfold', 'simpl', 'tauto', 'generalize', 'simpl', 'unfold', 'tauto', 'clear', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'simpl', 'tauto', 'tauto', 'tauto', 'tauto']",3,6,3,5,7,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IIB,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'assert', 'fold', 'tauto', 'generalize', 'clear', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'elim', 'fold', 'set', 'intros', 'rewrite', 'rewrite', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'set', 'fold', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'clear', 'elim', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intro', 'clear', 'intro', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'simpl', 'tauto', 'intro', 'clear', 'clear', 'elim', 'intro', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'assert', 'intro', 'rewrite', 'simpl', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'tauto', 'assert', 'unfold', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'tauto', 'set', 'assert', 'intro', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'assert', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'symmetry', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'fold', 'clear', 'omega', 'fold', 'fold', 'clear', 'omega', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'symmetry', 'tauto', 'absurd', 'clear', 'omega', 'tauto', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'decompose', 'clear', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'unfold', 'unfold', 'assert', 'rewrite', 'generalize', 'tauto', 'generalize', 'intro', 'clear', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'tauto', 'fold', 'clear', 'omega', 'fold', 'clear', 'omega', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'unfold', 'unfold', 'simpl', 'unfold', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'tauto', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'unfold', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'fold', 'rewrite', 'rewrite', 'fold', 'clear', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'clear', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intro', 'clear', 'intro', 'elim', 'clear', 'elim', 'intro', 'simpl', 'rewrite', 'apply', 'tauto', 'simpl', 'tauto', 'intro', 'elim', 'clear', 'intros', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'fold', 'fold', 'assert', 'unfold', 'unfold', 'intros', 'assert', 'intro', 'assert', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'simpl', 'rewrite', 'unfold', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'generalize', 'unfold', 'tauto', 'assert', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'apply', 'tauto', 'rewrite', 'tauto', 'assert', 'unfold', 'apply', 'tauto', 'unfold', 'tauto', 'rewrite', 'assert', 'intro', 'rewrite', 'simpl', 'unfold', 'rewrite', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'split', 'split', 'split', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'split', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'simpl', 'tauto', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'assert', 'rewrite', 'simpl', 'rewrite', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'symmetry', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'assert', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'unfold', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'assert', 'generalize', 'assert', 'unfold', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'tauto', 'tauto', 'intro', 'clear', 'elim', 'clear', 'intro', 'decompose', 'clear', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'intro', 'unfold', 'assert', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'unfold', 'simpl', 'unfold', 'unfold', 'tauto', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'assert', 'intro', 'rewrite', 'rewrite', 'tauto', 'assert', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'fold', 'clear', 'omega', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'unfold', 'generalize', 'tauto', 'fold', 'assert', 'apply', 'tauto', 'tauto', 'fold', 'clear', 'omega', 'fold', 'clear', 'omega', 'rewrite', 'tauto', 'absurd', 'clear', 'omega', 'tauto', 'clear', 'intro', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'absurd', 'tauto', 'apply', 'tauto', 'rewrite', 'apply', 'tauto', 'tauto', 'tauto']",4,5,3,6,8,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IIC,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'elim', 'tauto', 'tauto', 'assert', 'fold', 'tauto', 'generalize', 'clear', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'set', 'intros', 'rewrite', 'rewrite', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'simpl', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'generalize', 'unfold', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'set', 'fold', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'clear', 'elim', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intro', 'clear', 'intro', 'elim', 'intro', 'rewrite', 'apply', 'tauto', 'simpl', 'tauto', 'intro', 'elim', 'intro', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'assert', 'intro', 'rewrite', 'simpl', 'unfold', 'rewrite', 'unfold', 'rewrite', 'symmetry', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'assert', 'simpl', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'assert', 'fold', 'clear', 'omega', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'clear', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'tauto', 'tauto', 'clear', 'omega', 'assert', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'fold', 'assert', 'apply', 'tauto', 'unfold', 'generalize', 'tauto', 'rewrite', 'clear', 'omega', 'rewrite', 'clear', 'omega', 'rewrite', 'tauto', 'absurd', 'clear', 'omega', 'tauto', 'tauto', 'tauto', 'intro', 'elim', 'intro', 'decompose', 'clear', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'decompose', 'clear', 'set', 'fold', 'assert', 'intro', 'assert', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'simpl', 'symmetry', 'tauto', 'assert', 'rewrite', 'unfold', 'rewrite', 'simpl', 'rewrite', 'assert', 'tauto', 'rewrite', 'rewrite', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'assert', 'intro', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'assert', 'simpl', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'tauto', 'assert', 'intro', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'assert', 'unfold', 'rewrite', 'apply', 'tauto', 'tauto', 'assert', 'unfold', 'unfold', 'intros', 'clear', 'split', 'split', 'rewrite', 'split', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'tauto', 'split', 'rewrite', 'rewrite', 'assert', 'clear', 'omega', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'clear', 'omega', 'assert', 'rewrite', 'unfold', 'assert', 'generalize', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'tauto', 'tauto', 'tauto', 'tauto', 'clear', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'assert', 'tauto', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'tauto', 'tauto', 'intros', 'fold', 'rewrite', 'rewrite', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'simpl', 'unfold', 'tauto', 'assert', 'simpl', 'unfold', 'simpl', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'clear', 'elim', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intro', 'clear', 'intro', 'assert', 'unfold', 'unfold', 'unfold', 'tauto', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'intro', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'intro', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'elim', 'clear', 'intro', 'generalize', 'rewrite', 'rewrite', 'tauto', 'intro', 'elim', 'intro', 'clear', 'assert', 'unfold', 'generalize', 'tauto', 'generalize', 'rewrite', 'rewrite', 'assert', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'fold', 'unfold', 'unfold', 'tauto', 'rewrite', 'rewrite', 'tauto', 'intro', 'clear', 'decompose', 'clear', 'assert', 'intro', 'elim', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,5,2,6,8,5
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_II,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IIIA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'elim', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'clear', 'intro', 'elim', 'clear', 'intro', 'assert', 'generalize', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'intro', 'clear', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'tauto', 'tauto']",2,4,2,3,6,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IIIB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'elim', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'simpl', 'elim', 'intro', 'assert', 'unfold', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'tauto', 'intro', 'assert', 'unfold', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'absurd', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",2,5,2,3,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IIIC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intros', 'clear', 'assert', 'tauto', 'clear', 'elim', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'clear', 'intro', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'fold', 'elim', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'elim', 'clear', 'intro', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'tauto', 'tauto', 'tauto', 'tauto']",3,4,2,3,7,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_III,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IVA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intros', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'clear', 'elim', 'clear', 'intro', 'generalize', 'intros', 'left', 'apply', 'apply', 'tauto', 'tauto', 'intro', 'elim', 'clear', 'intro', 'generalize', 'generalize', 'intros', 'left', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'tauto', 'tauto']",2,4,2,3,5,4
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IVB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intros', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'simpl', 'elim', 'intro', 'assert', 'unfold', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'tauto', 'tauto']",1,5,2,3,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IVC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intros', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'elim', 'clear', 'elim', 'clear', 'intro', 'generalize', 'intros', 'left', 'apply', 'apply', 'tauto', 'apply', 'apply', 'tauto', 'tauto', 'clear', 'intro', 'elim', 'clear', 'intro', 'rewrite', 'rewrite', 'right', 'right', 'split', 'apply', 'tauto', 'apply', 'tauto', 'intro', 'rewrite', 'absurd', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'tauto']",2,4,2,4,7,6
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_IV,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_VA,"['intros', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intro', 'intro', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'intro', 'symmetry', 'tauto', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'rewrite', 'rewrite', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'elim', 'right', 'left', 'split', 'apply', 'tauto', 'tauto', 'apply', 'apply', 'tauto', 'apply', 'tauto', 'tauto']",1,4,2,3,6,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_VB,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intro', 'intro', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'rewrite', 'fold', 'tauto', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'fold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'apply', 'tauto', 'rewrite', 'rewrite', 'rewrite', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'tauto', 'tauto']",1,4,2,3,6,2
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_VC,"['intros', 'rename', 'assert', 'unfold', 'apply', 'fold', 'tauto', 'set', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'assert', 'tauto', 'unfold', 'simpl', 'unfold', 'assert', 'tauto', 'assert', 'tauto', 'assert', 'simpl', 'unfold', 'tauto', 'assert', 'unfold', 'generalize', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'set', 'set', 'elim', 'tauto', 'intros', 'clear', 'assert', 'tauto', 'clear', 'generalize', 'simpl', 'fold', 'fold', 'fold', 'set', 'elim', 'intro', 'intro', 'assert', 'tauto', 'clear', 'assert', 'unfold', 'simpl', 'elim', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'elim', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'fold', 'tauto', 'tauto', 'rewrite', 'assert', 'unfold', 'rewrite', 'unfold', 'rewrite', 'tauto', 'tauto', 'tauto', 'rewrite', 'rewrite', 'assert', 'tauto', 'assert', 'unfold', 'split', 'tauto', 'unfold', 'split', 'simpl', 'unfold', 'generalize', 'tauto', 'split', 'simpl', 'rewrite', 'unfold', 'unfold', 'rewrite', 'fold', 'tauto', 'tauto', 'tauto', 'assert', 'split', 'apply', 'tauto', 'apply', 'tauto', 'tauto', 'intro', 'assert', 'unfold', 'simpl', 'elim', 'intro', 'symmetry', 'tauto', 'fold', 'elim', 'tauto', 'fold', 'tauto', 'rewrite', 'tauto', 'tauto']",1,4,1,3,7,3
/mnt/cisk/zmq/dataset/data/jordan-curve-theorem/Jordan8.json,nf_L0L1_V,"['intros', 'elim', 'intro', 'apply', 'elim', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/dblib/src/DemoExplicitSystemF.json,term_weakening,"['induction', 'intros', 'subst', 'simpl_lift_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoExplicitSystemF.json,type_weakening,"['induction', 'intros', 'subst', 'simpl_lift_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoExplicitSystemF.json,term_substitution,"['do', 'intro', 'dependent', 'intros', 'simpl_subst_goal', 'try', 'eauto', 'unfold', 'dblib_by_cases', 'lookup_insert_all', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoExplicitSystemF.json,type_substitution,"['induction', 'intros', 'subst', 'simpl_subst_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoExplicitSystemF.json,type_preservation,"['induction', 'intros', 'dependent', 'subst', 'eauto', 'j_inversion', 'eauto', 'j_inversion', 'eauto']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseVarInjective_my_value_my_value,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseVarInjective_my_value_my_term,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseFunctorial_my_value_my_value,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseFunctorial_my_term_my_term,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseIdentifiesVar_my_value,"['constructor', 'prove_traverse_identifies_var']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseRelative_my_value_my_value,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseRelative_my_value_my_term,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseVarIsIdentity_my_value_my_value,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,TraverseVarIsIdentity_my_value_my_term,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,lift_MyVAbs,"['intros', 'simpl_lift_goal', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoValueTerm.json,subst_MyVAbs,"['intros', 'simpl_subst_goal', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,one_plus_x_minus_one_left,"['intros', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,one_plus_x_minus_one_right,"['intros', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,raw_insert_zero,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,raw_insert_successor,"['intros', 'destruct', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,empty_eq_insert,"['unfold', 'intros', 'destruct', 'rewrite', 'congruence', 'rewrite', 'congruence']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_empty_None,"['destruct', 'simpl', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_empty_Some,"['destruct', 'simpl', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_successor,"['destruct', 'do', 'reflexivity', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_insert_bingo,"['induction', 'intros', 'destruct', 'destruct', 'simpl', 'try', 'omega']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_shift_insert,"['intros', 'destruct_lift_idx', 'rewrite', 'f_equal', 'omega', 'rewrite', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_empty,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_map_none,"['induction', 'intros', 'destruct', 'simpl', 'subst', 'solve']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_map_some,"['induction', 'intros', 'destruct', 'simpl', 'subst', 'try']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_insert,"['intros', 'generalize', 'clear', 'induction', 'intros', 'destruct', '[ | elimtype False', 'omega', 'reflexivity', 'destruct', 'reflexivity', 'destruct', 'replace', 'simpl', 'f_equal', 'eauto']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_insert_always,"['intros', 'destruct', 'rewrite', 'eauto', 'rewrite', 'replace', 'rewrite', 'do', 'omega']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_nil,"['destruct', 'destruct', 'simpl', 'congruence']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_eq_insert_1,"['intros', 'assert', 'eauto', 'assert', 'eauto', 'congruence']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_eq_insert_2,"['induction', 'simpl', 'intros', 'congruence', 'destruct', 'destruct', 'match', 'clear', 'intros', 'f_equal', 'try', 'eauto']",1,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_eq_insert_3,"['induction', 'intros', 'destruct', '[ omega | ].', 'rewrite', 'rewrite', 'match', 'clear', 'intros', 'destruct', '[ congruence | ].', 'subst', 'simpl', 'exists', 'exists', 'exists', 'eauto', 'destruct', 'rewrite', 'rewrite', 'match', 'clear', 'intros', 'destruct', '[ congruence | ].', 'subst', 'exists', 'exists', 'exists', 'split', 'eauto', 'split', 'eauto', 'split', 'eauto', 'dblib_by_cases', 'omega', 'do', 'assert', 'omega', 'match', 'clear', 'intros', 'generalize', 'intros', 'destruct', 'simpl', '[ elimtype False', 'eauto', 'destruct', 'simpl', '[ elimtype False', 'eauto', 'exists', 'exists', 'exists', 'split', 'simpl', 'congruence', 'split', 'simpl', 'congruence', 'split', 'eapply', 'eauto', 'dblib_by_cases', 'omega']",3,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_insert,"['induction', 'intros', 'destruct', 'simpl', 'eauto', 'rewrite', 'reflexivity', 'match', 'f_equal', 'eauto']",1,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_insert_eq,"['intros', 'subst', 'eapply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_raw_insert,"['induction', 'intros', 'destruct', 'simpl', 'eauto', 'rewrite', 'reflexivity', 'match', 'f_equal', 'eauto']",1,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_map_fuse,"['induction', 'intros', 'try', 'simpl', 'eauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_map_exchange,"['induction', 'intros', 'try', 'simpl', 'eauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_lift_map_lift,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_insert_map,"['intros', 'rewrite', 'f_equal', 'eapply', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,map_map_vanish,"['induction', 'intros', 'try', 'simpl', 'eauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,fold_empty,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,fold_insert,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,fold_invariant,"['intros', 'induction', 'simpl', 'eapply', 'eapply', 'eauto']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_monotonic,"['intros', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,lookup_beyond_length,"['induction', 'simpl', 'intros', 'eapply', 'destruct', '[ omega | ].', 'simpl', 'eapply', 'omega']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,defined_implies_below_length,"['intros', 'case', 'intro', 'try', 'assert', 'eapply', 'omega', 'congruence']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_empty,"['simpl', 'intros', 'omega']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,mymax_l,"['intros', 'mymax']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,mymax_r,"['intros', 'mymax']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_insert_general,"['induction', 'simpl', 'intros', 'subst', 'mymax', 'destruct', 'simpl', 'mymax', 'erewrite', 'simpl', 'mymax', 'erewrite', 'mymax']",1,3,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_insert,"['intros', 'erewrite', 'mymax']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_insert_reverse_1,"['intros', 'erewrite', 'mymax']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_insert_reverse_2,"['intros', 'erewrite', 'mymax']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_insert_independent,"['intros', 'erewrite', 'mymax']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_map_general,"['induction', 'simpl', 'intros', 'congruence']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_map,"['intros', 'rewrite', 'assumption']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,agree_below,"['do', 'intros', 'rewrite', 'symmetry', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,agree_empty_left,"['unfold', 'intros', 'elimtype', 'omega']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,agree_empty_right,"['unfold', 'intros', 'elimtype', 'omega']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,agree_insert,"['unfold', 'do', 'intros', 'case', '[ case (eq_nat_dec x n) | ]', 'intros', 'do', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,osub_None,"['unfold', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,osub_Some_Some,"['unfold', 'intros', 'injection', 'clear', 'intro', 'subst', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,osub_None_Some,"['unfold', 'intros', 'generalize', 'clear', 'intros', 'congruence']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,osub_Some_inversion,"['intros', 'destruct', 'eauto', 'elimtype', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,osub_reflexive,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,subsume_reflexive,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,osub_transitive,"['unfold', 'intros', 'generalize', 'intros', 'generalize', 'intros', 'eauto']",4,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,subsume_transitive,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,subsume_empty,"['unfold', 'intros', 'rewrite', 'apply']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,subsume_insert,"['unfold', 'do', 'intros', 'case', '[ case (eq_nat_dec x n) | ]', 'intros', 'repeat', 'eauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,subsume_cons,"['do', 'intros', 'intro', 'destruct', 'eauto', 'do', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,subsume_cons_cons_inversion,"['do', 'intro', 'split', 'eapply', 'intro', 'eapply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,subsume_map,"['intros', 'intros', 'generalize', 'intros', 'subst', 'generalize', 'intros', 'eauto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_concat,"['induction', 'simpl', 'intros', 'replace', 'assumption', 'eauto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,agree_concat,"['induction', 'simpl', 'intros', 'replace', 'assumption', 'eauto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_concat,"['induction', 'intros', 'subst', 'destruct', 'simpl', 'try', 'auto', 'rewrite', 'erewrite', 'eauto']",1,0,0,1,1,1
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,length_replicate,"['induction', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,insert_concat_replicate,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/Environments.json,concat_replicate_is_iterated_insert,"['intros', 'simpl', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,lift_lift_reversed,"['intros', 'replace', 'erewrite', 'replace', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,traverse_extensional,"['intros', 'eapply', 'intros', 'replace', 'eauto', 'omega']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,lift_idx_recent,['just_do_it'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,lift_idx_old,['just_do_it'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftVar_idx,"['constructor', 'just_do_it']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftZero_idx,"['constructor', 'just_do_it']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftInjective_idx,"['constructor', 'just_do_it']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftLift_idx,"['constructor', 'just_do_it']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftLiftFuse_idx,"['constructor', 'just_do_it']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,subst_idx_miss_1,['just_do_it'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,subst_idx_identity,['just_do_it'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,subst_idx_miss_2,['just_do_it'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,subst_idx_var,['just_do_it'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,expand_lift,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftVar_Traverse,"['constructor', 'unfold', 'intros', 'rewrite', 'reflexivity']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftZero_Traverse,"['constructor', 'intros', 'unfold', 'rewrite', 'reflexivity', 'intros', 'rewrite', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,expand_subst,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,SubstVar_Traverse,"['constructor', 'unfold', 'intros', 'rewrite', 'rewrite', 'reflexivity']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,SubstLift_Traverse,"['constructor', 'intros', 'unfold', 'unfold', 'rewrite', 'eapply', 'intros', 'rewrite', 'just_do_it']",2,1,1,2,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,LiftSubst_LiftSubst12,"['constructor', 'intros', 'destruct', 'do', 'eapply', 'omega', 'eapply', 'omega']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,Pun1_Traverse,"['constructor', 'intros', 'unfold', 'unfold', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'just_do_it']",1,1,0,3,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,Pun2_Traverse,"['constructor', 'intros', 'unfold', 'unfold', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'just_do_it']",1,1,0,3,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,closed_increment,"['unfold', 'intros', 'match', 'rewrite', 'congruence']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,closed_monotonic,"['do', 'assert', 'induction', 'assumption', 'replace', 'eauto', 'intros', 'replace', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,closed_lift_invariant,"['induction', 'eauto', 'change', 'erewrite', 'omega', 'rewrite', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,closed_subst_invariant,"['intros', 'assert', 'eapply', 'eauto', 'rewrite', 'eapply']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,closed_var,"['unfold', 'just_do_it']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,lift_preserves_closed,"['unfold', 'intros', 'change', 'rewrite', 'congruence']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,subst_preserves_closed,"['unfold', 'intros', 'rewrite', 'simpl', 'change', 'congruence']",2,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,fold_closed,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,rotate_characterization,"['intros', 'repeat', 'intros', 'unfold', 'just_do_it']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,Rotate1SelfInverse_Algebraic,"['constructor', 'intro', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'subst_idx', 'simpl', 'replace', 'auto', 'rewrite', 'rewrite', 'rewrite', 'reflexivity']",0,2,0,2,1,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,Rotate1SelfInverse_Traverse,"['constructor', 'intros', 'unfold', 'do', 'apply', 'intros', 'rewrite', 'rewrite', 'rewrite', 'do', 'rewrite', 'rewrite', 'f_equal', 'just_do_it']",2,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,translate_lift,['just_do_it'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,lift_one_lift_zero,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,lift_lift_fuse_successor,"['intros', 'replace', 'eapply', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DeBruijn.json,subst_lift_generalized,"['intros', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,lift_TVar,"['intros', 'simpl_lift_goal', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,lift_TApp,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,lift_TAbs,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,subst_TVar,"['intros', 'simpl_subst_goal', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,subst_TApp,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,subst_TAbs,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,red_weakening,"['induction', 'intros', 'subst', 'simpl_lift_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,inversion_closed_TVar,"['intros', 'inversion_closed', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,inversion_closed_TApp_1,"['intros', 'inversion_closed', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,inversion_closed_TApp_2,"['intros', 'inversion_closed', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,inversion_closed_TAbs,"['intros', 'inversion_closed', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,red_closed,"['induction', 'intros', 'subst', 'inversion_closed', 'try', 'eauto']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,weakening,"['induction', 'intros', 'subst', 'simpl_lift_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,substitution,"['do', 'intro', 'dependent', 'intros', 'simpl_subst_goal', 'try', 'eauto', 'unfold', 'dblib_by_cases', 'lookup_insert_all', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,j_closed,"['induction', 'intros', 'construction_closed']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,j_agree,"['induction', 'intros', 'eauto']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoLambda.json,j_empty,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseVarInjective_term,"['constructor', 'prove_traverse_var_injective']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseFunctorial_term,"['constructor', 'prove_traverse_functorial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseRelative_term,"['constructor', 'prove_traverse_relative']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseIdentifiesVar_term,"['constructor', 'prove_traverse_identifies_var']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseVarIsIdentity_term,"['constructor', 'prove_traverse_var_is_identity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseVarInjective_ty,"['constructor', 'prove_traverse_var_injective']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseFunctorial_ty,"['constructor', 'prove_traverse_functorial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseRelative_ty,"['constructor', 'prove_traverse_relative']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseIdentifiesVar_ty,"['constructor', 'prove_traverse_identifies_var']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,TraverseVarIsIdentity_ty,"['constructor', 'prove_traverse_var_is_identity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,j_index_monotonic,"['induction', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,term_weakening,"['induction', 'intros', 'subst', 'simpl_lift_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,type_weakening,"['induction', 'intros', 'subst', 'simpl_lift_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/dblib/src/DemoImplicitSystemF.json,type_substitution,"['induction', 'intros', 'subst', 'simpl_subst_goal', 'econstructor', 'eauto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,keys_last_mono,"['rewrite', 'case', 'first', 'apply', 'move', 'case', 'move', 'case', 'rewrite', 'move', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,last_key0,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,last_key_dom,"['rewrite', 'case', 'case', 'rewrite', 'elim']",0,0,0,1,0,3
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,dom_last_key,"['move', 'apply', 'move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,last_key_max,"['rewrite', 'case', 'case', 'rewrite', 'apply']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,max_key_last,"['rewrite', 'case', 'case', 'move', 'apply', 'move', 'rewrite']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,last_keyPt,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,hist_path,"['rewrite', 'case', 'case', 'case', 'rewrite', 'apply', 'rewrite']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,last_keyfUn,"['move', 'apply', 'rewrite']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,last_keyUnf,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,dom_ordfresh,['move'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,dom_freshn,"['apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,dom_fresh,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,valid_fresh,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,valid_fresh',"['move', 'rewrite', 'move', 'rewrite', 'rewrite', 'rewrite', 'case', 'move']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Freshness.json,last_fresh,"['move', 'apply', 'rewrite', 'rewrite', 'rewrite', 'case', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/EqTypeX.json,eqxP,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,no_msg_from_post,"['move', 'rewrite', 'case', 'last', 'rewrite', 'subst', 'rewrite', 'case', 'subst', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,no_msg_from_consume,"['move', 'case', 'move', 'subst', 'rewrite', 'case', 'rewrite', 'exact']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,no_msg_from_to_consume,"['move', 'rewrite', 'case', 'last', 'apply', 'move', 'case', 'move', 'subst', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,msg_spec_consume,"['move', 'move', 'rewrite', 'move', 'case', 'case', 'move', 'subst', 'rewrite', 'case', 'have', 'exists', 'subst', 'rewrite', 'case', 'suff', 'rewrite', 'apply', 'case', 'exists']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,msg_specE_consume,"['move', 'have', 'case', 'move', 'subst', 'move', 'rewrite', 'case', 'intros', 'subst', 'move', 'congruence', 'split', 'exists', 'split', 'exists', 'rewrite', 'apply', 'move', 'case', 'move', 'subst', 'rewrite', 'rewrite', 'eauto', 'move', 'case', 'move', 'subst', 'rewrite', 'rewrite', 'eauto']",0,0,0,4,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,msg_specE_consume1,"['intros', 'eapply', 'eauto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,msg_specE_consume2,"['intros', 'eapply', 'eauto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,no_msg_from_imp,"['move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,no_msg_from_toE,"['move', 'rewrite', 'case', 'last', 'rewrite', 'subst', 'rewrite', 'case', 'subst', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,no_msg_from_toE',"['move', 'rewrite', 'case', 'last', 'rewrite', 'subst', 'rewrite', 'case', 'subst', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,msg_specE,"['move', 'split', 'last', 'move', 'rewrite', 'case', 'last', 'rewrite', 'subst', 'rewrite', 'case', 'subst', 'rewrite', 'exists', 'split', 'exists', 'rewrite', 'rewrite', 'rewrite', 'case', 'move']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,msg_specE',"['move', 'split', 'last', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'move', 'subst', 'rewrite', 'case', 'subst', 'rewrite', 'case', 'case', 'case', 'exists', 'split', 'exists', 'rewrite', 'rewrite', 'case', 'move', 'subst', 'move', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'apply', 'exists', 'move', 'subst', 'rewrite', 'case', 'subst', 'rewrite']",0,0,1,2,0,3
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,msg_specE'',"['move', 'split', 'last', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'move', 'subst', 'rewrite', 'case', 'subst', 'rewrite', 'case', 'case', 'case', 'exists', 'split', 'exists', 'rewrite', 'rewrite', 'case', 'move', 'subst', 'move', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'apply', 'exists', 'move', 'subst', 'rewrite', 'case', 'subst', 'rewrite']",0,0,1,2,0,3
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,has_all_true,"['move', 'move', 'rewrite', 'subst', 'rewrite', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/StatePredicates.json,has_some_false,"['move', 'move', 'rewrite', 'subst', 'exists', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,hook_complete0,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,cohW,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,cohS,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,cohH,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,cohD,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,coh_coh,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,unit_coh,"['case', 'case', 'split', 'case', 'subst', 'rewrite', 'last', 'move', 'subst', 'move', 'have', 'move', 'rewrite', 'subst', 'suff', 'simpl', 'clear', 'apply', 'move', 'case', 'move', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,Coh0,"['move', 'split', 'rewrite', 'last', 'move', 'rewrite', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,CohUn,"['case', 'case', 'move', 'case', 'case', 'case', 'simpl', 'have', 'case', '[by rewrite G1|by rewrite G2|move=>l', 'rewrite', 'case', 'move', 'rewrite', 'have', 'move', 'rewrite', 'rewrite', 'have', 'split', 'last', 'rewrite', 'case', 'move', 'rewrite', 'case', 'rewrite', 'move', 'rewrite', 'rewrite', 'case', 'rewrite', 'rewrite', 'rewrite', 'case', '[move: (H1 l)|move: (H2 l)]', 'rewrite', 'move', 'rewrite', '[move/K1|move/K2]', 'move', 'rewrite']",0,1,0,3,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,coh_prec,"['move', 'case', 'case', 'apply', 'rewrite']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,locE,"['move', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,locE',"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,locU,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Worlds.json,prEq,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,getLocalU,"['move', 'move', 'rewrite', 'case', 'last', 'move', 'subst', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,cohVl,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,cohVs,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,cohDom,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,pred0v1,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,pred0v2,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,pred0v3,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,snd_uniq0,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Protocols.json,rcv_uniq0,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,getsE,"['move', 'rewrite', 'case', 'move', 'move', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,coh_s,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,Coh_dom,"['move', 'case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,step_coh,"['case', 'split', 'case', 'split', 'first', 'move', 'rewrite', 'case', 'move', 'subst', 'rewrite', 'move', 'case', 'rewrite', 'last', 'rewrite', 'move', 'subst', 'case', 'have', 'move', 'move', 'apply', 'rewrite', 'rewrite', 'move', 'rewrite', 'case', 'split', 'first', 'move', 'rewrite', 'case', 'move', 'subst', 'rewrite', 'move', 'case', 'rewrite', 'last', 'move', 'rewrite', 'move', 'subst', 'have', 'rewrite', 'case', 'rewrite', 'move', 'rewrite', 'move', 'rewrite']",0,0,2,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,step_preserves_labels,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,step_is_local,"['move', 'case', 'first', 'subst', 'move', 'subst', 'case', 'rewrite', 'move', 'rewrite', 'move', 'move', 'subst', 'case', 'rewrite', 'move', 'rewrite', 'move']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,stepV2,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/NetworkSem.json,step_preserves_node_ids,"['move', 'case', 'first', 'move', 'subst', 'rewrite', 'case', 'rewrite', 'move', 'subst', 'rewrite', 'case', 'move', 'subst', 'rewrite', 'rewrite', 'case', 'move', 'subst', 'rewrite', 'case', 'rewrite', 'move', 'subst', 'rewrite', 'case', 'move', 'subst', 'clear', 'rewrite', 'rewrite', 'case']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/NewStatePredicates.json,no_msg_from_to_consume',"['move', 'rewrite', 'case', 'last', 'apply', 'move', 'case', 'move', 'subst', 'rewrite', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/NewStatePredicates.json,no_msg_spec_consume,"['move', 'move', 'rewrite', 'move', 'case', 'case', 'move', 'subst', 'rewrite', 'have', 'exists', 'subst', 'rewrite', 'case', 'move', 'subst', 'suff', 'rewrite', 'apply', 'exists']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/NewStatePredicates.json,msg_spec_consumeE,"['move', 'case', 'have', 'case', 'move', 'subst', 'move', 'rewrite', 'subst', 'move', 'first', 'move', 'case', 'first', 'subst', 'rewrite', 'rewrite', 'split', 'exists', 'split', 'first', 'rewrite', 'apply', 'move', 'case', 'move', 'subst', 'rewrite', 'apply', 'exists', 'rewrite', 'move', 'case', 'first', 'subst', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,pstep_safe,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,proc_progress,"['move', 'elim', 'case', 'move', 'exists', 'split', 'exists', 'case', 'move', 'case', 'exists', 'case', 'case', 'exists', 'split', 'exists', 'case', 'case', 'case', 'case', 'exists', 'split', 'first', 'subst', 'exists', 'case', 'case', 'exists', 'split', 'exists', 'case', 'have', 'apply', 'case', 'exists', 'split', 'exists', 'split', 'case', 'case', 'case', 'exists', 'split', 'exists']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,stepUnfin,"['split', 'case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,stepRet,"['split', 'case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,stepAct,"['split', 'first', 'case', 'exists', 'case', 'split', 'last', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,stepSeq,"['split', 'last', 'case', 'first', 'case', 'do', 'exists', 'case', 'case', 'case', 'left', 'exists', 'move', 'right', 'exists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,stepWithInv,"['split', 'last', 'case', 'case', 'split', 'exists', 'case', 'split', 'exists', 'case', 'case', 'last', 'case', 'subst', 'left', 'exists', 'move', 'right', 'exists', 'split', 'split', 'subst', 'apply']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Process.json,pstep_inv,"['move', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,dmDom_unit,"['apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,dmDom_join,"['case', 'case', 'last', 'move', 'apply', 'move', 'rewrite', 'move', 'apply', 'rewrite', 'rewrite', 'case', 'rewrite', 'apply', 'rewrite', 'case', 'apply']",0,0,2,4,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,joinC,"['case', 'rewrite', 'move', 'rewrite', 'move']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,joinCA,"['case', 'rewrite', 'move', 'rewrite', 'move']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,joinA,"['case', 'rewrite', 'move', 'rewrite', 'move']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,unitL,"['rewrite', 'case', 'move', 'rewrite', 'move']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,validU,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/DepMaps.json,dep_unit,"['case', 'rewrite', 'move', 'subst', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,cohIVd,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,cohIVs,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,cohIDom,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,st_helper,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,cohSt,"['move', 'split', 'apply', 'rewrite', 'split', 'apply', 'apply', 'move', 'rewrite', 'move', 'rewrite', 'move', 'case', 'last', 'rewrite', 'case', 'last', 'rewrite', 'case', 'rewrite', 'rewrite', 'move', 'subst', 'rewrite']",0,0,2,3,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,s_safe_cohI,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,s_safe_inI,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,s_safe_defI,"['move', 'split', 'move', 'case', 'exists', 'exists', 'rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,r_step_cohI,"['have', 'move', 'rewrite', 'set', 'dsoup', 'split', 'first', 'apply', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,us,"['case', 'rewrite', 'suff', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,ur,"['case', 'rewrite', 'suff', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,stIn,"['move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,rtIn,"['move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,getInvSendTrans,"['simpl', 'case', 'rewrite', 'case', 'case', 'case', 'rewrite', 'exists', 'split', 'rewrite', 'apply', 'rewrite', 'move', 'apply', 'move', 'move', 'rewrite', 'exists']",0,0,2,3,0,3
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,s_inv_conjC,"['split', 'move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,s_inv_conjA,"['split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,r_inv_conjC,"['split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,r_inv_conjA,"['split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,with_inv_coh,"['case', 'split', 'apply', 'rewrite', 'split', 'rewrite', 'move', 'rewrite', 'move', 'move', 'rewrite', 'move', 'move', 'case', 'first', 'subst', 'rewrite', 'case', 'rewrite', 'suff', 'case', 'case', 'rewrite', 'suff', 'apply', 'apply', 'subst', 'rewrite']",0,0,2,2,0,3
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,with_inv_nodes,"['rewrite', 'case', 'first', 'subst', 'rewrite', 'rewrite', 'suff', 'case', 'case', 'rewrite', 'suff', 'apply', 'apply', 'subst', 'rewrite']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,with_inv_labE,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InductiveInv.json,with_inv_rely',"['case', 'elim', 'first', 'exists', 'case', 'move', 'case', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,cohK,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,cohE,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,sem_extend,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,sem_split,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,projectS_cohL,"['case', 'split', 'first', 'rewrite', 'move', 'case', 'rewrite', 'case', 'rewrite', 'move', 'move', 'case', 'last', 'rewrite', 'move', 'case', 'suff', 'rewrite', 'have', 'rewrite', 'have', 'rewrite', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,projectS_cohR,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,projectSE,"['case', 'rewrite', 'have', 'move', 'case', 'move', 'rewrite', 'rewrite', 'case', 'apply', 'rewrite', 'case', 'rewrite', 'move', 'rewrite', 'rewrite', 'have', 'case', 'rewrite', 'clear', 'suff', 'rewrite', 'move', 'rewrite']",0,0,1,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,coh_split,"['move', 'move', 'exists', 'split', '[by apply: projectS_cohL C G1| by apply: projectS_cohR C G2].']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,injExtL',"['move', 'case', 'rewrite', 'case', 'rewrite', 'case', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,injExtR',"['move', 'case', 'rewrite', 'case', 'rewrite', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,injExtL,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,injExtR,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,cohUnKR,"['move', 'move', 'suff', 'rewrite', 'apply', 'suff', 'move', 'move', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'suff', 'rewrite', 'move', 'move', 'rewrite']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,cohUnKL,"['move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,getPUn,"['move', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,getSUn,"['move', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,hook_completeL,"['case', 'move', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,get_protocol_hooks,"['move', 'rewrite', 'rewrite', 'rewrite', 'case']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,coh_hooks,"['case', 'split', 'first', 'apply', 'move', 'rewrite', 'move', 'move', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,inj_hooks_complete,"['move', 'move', 'rewrite', 'move', 'case', 'last', 'rewrite', 'case', 'case', 'first', 'case', 'rewrite']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,hooks_frame,"['move', 'move', 'case', 'move', 'rewrite', 'case', 'last', 'move', 'apply', 'move', 'move', 'rewrite', 'rewrite', 'case', 'case', 'rewrite', 'case', 'rewrite', 'move', 'apply', 'have', 'rewrite', 'have', 'have', 'rewrite', 'move', 'move', 'subst', 'apply', 'apply']",0,0,2,3,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,injectL,"['move', 'exists', '[split | |].', 'move', 'exists', 'split', '[by apply projectSE|by apply: (projectS_cohL C)| by apply: (projectS_cohR C)].', 'case', 'subst', 'have', 'case', 'rewrite', 'move', 'rewrite', 'case', 'case', 'move', 'split', 'apply', 'move', 'rewrite', 'rewrite', 'move', 'rewrite', 'rewrite', 'last', 'rewrite', 'case', 'apply', 'move', 'apply', 'move', 'apply']",0,0,1,3,0,4
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,injectR,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,locProjL,"['move', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Injection.json,locProjR,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,step_other,"['move', 'move', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,safe_local,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,skip_safe_coh,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,skip_step_sem,"['move', 'apply', 'case']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,tryrecv_act_safe_coh,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,tryrecv_act_step_total,"['move', 'rewrite', 'case', 'last', 'move', 'exists', 'left', 'split', 'apply', 'rewrite', 'clear', 'apply', 'exists', 'case', 'exists', 'exists', 'right', 'exists']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,tryrecv_act_step_safe,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,tryrecv_act_step_sem,"['case', 'rewrite', 'case', 'first', 'apply', 'case', 'have', 'rewrite', 'apply']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,send_act_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,safe_safe,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Actions.json,send_act_step_total,"['rewrite', 'case', 'move', 'set', 'exists', 'split', 'exists', 'split', 'move', 'rewrite']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,vrf_coh,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,vrf_pre,"['move', 'case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,vrf_post,"['move', 'move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,bind_rule,"['move', 'apply', 'move', 'apply', 'move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,step,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,vrf_mono,"['move', 'move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,ghE,"['split', 'move', 'have', 'move', 'apply', 'apply', 'move', 'have', 'move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,ghC,"['move', 'have', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,gh_ex,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,act_rule,"['move', 'case', 'subst', 'first', 'apply', 'case', 'exists', 'split', 'have', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,ret_rule,"['move', 'case', 'subst', 'first', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,inject_rule,"['move', 'first', 'move', 'move', 'apply', 'rewrite', 'apply']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/InferenceRules.json,with_inv_rule',"['move', 'first', 'move', 'apply', 'apply', 'case', 'rewrite', 'case']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_coh',"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_coh,"['move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_safe',['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_safe,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_refl',"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_refl,['move'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_envs',"['case', 'move', 'split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_envs,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_step,"['move', 'move', 'case', 'move', 'move', 'move', 'case', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alwp_envsq,"['elim', 'split', 'move', 'apply', 'split', 'first', 'move', 'case', 'move', 'apply', 'case', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_envsq,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_unfin',"['case', 'split', 'split', 'first', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_unfin,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_ret',"['case', 'split', 'split', 'last', 'move', 'case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_ret,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_imp',"['elim', 'case', 'split', 'apply', 'case', 'case', 'split', 'first', 'case', 'move', 'move', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_imp,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alwA',"['move', 'split', 'elim', 'split', 'move', 'case', 'split', 'move', 'elim', 'split', 'move', 'case', 'apply', 'case', 'split', 'move', 'case', 'case', 'move', 'apply', 'first', 'move', 'case', 'case', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alwA,"['move', 'split', 'move', 'move', 'apply', 'move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alwI',"['move', 'split', 'elim', 'split', 'move', 'apply', 'move', 'move', 'case', 'split', 'apply', '[apply: alw_step T | apply: H3].', 'elim', 'move', 'split', 'first', 'apply', 'move', 'split', 'first', 'case', 'case', 'move', 'move', 'apply', 'case', 'case', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alwI,"['move', 'split', 'first', 'apply', 'move', 'apply', 'move', 'move']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alwsafe_bnd,"['move', 'suff', 'apply', 'apply', 'apply', 'move', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,aft_bnd,"['move', 'apply', 'apply', 'move']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,aftI,"['move', 'rewrite', 'split', 'apply', 'move', 'move', 'apply', 'move', 'move']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,aft_alwsf,"['split', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,aft_imp,"['move', 'apply', 'move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,aftA,"['move', 'rewrite', 'split', 'apply', 'move', 'move', 'move', 'move']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,rely_ext,"['move', 'case', 'rewrite', 'case', 'exists']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,rely_split',"['move', 'case', 'case', ""[subst s2'|subst s2]"", 'split', 'apply', 'split', 'case', 'case', 'move', 'subst', 'rewrite']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,rely_split,"['move', 'elim', 'last', 'move', 'case', 'move', 'subst', 'case', 'case', 'split', 'case', 'exists', 'case', 'exists', 'move', 'move', 'subst', 'rewrite', 'split', 'exists', 'split', 'rewrite', 'move', 'move', 'subst', 'rewrite']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,alw_inject,"['move', 'elim', 'split', 'move', 'case', 'case', 'exists', 'split', 'left', 'exists', 'move', 'split', 'case', 'last', 'exists', 'move', 'move', 'exists', 'split', 'exists', 'exists', 'split', 'left', 'exists', 'move', 'move', 'rewrite', 'case', 'case', 'apply', 'case', 'case', 'exists', 'split', 'first', 'right', 'exists', 'move', 'case', 'have', 'case', 'move', 'move', 'rewrite', 'have', 'move', 'rewrite', 'move', 'subst', 'move', 'subst', 'clear', 'apply', 'exists', 'split', 'case', 'move', 'apply', 'move', 'exists', 'split', 'apply']",0,0,1,1,0,4
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,aft_inject,"['move', 'apply', 'case', 'move', 'exists', 'split', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Always.json,aft_ind_inv,"['move', 'apply', 'case', 'split', 'subst', 'case', 'first', 'case', 'case']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,post_valid,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,post_fresh,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,find_consume,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,find_mark,"['move', 'rewrite', 'case', 'move', 'rewrite', 'case', 'eexists', 'case', 'move', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,mark_other,"['move', 'rewrite', 'case', 'case', 'rewrite', 'case']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,consume_valid,"['move', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,consumeUn,"['rewrite', 'rewrite', 'move', 'case', 'rewrite', 'move', 'subst', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,valid_mt_soup,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,valid_mt_state,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/State.json,mt_nodes,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_refl,"['move', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_trans,"['case', 'elim', 'move', 'case', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_coh',['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_loc,"['case', 'elim', 'first', 'rewrite', 'clear', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,step_consume_other,"['move', 'case', 'move', 'rewrite', 'case', 'move', 'subst', 'rewrite', 'case', 'first', 'rewrite', 'move', 'rewrite', 'rewrite', 'last', 'rewrite', 'apply', 'case', 'move', 'move', 'rewrite', 'move', 'move', 'rewrite', 'case', 'first', 'rewrite', 'case', 'do', 'subst', 'rewrite', 'case', 'subst', 'move', 'rewrite', 'rewrite', 'case', 'rewrite', 'move']",0,0,0,4,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_consume_other,"['case', 'elim', 'rewrite', 'clear', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,step_send_other,"['move', 'case', 'do', 'move', 'rewrite', 'case', 'do', 'move', 'subst', 'rewrite', 'case', 'first', 'rewrite', 'rewrite', 'last', 'rewrite', 'apply', 'case', 'first', 'subst', 'move', 'move', 'exists', 'split', 'move', 'move', 'rewrite', 'case', 'do', 'subst', 'case', 'do', 'rewrite', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'clear', 'case', 'case', 'subst', 'case', 'subst', 'exists', 'split', 'rewrite', 'case', 'last', 'rewrite', 'exists']",0,0,0,3,0,3
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_send_other,"['case', 'elim', 'first', 'case', 'case', 'exists', 'split', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,step_send_other',"['move', 'case', 'do', 'move', 'rewrite', 'case', 'do', 'move', 'subst', 'rewrite', 'case', 'first', 'rewrite', 'rewrite', 'last', 'rewrite', 'apply', 'case', 'last', 'exists', 'move', 'subst', 'move', 'move', 'rewrite', 'move', 'move', 'rewrite', 'case', 'do', 'subst', 'case', 'do', 'rewrite', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'clear', 'case', 'case', 'subst', 'case', 'subst', 'exists', 'rewrite', 'case', 'last', 'rewrite', 'exists']",0,0,0,3,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_send_other',"['case', 'elim', 'first', 'subst', 'exists', 'move', 'case', 'case', 'exists', 'split', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/disel/Core/Rely.json,rely_loc',"['move', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,progE,"['split', 'case', 'move', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,stsepE,"['split', 'case', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,prog_unfin,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,leq_refl,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,leq_trans,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,leq_asym,"['move', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,bot_spec,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,bot_bot,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,sup_spec,"['move', 'first', 'case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,sup_supB,"['move', 'right', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,sup_supL,"['case', 'case', 'move', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,ret_has_spec,"['move', 'first', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,act_has_spec,"['move', 'first', 'apply', 'move', 'move', 'exists', 'split', 'exists', 'split', 'exists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,bind_has_spec,"['move', 'first', 'apply', 'case', 'apply', 'move', 'case', 'apply', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,inject_has_spec,"['move', 'case', 'first', 'apply', 'have', 'apply', 'move', 'apply', 'case', 'suff', 'rewrite', 'exists', 'move', 'move']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,conseq_refl,"['case', 'case', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/HoareTriples.json,do_has_spec,"['rewrite', 'case', 'case', 'move', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,poset_refl,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,poset_asym,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,poset_trans,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,relaxP,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_refl,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_trans,"['move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_refl,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_asym,"['move', 'congr', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_trans,"['move', 'split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_refl,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_asym,"['move', 'apply', 'apply', '[apply: H1 | apply: H2].']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_trans,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_refl,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_asym,"['move', 'apply', 'apply', '[apply: H1 | apply: H2].']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_trans,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,ideal_refl,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,ideal_asym,"['move', 'rewrite', 'move', 'rewrite', 'congr', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,ideal_trans,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_refl,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_asym,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_trans,"['move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,supP,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,supM,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,infP,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,infM,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sup_mono,"['move', 'apply', 'move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,supE,"['move', 'apply', 'apply', 'move', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,tarski_lfp_fixed,"['move', 'suff', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,tarski_lfp_least,"['move', 'apply', 'rewrite']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,tarski_gfp_fixed,"['move', 'suff', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,tarski_gfp_greatest,"['move', 'apply', 'rewrite']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sup_clos_sub,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sup_clos_min,"['move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sup_closP,"['move', 'move', 'apply', 'move', 'move']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sup_clos_idemp,"['move', 'split', '[apply: sup_clos_min | apply: sup_clos_sub].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_supX,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_supP,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_supM,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_supP,"['move', 'split', 'apply', 'exists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_supM,"['move', 'split', 'apply', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_supP,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_supM,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_supP,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_supM,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sup_appE,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sup_dappE,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,ideal_supP',['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,ideal_supP,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,ideal_supM,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_supP,['exists'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_supM,"['move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,const_mono,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,comp_mono,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj1_mono,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj2_mono,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,diag_mono,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,app_mono,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dapp_mono,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prod_mono,"['move', 'split', '[apply: M1 | apply: M2].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chainE,"['split', 'move', 'move', 'suff', 'congr', 'apply', 'apply', 'apply', 'split', 'move']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,image_chainP,"['case', 'split', 'first', 'exists', 'case', 'rewrite', 'case', '[left | right]', 'apply']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,id_chainE,"['apply', 'split', '[case=>y [<-]|exists x].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,const_chainP,"['split', '[exists y | move=>x1 x2 ->->', 'left']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,const_chainE,"['apply', 'split', 'first', 'case', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,comp_chainE,"['apply', 'split', 'first', 'exists', 'case', 'exists', 'split', 'exists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj1_diagE,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj2_diagE,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj1_prodE,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj2_prodE,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,botP,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,limP,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,limM,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lift_chainP,"['case', 'split', 'first', 'right', 'case', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_botP,"['split', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_limP,"['split', 'apply', 'exists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pair_limM,"['split', 'apply', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_botP,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_limP,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,fun_limM,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_botP,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_limP,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dfun_limM,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_botP,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_limP,['exists'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prop_limM,"['move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lat_botP,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lat_limP,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lat_limM,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chain_clos_sub,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chain_clos_min,"['move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chain_closP,"['split', 'first', 'move', 'move', 'case', 'apply', 'move', 'move']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chain_clos_idemp,"['move', 'split', 'last', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chain_clos_mono,"['move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chain_closI,"['move', 'split', 'split', '[apply: S1 | apply: S2]=>// x', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,chain_clos_diag,"['move', 'split', 'rewrite', 'apply', 'case', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_botP,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sval_mono,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_limX,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_limP,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,sub_limM,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lim_mono,"['move', 'apply', 'move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,limE,"['move', 'apply', 'apply', 'rewrite']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lim_liftE,"['apply', 'apply', 'first', 'right', 'case', '[move=>-> | apply: limP].']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lim_appE,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,lim_dappE,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,cont_mono,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,nat_refl,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,nat_asym,"['move', 'apply', 'rewrite']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,nat_trans,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,nat_chain_axiom,"['split', 'first', 'rewrite', 'case', '[left | rewrite orbT', 'right']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,pow_mono,"['move', 'elim', 'first', 'rewrite', 'case', 'first', 'move', 'apply', 'elim', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,reindex,"['move', 'split', 'case', 'case', 'first', 'right', 'exists', 'split', 'exists', 'case', 'first', 'exists', 'case', 'exists']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,kleene_lfp_fixed,"['rewrite', 'apply', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,kleene_lfp_least,"['move', 'apply', 'elim', 'rewrite', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,id_cont,"['exists', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,comp_cont,"['case', 'exists', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj1_cont,['exists'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,proj2_cont,['exists'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,diag_cont,"['exists', 'apply', 'split', '[rewrite proj1_diagE | rewrite proj2_diagE].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,app_cont,['exists'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,dapp_cont,['exists'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Core/Domain.json,prod_cont,"['case', 'exists', 'apply', 'by', '[rewrite proj1_prodE H1 | rewrite proj2_prodE H2]).']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/SeqLib.json,remove_elem_all,"['elim', 'case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,l1,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,l2,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,l3,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,send_soupCoh,"['move', 'split', 'first', 'rewrite', 'last', 'case', 'first', 'move', 'subst', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,trans_updDom,"['move', 'rewrite', 'case', 'rewrite', 'apply']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,consume_coh,"['move', 'split', 'first', 'rewrite', 'case', ""[move/eqP: X=><-{m'}|]."", 'case', 'case', 'case', 'rewrite', 'rewrite', 'case', 'case', 'move']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,this_not_pts,"['move', 'apply', 'subst', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,this_not_pts',"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,locCn,"['case', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cohStC,"['have', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'case']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cohStP,"['have', 'move', 'rewrite', 'case', 'last', 'move', 'rewrite', 'rewrite', 'rewrite', 'case', 'move', 'subst', 'move', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,getStC_K,"['move', 'rewrite', 'have', 'have', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,getStP_K,"['move', 'rewrite', 'have', 'rewrite', 'move', 'case', 'last', 'move', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cohStL,"['move', 'case', 'move', 'rewrite', 'rewrite', 'rewrite', 'case', 'rewrite', 'case', 'first', 'rewrite', 'case', 'move', 'rewrite', 'rewrite', 'rewrite', 'case', 'move', 'move', 'rewrite']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,getStL_Kc,"['move', 'rewrite', 'have', 'rewrite', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,getStL_Kp,"['move', 'rewrite', 'have', 'rewrite', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cn_in,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,pts_in,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cn_pts_in,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,getStCE,"['case', 'rewrite', 'rewrite', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,getStPE,"['move', 'case', 'rewrite', 'case', 'first', 'subst', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'rewrite']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,getStLE,"['move', 'case', 'move', 'rewrite', 'case', 'move', 'subst', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'move', 'rewrite', 'rewrite', 'rewrite', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cn_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cn_this_in,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cn_to_in,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cn_safe_in,"['case', 'move', 'case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,cn_safe_def,"['split', 'last', 'set', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,rc_step_coh,"['move', 'rewrite', 'case', 'last', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'case', 'rewrite', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'subst', 'rewrite', 'split', 'rewrite', 'last']",0,0,1,4,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,pn_this_in,"['case', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,pn_safe_coh,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,pn_to_in,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,pn_safe_in,"['case', 'case', 'move', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,pn_safe_def,"['split', 'last', 'set', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/TwoPhaseProtocol.json,rp_step_coh,"['move', 'rewrite', 'case', 'last', 'split', 'first', 'apply', 'rewrite', 'apply', 'have', 'move', 'move', 'rewrite', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'rewrite', 'subst', 'split', 'first', 'move', 'rewrite', 'eexists']",0,0,1,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/SimpleTPCApp.json,Hnin,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/SimpleTPCApp.json,PtsNonEmpty,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/SimpleTPCApp.json,Puniq,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/SimpleTPCApp.json,valid_init_dstate,"['case', 'do', 'do', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'move', 'rewrite', 'last', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/SimpleTPCApp.json,getCnLoc,"['rewrite', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/SimpleTPCApp.json,getPLoc,"['rewrite', '[|move=>/orP[]]=>/eqP->{p}', 'move', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/TwoPhaseCommit/SimpleTPCApp.json,init_coh,"['split', 'apply', 'split', 'last', 'rewrite', 'rewrite', 'apply', 'move', 'rewrite', 'move', 'case', 'last', 'have', 'rewrite', 'move', 'rewrite', 'case', 'last', 'move', 'case', 'move', 'subst', 'rewrite', 'split', 'do', 'first', 'rewrite', 'move', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'case', 'case', 'case', 'case', 'move', 'rewrite', 'move', 'subst', 'rewrite', 'split', 'exists', 'move', 'have', '[|case/orP]=>/eqP->.', 'rewrite', 'split', 'case', 'first', 'subst', 'move', 'rewrite', 'exists']",0,0,0,3,0,3
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorInvariant.json,nodes_falso,"['move', 'move', 'rewrite', 'apply', 'apply', 'exists']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,lab_dis,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,prec_valid,"['move', 'case', 'case', 'eexists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,Huniq1,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,Huniq2,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,Hs1,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,Hc2,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,Hc1,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,Hs2,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,valid_init_dstate1,"['case', 'do', 'do', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,valid_init_dstate2,"['case', 'do', 'do', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,validI,"['case', 'do', 'do', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,coh1',"['split', 'last', 'rewrite', 'split', 'rewrite', 'split', 'first', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'move', 'rewrite', 'case', 'move', 'exists', 'rewrite', 'rewrite', 'rewrite', 'exists', 'rewrite', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,coh1,"['split', 'apply', 'split', 'last', 'rewrite', 'rewrite', 'apply', 'move', 'rewrite', 'move', 'case', 'last', 'have', 'rewrite', 'move', 'rewrite', 'move', 'subst', 'rewrite', 'exact']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,coh2',"['split', 'last', 'rewrite', 'split', 'rewrite', 'split', 'first', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'move', 'rewrite', 'case', 'move', 'exists', 'rewrite', 'rewrite', 'rewrite', 'exists', 'rewrite', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,coh2,"['split', 'apply', 'split', 'last', 'rewrite', 'rewrite', 'apply', 'move', 'rewrite', 'move', 'case', 'last', 'have', 'rewrite', 'move', 'rewrite', 'move', 'subst', 'rewrite', 'exact']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorApp.json,init_coh,"['split', 'first', 'apply', 'rewrite', 'move', 'rewrite', 'rewrite', 'rewrite', 'case', 'rewrite', 'move', 'case', 'last', 'have', 'rewrite', 'rewrite', 'case', 'rewrite', 'case', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'case', 'case', 'subst', 'rewrite', 'rewrite', ""[by case: coh1'|by case coh2'].""]",0,0,1,3,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,l1,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,l2,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,l3,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,consume_coh,"['move', 'split', 'first', 'rewrite', 'case', ""[move/eqP: X=><-{m'}|]."", 'case', 'case', 'case', 'rewrite', 'rewrite', 'case', 'case', 'move']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,trans_updDom,"['move', 'rewrite', 'case', 'rewrite', 'apply']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,cs_in_nodes,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,cohSt,"['case', 'case', 'move', 'case', 'rewrite', 'case', 'rewrite', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,getStK,"['move', 'rewrite', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,sr_step_coh,"['move', 'rewrite', 'case', 'last', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'case', 'rewrite', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'subst', 'rewrite', 'have', 'case', 'exists', 'split', 'rewrite', 'rewrite', 'rewrite', 'rewrite']",0,0,1,4,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,ss_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,ss_safe_in,"['rewrite', 'case', 'split', 'rewrite']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,ss_safe_this,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,ss_safe_def,"['split', 'last', 'set', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,cs_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,cs_safe_in,"['rewrite', 'case', 'split', 'rewrite']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,cs_step_coh,"['move', 'have', 'split', 'split', 'first', 'rewrite', 'last', 'case', 'first', 'move', 'move', 'subst', 'split', 'rewrite', 'rewrite', 'case', 'exists', 'move', 'move', 'rewrite', 'case', 'rewrite', 'rewrite', 'apply', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'subst', 'rewrite', 'exists', 'split', 'have', 'case', 'rewrite', 'case']",0,0,0,4,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/CalculatorProtocol.json,cs_safe_def,"['split', 'last', 'set', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/DelegatingCalculatorServer.json,hcomp,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorServers.json,state0_wf,['done'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorServers.json,lookup_valid',"['elim', 'case', 'move', 'subst', 'case', 'subst', 'move', 'rewrite', 'suff', 'move', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Calculator/SimpleCalculatorServers.json,lookup_valid,"['move', 'case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,client_not_server,"['move', 'case', 'move', 'subst', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,client_nodes,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,soup_coh_post_msg,"['move', 'split', 'first', 'rewrite', 'last', 'case', 'first', 'move', 'subst', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,l1,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,l2,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,l3,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,consume_coh,"['move', 'split', 'first', 'rewrite', 'case', ""[move/eqP: X=><-{m'}|]."", 'case', 'case', 'case', 'rewrite', 'rewrite', 'case', 'case', 'move']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,coh_dom_upd,"['move', 'rewrite', 'case', 'rewrite', 'apply']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,getLocal_coh,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,getLocal_server_st_tp,"['have', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'case']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,getLocal_client_st_tp,"['have', 'move', 'rewrite', 'rewrite', 'move', 'rewrite', 'rewrite', 'case']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,getSt_server_K,"['move', 'rewrite', 'have', 'have', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,getSt_client_K,"['move', 'rewrite', 'have', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,server_send_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,server_send_this_in,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,server_send_to_in,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,server_send_safe_in,"['case', 'move', 'case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,server_step_def,"['split', 'last', 'set', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,rs_step_coh,"['move', 'rewrite', 'case', 'last', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'case', 'rewrite', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'subst', 'rewrite', 'split', 'first', 'eexists']",0,0,1,4,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,client_send_this_in,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,client_send_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,client_send_to_in,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,client_send_safe_in,"['case', 'split', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,client_step_def,"['split', 'last', 'set', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/LockProtocol.json,rc_step_coh,"['move', 'rewrite', 'case', 'last', 'split', 'first', 'apply', 'rewrite', 'apply', 'have', 'move', 'move', 'rewrite', 'split', 'first', 'apply', 'rewrite', 'apply', 'move', 'rewrite', 'rewrite', 'case', 'last', 'move', 'rewrite', 'subst', 'split', 'first', 'move', 'rewrite', 'split', 'eexists']",0,0,1,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,request_eqP,"['case', 'do', 'apply', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,soup_coh_post_msg,"['move', 'split', 'first', 'rewrite', 'last', 'case', 'first', 'move', 'subst']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,l1,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,l2,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,l3,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,consume_coh,"['move', 'split', 'first', 'rewrite', 'case', ""[move/eqP: X=><-{m'}|]."", 'case', 'case', 'case', 'rewrite', 'rewrite', 'case', 'case', 'move']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,coh_dom_upd,"['move', 'rewrite', 'case', 'rewrite', 'apply']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,getLocal_coh,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,getLocal_server_st_tp,"['have', 'move', 'rewrite', 'move', 'rewrite', 'rewrite', 'case']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/LockResource/ResourceProtocol.json,getSt_server_K,"['move', 'rewrite', 'have', 'have', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,l1,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,l2,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,l3,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,lcoh,"['move', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,cohN,"['move', 'case', 'rewrite', 'case']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,getNK,"['move', 'rewrite', 'move', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,this_in_pf,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,greet_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,greet_safe_in,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,greet_safe_def,"['split', 'exists', 'rewrite', 'case', 'move', 'rewrite', 'case', 'move', 'subst', 'case', 'rewrite', 'case', 'split']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,grEq,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,validV,"['rewrite', 'apply', 'split', 'first', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,hook_complete_unit,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,hooks_consistent_unit,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Greeter/Greeter.json,hcomp,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryPlusTPC.json,core_state_to_data_inj,"['rewrite', 'case', 'rewrite', 'have', 'case', 'rewrite', 'case', 'case', 'rewrite', 'have', 'case', 'rewrite', 'case', 'case', 'rewrite']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryPlusTPC.json,cn_in_qnodes,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryPlusTPC.json,core_state_stable_step,"['move', 'case', 'have', 'rewrite', 'case', 'rewrite', 'case', 'first', 'subst', 'rewrite', 'move', 'rewrite', 'case', 'move', 'subst']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryPlusTPC.json,loc_imp_core,"['move', 'case', 'first', 'subst', 'rewrite', 'case', 'rewrite', 'case', 'move', 'rewrite', 'case', 'move', 'subst', 'move', 'suff', 'done']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryPlusTPC.json,find_empty,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,W_valid,"['apply', 'split', 'last', 'case', 'rewrite', 'rewrite', 'subst', 'subst', 'move', 'rewrite']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,W_complete,"['move', 'rewrite', 'rewrite', 'case', 'rewrite', 'rewrite', 'apply', 'left']",0,0,0,4,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,W_dom,"['move', 'rewrite', 'case', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite']",0,0,1,4,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,eqW,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,eqW',['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,labC,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,labQ,"['case', 'rewrite', 'apply', 'right']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,prEqC,"['rewrite', 'last', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,prEqQ,"['rewrite', 'last', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,prEqQ',['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,query_init_step',"['move', 'case', 'case', ""[by case=>_<- | move=>l st H1 to'/= msg n H2 H3 C H4 H5 H6->{s'}| move=>l rt H1 i from pf H3 C msg H2/=[H4]_->{s'}]"", 'rewrite', 'move', 'subst', 'rewrite', 'have', 'rewrite', 'case', 'move', 'rewrite', 'case', 'rewrite', 'last', 'split', 'move', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'case', 'subst', 'move', 'rewrite', 'move', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'case', 'subst', 'rewrite', 'move', 'subst', 'split', 'first', 'move', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'case', 'subst', 'move', 'rewrite', 'move', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'case', 'subst', 'case', '[|case=>//]', 'move', 'subst', 'case', 'case', 'rewrite', 'rewrite', 'case', 'case', '[|case=>//]', 'move', 'subst', 'last', 'case', 'subst', 'rewrite', 'rewrite', 'case', 'subst', 'eexists', 'split', 'move', 'move', 'apply', 'case', 'rewrite', 'subst', 'rewrite', 'case', 'subst', 'exists', 'case', 'move', 'rewrite', 'rewrite', 'move', 'case', 'rewrite', 'last', 'split', 'apply', 'rewrite', 'rewrite', 'move', 'subst', 'split', 'try', 'rewrite', 'case', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'last', 'case', 'last', 'exists', 'case', 'last', 'exists', 'split', 'move', 'rewrite', 'case', 'last', 'case', 'subst', 'case', 'subst', 'move']",0,2,2,3,0,4
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,query_init_rely,"['move', 'case', 'rewrite', 'move', 'rewrite', 'move', 'case', 'try', 'move', 'subst', 'case', 'try', 'move', 'subst', 'rewrite', 'rewrite', 'last', 'rewrite', 'last', 'case', 'rewrite', 'apply']",0,0,0,4,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,prEqC',['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,cohQ,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,send_lq_case1,"['move', 'case', 'split', 'rewrite', 'rewrite', 'rewrite', 'case', '[|by move=>_', 'apply', 'rewrite', 'rewrite', 'case', 'subst', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'subst', 'case', 'rewrite', 'move', 'rewrite', 'case', 'case', 'split', 'last', 'move', 'rewrite', 'case', 'last', 'apply', 'rewrite', 'rewrite', 'case', 'subst', 'rewrite', 'exists', 'split', 'rewrite', 'exists', 'rewrite', 'case', 'first', 'apply', 'exists', 'case', 'subst', 'rewrite', 'rewrite', 'rewrite', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'subst', 'exists', 'case', 'last', 'exists', 'split']",0,2,1,3,0,3
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,send_lq_case3,"['move', 'case', 'split', 'rewrite', 'rewrite', 'rewrite', 'case', '[|by move=>_', 'apply', 'rewrite', 'rewrite', 'case', 'subst', 'rewrite', 'rewrite', 'case', 'case', 'split', 'last', 'move', 'rewrite', 'case', 'last', 'apply', 'rewrite', 'rewrite', 'case', 'subst', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'subst', 'case', 'rewrite', 'case', 'exists', 'split', 'rewrite', 'exists', 'rewrite', 'case', 'first', 'apply', 'exists', 'case', 'subst', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'subst', 'case', 'rewrite', 'case', 'rewrite', 'rewrite', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'subst', 'exists', 'case', 'last', 'exists', 'split']",0,2,1,3,0,3
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,send_lq_all_cases,"['move', 'move', 'rewrite', 'case', 'last', 'constructor', 'apply', 'constructor', 'apply', 'Ltac', 'rewrite', 'case', '[|by move=>_', 'apply', 'rewrite', 'rewrite', 'case', 'subst', 'rewrite', 'Ltac', 'rewrite', 'case', '[|by move=>_', 'apply', 'rewrite', 'rewrite', 'case', 'try', 'try', 'try', 'try', 'case', 'case', '[move/eqP:B=>B', 'subst', 'last', 'constructor', 'split', 'rewrite', 'kill_g3', 'kill_g4', 'rewrite', 'rewrite', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'subst', 'exists', 'case', 'last', 'exists', 'split', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'subst', 'constructor', 'split', 'rewrite', 'kill_g3', 'kill_g4', 'rewrite', 'rewrite', 'exists', 'case', 'subst', 'rewrite', 'rewrite', 'constructor', 'move', 'rewrite', 'move', 'move', 'subst', 'split', 'first', 'rewrite', 'exists', 'rewrite', 'split', 'move', 'subst', 'move', 'subst', 'case', 'rewrite', 'case', 'rewrite', 'case', 'subst', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'case', 'split', 'rewrite', 'last', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'case', 'move', 'rewrite', 'exists', 'split', 'exists', 'rewrite', 'move', 'rewrite', 'case', 'last', 'rewrite', 'rewrite']",0,2,1,3,0,3
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,send_lc_all_cases,"['move', 'move', 'rewrite', 'case', '[constructor 1|constructor 2|constructor 3]', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,recv_lq_case1,"['move', 'case', 'case', '[move/eqP:X=>X', 'subst', 'last', 'split', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'case', 'apply', 'rewrite', 'rewrite', 'rewrite', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'last', 'exists', 'split', 'rewrite', 'case', '[case/eqP=>Z', 'subst', 'rewrite', 'case', 'last', 'exists', 'case', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'subst', 'last', 'constructor', 'split', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'case', 'last', 'exists', 'constructor', 'split', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'case', 'last', 'exists', 'split', 'rewrite', 'last', 'case', 'subst', 'case']",0,2,1,2,0,3
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,recv_lq_case2,"['move', 'case', 'split', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'last', 'exists', 'split', 'case', 'last', 'rewrite', 'case', '[case/eqP=>Z', 'subst', 'rewrite', 'move', 'subst', 'case', 'move', 'subst', 'case', 'last', 'exists']",0,2,1,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryHooked.json,recv_lq_case3,"['move', 'case', 'split', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'case', 'apply', 'rewrite', 'rewrite', 'rewrite', 'case', '[|case=>//]', 'move', 'subst', 'simpl', 'rewrite', 'case', 'last', 'exists', 'split', 'case', 'last', 'rewrite', 'case', '[case/eqP=>Z', 'subst', 'rewrite', 'move', 'subst', 'case', 'move', 'subst', 'case', 'last', 'exists']",0,2,1,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,zip_in2,"['elim', 'rewrite', 'case', 'last', 'rewrite', 'rewrite', 'case', 'subst', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,l1,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,l2,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,l3,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_soupCoh,"['move', 'split', 'first', 'rewrite', 'last', 'case', '[by move/H2|by move/findPt_inv=>[Z G]', 'subst']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,consume_coh,"['move', 'split', 'first', 'rewrite', 'case', ""[move/eqP: X=><-{m'}|]."", 'case', 'case', 'case', 'rewrite', 'rewrite', 'case', 'case', 'move']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,trans_updDom,"['move', 'rewrite', 'case', 'rewrite', 'apply']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,cohSt,"['case', 'case', 'rewrite', 'move', 'case', 'rewrite', 'case', 'rewrite', 'case', 'rewrite']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,getStK,"['move', 'rewrite', 'move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,getStE,"['case', 'rewrite', 'move', 'move', 'rewrite', 'move']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,getStE',"['case', 'rewrite', 'move', 'move', 'rewrite', 'case', 'rewrite', 'rewrite', 'move', 'rewrite', 'subst']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_step_uniq,"['case', 'rewrite', 'case', 'rewrite', 'rewrite', 'case', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,receive_step_uniq,"['case', 'rewrite', 'case', 'rewrite', 'case', 'case', 'rewrite']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_safe_coh,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_this_in,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_safe_in,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_safe_def,"['split', 'last', 'set', 'exists']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_req_prec_safe,"['move', 'rewrite', 'exists']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,send_resp_prec_safe,"['move', 'rewrite', 'case', 'exists']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/disel/Examples/Querying/QueryProtocol.json,receive_step_coh,"['move', 'rewrite', 'split', 'first', 'rewrite', 'apply', 'apply', 'move', 'rewrite', 'rewrite', 'case', 'rewrite', 'last', 'case', 'rewrite', 'exists', 'split', 'clear', 'have', 'case', 'rewrite', 'apply', 'apply']",0,0,1,4,0,2
/mnt/cisk/zmq/dataset/data/zchinese/Lci.json,neutral_add,"['intros', 'symmetry', 'elim', 'intros', 'elim', 'trivial']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zchinese/Lci.json,opp_com,"['intros', 'unfold', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'elim', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zchinese/misc.json,pi1,"['simple', 'auto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zchinese/misc.json,pi2,"['simple', 'unfold', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zchinese/misc.json,inv_com,"['intros', 'unfold', 'elim', 'intros', 'exists', 'split', 'assumption', 'elim', 'assumption']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zchinese/Zstruct.json,integrityZ,"['unfold', 'intros', 'elim', 'intros', 'left', 'reflexivity', 'intros', 'right', 'generalize', 'clear', 'simpl', 'case', 'intros', 'inversion', 'trivial', 'intros', 'right', 'generalize', 'clear', 'simpl', 'case', 'intros', 'inversion', 'trivial']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zchinese/Zstruct.json,inversibleZ,"['unfold', 'intros', 'inversion_clear', 'inversion_clear', 'clear', 'generalize', 'clear', 'elim', 'intros', 'left', 'elim', 'auto', 'intros', 'cut', 'intros', 'absurd', 'intros', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'rewrite', 'auto', 'elim', 'auto', 'intros', 'clear', 'right', 'elim', 'auto', 'intros', 'cut', 'intros', 'absurd', 'intros', 'auto', 'apply', 'apply', 'auto', 'rewrite', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto', 'rewrite', 'simpl', 'inversion']",2,1,2,2,3,2
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,mult_O,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'split', 'apply', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'reflexivity', 'apply', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'reflexivity']",0,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,mult_opp_r,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'apply', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'elim', 'clear', 'pattern', 'elim', 'elim', 'clear', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'rewrite', 'auto']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,mult_opp_l,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'apply', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'elim', 'clear', 'pattern', 'elim', 'elim', 'clear', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'rewrite', 'auto']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,mult_opp_opp,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'rewrite', 'rewrite', 'symmetry', 'exact']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,div_O_O,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'left', 'reflexivity']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,div_add,"['unfold', 'intros', 'split', 'elim', 'trivial', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'clear', 'right', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'split', 'exact', 'clear', 'exists', 'split', 'exact', 'elim', 'intros', 'clear', 'rewrite', 'clear', 'elim', 'elim', 'reflexivity']",2,0,1,1,0,5
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,div_mult,"['unfold', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'left', 'reflexivity', 'clear', 'right', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'exists', 'elim', 'intros', 'split', 'exact', 'rewrite', 'elim', 'reflexivity']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,div_opp,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'rewrite', 'left', 'exact', 'clear', 'right', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'exists', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'rewrite', 'elim', 'reflexivity']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,gcd_null,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'reflexivity', 'elim', 'intros', 'elim', 'reflexivity']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,gcd_null2,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'reflexivity']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,simplification_integrity,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'rewrite', 'symmetry', 'apply', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'clear', 'elim', 'intros', 'elim', 'exact', 'exact', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'clear', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",1,0,3,2,0,3
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,gcd_unicity_apart_unities,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exists', 'exact', 'split', 'exact', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'symmetry', 'exact', 'exact', 'pattern', 'elim', 'elim', 'exact', 'elim', 'exact', 'elim', 'intros', 'elim', 'intros', 'exists', 'elim', 'intros', 'elim', 'intros', 'split', 'apply', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'exact', 'elim', 'intros', 'elim', 'intros', 'exists', 'elim', 'intro', 'clear', 'elim', 'intro', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'symmetry', 'exact', 'exact']",1,0,1,3,0,6
/mnt/cisk/zmq/dataset/data/zchinese/rings.json,opp_O,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'exact']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,gcd_unicity_apart_sign,"['intros', 'elim', 'intros', 'elim', 'intros', 'left', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'auto', 'right', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'auto', 'elim', 'intros', 'exact']",0,0,1,3,0,2
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,gcdZ_exists,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,gcdZ_is_gcd,"['intros', 'elim', 'intros', 'apply', 'clear', 'intros', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'split', 'exact', 'split', 'rewrite', 'apply', 'apply', 'exact', 'exact', 'exact', 'intros', 'apply', 'cut', 'intros', 'rewrite', 'apply', 'apply', 'exact', 'rewrite', 'auto', 'exact']",2,0,2,3,0,3
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,gcdZ_correct,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,positive_is_gcdZ,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,unicity_is_gcdZ,"['intros', 'elim', 'intros', 'exact', 'intros', 'cut', 'intro', 'rewrite', 'rewrite', 'auto', 'apply', 'rewrite', 'set', 'omega', 'set', 'auto']",0,0,2,3,1,2
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,gcdZ_is_gcdZ,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,Bezout_exists,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,divide_selfZ,"['intros', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'left', 'exact', 'right', 'split', 'exact', 'exists', 'split', 'exact', 'auto']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zchinese/Zgcd.json,chinese_remaindering_theorem,"['intros', 'elim', 'intros', 'exists', 'unfold', 'split', 'rewrite', 'replace', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'left', 'rewrite', 'auto', 'right', 'split', 'trivial', 'exists', 'auto', 'split', 'exact', 'reflexivity', 'replace', 'auto', 'ring', 'rewrite', 'replace', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'left', 'rewrite', 'auto', 'right', 'split', 'trivial', 'exists', 'auto', 'split', 'exact', 'reflexivity', 'replace', 'auto', 'ring']",0,0,0,1,1,3
/mnt/cisk/zmq/dataset/data/zchinese/groups.json,regular_l,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'clear', 'elim', 'intros', 'elim', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'elim', 'elim', 'elim', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zchinese/groups.json,add_add,"['intros', 'rewrite', 'elim', 'elim', 'rewrite', 'elim', 'reflexivity']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/zchinese/groups.json,opp_unicity,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'elim', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'exact']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/zchinese/groups.json,opp_opp,"['intros', 'apply', 'unfold', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'trivial', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'auto']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zchinese/groups.json,opp_add,"['intros', 'symmetry', 'apply', 'unfold', 'split', 'elim', 'intros', 'apply', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'apply', 'elim', 'intros', 'elim', 'intros', 'clear', 'rewrite', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'clear', 'elim', 'intros', 'exact']",1,0,3,2,0,2
/mnt/cisk/zmq/dataset/data/zchinese/groups.json,opp_neutral,"['intros', 'elim', 'reflexivity', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,Nat,"['simple', 'intros', 'exact', 'exact', 'Defined']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,IN_Class_succ,"['intros', 'unfold', 'unfold', 'apply', 'auto']",1,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,INC_Class_succ,"['unfold', 'unfold', 'intros', 'apply', 'auto']",3,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,IN_Class_succ_or,"['intros', 'unfold', 'elim', 'intros', 'simple', 'intros', 'elim', 'intros', 'right', 'apply', 'auto', 'intros', 'left', 'cut', 'auto', 'apply', 'auto']",3,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,E_not_IN_E,"['simple', 'intros', 'cut', 'simple', 'elim', 'intros', 'simpl', 'change', 'elim', 'apply', 'auto', 'exists', 'auto']",2,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,Nat_IN_Omega,"['intros', 'simpl', 'exists', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,IN_Omega_EXType,"['simpl', 'simple', 'intros', 'exists', 'auto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,IN_Nat_EXType,"['simple', 'simpl', 'simple', 'simple', 'intros', 'change', 'elim', 'intros', 'exists', 'auto', 'intros', 'elim', 'auto']",1,0,0,0,2,3
/mnt/cisk/zmq/dataset/data/zfc/Omega.json,Omega_EQ_Union,"['apply', 'unfold', 'intros', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto', 'auto', 'change', 'auto', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'cut', 'intros', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto']",3,0,2,0,2,2
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Vide_est_vide,"['unfold', 'simpl', 'intros', 'cut', 'simple', 'elim', 'intros', 'elim']",1,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,tout_vide_est_Vide,"['unfold', 'simple', 'simpl', 'intros', 'split', 'intros', 'elim', 'auto', 'exists', 'auto', 'simple']",1,2,0,0,2,4
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Paire,"['intros', 'apply', 'simple', 'exact', 'exact', 'Defined']",1,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Paire_sound_left,"['unfold', 'simpl', 'intros', 'split', 'simple', 'exists', 'auto', 'exists', 'auto', 'simple', 'simpl', 'exists', 'auto', 'exists', 'auto']",1,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Paire_sound_right,"['unfold', 'simpl', 'intros', 'split', 'simple', 'exists', 'auto', 'exists', 'auto', 'simple', 'exists', 'auto', 'exists', 'auto']",1,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Paire_left,"['unfold', 'simpl', 'exists', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Paire_right,"['unfold', 'simpl', 'exists', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Paire_IN,"['unfold', 'simpl', 'simple', 'intros', 'elim', 'simpl', 'auto']",1,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Sing,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Sing_EQ,"['unfold', 'intros', 'elim', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Sing_sound,"['unfold', 'intros', 'apply', 'auto']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,EQ_Sing_EQ,"['intros', 'cut', 'intros', 'auto', 'apply', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Comp,"['simple', 'intros', 'apply', 'simple', 'intros', 'exact', 'Defined']",2,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Comp_INC,"['unfold', 'simple', 'simpl', 'intros', 'elim', 'simple', 'intros', 'exists', 'auto']",2,2,0,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Comp_P,"['simple', 'simpl', 'intros', 'elim', 'intros', 'elim', 'simpl', 'intros', 'apply', 'auto']",2,1,1,0,0,3
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_P_Comp,"['simple', 'simpl', 'intros', 'elim', 'simpl', 'intros', 'cut', 'intros', 'exists', 'simpl', 'auto', 'apply', 'auto']",1,2,1,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,pi1,"['simple', 'intros', 'exact', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,pi2,"['simple', 'intros', 'exact', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Union,"['simple', 'intros', 'apply', 'simple', 'intros', 'exact', 'Defined']",2,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,EQ_EXType,"['simple', 'intros', 'simple', 'intros', 'simpl', 'simple', 'intros', 'apply', 'Defined']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_EXType,"['simple', 'simpl', 'intros', 'simple', 'simpl', 'intros', 'exists', 'auto']",2,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Union,"['simple', 'intros', 'intros', 'simpl', 'elim', 'intros', 'cut', 'auto', 'intros', 'cut', 'intros', 'elim', 'intros', 'simpl', 'exists', 'simpl', 'exact', 'apply', 'auto']",2,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_INC_Union,"['unfold', 'simple', 'intros', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'simpl', 'simpl', 'elim', 'cut', 'intros', 'elim', 'simpl', 'intros', 'exists', 'auto', 'apply', 'auto']",6,2,1,0,2,5
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Union_IN,"['simple', 'unfold', 'simpl', 'intros', 'simple', 'simple', 'intros', 'simpl', 'intros', 'exists', 'split', 'exists', 'auto', 'apply', 'auto', 'simpl', 'generalize', 'elim', 'simpl', 'intros', 'exists', 'auto']",3,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Union_mon,"['unfold', 'intros', 'elim', 'intros', 'simple', 'intros', 'apply', 'auto', 'auto']",5,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Inter_all,"['simple', 'intros', 'simpl', 'intros', 'simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'intros', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto']",4,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,all_IN_Inter,"['simple', 'intros', 'intros', 'elim', 'intros', 'simpl', 'simpl', 'cut', 'auto', 'intros', 'cut', 'auto', 'intros', 'elim', 'intros', 'simpl', 'cut', 'intros', 'exists', 'simpl', 'auto', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'simpl', 'exists', 'auto', 'apply', 'auto']",3,1,1,0,4,3
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Inter'_all,"['unfold', 'intros', 'change', 'apply', 'intros', 'apply', 'auto', 'assumption']",4,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,all_IN_Inter',"['unfold', 'intros', 'apply', 'intros', 'apply', 'auto', 'apply', 'auto', 'auto']",4,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,IN_Power_INC,"['simple', 'intros', 'unfold', 'simpl', 'intros', 'simple', 'intros', 'elim', 'simpl', 'intros', 'simple', 'intros', 'intros', 'simple', 'intros', 'elim', 'simple', 'intros', 'intros', 'exists', 'auto', 'apply', 'auto']",4,2,1,0,2,3
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,INC_IN_Power,"['simple', 'intros', 'unfold', 'simpl', 'simple', 'intros', 'exists', 'simpl', 'split', 'intros', 'elim', 'auto', 'intros', 'cut', 'auto', 'intros', 'exists', 'simpl', 'auto', 'auto', 'simpl', 'exists', 'auto', 'simple', 'simpl', 'simple', 'intros', 'exists', 'auto']",2,2,0,0,3,4
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Power_mon,"['intros', 'unfold', 'intros', 'apply', 'cut', 'unfold', 'unfold', 'intros', 'auto', 'apply', 'auto']",4,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,Power_sound,"['intros', 'apply', 'unfold', 'intros', 'cut', 'intros', 'apply', 'assumption', 'cut', 'intros', 'apply', 'auto', 'apply', 'assumption', 'intros', 'cut', 'intros', 'apply', 'assumption', 'cut', 'intros', 'apply', 'auto', 'apply', 'assumption']",3,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,not_EQ_Sing_Vide,"['intros', 'cut', 'simple', 'cut', 'simpl', 'simple', 'intros', 'elim', 'simple', 'apply', 'auto']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Axioms.json,not_EQ_Vide_Sing,"['intros', 'cut', 'simple', 'cut', 'simpl', 'simple', 'intros', 'elim', 'simple', 'apply', 'auto']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Russell.json,Russell,"['intros', 'cut', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'intros', 'cut', 'change', 'cut', 'intros', 'exact', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'assumption']",1,0,3,0,2,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,EQC_refl,"['simple', 'intros', 'simpl', 'split', 'intros', 'exists', 'auto', 'exists', 'auto']",2,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,EQC_tran,"['simple', 'simple', 'simple', 'simpl', 'intros', 'split', '(elim X2', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto']",1,1,1,0,0,4
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,EQC_sym,"['simple', 'simple', 'simpl', 'intros', 'elim', 'intros', 'split', 'intros', 'elim', 'intros', 'exists', 'auto', 'elim', 'intros', 'exists', 'auto']",1,1,0,0,1,6
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,EQC_INC,"['simple', 'simple', 'simpl', 'intros', 'unfold', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto']",2,2,1,0,0,4
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CINC_EQC,"['simple', 'simple', 'unfold', 'simpl', 'intros', 'split', 'intros', 'apply', 'exists', 'auto', 'cut', 'try', 'intros', 'exists', 'auto', 'apply', 'exists', 'auto']",2,2,0,0,2,4
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_sound_left,"['simple', 'simpl', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto']",1,1,1,0,0,3
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_sound_right,"['simple', 'simple', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto']",1,1,1,0,0,3
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CINC_refl,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CINC_tran,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CINC_sound_left,"['simple', 'unfold', 'simpl', 'intros', 'apply', 'apply', 'auto']",2,2,2,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CINC_sound_right,"['simple', 'simple', 'unfold', 'simpl', 'intros', 'elim', 'try', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto']",1,2,1,0,0,3
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,tout_vide_est_VideC,"['unfold', 'simple', 'simpl', 'intros', 'split', 'intros', 'elim', 'auto', 'exists', 'auto', 'simple']",1,2,0,0,2,4
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,Paire_sound_leftC,"['unfold', 'simpl', 'intros', 'split', 'simple', 'exists', 'auto', 'exists', 'auto', 'simple', 'simpl', 'exists', 'auto', 'exists', 'auto']",1,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,Paire_sound_rightC,"['unfold', 'simpl', 'intros', 'split', 'simple', 'exists', 'auto', 'exists', 'auto', 'simple', 'exists', 'auto', 'exists', 'auto']",1,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_Paire_left,"['unfold', 'simpl', 'exists', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_Paire_right,"['unfold', 'simpl', 'exists', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,Paire_CIN,"['unfold', 'simpl', 'simple', 'intros', 'elim', 'simpl', 'auto']",1,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_Sing,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_Sing_EQ,"['unfold', 'intros', 'elim', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,EQC_EQ,"['simple', 'intros', 'simple', 'intros', 'simpl', 'simple', 'intros', 'split', 'intros', 'elim', 'intros', 'intros', 'exists', 'auto', 'intros', 'elim', 'intros', 'intros', 'exists', 'auto']",2,0,0,0,2,6
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_IN,"['simple', 'intros', 'simple', 'intros', 'simple', 'intros', 'unfold', 'exists', 'auto', 'apply', 'auto']",3,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,EQC_EXType,"['simple', 'simple', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'auto', 'Defined']",1,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_Union,"['simple', 'intros', 'intros', 'simpl', 'elim', 'intros', 'cut', 'auto', 'intros', 'cut', 'intros', 'elim', 'intros', 'simpl', 'exists', 'simpl', 'exact', 'apply', 'auto']",2,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,CIN_CINC_Union,"['unfold', 'simple', 'intros', 'unfold', 'intros', 'simpl', 'elim', 'intro', 'simpl', 'intros', 'simpl', 'elim', 'cut', 'intros', 'elim', 'simpl', 'intros', 'exists', 'auto', 'apply', 'auto']",6,2,1,0,2,4
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,Union_CIN,"['simple', 'unfold', 'simpl', 'intros', 'simple', 'simple', 'intros', 'simpl', 'intros', 'exists', 'split', 'exists', 'auto', 'apply', 'auto', 'simpl', 'generalize', 'elim', 'simpl', 'intros', 'exists', 'auto']",3,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,Union_soundC,"['unfold', 'simpl', 'simple', 'intros', 'simple', 'intros', 'simpl', 'intros', 'elim', 'intros', 'split', 'simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'simpl', 'auto', 'simple', 'intros', 'elim', 'intros', 'cut', 'auto', 'intros', 'elim', 'intros', 'exists', 'simpl', 'auto']",3,3,0,0,2,4
/mnt/cisk/zmq/dataset/data/zfc/Constructive.json,Union_monC,"['unfold', 'intros', 'elim', 'intros', 'apply', 'elim', 'intros', 'auto']",3,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Replacement.json,Choice_Collection,"['unfold', 'intro', 'intros', 'cut', 'simple', 'intros', 'elim', 'intros', 'intros', 'exists', 'simpl', 'intros', 'elim', 'intros', 'exists', 'split', 'exists', 'auto', 'apply', 'auto', 'unfold', 'apply', 'intros', 'elim', 'intros', 'exists', 'auto']",4,1,3,0,3,4
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,Vee_sound,"['simple', 'intros', 'simple', 'intros', 'simple', 'intros', 'apply', 'unfold', 'change', 'intros', 'apply', 'try', 'apply', 'split', 'intros', 'elim', 'intros', 'exists', 'apply', 'apply', 'assumption', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto', 'change', 'intros', 'apply', 'apply', 'split', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto', 'assumption']",3,0,4,0,1,5
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,IN_Vee,"['simple', 'intros', 'intros', 'change', 'apply', 'elim', 'intros', 'exists', 'apply', 'apply', 'auto', 'auto', 'apply', 'assumption']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,INC_IN_Vee_Succ,"['simple', 'intros', 'intros', 'unfold', 'apply', 'apply', 'intros', 'apply', 'auto', 'auto', 'apply', 'auto', 'assumption', 'assumption']",4,0,4,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,IN_Vee_EXType,"['simple', 'intros', 'intros', 'change', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'split', 'exists', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,2,4
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,mon_Vee,"['intros', 'unfold', 'intros', 'elim', 'intros', 'simple', 'intros', 'apply', 'auto']",6,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,IN_Succ_INC,"['unfold', 'intros', 'cut', 'auto', 'auto', 'apply', 'try']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,IN_Vee_Succ_EXType,"['intros', 'elim', 'intros', 'simple', 'intros', 'exists', 'split', 'apply', 'auto', 'split', 'auto', 'apply', 'auto', 'auto']",2,0,1,0,2,5
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,IN_Vee_Succ,"['intros', 'apply', 'auto', 'unfold', 'apply', 'auto', 'intros', 'apply', 'auto', 'auto', 'apply', 'auto', 'auto']",1,0,2,0,3,0
/mnt/cisk/zmq/dataset/data/zfc/Ordinal_theory.json,ex_rk,"['simple', 'intros', 'exists', 'split', 'apply', 'apply', 'simple', 'intros', 'apply', 'auto', 'elim', 'auto', 'apply', 'apply', 'intros', 'simple', 'intros', 'apply', 'elim', 'auto', 'elim', 'auto', 'apply', 'intros', 'simple', 'intros', 'apply', 'auto', 'elim', 'auto', 'auto', 'unfold', 'intros', 'elim', 'intros', 'apply', 'auto', 'cut', 'intros', 'apply', 'elim', 'elim', 'auto', 'apply', 'exists', 'auto']",6,1,3,0,3,5
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,EQ_refl,"['simple', 'intros', 'simpl', 'split', 'intros', 'exists', 'auto', 'exists', 'auto']",2,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,EQ_tran,"['simple', 'intros', 'simple', 'intros', 'simple', 'intros', 'simpl', 'intros', 'split', '(elim e1', 'intros', 'elim', 'intros', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto']",3,1,1,0,1,4
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,EQ_sym,"['simple', 'intros', 'simple', 'intros', 'simpl', 'simple', 'intros', 'split', 'intros', 'elim', 'intros', 'exists', 'auto', 'intros', 'elim', 'intros', 'exists', 'auto']",2,0,0,0,2,6
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,EQ_INC,"['simple', 'intros', 'simple', 'intros', 'simpl', 'simple', 'intros', 'unfold', 'simpl', 'intros', 'simple', 'intros', 'elim', 'intros', 'exists', 'apply', 'assumption']",4,2,0,0,0,3
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,INC_EQ,"['simple', 'intros', 'simple', 'intros', 'unfold', 'simpl', 'intros', 'split', 'intros', 'apply', 'exists', 'auto', 'intros', 'cut', 'simple', 'intros', 'exists', 'auto', 'apply', 'exists', 'auto']",5,2,0,0,3,4
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,IN_sound_left,"['simple', 'intros', 'simpl', 'simple', 'intros', 'exists', 'apply', 'auto']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,IN_sound_right,"['simple', 'intros', 'simple', 'intros', 'simpl', 'simple', 'intros', 'simple', 'intros', 'elim', 'intros', 'exists', 'apply', 'assumption']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,INC_refl,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,INC_tran,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,INC_sound_left,"['simple', 'unfold', 'simpl', 'intros', 'apply', 'apply', 'auto']",2,2,2,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,INC_sound_right,"['simple', 'simple', 'unfold', 'simpl', 'intros', 'elim', 'try', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'apply', 'auto']",1,2,1,0,0,3
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Couple_inj_left,"['unfold', 'simpl', 'simple', 'intros', 'elim', 'intros', 'elim', 'simpl', 'simple', 'intros', 'elim', 'simpl', 'intros', 'elim', 'simpl', 'auto', 'elim', 'simpl', 'simple', 'simpl', 'intros', 'cut', 'simpl', 'simple', 'intros', 'elim', 'simple', 'apply', 'auto', 'intros', 'cut', 'simpl', 'simple', 'intros', 'elim', 'simple', 'apply', 'auto', 'intros', 'elim', 'simpl', 'simple', 'change', 'intros', 'apply', 'apply', 'auto', 'change', 'intros', 'elimtype', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto']",3,3,2,0,2,3
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Couple_inj_right,"['unfold', 'simpl', 'simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'change', 'cut', 'simple', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'change', 'intros', 'cut', 'intros', 'auto', 'cut', 'intros', 'elim', 'intros', 'cut', 'simple', 'apply', 'assumption', 'trivial', 'apply', 'auto']",1,1,2,0,1,2
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Couple_sound_left,"['unfold', 'intros', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Couple_sound_right,"['unfold', 'intros', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Couple_IN_Prod,"['simple', 'intros', 'simple', 'intros', 'intros', 'elim', 'intros', 'simpl', 'elim', 'intros', 'simpl', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'simpl', 'simpl', 'exists', 'simpl', 'split', 'simple', 'simpl', 'exists', 'simpl', 'split', 'simple', 'simpl', 'exists', 'auto', 'exists', 'auto', 'simple', 'exists', 'auto', 'exists', 'simpl', 'split', 'simple', 'exists', 'simpl', 'auto', 'split', 'simple', 'simple', 'exists', 'auto', 'simple', 'simpl', 'exists', 'auto', 'exists', 'auto', 'simple', 'simpl', 'exists', 'auto', 'exists', 'auto', 'auto', 'auto']",2,2,1,0,3,3
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Couple_Prod_IN,"['simple', 'intros', 'simple', 'intros', 'intros', 'elim', 'intros', 'elim', 'intros', 'change', 'cut', 'cut', 'intros', 'split', 'apply', 'auto', 'simpl', 'exists', 'auto', 'apply', 'auto', 'simpl', 'exists', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,1,0,3,4
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,IN_Prod_EXType,"['simple', 'intros', 'simple', 'intros', 'intros', 'elim', 'simple', 'intros', 'exists', 'exists', 'auto', 'auto']",2,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Nat_Ord,"['simple', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,IN_Succ,"['intros', 'unfold', 'unfold', 'apply', 'auto']",1,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,INC_Succ,"['unfold', 'unfold', 'intros', 'apply', 'auto']",3,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,IN_Succ_or,"['intros', 'unfold', 'elim', 'intros', 'simple', 'intros', 'elim', 'intros', 'right', 'apply', 'auto', 'intros', 'left', 'cut', 'auto', 'apply', 'auto']",3,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Omega_Ord,"['apply', 'apply', 'intros', 'elim', 'intros', 'apply', 'auto', 'elim', 'auto', 'auto', 'intros', 'change', 'auto', 'apply', 'auto', 'apply']",2,0,3,0,2,2
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Alpha,"['simple', 'intros', 'apply', 'apply', 'intros', 'exact', 'Defined']",3,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,inj,"['simple', 'intros', 'exact', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,inj_sound,"['simple', 'intros', 'simple', 'intros', 'simpl', 'simple', 'intros', 'split', 'intros', 'elim', 'intros', 'exists', 'auto', 'intros', 'elim', 'intros', 'exists', 'auto']",2,0,0,0,2,6
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Power_sound_inj,"['simple', 'intros', 'simpl', 'split', 'intros', 'exists', 'split', 'intros', 'elim', 'intros', 'exists', 'simpl', 'auto', 'intros', 'elim', 'intros', 'exists', 'simpl', 'auto', 'intros', 'exists', 'split', 'intros', 'elim', 'intros', 'exists', 'simpl', 'auto', 'intros', 'elim', 'intros', 'exists', 'simpl', 'auto']",2,1,0,0,1,6
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Big_is_big,"['intros', 'unfold', 'simpl', 'exists', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,IN_Big_small,"['unfold', 'simpl', 'simple', 'intros', 'exists', 'auto']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,IN_small_small,"['simple', 'intros', 'simpl', 'simple', 'intros', 'exists', 'auto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/zfc/zfc.json,Big_closed_for_power,"['unfold', 'simpl', 'intros', 'simple', 'intros', 'exists', 'apply', 'apply', 'assumption', 'apply', 'apply']",3,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,ord,"['simple', 'intros', 'intros', 'apply', 'exact', 'exact', 'Defined']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,ord_ext,"['simple', 'intros', 'simpl', 'intros', 'simple', 'intros', 'clear', 'split', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'auto']",4,1,2,0,3,0
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,ord_sound,"['simple', 'intros', 'simple', 'intros', 'intros', 'elim', 'intros', 'split', 'intros', 'elim', 'intros', 'simpl', 'split', 'intros', 'elim', 'intros', 'cut', 'intros', 'elim', 'intros', 'auto', 'apply', 'apply', 'auto', 'auto', 'apply', 'apply', 'auto', 'auto', 'intros', 'intros', 'elim', 'intros', 'cut', 'intros', 'apply', 'apply', 'auto', 'elim', 'intros', 'auto', 'auto', 'apply', 'auto', 'intros', 'elim', 'intros', 'split', 'intros', 'elim', 'intros', 'cut', 'auto', 'cut', 'auto', 'intros', 'elim', 'intros', 'apply', 'apply', 'auto', 'auto', 'apply', 'apply', 'auto', 'auto', 'intros', 'elim', 'intros', 'cut', 'intros', 'apply', 'apply', 'auto', 'elim', 'intros', 'auto', 'apply', 'auto']",3,0,2,0,2,5
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,IN_Ord_Ord,"['simple', 'intros', 'simple', 'intros', 'change', 'intros', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto', 'exists', 'auto']",3,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,ord_tech,"['simple', 'intros', 'simple', 'intros', 'simple', 'intros', 'split', 'intros', 'elim', 'intros', 'change', 'apply', 'auto', 'cut', 'simple', 'intros', 'apply', 'auto', 'unfold', 'apply', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'auto', 'intros', 'elim', 'intros', 'cut', 'simple', 'intros', 'cut', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'elim', 'intros', 'auto', 'apply', 'auto', 'auto', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,3,0,3,5
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,plump,"['simple', 'intros', 'simple', 'intros', 'intros', 'elim', 'intros', 'simpl', 'simpl', 'cut', 'intros', 'apply', 'exists', 'auto', 'apply', 'assumption', 'apply', 'auto']",3,0,1,0,2,2
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,Ord_intro,"['simple', 'intros', 'split', 'intros', 'change', 'apply', 'exists', 'auto', 'intros', 'apply', 'auto', 'auto', 'unfold', 'apply', 'auto', 'exists', 'auto', 'auto']",2,0,2,0,3,3
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,Ord_trans,"['simple', 'intros', 'unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'auto', 'elim', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'exists', 'auto', 'apply', 'auto']",5,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,inter_ord,"['simple', 'intros', 'apply', 'intros', 'simple', 'simple', 'intro', 'simple', 'intros', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'assumption', 'exists', 'auto', 'intros', 'elim', 'simple', 'intro', 'simple', 'intros', 'apply', 'exists', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'auto', 'auto', 'apply', 'auto', 'auto']",4,0,2,0,3,2
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,union_Ord,"['simple', 'intros', 'apply', 'intros', 'simple', 'simple', 'intros', 'simpl', 'intros', 'apply', 'auto', 'apply', 'try', 'auto', 'apply', 'auto', 'generalize', 'elim', 'simpl', 'intros', 'exists', 'auto', 'intros', 'simple', 'simple', 'intros', 'simpl', 'apply', 'exists', 'try', 'apply', 'auto', 'apply', 'try', 'auto', 'apply', 'auto', 'generalize', 'elim', 'simpl', 'intros', 'exists', 'auto']",5,2,3,0,3,2
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,Ord_Succ,"['unfold', 'intros', 'apply', 'intros', 'apply', 'intros', 'apply', 'auto', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'cut', 'intros', 'apply', 'try', 'cut', 'intros', 'apply', 'try', 'apply', 'try']",4,0,4,0,2,0
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,Succ_incr,"['unfold', 'intros', 'apply', 'intros', 'apply', 'auto', 'auto', 'apply', 'auto', 'try']",4,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,PI1,"['simple', 'intros', 'exact', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zfc/Plump.json,PI2,"['simple', 'intros', 'exact', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,eq_refl,"['repeat', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,eq_sym,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,eq_trans,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,eq_equiv,"['unfold', 'split', 'intros', 'reflexivity', 'intros', 'rewrite', 'reflexivity', 'intros', 'rewrite', 'reflexivity']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,incl_refl,"['repeat', 'assumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,incl_trans,"['repeat', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,incl_preorder,"['split', 'repeat', 'assumption', 'intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,eq_incl_compat,"['intros', 'split', 'intro', 'split', 'intros', 'now', 'now', 'intro', 'destruct', 'apply', 'rewrite', 'assumption', 'apply', 'rewrite', 'discriminate', 'apply', 'rewrite', 'discriminate', 'reflexivity']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,mem_compat,"['intros', 'destruct', 'rewrite', 'destruct', 'exists', 'rewrite', 'now', 'destruct', 'trivial', 'rewrite', 'destruct', 'rewrite', 'assert', 'rewrite', 'discriminate']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,find_compat,"['intros', 'rewrite', 'apply', 'assumption']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,find_compat2,"['repeat', 'apply', 'assumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,set_compat,"['intros', 'destruct', 'rewrite', 'rewrite', 'do', 'reflexivity', 'repeat', 'auto', 'rewrite', 'assumption']",0,0,0,1,2,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,set_compat2,"['do', 'subst', 'apply', 'trivial', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,add_compat,"['intros', 'destruct', 'rewrite', 'rewrite', 'do', 'reflexivity', 'repeat', 'apply', 'now', 'assumption']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,add_compat2,"['do', 'subst', 'apply', 'auto', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,remove_compat,"['intros', 'destruct', 'rewrite', 'rewrite', 'do', 'reflexivity', 'repeat', 'apply', 'now', 'assumption']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,remove_compat2,"['repeat', 'apply', 'auto', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,find_None,"['intros', 'rewrite', 'destruct', 'split', 'intro', 'discriminate', 'elim', 'eexists', 'reflexivity', 'split', 'intro', 'intros', 'discriminate', 'reflexivity']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,set_Some,"['intros', 'destruct', 'rewrite', 'rewrite', 'split', 'intro', 'left', 'inversion', 'split', 'reflexivity', 'destruct', 'now', 'now', 'rewrite', 'trivial', 'split', 'intro', 'right', 'split', 'assumption', 'destruct', 'contradiction', 'assumption']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,set_None,"['intros', 'destruct', 'rewrite', 'split', 'intro', 'discriminate', 'destruct', 'now', 'rewrite', 'trivial', 'intuition']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,add_Some,"['intros', 'destruct', 'rewrite', 'rewrite', 'split', 'intro', 'left', 'inversion', 'split', 'reflexivity', 'destruct', 'now', 'now', 'rewrite', 'trivial', 'split', 'intro', 'right', 'split', 'assumption', 'destruct', 'contradiction', 'assumption']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,add_None,"['intros', 'destruct', 'rewrite', 'split', 'intro', 'discriminate', 'destruct', 'now', 'rewrite', 'trivial', 'intuition']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,remove_Some,"['intros', 'destruct', 'rewrite', 'split', 'intro', 'discriminate', 'destruct', 'now', 'rewrite', 'trivial', 'intuition']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,remove_None,"['intros', 'destruct', 'rewrite', 'rewrite', 'split', 'intro', 'try', 'reflexivity', 'rewrite', 'trivial', 'split', 'intro', 'right', 'assumption', 'destruct', 'contradiction', 'assumption']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,add_cancel,"['intros', 'destruct', 'rewrite', 'reflexivity', 'rewrite', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,remove_cancel,"['intros', 'destruct', 'rewrite', 'reflexivity', 'rewrite', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,add_merge,"['intros', 'destruct', 'rewrite', 'reflexivity', 'repeat', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,add_comm,"['intros', 'destruct', 'rewrite', 'trivial', 'destruct', 'rewrite', 'trivial', 'rewrite', 'assumption', 'repeat', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,remove_add_cancel,"['intros', 'destruct', 'rewrite', 'reflexivity', 'rewrite', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,map_None,"['intros', 'rewrite', 'split', 'intro', 'intros', 'assert', 'split', 'rewrite', 'rewrite', 'discriminate', 'destruct', 'trivial', 'elim', 'rewrite', 'destruct', 'exists', 'assumption']",0,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,combine_None,"['intros', 'destruct', 'assert', '{', 'rewrite', 'left', 'exists', 'auto', '}', 'rewrite', 'intuition', 'assert', '{', 'rewrite', 'right', 'left', 'exists', 'auto', '}', 'rewrite', 'intuition', 'assert', '{', 'rewrite', 'do', 'exists', 'auto', '}', 'rewrite', 'intuition', 'destruct', 'rewrite', 'destruct', 'rewrite', 'discriminate', 'intuition']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,remove_incl,"['intros', 'rewrite', 'intuition']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,cast_spec,"['repeat', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,for_all_spec_aux,"['intros', 'induction', 'intro', 'simpl', 'setoid_rewrite', 'tauto', 'rewrite', 'split', 'intros', 'rewrite', 'destruct', 'split', 'trivial', 'intros', 'inversion_clear', 'destruct', 'hnf', 'simpl', 'rewrite', 'assumption', 'apply', 'assumption', 'subst', 'simpl', 'split', 'intros', 'apply', 'solve', 'reflexivity', 'assumption']",2,2,0,1,2,4
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,for_all_spec,"['intros', 'unfold', 'rewrite', 'change', 'setoid_rewrite', 'rewrite', 'tauto']",1,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,exists_spec_aux,"['intros', 'induction', 'intro', 'simpl', 'setoid_rewrite', 'firstorder', 'rewrite', 'split', 'intros', 'rewrite', 'destruct', 'now', 'right', 'exists', 'split', 'trivial', 'now', 'destruct', 'right', 'exists', 'split', 'trivial', 'now', 'subst', 'now', 'destruct', 'inversion_clear', 'left', 'destruct', 'hnf', 'simpl', 'rewrite', 'rewrite', 'apply', 'right', 'exists', 'split', 'trivial']",1,1,0,3,0,4
/mnt/cisk/zmq/dataset/data/dep-map/DepMapFactsImplementation.json,exists_spec,"['intros', 'unfold', 'rewrite', 'change', 'setoid_rewrite', 'rewrite', 'intuition']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/dep-map/Coqlib.json,not_symmetric,"['intros', 'apply', 'symmetry', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/Coqlib.json,eq_sym,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/Coqlib.json,eq_trans,"['intros', 'etransitivity', 'eassumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/Coqlib.json,lt_trans,"['intros', 'etransitivity', 'eassumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/dep-map/Coqlib.json,lt_not_eq,"['intros', 'rewrite', 'revert', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/dep-map/Coqlib.json,compare,"['intros', 'assert', 'destruct', 'constructor', 'now', 'constructor', 'now', 'constructor', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Nat_complements.json,eq_gt_O_dec,"['simple', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Nat_complements.json,mult_commut,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'elim', 'auto']",0,1,0,1,1,3
/mnt/cisk/zmq/dataset/data/chinese/Nat_complements.json,mult_neutr,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Nat_complements.json,technical_lemma,"['intros', 'simpl', 'elim', 'rewrite', 'auto']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Nat_complements.json,lt_minus2,"['simple', 'intros', 'elim', 'auto']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Nat_complements.json,minus_n_Sm,"['simple', 'intros', 'elim', 'auto']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Nat_complements.json,lt_succ,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Lci.json,neutral_add,"['intros', 'symmetry', 'elim', 'intros', 'elim', 'trivial']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Lci.json,opp_com,"['intros', 'unfold', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'elim', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zrec.json,lt_OZ,"['intros', 'unfold', 'elim', 'unfold', 'simpl', 'intros', 'exact', 'unfold', 'simpl', 'intros', 'exact', 'unfold', 'simpl', 'intros', 'exact']",2,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zrec.json,Zrec1,"['intros', 'apply', 'intros', 'unfold', 'unfold', 'elim', 'assumption']",3,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zrec.json,Zrec2,"['unfold', 'intros', 'apply', 'elim', 'apply', 'intros', 'rewrite', 'apply', 'exact', 'elim', 'apply', 'intros', 'rewrite', 'apply', 'exact']",4,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zrec.json,Zrec3,"['split', 'elim', 'intros', 'elim', 'intros', 'trivial', 'rewrite', 'apply', 'simple', 'intros', 'apply', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'auto', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'auto', 'elim', 'intros', 'elim', 'intros', 'trivial', 'rewrite', 'apply', 'simple', 'intros', 'apply', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'auto', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'auto']",4,2,1,1,1,2
/mnt/cisk/zmq/dataset/data/chinese/Zrec.json,Zrec4,"['intros', 'elim', 'exact', 'intros', 'apply', 'trivial']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zrec.json,recZ,"['intros', 'elim', 'exact', 'intro', 'cut', 'intros', 'elim', 'auto', 'apply', 'trivial', 'intro', 'cut', 'intros', 'elim', 'auto', 'apply', 'trivial']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,sign_absZ,"['intros', 'elim', 'simpl', 'exact', 'intro', 'simpl', 'exact', 'intro', 'simpl', 'exact']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,tech_le_pos_abs,"['intros', 'elim', 'unfold', 'reflexivity', 'unfold', 'reflexivity', 'intros', 'elim']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,leZ_antisymmetric,"['unfold', 'intros', 'elim', 'elim', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'simpl', 'intros', 'elim', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'simpl', 'intros', 'elim', 'reflexivity']",3,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,tech_lt_abs_OZ,"['simple', 'reflexivity', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'elim']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,tech_posOZ_pos,"['intros', 'elim', 'simpl', 'exact', 'simpl', 'intros', 'exact']",1,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,le_opp_OZ_l,"['intros', 'elim', 'simpl', 'intros', 'exact', 'simpl', 'intros', 'exact', 'intros', 'elim']",1,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,le_opp_OZ,"['intros', 'apply', 'rewrite', 'exact', 'exact']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zle.json,le_opp_OZ2,"['intros', 'rewrite', 'rewrite', 'elim', 'rewrite', 'simpl', 'reflexivity']",0,1,0,2,0,1
/mnt/cisk/zmq/dataset/data/chinese/misc.json,pi1,"['simple', 'auto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/misc.json,pi2,"['simple', 'unfold', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/misc.json,inv_com,"['intros', 'unfold', 'elim', 'intros', 'exists', 'split', 'assumption', 'elim', 'assumption']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zbase.json,tech_pos_not_posZ,"['unfold', 'intros', 'cut', 'simpl', 'exact', 'rewrite', 'simpl', 'reflexivity']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zbase.json,eq_OZ_dec,"['intros', 'elim', 'left', 'reflexivity', 'intros', 'right', 'discriminate', 'intros', 'right', 'discriminate']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Z_succ_pred.json,pred_succZ,"['intros', 'pattern', 'elim', 'simpl', 'reflexivity', 'simpl', 'reflexivity', 'intros', 'elim', 'simpl', 'reflexivity', 'intros', 'simpl', 'reflexivity']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Z_succ_pred.json,succ_predZ,"['intros', 'pattern', 'elim', 'simpl', 'reflexivity', 'intros', 'elim', 'simpl', 'reflexivity', 'intros', 'simpl', 'reflexivity', 'simpl', 'reflexivity']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Z_succ_pred.json,succ_pred_pred_succZ,"['intros', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/chinese/Z_succ_pred.json,tech_pred_posZ,"['intro', 'elim', 'intro', 'elim', 'exact', 'intros', 'simpl', 'reflexivity']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Z_succ_pred.json,tech_succ_posOZ,"['intros', 'elim', 'simpl', 'reflexivity', 'simpl', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_eq3,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_eq4,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_eq5,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_succZ_l,"['intros', 'elim', 'simpl', 'reflexivity', 'intros', 'simpl', 'reflexivity', 'intros', 'elim', 'simpl', 'symmetry', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'intros', 'unfold', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'symmetry', 'exact']",2,0,1,2,0,4
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_predZ_l,"['intros', 'elim', 'simpl', 'reflexivity', 'intros', 'elim', 'simpl', 'symmetry', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'intros', 'unfold', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'reflexivity']",1,0,1,3,0,4
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_succZ_r,"['intros', 'elim', 'reflexivity', 'simple', 'symmetry', 'exact', 'intros', 'do', 'rewrite', 'elim', 'elim', 'elim', 'rewrite', 'rewrite', 'elim', 'reflexivity', 'simple', 'simpl', 'rewrite', 'exact', 'intros', 'do', 'elim', 'elim', 'elim', 'elim', 'rewrite', 'rewrite', 'rewrite', 'elim', 'elim', 'unfold', 'reflexivity']",0,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_predZ_r,"['intros', 'elim', 'reflexivity', 'simple', 'simpl', 'symmetry', 'exact', 'intros', 'unfold', 'do', 'rewrite', 'elim', 'elim', 'elim', 'elim', 'rewrite', 'elim', 'reflexivity', 'simple', 'simpl', 'replace', 'auto', 'rewrite', 'exact', 'intros', 'do', 'rewrite', 'rewrite', 'elim', 'elim', 'elim', 'rewrite', 'rewrite', 'elim', 'reflexivity']",1,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_OZ,"['simple', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'reflexivity']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_IZ,"['simple', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'reflexivity']",0,1,0,4,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_mIZ,"['simple', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'elim', 'rewrite', 'reflexivity']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_commutativity,"['unfold', 'intros', 'elim', 'rewrite', 'unfold', 'reflexivity', 'simple', 'simpl', 'symmetry', 'exact', 'intros', 'rewrite', 'rewrite', 'elim', 'unfold', 'reflexivity', 'intros', 'elim', 'simpl', 'symmetry', 'exact', 'intros', 'rewrite', 'rewrite', 'elim', 'unfold', 'reflexivity']",2,0,0,3,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_neutral,"['unfold', 'split', 'exact', 'intros', 'split', 'elim', 'reflexivity', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_add_distributivity,"['unfold', 'intros', 'case', 'split', 'reflexivity', 'simple', 'split', 'rewrite', 'rewrite', 'rewrite', 'exact', 'reflexivity', 'intros', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'elim', 'elim', 'apply', 'do', 'rewrite', 'apply', 'simple', 'split', 'rewrite', 'rewrite', 'rewrite', 'exact', 'rewrite', 'apply', 'intros', 'split', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'rewrite', 'elim', 'reflexivity', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'reflexivity']",3,1,1,3,0,5
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_oppZ_r,"['intros', 'case', 'reflexivity', 'simple', 'reflexivity', 'intros', 'do', 'rewrite', 'elim', 'reflexivity', 'intros', 'elim', 'reflexivity', 'intros', 'do', 'rewrite', 'elim', 'reflexivity']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,mult_oppZ_l,"['simple', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'elim', 'elim', 'elim', 'reflexivity', 'intros', 'do', 'rewrite', 'symmetry', 'exact', 'intros', 'elim', 'elim', 'elim', 'reflexivity', 'intros', 'do', 'rewrite', 'symmetry', 'exact']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_mult_pos_posZ,"['intros', 'elim', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'rewrite', 'elim', 'reflexivity']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_mult_neg_negZ,"['intros', 'elim', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'elim', 'reflexivity']",0,0,0,4,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_mult_pos_negZ,"['intros', 'elim', 'simpl', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'rewrite', 'elim', 'reflexivity']",0,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_mult_neg_posZ,"['intros', 'elim', 'simpl', 'reflexivity', 'intros', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'elim', 'reflexivity']",0,0,0,4,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,multZ_associativity,"['unfold', 'intros', 'elim', 'reflexivity', 'simple', 'unfold', 'reflexivity', 'intros', 'do', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'reflexivity', 'simple', 'simpl', 'symmetry', 'exact', 'intros', 'do', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'reflexivity']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,Z_ring,"['unfold', 'split', 'exact', 'split', 'exact', 'split', 'unfold', 'intros', 'exact', 'split', 'exact', 'exact']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,Z_unitary_commutative_ring,"['unfold', 'split', 'exact', 'split', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_integ_posZ,"['intros', 'elim', 'reflexivity', 'intros', 'rewrite', 'intros', 'absurd', 'discriminate', 'exact', 'intros', 'rewrite', 'intros', 'absurd', 'discriminate', 'exact']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_integ_negZ,"['intros', 'elim', 'reflexivity', 'intros', 'rewrite', 'intros', 'absurd', 'discriminate', 'exact', 'intros', 'rewrite', 'intros', 'absurd', 'discriminate', 'exact']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,integrityZ,"['unfold', 'intros', 'elim', 'intros', 'left', 'reflexivity', 'intros', 'right', 'apply', 'exact', 'intros', 'right', 'apply', 'exact']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_mult_pos_succZ,"['intros', 'elim', 'elim', 'intros', 'elim', 'intros', 'replace', 'auto', 'rewrite', 'elim', 'rewrite', 'unfold', 'reflexivity', 'intros', 'elim', 'rewrite', 'elim', 'elim', 'elim', 'elim', 'elim', 'elim', 'unfold', 'rewrite', 'reflexivity']",0,0,0,2,1,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_mult_pos_succZ2,"['intros', 'elim', 'simpl', 'elim', 'elim', 'reflexivity']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div1,"['intros', 'elim', 'elim', 'intros', 'absurd', 'discriminate', 'exact', 'intros', 'unfold', 'rewrite', 'simpl', 'intros', 'elim', 'reflexivity', 'elim', 'intros', 'unfold', 'elim', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'unfold', 'reflexivity', 'intros', 'unfold', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'elim', 'elim', 'simpl', 'reflexivity']",2,2,0,3,0,4
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div2,"['intros', 'elim', 'simpl', 'intros', 'absurd', 'discriminate', 'exact', 'intros', 'unfold', 'rewrite', 'intros', 'simpl', 'rewrite', 'elim', 'simpl', 'elim', 'elim', 'reflexivity']",3,2,0,1,0,4
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div31,"['intros', 'elim', 'unfold', 'rewrite', 'cut', 'intros', 'elim', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'reflexivity', 'reflexivity', 'intros', 'unfold', 'elim', 'rewrite', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'reflexivity']",1,0,0,3,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div32,"['intros', 'elim', 'unfold', 'unfold', 'rewrite', 'elim', 'reflexivity', 'intros', 'unfold', 'unfold', 'symmetry', 'exact']",1,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div3,"['intros', 'elim', 'intros', 'elim', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'elim', 'elim', 'reflexivity']",0,0,0,1,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div4,"['intros', 'cut', 'intros', 'rewrite', 'intros', 'exact', 'cut', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'apply', 'elim', 'reflexivity']",0,0,1,1,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div5,"['intros', 'cut', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'rewrite', 'exact', 'elim', 'reflexivity']",0,0,0,1,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,tech_div6,"['intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'elim', 'rewrite', 'apply']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,inversibleZ,"['simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'left', 'reflexivity', 'simple', 'intros', 'left', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'absurd', 'elim', 'rewrite', 'discriminate', 'intros', 'rewrite', 'elim', 'elim', 'simpl', 'apply', 'discriminate', 'intros', 'rewrite', 'elim', 'elim', 'simpl', 'discriminate', 'exact', 'simple', 'right', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'absurd', 'elim', 'rewrite', 'discriminate', 'intros', 'rewrite', 'elim', 'elim', 'simpl', 'discriminate', 'intros', 'rewrite', 'elim', 'elim', 'simpl', 'apply', 'discriminate', 'exact']",1,1,0,1,0,4
/mnt/cisk/zmq/dataset/data/chinese/Zmult.json,sgn_abs,"['simple', 'reflexivity', 'intros', 'exact', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zdiv.json,divZ,"['intros', 'case', 'intros', 'elim', 'reflexivity', 'case', 'intros', 'apply', 'split', 'discriminate', 'split', 'exact', 'split', 'exact', 'rewrite', 'reflexivity', 'elim', 'intros', 'apply', 'split', 'discriminate', 'split', 'apply', 'split', 'unfold', 'rewrite', 'exact', 'exact', 'elim', 'intros', 'case', 'intro', 'apply', 'split', 'discriminate', 'split', 'exact', 'split', 'exact', 'rewrite', 'apply', 'rewrite', 'rewrite', 'auto', 'apply', 'split', 'discriminate', 'split', 'exact', 'split', 'exact', 'exact', 'case', 'intros', 'apply', 'split', 'discriminate', 'split', 'exact', 'split', 'exact', 'rewrite', 'reflexivity', 'elim', 'intros', 'apply', 'split', 'discriminate', 'split', 'apply', 'split', 'unfold', 'rewrite', 'exact', 'exact', 'elim', 'intros', 'case', 'intro', 'apply', 'unfold', 'split', 'discriminate', 'split', 'exact', 'split', 'exact', 'rewrite', 'apply', 'rewrite', 'rewrite', 'auto', 'apply', 'split', 'discriminate', 'split', 'exact', 'split', 'exact', 'exact']",1,0,3,4,1,4
/mnt/cisk/zmq/dataset/data/chinese/rings.json,mult_O,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'split', 'apply', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'reflexivity', 'apply', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'reflexivity']",0,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/chinese/rings.json,mult_opp_r,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'apply', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'elim', 'clear', 'pattern', 'elim', 'elim', 'clear', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'rewrite', 'auto']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/chinese/rings.json,mult_opp_l,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'apply', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'elim', 'clear', 'pattern', 'elim', 'elim', 'clear', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'rewrite', 'auto']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/chinese/rings.json,mult_opp_opp,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'rewrite', 'rewrite', 'symmetry', 'exact']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/chinese/rings.json,div_O_O,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'left', 'reflexivity']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/rings.json,div_add,"['unfold', 'intros', 'split', 'elim', 'trivial', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'clear', 'right', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'split', 'exact', 'clear', 'exists', 'split', 'exact', 'elim', 'intros', 'clear', 'rewrite', 'clear', 'elim', 'elim', 'reflexivity']",2,0,1,1,0,5
/mnt/cisk/zmq/dataset/data/chinese/rings.json,div_mult,"['unfold', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'left', 'reflexivity', 'clear', 'right', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'exists', 'elim', 'intros', 'split', 'exact', 'rewrite', 'elim', 'reflexivity']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/chinese/rings.json,div_opp,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'rewrite', 'left', 'exact', 'clear', 'right', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'exists', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'rewrite', 'elim', 'reflexivity']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/chinese/rings.json,gcd_null,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'reflexivity', 'elim', 'intros', 'elim', 'reflexivity']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/rings.json,gcd_null2,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'reflexivity']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/rings.json,simplification_integrity,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'rewrite', 'symmetry', 'apply', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'clear', 'elim', 'intros', 'elim', 'exact', 'exact', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'clear', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",1,0,3,2,0,3
/mnt/cisk/zmq/dataset/data/chinese/rings.json,gcd_unicity_apart_unities,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exists', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exists', 'exact', 'split', 'exact', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'symmetry', 'exact', 'exact', 'pattern', 'elim', 'elim', 'exact', 'elim', 'exact', 'elim', 'intros', 'elim', 'intros', 'exists', 'elim', 'intros', 'elim', 'intros', 'split', 'apply', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'exact', 'elim', 'intros', 'elim', 'intros', 'exists', 'elim', 'intro', 'clear', 'elim', 'intro', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'symmetry', 'exact', 'exact']",1,0,1,3,0,6
/mnt/cisk/zmq/dataset/data/chinese/rings.json,opp_O,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'exact']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_eq3,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_eq4,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_eq5,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,succ_addZ_l,"['intros', 'elim', 'reflexivity', 'trivial', 'simple', 'simpl', 'symmetry', 'exact', 'intros', 'symmetry', 'rewrite', 'apply']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,pred_addZ_l,"['intros', 'elim', 'reflexivity', 'simple', 'simpl', 'rewrite', 'trivial', 'intros', 'rewrite', 'rewrite', 'trivial', 'trivial']",0,1,0,2,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,succ_addZ_r,"['intros', 'elim', 'reflexivity', 'simple', 'reflexivity', 'intros', 'do', 'elim', 'reflexivity', 'simple', 'simpl', 'symmetry', 'apply', 'intros', 'do', 'rewrite', 'symmetry', 'apply']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,pred_addZ_r,"['intros', 'elim', 'reflexivity', 'simple', 'simpl', 'apply', 'intros', 'do', 'rewrite', 'apply', 'simple', 'reflexivity', 'intros', 'do', 'elim', 'reflexivity']",1,2,1,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,add_OZ,"['simple', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'reflexivity', 'simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'reflexivity']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,add_IZ_succZ,"['intros', 'cut', 'intros', 'elim', 'rewrite', 'rewrite', 'reflexivity', 'reflexivity']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,add_mIZ_predZ,"['intros', 'cut', 'intros', 'elim', 'rewrite', 'rewrite', 'reflexivity', 'reflexivity']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_commutativity,"['unfold', 'intros', 'elim', 'simpl', 'symmetry', 'exact', 'simple', 'simpl', 'symmetry', 'exact', 'intros', 'rewrite', 'rewrite', 'cut', 'intros', 'elim', 'rewrite', 'reflexivity', 'reflexivity', 'simple', 'simpl', 'symmetry', 'exact', 'intros', 'rewrite', 'rewrite', 'cut', 'intros', 'elim', 'rewrite', 'reflexivity', 'reflexivity']",2,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,tech_add_pos_neg_posZ,"['simple', 'intros', 'elim', 'rewrite', 'elim', 'trivial', 'elim', 'apply', 'trivial', 'intros', 'elim', 'rewrite', 'elim', 'rewrite', 'auto', 'elim', 'apply', 'apply', 'trivial']",1,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_associativity,"['unfold', 'intros', 'elim', 'unfold', 'reflexivity', 'intros', 'elim', 'simpl', 'symmetry', 'exact', 'intros', 'do', 'rewrite', 'elim', 'reflexivity', 'simple', 'simpl', 'symmetry', 'exact', 'intros', 'do', 'rewrite', 'elim', 'reflexivity']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_neutral,"['unfold', 'intros', 'split', 'exact', 'intros', 'split', 'exact', 'unfold', 'reflexivity']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,opp_succZ,"['simple', 'reflexivity', 'intros', 'reflexivity', 'simple', 'intros', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,opp_predZ,"['simple', 'reflexivity', 'simple', 'intros', 'reflexivity', 'intros', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,tech_add_pos_negZ,"['simple', 'reflexivity', 'intros', 'rewrite', 'elim', 'exact']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,tech_add_neg_posZ,"['intros', 'elim', 'exact']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,tech_add_pos_posZ,"['intros', 'elim', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'reflexivity']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,tech_add_neg_negZ,"['simple', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'reflexivity']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,addZ_opposite,"['repeat', 'trivial', 'case', 'reflexivity', 'intros', 'exact', 'intros', 'exact', 'case', 'reflexivity', 'intros', 'exact', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,Z_group,"['split', 'red', 'trivial', 'split', 'exact', 'split', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,abs_eq_or_oppZ,"['simple', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zadd.json,tech_opp_pos_negZ,"['simple', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,gcd_unicity_apart_sign,"['intros', 'elim', 'intros', 'elim', 'intros', 'left', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'right', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'exact', 'elim', 'intros', 'exact']",0,1,1,2,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,gcd_OZ_absZ,"['intros', 'elim', 'intro', 'rewrite', 'unfold', 'split', 'unfold', 'unfold', 'split', 'exact', 'split', 'exact', 'left', 'reflexivity', 'split', 'unfold', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intro', 'left', 'exact', 'right', 'split', 'exact', 'exists', 'split', 'exact', 'symmetry', 'exact', 'intros', 'exact', 'rewrite', 'unfold', 'split', 'unfold', 'unfold', 'split', 'exact', 'split', 'exact', 'left', 'reflexivity', 'split', 'unfold', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intro', 'left', 'exact', 'right', 'split', 'unfold', 'intros', 'elim', 'exact', 'exists', 'split', 'exact', 'rewrite', 'symmetry', 'exact', 'exact', 'split', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'left', 'reflexivity', 'right', 'split', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'intros', 'exists', 'split', 'exact', 'elim', 'intros', 'rewrite', 'symmetry', 'exact']",2,1,2,3,0,4
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,acc_P,"['intros', 'case', 'intro', 'unfold', 'intro', 'split', 'rewrite', 'apply', 'unfold', 'intro', 'elim', 'intros', 'cut', 'intros', 'elim', 'intros', 'split', 'apply', 'trivial', 'inversion', 'decompose', 'unfold', 'rewrite', 'exact', 'exact']",1,0,2,2,0,6
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,gcdZ_exists,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,gcdZ_is_gcd,"['intros', 'elim', 'intros', 'apply', 'unfold', 'split', 'elim', 'intros', 'elim', 'intros', 'exact', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'cut', 'intros', 'rewrite', 'apply', 'apply', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'symmetry', 'exact', 'exact']",1,0,4,2,0,3
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,positive_is_gcdZ,"['intros', 'elim', 'intros', 'apply', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,unicity_is_gcdZ,"['intros', 'elim', 'intros', 'exact', 'intros', 'apply']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,gcdZ_is_gcdZ,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,gcd_modZ,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,acc_Q,"['intros', 'case', 'intro', 'unfold', 'intro', 'split', 'rewrite', 'simpl', 'rewrite', 'apply', 'apply', 'unfold', 'intro', 'elim', 'intros', 'intros', 'cut', 'intros', 'elim', 'intros', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'pattern', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'rewrite', 'elim', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'unfold', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'trivial', 'exact']",1,2,2,3,0,6
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,Bezout_exists,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,divide_selfZ,"['intros', 'unfold', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'left', 'exact', 'right', 'split', 'exact', 'exists', 'split', 'exact', 'symmetry', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/Zgcd.json,chinese_remaindering_theorem,"['intros', 'elim', 'intros', 'exists', 'unfold', 'split', 'replace', 'elim', 'intros', 'rewrite', 'clear', 'rewrite', 'elim', 'rewrite', 'elim', 'elim', 'rewrite', 'elim', 'elim', 'elim', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'rewrite', 'apply', 'apply', 'apply', 'elim', 'elim', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'exact', 'cut', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'rewrite', 'clear', 'rewrite', 'elim', 'rewrite', 'elim', 'elim', 'rewrite', 'elim', 'elim', 'elim', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'rewrite', 'apply', 'apply', 'apply', 'elim', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'clear', 'symmetry', 'exact']",0,0,1,2,0,4
/mnt/cisk/zmq/dataset/data/chinese/groups.json,regular_l,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'clear', 'elim', 'intros', 'elim', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'elim', 'elim', 'elim', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/groups.json,add_add,"['intros', 'rewrite', 'elim', 'elim', 'rewrite', 'elim', 'reflexivity']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/chinese/groups.json,opp_unicity,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'elim', 'elim', 'intros', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'exact']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/chinese/groups.json,opp_opp,"['intros', 'apply', 'unfold', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'trivial', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'auto']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/chinese/groups.json,opp_add,"['intros', 'symmetry', 'apply', 'unfold', 'split', 'elim', 'intros', 'apply', 'split', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'apply', 'elim', 'intros', 'elim', 'intros', 'clear', 'rewrite', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'clear', 'elim', 'intros', 'exact']",1,0,3,2,0,2
/mnt/cisk/zmq/dataset/data/chinese/groups.json,opp_neutral,"['intros', 'elim', 'reflexivity', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/EnsemblesProperties.json,not_finite_witnessed_finite_captured,"['intros', 'hnf', 'intros', 'intro', 'specialize', 'firstorder']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/EnsemblesProperties.json,not_superset_preserved_subset_preserved,"['intros', 'hnf', 'firstorder']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/EnsemblesProperties.json,superset_preserved_same_set_preserved,"['intros', 'hnf', 'intros', 'rewrite', 'split', 'apply', 'unfold', 'hnf', 'firstorder', 'unfold', 'hnf', 'firstorder']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/EnsemblesProperties.json,subset_preserved_same_set_preserved,"['intros', 'hnf', 'intros', 'rewrite', 'split', 'apply', 'unfold', 'hnf', 'firstorder', 'unfold', 'hnf', 'firstorder']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bisimulation.json,eq_bis,"['constructor', 'intros', 'exists', 'subst', 'auto', 'exists', 'subst', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bisimulation.json,full_bis,"['constructor', 'intros', 'destruct', 'exists', 'auto', 'destruct', 'exists', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Countable.json,unit_Countable,"['apply', 'hnf', 'intros', 'destruct', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,list_Reflexive,"['hnf', 'intros', 'induction', 'constructor', 'reflexivity', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,list_Symmetric,"['hnf', 'intros', 'revert', 'induction', 'intros', 'destruct', 'try', 'constructor', 'inversion', 'subst', 'symmetry', 'auto', 'inversion', 'subst', 'apply', 'auto']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,list_Transitive,"['hnf', 'intros', 'revert', 'induction', 'intros', 'destruct', 'try', 'subst', 'inversion', 'constructor', 'inversion', 'inversion', 'subst', 'etransitivity', 'eauto', 'inversion', 'inversion', 'subst', 'eapply', 'eauto']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,list_Equivalence,"['split', 'apply', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,resp_Reflexive,"['intros', 'hnf', 'intros', 'unfold', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,resp_Symmetric,"['intros', 'hnf', 'intros', 'unfold', 'symmetry', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,resp_Transitive,"['intros', 'hnf', 'intros', 'unfold', 'transitivity', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Equivalence_ext.json,resp_Equivalence,"['destruct', 'split', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,prop_ext,"['hnf', 'intros', 'set', 'set', 'assert', 'apply', 'split', 'subst', 'unfold', 'intros', 'tauto', 'change', 'change', 'rewrite', 'auto']",2,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,fin_subset_match,"['intros', 'induction', 'exists', 'split', 'constructor', 'inversion', 'subst', 'specialize', 'destruct', 'specialize', 'destruct', 'exists', 'split', 'constructor', 'auto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,Forall2_lr_rev,"['intros', 'induction', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,Forall_app_iff,"['intros', 'induction', 'intros', 'simpl', 'assert', 'tauto', 'simpl', 'split', 'intros', 'inversion', 'subst', 'split', 'try', 'constructor', 'auto', 'tauto', 'destruct', 'inversion', 'subst', 'constructor', 'auto', 'tauto']",2,0,0,0,1,5
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,remove_rel_In,"['intros', 'induction', 'intros', 'auto', 'intros', 'auto']",1,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,remove_rel_exist,"['intros', 'induction', 'exists', 'apply', 'destruct', 'destruct', 'exists', 'subst', 'apply', 'auto', 'exists', 'subst', 'apply', 'auto']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,remove_rel_result_belong,"['intros', 'induction', 'auto', 'simpl', 'revert', 'apply', 'intros', 'auto', 'constructor', 'simpl', 'auto', 'revert', 'apply', 'intros', 'auto']",1,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,nth_error_in_bounds,"['intros', 'intros', 'revert', 'induction', 'destruct', 'intros', 'simpl', 'try', 'apply', 'omega']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,nth_error_app,"['intros', 'induction', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,nth_error_app1,"['intros', 'revert', 'induction', 'destruct', 'simpl', 'intros', 'auto', 'try', 'apply', 'omega']",1,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,nth_error_None_iff,"['intros', 'revert', 'induction', 'intros', 'destruct', 'simpl', 'split', '[intros _', 'omega', 'split', '[intros _', 'omega', 'split', '[intros', 'inversion', 'rewrite', 'omega']",1,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Coqlib.json,Forall_rev,"['intros', 'rewrite', 'pose', 'firstorder']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,inclusion_full_relation,"['intros', 'hnf', 'intros', 'hnf', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,same_relation_spec,"['intros', 'unfold', 'firstorder']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,same_relation_Reflexive,"['hnf', 'intros', 'rewrite', 'unfold', 'firstorder']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,same_relation_Symmetric,"['hnf', 'intros', 'rewrite', 'unfold', 'firstorder']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,same_relation_Transitive,"['hnf', 'intros', 'rewrite', 'unfold', 'intros', 'rewrite', 'tauto']",2,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,same_relation_Equivalence,"['split', 'apply', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,inclusion_proper,"['intros', 'do', 'intros', 'unfold', 'rewrite', 'split', 'intros', 'specialize', 'rewrite', 'auto', 'rewrite', 'auto']",1,0,0,2,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,app_same_relation,"['intros', 'rewrite', 'specialize', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,compond_relation_spec,"['intros', 'inversion', 'subst', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,compond_relation_inclusion,"['intros', 'hnf', 'intros', 'inversion', 'subst', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,compond_relation_proper,"['do', 'intros', 'destruct', 'split', 'apply', 'auto', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,compond_assoc,"['intros', 'split', 'hnf', 'intros', 'do', 'subst', 'clear', 'do', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,compond_eq_right,"['intros', 'split', 'hnf', 'intros', 'inversion', 'subst', 'auto', 'econstructor', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,compond_eq_left,"['intros', 'split', 'hnf', 'intros', 'inversion', 'subst', 'auto', 'econstructor', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,relation_conjunction_inclusion,"['intros', 'hnf', 'intros', 'inversion', 'subst', 'split', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,relation_conjunction_proper,"['do', 'intros', 'destruct', 'split', 'apply', 'auto', 'Defined']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,relation_conjunction_iff,"['intros', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,relation_disjunction_iff,"['intros', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,relation_disjunction_inclusion_left,"['intros', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,relation_disjunction_inclusion_right,"['intros', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,respectful_relation_proper,"['hnf', 'intros', 'rewrite', 'intros', 'unfold', 'apply', 'Defined']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,respectful_compond_relation,"['intros', 'intros', 'inversion', 'subst', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,function_Functional,"['hnf', 'intros', 'exists', 'intros', 'split', 'intros', 'congruence']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,SerialPartialFunctional_Functional,"['intros', 'hnf', 'intros', 'destruct', 'exists', 'intros', 'split', 'intros', 'eapply', 'eauto', 'subst', 'auto']",0,0,0,0,0,5
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,Functional_PartialFunctional,"['intros', 'hnf', 'intros', 'destruct', 'rewrite', 'congruence']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Relation_ext.json,Functional_Serial,"['intros', 'hnf', 'intros', 'destruct', 'exists', 'rewrite', 'auto']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/StrongInduction.json,strong_induction,"['intros', 'assert', 'intro', 'induction', 'intros', 'omega', 'intros', 'destruct', 'apply', 'auto', 'assert', 'subst', 'apply', 'auto', 'intros', 'apply', 'constructor']",2,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,RelProd_Preorder,"['intros', 'destruct', 'constructor', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,RelProd_PartialFunctional,"['intros', 'hnf', 'intros', 'destruct', 'hnf', 'simpl', 'f_equal', 'eapply', 'eauto', 'eapply', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,RelProd_Bisimulation,"['intros', 'constructor', 'intros', 'intros', 'hnf', 'simpl', 'destruct', 'destruct', 'exists', 'auto', 'intros', 'hnf', 'simpl', 'destruct', 'destruct', 'exists', 'auto']",0,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,RelProd_Inclusion,"['intros', 'hnf', 'intros', 'destruct', 'split', 'eapply', 'eauto', 'eapply', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,pointwise_preorder,"['intros', 'destruct', 'constructor', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,option00_reflexive,"['hnf', 'intros', 'destruct', 'constructor', 'reflexivity', 'constructor']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,option01_reflexive,"['hnf', 'intros', 'destruct', 'constructor', 'reflexivity', 'constructor']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,option00_transitive,"['hnf', 'intros', 'hnf', 'intros', 'inversion', 'inversion', 'subst', 'try', 'inversion', 'subst', 'etransitivity', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,option01_transitive,"['hnf', 'intros', 'hnf', 'intros', 'inversion', 'inversion', 'subst', 'try', 'inversion', 'subst', 'etransitivity', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,sum00_reflexive,"['hnf', 'intros', 'destruct', 'constructor', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,sum01_reflexive,"['hnf', 'intros', 'destruct', 'constructor', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,sum00_transitive,"['hnf', 'intros', 'inversion', 'subst', 'inversion', 'subst', 'constructor', 'etransitivity', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,sum01_transitive,"['hnf', 'intros', 'inversion', 'subst', 'inversion', 'subst', 'constructor', 'etransitivity', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,true_reflexive,"['hnf', 'intros', 'hnf', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/RelationPairs_ext.json,true_transitive,"['hnf', 'intros', 'hnf', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Full_set_spec,"['intros', 'split', 'intros', 'constructor']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Empty_set_spec,"['intros', 'split', 'intros']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_spec,"['intros', 'split', 'intros', 'inversion', 'auto', 'constructor', 'tauto']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_spec,"['intros', 'split', 'intros', 'inversion', 'auto', 'destruct', '[apply Union_introl | apply Union_intror]', 'auto']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Singleton_spec,"['intros', 'split', 'intro', 'inversion', 'auto', 'subst', 'constructor']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Included_Full_set,"['intros', 'hnf', 'unfold', 'intros', 'apply', 'auto']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_Complement,"['intros', 'unfold', 'split', 'intros', 'rewrite', 'rewrite', 'tauto', 'rewrite', 'rewrite', 'tauto']",1,0,0,2,2,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_iff,"['intros', 'split', 'intros', 'apply', 'auto', 'destruct', '[apply Union_introl | apply Union_intror]', 'auto']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Empty_set_iff,"['intros', 'split', 'intro', 'inversion']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Singleton_iff,"['intros', 'split', 'intro', 'inversion', 'auto', 'subst', 'constructor']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Same_set_refl,"['intros', 'split', 'intro', 'tauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Same_set_sym,"['intros', 'destruct', 'split', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Same_set_trans,"['intros', 'destruct', 'split', 'repeat', '[apply H0, H, H3 | apply H1, H2, H3].']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Same_set_spec,"['intros', 'unfold', 'firstorder']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Complement_Empty_set,"['intros', 'rewrite', 'intro', 'unfold', 'pose', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_comm,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_assoc,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_comm,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_assoc,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_Union_distr_l,"['intros', 'rewrite', 'intro', 'rewrite', 'tauto']",0,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_Union_distr_r,"['intros', 'rewrite', 'intro', 'rewrite', 'tauto']",0,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Included_proper,"['hnf', 'intros', 'hnf', 'intros', 'rewrite', 'unfold', 'firstorder', 'Defined']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,complement_proper,"['hnf', 'intros', 'rewrite', 'hnf', 'intros', 'unfold', 'specialize', 'tauto', 'Defined']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_proper,"['hnf', 'intros', 'hnf', 'intros', 'rewrite', 'unfold', 'intros', 'rewrite', 'firstorder', 'Defined']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Disjoint_proper,"['hnf', 'intros', 'hnf', 'intros', 'rewrite', 'unfold', 'rewrite', 'firstorder', 'Defined']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_Included,"['intros', 'unfold', 'pose', 'firstorder']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,left_Included_Union,"['intros', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,right_Included_Union,"['intros', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_Empty_left,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_Empty_right,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_Full_left,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_Full_right,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_Empty_left,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_Empty_right,"['intros', 'rewrite', 'hnf', 'intros', 'rewrite', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_absort_right,"['intros', 'rewrite', 'intro', 'rewrite', 'specialize', 'unfold', 'tauto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_absort_left,"['intros', 'rewrite', 'intro', 'rewrite', 'specialize', 'unfold', 'tauto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Complement_Included_rev,"['unfold', 'intros', 'firstorder']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_proper,"['do', 'intros', 'rewrite', 'intro', 'specialize', 'specialize', 'rewrite', 'tauto', 'Defined']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Included_Disjoint,"['intros', 'rewrite', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_left_Disjoint,"['intros', 'rewrite', 'pose', 'firstorder']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_right_Disjoint,"['intros', 'rewrite', 'pose', 'firstorder']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Included_Complement_Disjoint,"['intros', 'unfold', 'rewrite', 'firstorder']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Disjoint_comm,"['intros', 'rewrite', 'firstorder']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Disjoint_Empty_set_right,"['intros', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Disjoint_Empty_set_left,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Included_trans,"['unfold', 'intros', 'firstorder']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection1_Included,"['unfold', 'intros', 'rewrite', 'firstorder']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection2_Included,"['unfold', 'intros', 'rewrite', 'firstorder']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Included_refl,"['intros', 'hnf', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_set_spec,"['intros', 'split', 'intros', 'inversion', 'subst', 'exists', 'split', 'auto', 'destruct', 'subst', 'constructor', 'auto']",0,0,0,0,1,5
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,respectful_set_proper,"['intros', 'do', 'intros', 'rewrite', 'unfold', 'unfold', 'firstorder', 'rewrite', 'firstorder', 'rewrite', 'firstorder']",0,1,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_set_proper2,"['intros', 'do', 'intros', 'rewrite', 'unfold', 'intros', 'rewrite', 'firstorder', 'subst', 'firstorder', 'subst', 'firstorder']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,resp_Included,"['intros', 'unfold', 'intro', 'apply']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,resp_Same_set,"['intros', 'unfold', 'split', 'apply', 'tauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,resp_Intersection,"['intros', 'rewrite', 'intros', 'unfold', 'rewrite', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,resp_Union,"['intros', 'rewrite', 'intros', 'unfold', 'rewrite', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,resp_Complement,"['intros', 'rewrite', 'intros', 'unfold', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,resp_Disjoint,"['intros', 'rewrite', 'rewrite', 'apply', 'auto']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,resp_Empty,"['intros', 'rewrite', 'intro', 'pose', 'pose', 'firstorder']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_Included,"['intros', 'unfold', 'intro', 'rewrite', 'intros', 'exists', 'split', 'auto', 'apply', 'auto']",2,0,1,1,2,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_Same_set,"['intros', 'unfold', 'split', 'apply', 'tauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_Intersection,"['intros', 'unfold', 'intros', 'rewrite', 'intros', 'rewrite', 'split', 'exists', 'tauto']",3,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_Union,"['intros', 'rewrite', 'intros', 'rewrite', 'pose', 'firstorder']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_Disjoint_rev,"['intros', 'rewrite', 'intros', 'apply', 'constructor', 'auto']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_Empty,"['intros', 'rewrite', 'intro', 'rewrite', 'pose', 'pose', 'firstorder']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,image_single,"['intros', 'rewrite', 'intro', 'rewrite', 'split', 'intros', 'eauto', 'destruct', 'subst', 'auto']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Union_is_Countable_Union,"['intros', 'rewrite', 'intros', 'rewrite', 'unfold', 'split', 'intros', 'exists', 'auto', 'exists', 'auto', 'intros', 'left', 'auto', 'right', 'auto', 'intros', 'inversion']",0,0,0,2,2,4
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Ensembles_ext.json,Intersection_is_Complement_Union,"['intros', 'rewrite', 'intros', 'unfold', 'rewrite', 'destruct', 'tauto']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,FBuild_injection,"['apply', 'hnf', 'intros', 'eauto', 'hnf', 'intros', 'congruence', 'hnf', 'intros', 'apply', 'congruence', 'Defined']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,FBuild_surjection,"['apply', 'hnf', 'intros', 'eauto', 'hnf', 'intros', 'congruence', 'hnf', 'intros', 'apply', 'congruence', 'Defined']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,FBuild_bijection,"['apply', 'hnf', 'intros', 'eauto', 'hnf', 'intros', 'congruence', 'hnf', 'intros', 'apply', 'congruence', 'hnf', 'intros', 'apply', 'Defined']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,injection_trans,"['intros', 'apply', 'hnf', 'intros', 'destruct', 'destruct', 'exists', 'eauto', 'hnf', 'intros', 'pose', 'subst', 'pose', 'auto', 'hnf', 'intros', 'pose', 'subst', 'pose', 'auto', 'Defined']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,bijection_sym,"['apply', 'hnf', 'apply', 'hnf', 'intros', 'apply', 'auto', 'hnf', 'intros', 'apply', 'auto', 'hnf', 'apply', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,bijection_refl,"['apply', 'hnf', 'intros', 'eauto', 'hnf', 'intros', 'congruence', 'hnf', 'intros', 'congruence', 'hnf', 'intros', 'eauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,sum_injection,"['intros', 'apply', 'hnf', 'intros', 'destruct', 'destruct', 'exists', 'auto', 'destruct', 'exists', 'auto', 'hnf', 'intros', 'destruct', 'try', 'f_equal', 'apply', 'auto', 'f_equal', 'apply', 'auto', 'hnf', 'intros', 'destruct', 'try', 'f_equal', 'apply', 'auto', 'f_equal', 'apply', 'auto', 'Defined']",1,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,prod_injection,"['intros', 'apply', 'hnf', 'intros', 'destruct', 'destruct', 'exists', 'auto', 'hnf', 'intros', 'destruct', 'pose', 'pose', 'simpl', 'subst', 'auto', 'hnf', 'intros', 'destruct', 'pose', 'pose', 'simpl', 'subst', 'auto', 'Defined']",1,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,sigT_injection,"['apply', 'hnf', 'intros', 'destruct', 'destruct', 'exists', 'auto', 'hnf', 'intros', 'destruct', 'simpl', 'destruct', 'simpl', 'destruct', 'subst', 'pose', 'subst', 'auto', 'hnf', 'intros', 'destruct', 'simpl', 'subst', 'destruct', 'simpl', 'subst', 'pose', 'subst', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Bijection.json,nat2_nat_bijection,"['apply', 'hnf', 'intros', 'destruct', 'eauto', 'hnf', 'intros', 'destruct', 'inversion', 'inversion', 'auto', 'hnf', 'intros', 'destruct', 'inversion', 'inversion', 'destruct', 'try', 'subst', 'auto', 'hnf', 'intros', 'destruct', 'rewrite', 'exists', 'rewrite', 'omega', 'rewrite', 'exists', 'rewrite', 'omega', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/NatChoice.json,fisrtn_list_step,"['intros', 'induction', 'simpl', 'reflexivity', 'simpl', 'f_equal', 'auto']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/NatChoice.json,nat_coinduction,"['intros', 'pose', 'destruct', 'simpl', 'auto', 'intro', 'revert', 'induction', 'simpl', 'intros', 'destruct', 'exists', 'auto', 'simpl', 'intros', 'specialize', 'destruct', 'exists', 'auto', 'exists', 'split', 'auto', 'intros', 'specialize', 'destruct', '[simpl in H1', 'tauto', 'simpl', 'rewrite', 'simpl', 'clear', 'revert', 'induction', 'intros', 'simpl', 'tauto', 'apply', 'clear', 'simpl', 'simpl', 'tauto']",3,5,0,0,5,5
/mnt/cisk/zmq/dataset/data/UnifySL/lib/NatChoice.json,nat_coinduction',"['intros', 'pose', 'destruct', 'simpl', 'unfold', 'firstorder', 'exists', 'split', 'auto', 'split', ""[subst R'"", 'firstorder', 'intros', 'destruct', '[subst', 'auto', 'specialize', 'destruct', 'auto']",0,1,0,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,proper_fold_left,"['intros', 'hnf', 'intros', 'induction', 'hnf', 'intros', 'simpl', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,monoid_fold_left_tail,"['intros', 'simpl', 'pose', 'revert', 'induction', 'intros', 'simpl', 'reflexivity', 'apply']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,monoid_fold_left_head,"['intros', 'simpl', 'pose', 'rewrite', 'revert', 'induction', 'intros', 'simpl', 'symmetry', 'auto', 'rewrite', 'rewrite', 'reflexivity']",2,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,monoid_fold_symm,"['intros', 'pose', 'destruct', 'simpl', 'reflexivity', 'simpl', 'rewrite', 'revert', 'induction', 'intros', 'simpl', 'symmetry', 'auto', 'rewrite', 'apply']",2,1,0,1,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,monoid_fold_left_app,"['intros', 'rewrite', 'generalize', 'clear', 'intros', 'pose', 'simpl', 'pose', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,proper_fold_left',"['intros', 'hnf', 'intros', 'induction', 'hnf', 'intros', 'simpl', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,not_nil_app_l,"['intros', 'hnf', 'destruct', 'intros', 'simpl', 'congruence']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,eq_nil_dec,"['intros', 'destruct', '[left | right]', 'auto', 'intro', 'congruence']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,Proper_perm_not_nil,"['hnf', 'intros', 'induction', 'unfold', 'reflexivity', 'split', 'intros', 'congruence', 'split', 'intros', 'congruence', 'tauto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,proper_semi_group_fold,"['intros', 'hnf', 'intros', 'destruct', 'reflexivity', 'simpl', 'apply', 'auto']",0,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,semi_group_fold_app,"['intros', 'destruct', 'hnf', 'try', 'clear', 'revert', 'induction', 'intros', 'simpl', 'revert', 'induction', 'intros', 'simpl', 'reflexivity', 'specialize', 'simpl', 'rewrite', 'clear', 'specialize', 'set', 'set', 'clearbody', 'clear', 'revert', 'induction', 'intros', 'auto', 'simpl', 'apply', 'rewrite', 'reflexivity', 'exact']",2,2,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,comm_semi_group_fold_perm,"['intros', 'induction', 'reflexivity', 'destruct', 'subst', 'apply', 'subst', 'reflexivity', 'pose', 'rewrite', 'change', 'change', 'rewrite', 'intro', 'congruence', 'rewrite', 'intro', 'congruence', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'auto']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,Forall2_impl,"['intros', 'induction', 'constructor', 'constructor', 'auto', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/List_Func_ext.json,Forall2_rev,"['intros', 'induction', 'constructor', 'constructor', 'auto', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,stream_sound1,"['intros', 'destruct', 'auto', 'simpl', 'apply', 'omega']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,stream_sound2,"['intros', 'pose', 'destruct', 'eauto', 'specialize', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,stream_extensionality,"['intros', 'destruct', 'simpl', 'assert', 'auto', 'subst', 'assert', 'subst', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,n_stream_inf_stream_conflict,"['intros', 'destruct', 'exact']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_most_n_stream_Sn,"['intros', 'split', '[intro | intros [? | ?]].', 'destruct', 'right', 'split', 'auto', 'intros', 'intro', 'rewrite', 'omega', 'congruence', 'left', 'auto', 'hnf', 'rewrite', 'omega', 'auto', 'destruct', 'auto']",0,0,0,1,2,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_most_n_stream_0,"['intros', 'split', 'intros', 'split', 'auto', 'intros', 'omega', 'destruct', 'auto']",0,0,0,0,2,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_most_n_stream_spec,"['intros', 'induction', 'rewrite', 'split', 'intros', 'exists', 'split', '[omega | auto].', 'destruct', 'replace', 'auto', 'rewrite', 'rewrite', 'split', 'intros', 'destruct', 'exists', 'split', '[omega | auto].', 'exists', 'split', '[omega | auto].', 'destruct', 'destruct', 'left', 'exists', 'split', 'auto', 'right', 'replace', 'auto']",0,0,0,1,2,8
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,is_fin_stream_spec,"['intros', 'split', 'intro', 'destruct', 'apply', 'destruct', 'exists', 'auto', 'destruct', 'exists', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_most_n_stream_mono,"['intros', 'rewrite', 'destruct', 'exists', 'split', '[omega | auto].']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_most_n_stream_is_fin_stream,"['intros', 'rewrite', 'rewrite', 'destruct', 'exists', 'auto']",0,0,0,2,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,n_stream_or_inf_stream,"['intros', 'destruct', 'left', 'rewrite', 'auto', 'right', 'hnf', 'intros', 'intro', 'apply', 'clear', 'exists', 'auto']",0,0,0,1,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_least_n_stream_Sn,"['intros', 'split', '[intro | intros [? ?]].', 'split', 'hnf', 'intros', 'apply', 'omega', 'intros', 'exact', 'hnf', 'intros', 'intro', 'apply', 'clear', 'split', 'specialize', 'replace', 'auto', 'intros', 'apply', 'auto']",1,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_least_n_stream_0,"['intros', 'split', 'auto', 'intros', 'hnf', 'intros', 'omega']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_least_n_stream_spec,"['intros', 'induction', 'rewrite', 'split', 'auto', 'intros', 'destruct', 'left', 'exists', 'split', '[omega | auto].', 'right', 'auto', 'rewrite', 'rewrite', 'split', 'intros', 'destruct', 'left', 'exists', 'split', '[| auto].', 'destruct', '[subst', 'tauto', 'right', 'auto', 'destruct', 'split', '++', 'left', 'exists', 'split', '[omega | auto].', '++', 'intro', 'pose', 'omega', 'split', '++', 'right', 'auto', '++', 'intros', 'exact']",0,0,1,1,3,5
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,is_inf_stream_spec,"['intros', 'split', 'intro', 'intros', 'intros', 'exact', 'destruct', '[| auto].', 'exfalso', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_least_n_stream_mono,"['intros', 'rewrite', 'destruct', 'left', 'exists', 'split', '[omega | auto].', 'right', 'auto']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,inf_stream_is_at_least_n_stream_is_fin_stream,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_most_n_stream_or_at_least_Sn_stream,"['intros', 'destruct', '[destruct (lt_dec n m) |].', 'right', 'rewrite', 'left', 'exists', 'split', '[omega | tauto].', 'left', 'rewrite', 'exists', 'split', '[omega | tauto].', 'right', 'rewrite', 'right', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/SigStream.json,at_most_n_stream_or_at_least_n_stream,"['intros', 'destruct', 'left', 'auto', 'right', 'eapply', '[| eassumption].', 'omega']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,fin_stream,"['exists', 'intros', 'rewrite', 'omega', 'Defined']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,inf_stream,"['exists', 'intros', 'congruence', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,fin_stream_fin,"['intros', 'exists', 'simpl', 'rewrite', 'auto']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,inf_stream_inf,"['intros', 'hnf', 'intros', 'simpl', 'congruence']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,fin_stream_n_stream,"['intros', 'split', 'simpl', 'apply', 'omega', 'intros', 'simpl', 'rewrite', 'omega']",1,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,empty_stream_spec,"['intros', 'simpl', 'destruct', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,empty_stream_is_empty,"['split', 'apply', 'intros', 'omega']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_spec,"['intros', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_empty_stream,"['intros', 'stream_extensionality', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_n_stream,"['intros', 'split', 'intro', 'destruct', 'split', 'rewrite', 'auto', 'intros', 'specialize', 'destruct', 'rewrite', 'congruence', 'destruct', 'split', 'destruct', 'rewrite', 'congruence', 'intros', 'specialize', 'destruct', 'rewrite', 'congruence']",0,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_inf_stream,"['intros', 'split', 'intro', 'hnf', 'intros', 'specialize', 'destruct', 'rewrite', 'congruence', 'hnf', 'intros', 'specialize', 'destruct', 'rewrite', 'congruence']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_fin_stream,"['intros', 'rewrite', 'apply', 'intros', 'apply', 'auto']",2,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_at_least_n_stream,"['intros', 'rewrite', 'apply', 'apply', 'intro', 'apply', '[reflexivity |].', 'apply', 'auto', 'apply', 'auto']",1,0,2,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_at_most_n_stream,"['intros', 'rewrite', 'apply', 'intro', 'apply', '[reflexivity |].', 'apply', 'auto']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,skipn_stream,"['exists', 'intros', 'revert', 'apply', 'omega', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,fstn_stream_Some,"['intros', 'simpl', 'destruct', 'auto', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,fstn_stream_None,"['intros', 'simpl', 'destruct', 'auto', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,fstn_stream_is_n_stream,"['intros', 'hnf', 'split', 'rewrite', 'auto', 'intros', 'rewrite', 'apply', 'omega']",0,0,0,3,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,fstn_stream_eq,"['intros', 'hnf', 'stream_extensionality', 'destruct', 'rewrite', 'auto', 'rewrite', 'symmetry', 'apply', 'auto', 'omega']",0,0,2,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,skipn_stream_empty,"['intros', 'stream_extensionality', 'rewrite', 'hnf', 'rewrite', 'omega', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_len_mono1,"['intros', 'unfold', 'destruct', 'try', 'pose', '[eauto |].', 'rewrite', 'auto']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_len_mono2,"['intros', 'unfold', 'destruct', 'try', 'pose', 'inversion', 'rewrite', 'clear', 'f_equal', 'revert', 'induction', 'intros', 'auto', 'pose', 'specialize', 'rewrite', 'clear', 'rewrite', 'auto']",2,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_len_Some,"['intros', 'unfold', 'destruct', 'rewrite', 'f_equal', 'remember', 'replace', 'clear', 'induction', 'simpl', 'destruct', 'rewrite', 'auto', 'specialize', 'destruct', '[| congruence].', 'destruct', 'rewrite', 'auto', 'simpl', 'rewrite', 'omega', 'auto']",1,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_len_None,"['intros', 'unfold', 'specialize', 'destruct', 'auto', 'congruence']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_app_spec1,"['intros', 'simpl', 'rewrite', 'auto']",1,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_app_spec1',"['intros', 'rewrite', 'auto', 'hnf', 'intros', 'intro', 'rewrite', 'omega', 'congruence']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_app_spec2,"['intros', 'simpl', 'erewrite', '[| | eassumption]', '[| omega].', 'f_equal', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_app_empty_stream,"['intros', 'stream_extensionality', 'destruct', 'rewrite', 'destruct', 'replace', 'rewrite', 'destruct', 'rewrite', 'omega', 'rewrite', 'auto', 'apply', 'auto']",0,0,1,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_app_fstn_skipn,"['intros', 'destruct', 'rewrite', 'rewrite', 'apply', 'stream_extensionality', 'destruct', 'rewrite', 'rewrite', 'auto', 'apply', 'rewrite', 'left', 'exists', 'split', '[omega | auto].', 'replace', 'rewrite', 'rewrite', 'f_equal', 'omega', 'apply', 'auto']",0,0,2,3,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_map_stream_app,"['intros', 'stream_extensionality', 'destruct', 'rewrite', 'destruct', 'replace', 'rewrite', 'rewrite', 'rewrite', 'auto', 'rewrite', 'reflexivity', 'rewrite', 'auto', 'rewrite', 'rewrite', 'rewrite', 'auto']",0,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_app_fstn_stream,"['intros', 'stream_extensionality', 'destruct', 'rewrite', 'rewrite', 'auto', 'rewrite', 'left', 'exists', 'split', '[omega | auto].', 'rewrite', 'destruct', 'rewrite', 'omega', 'auto']",0,0,0,2,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_app_skipn_stream,"['intros', 'stream_extensionality', 'rewrite', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_clen_inf0,"['intros', 'induction', 'simpl', 'destruct', 'auto', 'simpl', 'rewrite', 'destruct', 'auto', 'specialize', 'congruence']",0,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_clen_fin0_left,"['intros', 'revert', 'induction', 'intros', 'simpl', 'destruct', 'auto', 'destruct', '[omega |].', 'simpl', 'rewrite', 'omega', 'destruct', 'auto', 'pose', 'congruence']",2,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_clen'_left,"['intros', 'rewrite', 'destruct', 'eapply', 'eauto', 'apply', 'auto']",0,0,1,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,partial_stream_clen_fin0_right,"['intros', 'destruct', '[omega |].', 'induction', 'simpl', 'rewrite', 'omega', 'rewrite', 'auto', 'simpl', 'rewrite', 'destruct', 'destruct', 'auto']",0,2,0,1,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_capp_spec1,"['intros', 'simpl', 'rewrite', 'auto']",1,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_capp_spec1',"['intros', 'rewrite', 'auto', 'hnf', 'intros', 'intro', 'rewrite', 'omega', 'congruence']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_capp_spec2,"['intros', 'simpl', 'rewrite', 'destruct', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_capp_empty0,"['intros', 'split', '[| intros', 'omega', 'simpl', 'destruct', 'rewrite', 'auto']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamFunctions.json,stream_capp_cons,"['intros', 'stream_extensionality', 'destruct', 'rewrite', 'destruct', 'replace', 'rewrite', '[| destruct (Nat.eq_dec n 0)', '[subst', 'tauto', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",0,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/lib/Stream/StreamSplit.json,cut2_exists,"['intros', 'destruct', 'left', 'apply', 'destruct', 'destruct', 'exists', 'split', '[| split', '[| split]].', 'apply', 'symmetry', 'apply', 'clear', 'intros', 'intro', 'destruct', '[| rewrite fstn_stream_None in H by omega', 'congruence', 'rewrite', 'specialize', 'omega', 'exists', 'split', 'auto', 'right', 'firstorder']",0,0,1,0,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/DerivedRules.json,provable_sepcon_andp_left,"['intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/DerivedRules.json,provable_sepcon_andp_right,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/DerivedRules.json,provable_truep_sepcon_truep,"['intros', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/IterSepcon.json,sepcon_iter_sepcon,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/IterSepcon.json,proper_iter_sepcon_impp,"['intros', 'unfold', 'hnf', 'intros', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/IterSepcon.json,proper_iter_sepcon_iffp,"['intros', 'unfold', 'hnf', 'intros', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/IterSepcon.json,proper_iter_sepcon_Permutation,"['intros', 'hnf', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/RewriteClass.json,sepcon_proper_impp,"['hnf', 'intros', 'hnf', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/RewriteClass.json,wand_proper_impp,"['hnf', 'intros', 'hnf', 'intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/RewriteClass.json,sepcon_proper_iffp,"['hnf', 'intros', 'hnf', 'intros', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/RewriteClass.json,wand_proper_iffp,"['hnf', 'intros', 'hnf', 'intros', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/WandFrame.json,wand_frame_intros,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/WandFrame.json,wand_frame_elim,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/WandFrame.json,wand_frame_ver,"['intros', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ProofTheory/WandFrame.json,wand_frame_hor,"['intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Lindenbaum_Flat.json,Lindenbaum_preserves_context_sepcon_included_l,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Lindenbaum_Flat.json,Lindenbaum_context_sepcon_included_l_ensures_derivable_closed,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Lindenbaum_Flat.json,Lindenbaum_context_sepcon_included_l_ensures_orp_witnessed,"['intros', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Lindenbaum_Flat.json,Lindenbaum_context_sepcon_included_l_ensures_consistent,"['intros', 'apply', 'apply', 'intros', 'eapply', 'eauto']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Truth_Flat.json,truth_lemma_wand,"['intros', 'rewrite', 'split', 'intros', 'rewrite', 'auto', 'rewrite', 'apply', 'intro', 'apply', 'destruct', 'apply', 'clear', 'rewrite', 'auto', 'apply', 'destruct', 'destruct', 'destruct', 'erewrite', 'unfold', 'erewrite', 'apply', 'erewrite', 'apply', 'right', 'constructor', 'destruct', 'destruct', 'erewrite', 'erewrite', 'erewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply', 'exists', 'split', '[| split]', 'auto']",1,0,1,5,2,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Truth_Flat.json,truth_lemma_emp,"['intros', 'rewrite', 'split', 'intros', 'rewrite', 'auto', 'rewrite', 'rewrite', 'apply', 'apply', 'intro', 'apply', 'destruct', 'apply', 'clear', 'rewrite', 'auto', 'apply', 'destruct', 'destruct', 'destruct', 'unfold', 'erewrite', 'apply', 'erewrite', 'apply', 'right', 'constructor', 'hnf', 'intros', 'destruct', 'destruct', 'erewrite', 'erewrite', 'intros', 'unfold', 'intros', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'auto', 'rewrite', 'apply', 'apply', 'exists', 'split', '[| split]', 'auto']",4,0,1,4,2,5
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Canonical_Flat.json,SA,"['constructor', 'intros', 'destruct', 'destruct', 'destruct', 'erewrite', 'hnf', 'intros', 'destruct', 'subst', 'rewrite', 'rewrite', 'rewrite', 'apply', 'exists', 'split', '[| split]', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'erewrite', 'assert', 'hnf', 'intros', 'destruct', 'subst', 'apply', 'destruct', 'rewrite', 'rewrite', 'rewrite', 'apply', 'exists', 'split', '[| split]', 'auto', 'rewrite', 'apply', 'exists', 'split', '[| split]', 'auto', 'apply', 'destruct', 'unfold', 'destruct', 'exists', 'erewrite', 'auto']",0,0,0,3,3,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Canonical_Flat.json,uSA,"['hnf', 'intros', 'exists', 'destruct', 'destruct', 'destruct', 'destruct', 'erewrite', 'erewrite', 'do', 'split', '[| split].', 'eapply', 'eauto', 'hnf', 'intros', 'auto', 'hnf', 'intros', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Canonical_Flat.json,dSA,"['hnf', 'intros', 'exists', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'erewrite', 'erewrite', 'split', 'eapply', 'eauto', 'hnf', 'intros', 'subst', 'exists', 'split', '[| split]', 'auto', 'eapply', 'eauto', 'eapply', 'eauto', 'hnf', 'intros', 'auto']",0,0,0,1,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/Canonical_Flat.json,unitSA,"['intros', 'constructor', 'intros', 'destruct', 'assert', 'hnf', 'intros', 'destruct', 'rewrite', 'rewrite', 'subst', 'rewrite', 'auto', 'apply', 'destruct', 'destruct', 'exists', 'split', '[exists n', 'split', 'apply', 'erewrite', 'auto', 'erewrite', 'hnf', 'intros', 'auto', 'clear', 'specialize', 'constructor', 'unfold', 'rewrite', 'rewrite', 'auto']",0,0,0,3,1,5
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/ContextProperty_Flat.json,context_sepcon_derivable,"['intros', 'rewrite', 'destruct', 'revert', 'induction', 'intros', 'exists', 'split', '[| split].', 'apply', 'auto', 'apply', 'apply', 'pose', 'pose', 'specialize', 'clear', 'destruct', 'subst', 'destruct', 'exists', 'split', '[| split].', 'clear', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,3,1,5
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/ContextProperty_Flat.json,context_sepcon_consistent_rev_left,"['intros', 'rewrite', 'intro', 'apply', 'clear', 'rewrite', 'apply', 'apply', 'exists', 'split', '[| split]', 'auto', 'apply']",0,0,1,2,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/ContextProperty_Flat.json,context_sepcon_included_l_derivable_subset_preserved,"['intros', 'unfold', 'hnf', 'intros', 'eapply', '[clear Psi H0 | exact H0].', 'unfold', 'intros', 'destruct', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto']",3,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/ContextProperty_Flat.json,context_sepcon_included_l_subset_preserved,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/ContextProperty_Flat.json,context_sepcon_included_l_finite_captured,"['intros', 'unfold', 'hnf', 'intros', 'unfold', 'intros', 'destruct', 'apply', 'destruct', 'specialize', 'subst', 'apply', 'auto', 'unfold', 'exists', 'split', '[| split]', 'auto']",3,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/ContextProperty_Flat.json,wand_deduction_theorem,"['intros', 'split', 'intros', 'apply', 'destruct', 'rewrite', 'rewrite', 'apply', 'rewrite', 'auto', 'rewrite', 'apply', 'exists', 'split', '[| split]', 'auto', 'rewrite', 'apply']",1,0,1,3,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Complete/ContextProperty_Flat.json,context_sepcon_included_equiv,"['intros', 'rewrite', 'intros', 'split', 'intros', 'hnf', 'intros', 'destruct', 'subst', 'apply', 'rewrite', 'apply', 'apply', 'exists', 'split', '[| split]', 'auto', 'hnf', 'intros', 'destruct', 'subst', 'apply', 'rewrite', 'apply', 'apply', 'exists', 'split', '[| split]', 'auto']",0,0,2,2,0,5
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,AL_DC,['solve_at_least'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,AL_OW,['solve_at_least'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,AL_CONSI,['solve_at_least'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,LIN_CD,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'unfold', 'repeat', 'apply', 'apply', 'apply']",1,0,3,0,2,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,LIN_SL,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'unfold', 'repeat', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,3,0,2,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,H_R,"['intros', 'change', 'change', 'subst', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,H_J,"['intros', 'change', 'change', 'change', 'subst', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/ParametricCompleteness.json,TRUTH,"['induction', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'intros', 'change', 'subst', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/FlatSemantics.json,kpSM,"['apply', 'intros', 'apply', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/SeparationEmpLanguage.json,expr_eqb_true,"['intros', 'revert', 'induction', 'intros', 'destruct', 'try', 'intros', 'inversion', 'simpl', 'rewrite', 'split', 'intros', 'destruct', 'rewrite', 'rewrite', 'subst', 'auto', 'inversion', 'subst', 'rewrite', 'tauto', 'simpl', 'rewrite', 'split', 'intros', 'destruct', 'rewrite', 'rewrite', 'subst', 'auto', 'inversion', 'subst', 'rewrite', 'tauto', 'simpl', 'rewrite', 'split', 'intros', 'destruct', 'rewrite', 'rewrite', 'subst', 'auto', 'inversion', 'subst', 'rewrite', 'tauto', 'simpl', 'rewrite', 'split', 'intros', 'destruct', 'rewrite', 'rewrite', 'subst', 'auto', 'inversion', 'subst', 'rewrite', 'tauto', 'simpl', 'rewrite', 'split', 'intros', 'destruct', 'rewrite', 'rewrite', 'subst', 'auto', 'inversion', 'subst', 'rewrite', 'tauto', 'simpl', 'tauto', 'simpl', 'tauto', 'simpl', 'rewrite', 'split', 'intros', 'congruence']",1,1,0,1,2,6
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/DeepEmbedded/SeparationEmpLanguage.json,formula_countable,"['intros', 'assert', 'induction', 'apply', '[| solve_Countable].', 'apply', 'apply', 'hnf', 'intros', 'destruct', 'inversion', 'auto', 'hnf', 'intros', 'destruct', 'try', '1', 'eauto', 'f_equal', 'apply', '1', 'eauto', 'f_equal', 'apply', '1', 'eauto', 'f_equal', 'apply', 'set', 'apply', '[| solve_Countable].', 'apply', 'hnf', 'intros', 'destruct', 'simpl', 'assert', 'assert', 'exists', 'auto', 'simpl', 'assert', 'assert', 'exists', 'auto', 'simpl', 'assert', 'assert', 'exists', 'auto', 'simpl', 'assert', 'assert', 'exists', 'auto', 'simpl', 'assert', 'assert', 'exists', 'auto', 'exists', 'auto', 'exists', 'auto', 'exists', 'auto', 'hnf', 'intros', 'destruct', 'destruct', 'try', 'destruct', 'try', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'destruct', 'auto', 'destruct', 'auto', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'hnf', 'intros', 'destruct', 'destruct', 'try', 'destruct', 'try', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'f_equal', 'apply', 'f_equal', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'apply', '[| solve_Countable', 'auto', 'apply', 'hnf', 'intros', 'simpl', 'inversion', 'auto']",1,0,1,0,3,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ShallowEmbedded/MonoPredicateSeparationLogic.json,MonoPred_gcsGamma,"['intros', 'constructor', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/ShallowEmbedded/PredicateSeparationLogic.json,Pred_gcsGamma,"['intros', 'constructor', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Semantics/StrongSemantics.json,sepcon_closed,"['intros', 'hnf', 'intros', 'hnf', 'destruct', 'exists', 'split', '[| split', '[| split]]', 'auto', 'etransitivity', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Semantics/StrongSemantics.json,wand_closed,"['intros', 'hnf', 'intros', 'hnf', 'intros', 'apply', 'etransitivity', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Semantics/StrongSemantics.json,emp_closed,"['intros', 'hnf', 'intros', 'hnf', 'intros', 'apply', 'etransitivity', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Semantics/WeakSemantics.json,sepcon_closed,"['intros', 'hnf', 'intros', 'hnf', 'destruct', 'destruct', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Semantics/WeakSemantics.json,wand_closed,"['intros', 'hnf', 'intros', 'hnf', 'intros', 'destruct', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Semantics/WeakSemantics.json,emp_closed,"['intros', 'hnf', 'intros', 'hnf', 'intros', 'destruct', 'etransitivity', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/UpwardsClosure.json,UpwardsClosure_J,"['intros', 'exact', 'Defined']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/UpwardsClosure.json,UpwardsClosure_SA,"['constructor', 'intros', 'destruct', 'exists', 'split', 'auto', 'apply', 'auto', 'intros', 'rename', 'destruct', 'destruct', 'destruct', '[reflexivity |].', 'destruct', 'exists', 'split', 'exists', 'split', 'auto', 'reflexivity', 'exists', 'split', 'auto', 'etransitivity', 'eauto', 'Defined']",0,0,1,0,3,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/UpwardsClosure.json,UpwardsClosure_increasing,"['intros', 'unfold', 'split', 'intros', 'destruct', 'etransitivity', 'eauto', 'apply', 'exists', 'split', 'auto', 'reflexivity']",1,0,0,0,2,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/UpwardsClosure.json,UpwardsClosure_UpwardsClosed,"['intros', 'intros', 'exists', 'split', '[| split]', '[| reflexivity | reflexivity].', 'destruct', 'exists', 'split', 'auto', 'etransitivity', 'eauto', 'Defined']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/UpwardsClosure.json,UpwardsClosure_DownwardsClosed,"['intros', 'intros', 'simpl', 'destruct', 'destruct', 'exists', 'split', 'auto', 'exists', 'split', 'auto', 'Defined']",1,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/UpwardsClosure.json,UpwardsClosure_USA,"['constructor', 'intros', 'simpl', 'destruct', 'destruct', 'exists', 'split', 'auto', 'exists', 'split', 'auto', 'exists', 'split', 'auto', 'reflexivity', 'rewrite', 'auto', 'Defined']",1,0,0,1,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/UpwardsClosure.json,UpwardsClosure_incrSA,"['constructor', 'simpl', 'intros', 'hnf', 'intros', 'destruct', 'etransitivity', 'eauto', 'eapply', 'eauto']",1,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,po_nat_geR,"['constructor', 'hnf', 'intros', 'hnf', 'omega', 'hnf', 'intros', 'hnf', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,indexAlg,"['constructor', 'intros', 'inversion', 'congruence', 'inversion', 'inversion', 'subst', 'exists', 'split', 'constructor', 'auto', 'Defined']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,IndexAlg_uSA,"['hnf', 'intros', 'inversion', 'subst', 'exists', 'repeat', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,IndexAlg_increasing,"['constructor', 'intro', 'hnf', 'intros', 'inversion', 'subst', 'hnf', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,IndexAlg_residual,"['constructor', 'intro', 'exists', 'split', 'constructor', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,IndexAlg_unital,"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,minAlg,"['constructor', 'intros', 'inversion', 'subst', 'constructor', 'auto', 'inversion', 'inversion', 'subst', 'exists', 'split', 'constructor', 'apply', 'apply', 'transitivity', 'auto', 'apply', 'transitivity', 'auto', 'auto']",0,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,min_Join_is_downwards_closure,"['extensionality', 'extensionality', 'extensionality', 'unfold', 'apply', 'split', 'intros', 'simpl', 'inversion', 'subst', 'exists', 'split', '[| split]', 'hnf', 'auto', 'destruct', 'inversion', 'subst', 'constructor', 'auto']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,minAlg_uSA,"['hnf', 'intros', 'inversion', 'subst', 'exists', 'split', 'constructor', 'first', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,minAlg_dSA,"['hnf', 'intros', 'inversion', 'subst', 'exists', 'split', 'constructor', 'transitivity', 'auto', 'transitivity', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,minAlg_increasing,"['constructor', 'intro', 'hnf', 'intros', 'inversion', 'subst', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,minAlg_residual,"['constructor', 'intro', 'exists', 'split', 'constructor', 'reflexivity', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,minAlg_unital,"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumAlg,"['constructor', 'intros', 'inversion', 'subst', 'rewrite', 'constructor', 'auto', 'inversion', 'inversion', 'subst', 'exists', 'split', 'try', 'simpl', 'omega']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumAlg_uSA,"['hnf', 'intros', 'simpl', 'inversion', 'subst', 'destruct', 'exists', 'split', 'constructor', 'simpl', 'hnf', 'try', 'exists', 'split', 'constructor', 'simpl', 'hnf', 'try']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumAlg_dSA,"['hnf', 'intros', 'simpl', 'inversion', 'subst', 'exists', 'split', 'simpl', 'try', 'hnf', 'try']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumAlg_zero_decreasing,"['hnf', 'intros', 'hnf', 'inversion', 'subst', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumAlg_zero_decreasing_only,"['intros', 'specialize', 'omega', 'simpl', 'hnf', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumAlg_unital,"['constructor', 'intros', 'exists', 'split', 'exists', 'split', 'simpl', 'try', 'omega', 'hnf', 'intros', 'inversion', 'subst', 'simpl', 'hnf', 'omega']",0,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumAlg_residual,"['constructor', 'intro', 'exists', 'split', 'constructor', 'omega', 'hnf', 'omega']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,lep_preorder,"['constructor', 'hnf', 'intros', 'try', 'destruct', 'unfold', 'simpl', 'omega']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumpAlg,"['constructor', 'intros', 'inversion', 'subst', 'rewrite', 'constructor', 'auto', 'inversion', 'inversion', 'subst', 'exists', 'simpl', 'omega', 'split', 'try', 'simpl', 'omega']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,sumpAlg_dSA,"['hnf', 'intros', 'simpl', 'inversion', 'subst', 'unfold', 'destruct', 'simpl', 'exists', 'omega', 'split', 'simpl', 'try', 'try', 'reflexivity', 'unfold', 'simpl', 'rewrite', 'unfold', 'simpl', 'omega']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,suminvAlg,"['constructor', 'intros', 'inversion', 'subst', 'rewrite', 'constructor', 'auto', 'inversion', 'inversion', 'subst', 'exists', 'split', 'try', 'simpl', 'omega']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,suminvAlg_uSA,"['hnf', 'intros', 'simpl', 'inversion', 'subst', 'destruct', 'exists', 'split', 'constructor', 'simpl', 'hnf', 'try', 'exists', 'split', 'constructor', 'simpl', 'hnf', 'try']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,suminvAlg_dSA,"['hnf', 'intros', 'simpl', 'inversion', 'subst', 'exists', 'split', 'simpl', 'try', 'hnf', 'try']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,suminvAlg_increasing,"['constructor', 'intro', 'hnf', 'intros', 'inversion', 'subst', 'hnf', 'omega']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,suminvAlg_residual,"['constructor', 'intro', 'exists', 'split', 'constructor', 'omega', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,suminvAlg_unital,"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_uSA,['eapply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_dSA,['eapply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_empty_increasing,"['hnf', 'intros', 'hnf', 'extensionality', 'specialize', 'inversion', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_unital,"['constructor', 'intros', 'exists', 'split', 'exists', 'split', 'hnf', 'intros', 'unfold', 'destruct', 'constructor', 'hnf', 'intros', 'reflexivity', 'hnf', 'intros', 'hnf', 'extensionality', 'specialize', 'inversion', 'reflexivity']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_residual,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_uSA,"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_dSA,"['eapply', 'eapply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_increasing,"['constructor', 'intros', 'hnf', 'intros', 'hnf', 'intros', 'specialize', 'inversion', 'constructor', 'reflexivity', 'inversion']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_residual,"['constructor', 'intros', 'exists', 'hnf', 'intros', 'exists', 'split', 'hnf', 'intros', 'destruct', 'constructor', 'reflexivity']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_unital,"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_uSA',['eapply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_dSA',['eapply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_empty_increasing',"['hnf', 'intros', 'hnf', 'extensionality', 'specialize', 'inversion', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_unital',"['constructor', 'intros', 'exists', 'split', 'exists', 'split', 'hnf', 'intros', 'unfold', 'destruct', 'constructor', 'hnf', 'intros', 'reflexivity', 'hnf', 'intros', 'hnf', 'extensionality', 'specialize', 'inversion', 'reflexivity']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discHeap_residual',"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_uSA',"['eapply', 'eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_dSA',"['eapply', 'eapply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_increasing',"['constructor', 'intros', 'hnf', 'intros', 'hnf', 'intros', 'specialize', 'inversion', 'constructor', 'reflexivity', 'inversion', 'subst', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_residual',"['constructor', 'intros', 'exists', 'hnf', 'intros', 'exists', 'split', 'hnf', 'intros', 'destruct', 'constructor', 'reflexivity']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monHeap_unital',"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,ht_preorder,"['constructor', 'hnf', 'intros', 'constructor', 'inversion', 'inversion', 'subst', 'subst', 'try']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_Join_valid,"['intros', 'intros', 'assert', 'specialize', 'specialize', 'specialize', 'specialize', 'destruct', 'destruct', 'split', 'intros', 'rewrite', 'inversion', 'subst', 'symmetry', 'rewrite', 'inversion', 'try', 'subst', 'inversion', 'subst', 'reflexivity', 'symmetry', 'rewrite', 'inversion', 'try', 'subst', 'inversion', 'subst', 'reflexivity', 'inversion', 'subst', 'rewrite', 'inversion', 'subst', 'symmetry', 'rewrite', 'inversion', 'try', 'subst', 'inversion', 'subst', 'reflexivity', 'symmetry', 'rewrite', 'inversion', 'try', 'subst', 'inversion', 'subst', 'reflexivity', 'inversion', 'subst']",0,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_SA,"['constructor', 'intros', 'inversion', 'subst', 'constructor', 'apply', 'auto', 'inversion', 'inversion', 'subst', 'pose', 'destruct', 'assert', '{', 'eapply', 'apply', 'apply', '}', 'exists', 'split', 'constructor', 'auto']",0,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_preorder',"['constructor', 'hnf', 'intros', 'constructor', 'intros', 'exists', 'split', 'auto', 'constructor', 'hnf', 'intros', 'inversion', 'inversion', 'subst', 'constructor', 'intros', 'apply', 'destruct', 'apply', 'destruct', 'exists', 'split', 'auto', 'transitivity', 'auto']",1,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_preorder,"['constructor', 'hnf', 'intros', 'hnf', 'reflexivity', 'hnf', 'intros', 'hnf', 'hnf', 'transitivity', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,po_THeap_R',"['eapply', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,po_THeap_R,"['eapply', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_dSA',"['hnf', 'intros', 'inversion', 'inversion', 'subst', 'exists', 'split', 'hnf', 'intros', 'destruct', 'destruct', 'specialize', 'specialize', 'apply', 'destruct', 'apply', 'destruct', 'specialize', 'rewrite', 'inversion', 'subst', 'inversion', 'constructor', 'destruct', 'constructor', 'constructor', 'intros', 'destruct', 'apply', 'destruct', 'exists', 'split', 'specialize', 'rewrite', 'inversion', 'subst', 'try', 'inversion', 'inversion', 'subst', 'auto', 'apply', 'destruct', 'exists', 'split', 'specialize', 'rewrite', 'inversion', 'subst', 'try', 'inversion', 'auto']",0,0,0,0,1,5
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_dSA,"['hnf', 'intros', 'hnf', 'inversion', 'subst', 'destruct', 'assert', '{', 'apply', 'first', '}', 'exists', 'split', 'auto', 'constructor', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_increasingSA',"['constructor', 'intros', 'hnf', 'intros', 'constructor', 'intros', 'specialize', 'rewrite', 'inversion', 'subst', 'exists', 'split', 'auto', 'reflexivity', 'inversion']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_residualSA',"['constructor', 'intros', 'exists', 'hnf', 'intros', 'exists', 'split', 'try', 'hnf', 'intros', 'destruct', 'constructor']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_residualSA,"['constructor', 'intros', 'assert', '{', 'constructor', 'intros', 'inversion', '}', 'exists', 'exists', 'split', 'try', 'constructor', 'hnf', 'intros', 'destruct', 'constructor']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_UnitalSA',"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,THeap_UnitalSA,"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monSIheap_uSA,"['eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monSIheap_increasing,"['eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monSIheap_unital,"['eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,monSIheap_residual,"['eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discSIheap_uSA,"['eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discSIheap_unital,"['eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discSIheap_residual,"['eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,Prop_SA,"['constructor', 'intros', 'hnf', 'tauto', 'intros', 'exists', 'split', 'hnf', 'tauto']",1,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,po_discProp_R,"['constructor', 'constructor', 'hnf', 'tauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discProp_ikiM,"['constructor', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discProp_uSA,['eapply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discProp_dSA,['eapply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAExamples.json,discProp_unitSA,"['constructor', 'intros', 'exists', 'split', 'hnf', 'exists', 'split', 'hnf', 'tauto', 'hnf', 'intros', 'hnf', 'tauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/DownwardsClosure.json,DownwardsClosure_J,"['exact', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/DownwardsClosure.json,DownwardsClosure_SA,"['constructor', 'intros', 'destruct', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'exists', 'split', 'exists', 'split', '[| split]', 'auto', 'etransitivity', 'eauto', 'exists', 'split', '[| split]', 'auto', 'etransitivity', 'eauto', 'reflexivity', 'Defined']",0,0,1,0,2,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/DownwardsClosure.json,DownwardsClosure_increasing,"['intros', 'unfold', 'split', 'intros', 'destruct', 'etransitivity', '[eassumption |].', 'eapply', '[| eassumption].', 'auto', 'apply', 'exists', 'split', '[| split]', 'auto', 'reflexivity']",1,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/DownwardsClosure.json,DownwardsClosure_DownwardsClosed,"['intros', 'intros', 'exists', 'split', '[| reflexivity].', 'destruct', 'exists', 'split', '[| split]', 'auto', 'etransitivity', 'eauto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/DownwardsClosure.json,DownwardsClosure_UpwardsClosed,"['intros', 'intros', 'simpl', 'destruct', 'destruct', 'exists', 'split', '[| split]', 'auto', 'exists', 'split', '[| split]', 'auto']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/DownwardsClosure.json,DownwardsClosure_USA,"['constructor', 'intros', 'destruct', 'destruct', 'exists', 'split', 'auto', 'exists', 'split', 'auto', 'exists', 'split', '[| split]', 'auto', 'reflexivity', 'rewrite', 'auto', 'Defined']",0,0,0,1,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/DownwardsClosure.json,DownwardsClosure_incrSA,"['constructor', 'simpl', 'intros', 'hnf', 'intros', 'destruct', 'etransitivity', '[eauto |].', 'eapply', 'eauto']",1,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OrderedSA.json,incr_incr',"['intros', 'apply', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OrderedSA.json,disc_incr_unit,"['intros', 'split', 'intros', 'hnf', 'intros', 'hnf', 'intros', 'apply', 'apply', 'auto', 'apply', 'subst', 'reflexivity']",1,0,2,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OrderedSA.json,unital_is_residual,"['constructor', 'intros', 'destruct', 'exists', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OrderedSA.json,incr_unital_iff_residual,"['intros', 'split', 'apply', 'auto', 'constructor', 'intros', 'destruct', 'exists', 'split', 'auto', 'apply']",0,0,1,0,2,5
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OrderedSA.json,residue_extensible,"['intros', 'destruct', 'pose', 'firstorder']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OrderedSA.json,residual_extensible,"['intros', 'destruct', 'apply', 'destruct', 'apply', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,trivial_SA,"['constructor', 'intuition', 'inversion']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,trivial_uSA,"['intros', 'intros', 'inversion']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,trivial_incrSA,"['constructor', 'intros', 'hnf', 'intros', 'inversion']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,unit_SA,"['constructor', 'intros', 'constructor', 'intros', 'exists', 'split', 'constructor']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,unit_uSA,"['intros', 'exists', 'intuition', 'destruct', 'reflexivity', 'destruct', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,unit_dSA,"['intros', 'exists', 'intuition', 'destruct', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,unit_incrSA,"['constructor', 'intros', 'hnf', 'intros', 'destruct', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,unit_residual,"['constructor', 'intros', 'exists', 'exists', 'split', 'constructor', 'destruct', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,unit_unital,"['apply', 'auto', 'apply', 'apply']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,equiv_SA,"['constructor', 'intros', 'inversion', 'split', 'tauto', 'intros', 'simpl', 'destruct', 'subst', 'exists', 'do', 'auto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,identity_uSA,"['intros', 'intros', 'destruct', 'subst', 'exists', 'do', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,equiv_incrSA,"['constructor', 'intros', 'hnf', 'intros', 'inversion', 'subst', 'constructor']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,ikiM_uSA,"['intros', 'intros', 'apply', 'subst', 'exists', 'split', '[| split]', 'auto', 'reflexivity']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,ikiM_dSA,"['intros', 'intros', 'apply', 'apply', 'subst', 'exists', 'split', 'auto', 'reflexivity']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_SA,"['constructor', 'intros', 'simpl', 'destruct', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'intros', 'simpl', 'inversion', 'inversion', 'clear', 'subst', 'try', 'try', 'try', 'subst', 'try', '[.. | destruct (join_assoc _ _ _ _ _ H1 H5) as [? [? ?]]', 'eexists', 'split', 'apply', 'eassumption', 'eexists', 'split', 'try', 'eauto']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_ord_uSA,"['hnf', 'intros', 'inversion', 'subst', 'inversion', 'subst', 'exists', 'repeat', 'try', 'exists', 'repeat', 'try', 'inversion', 'subst', 'exists', 'repeat', 'try', 'auto', 'inversion', 'subst', 'exists', 'repeat', 'try', 'auto', 'inversion', 'subst', 'destruct', 'exists', 'repeat', 'try', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_ord_incr_None,"['hnf', 'intros', 'inversion', 'subst', 'constructor', 'constructor', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_ord_res_None,"['hnf', 'intros', 'exists', 'split', 'destruct', 'constructor', 'destruct', 'constructor', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_disj_uSA,"['hnf', 'intros', 'inversion', 'subst', 'inversion', 'subst', 'exists', 'repeat', 'try', 'inversion', 'subst', 'exists', 'repeat', 'try', 'auto', 'inversion', 'subst', 'exists', 'repeat', 'try', 'auto', 'inversion', 'subst', 'destruct', 'exists', 'repeat', 'try', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_disj_dSA,"['hnf', 'intros', 'inversion', '[ | inversion H1]', 'subst', 'exists', 'inversion', 'subst', 'split', 'auto', 'destruct', 'constructor', 'exists', 'split', 'try', 'inversion', 'subst', 'auto', 'inversion', 'subst', 'destruct', 'exists', 'split', 'constructor', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_disj_incr_None,"['hnf', 'intros', 'inversion', 'subst', 'constructor', 'constructor', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_disj_res_None,"['hnf', 'intros', 'exists', 'split', 'destruct', 'constructor', 'destruct', 'constructor', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,option_disj_USA',"['constructor', 'intros', 'exists', 'split', 'apply', 'hnf', 'intros', 'inversion', 'subst', 'apply']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,fun_SA,"['constructor', 'intros', 'simpl', 'intros', 'specialize', 'apply', 'auto', 'intros', 'simpl', 'destruct', 'intros', 'specialize', 'specialize', 'apply', 'auto', 'exists', 'firstorder']",2,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,fun_uSA,"['hnf', 'intros', 'unfold', 'unfold', 'destruct', 'intros', 'destruct', 'exists', 'auto', 'exists', 'simpl', 'repeat', 'intros', 'specialize', 'destruct', 'assumption']",1,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,fun_dSA,"['hnf', 'intros', 'unfold', 'unfold', 'destruct', 'intros', 'destruct', 'auto', 'apply', 'exists', 'auto', 'exists', 'split', 'hnf', 'intros', 'specialize', 'destruct', 'auto']",1,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,fun_incrSA,"['constructor', 'intros', 'hnf', 'intros', 'hnf', 'intros', 'specialize', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,fun_unitSA,"['constructor', 'intros', 'destruct', '{', 'intros', 'specialize', 'intros', 'exists', 'auto', '}', 'exists', 'split', 'cut', 'clear', 'unfold', 'intros', 'apply', 'destruct', 'exists', 'split', 'hnf', 'intros', 'specialize', 'destruct', 'auto', 'intros', 'specialize', 'destruct', 'auto', 'unfold', 'intros', 'unfold', 'hnf', 'intros', 'specialize', 'destruct', 'apply', 'auto']",4,0,1,0,3,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,fun_unitSA',"['constructor', 'intros', 'destruct', '{', 'intros', 'specialize', 'intros', 'exists', 'auto', '}', 'exists', 'split', 'cut', 'clear', 'unfold', 'intros', 'apply', 'destruct', 'exists', 'split', 'hnf', 'intros', 'specialize', 'destruct', 'auto', 'intros', 'specialize', 'destruct', 'auto', 'unfold', 'intros', 'unfold', 'hnf', 'intros', 'specialize', 'destruct', 'eapply', 'eauto', 'apply']",4,0,0,0,4,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,sum_SA,"['constructor', 'intros', 'inversion', 'constructor', 'apply', 'auto', 'intros', 'inversion', 'subst', 'inversion', 'destruct', 'exists', 'split', 'constructor', 'auto', 'exists', 'split', 'constructor', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,prod_SA,"['constructor', 'intros', 'simpl', 'destruct', 'split', 'apply', 'auto', 'intros', 'simpl', 'destruct', 'destruct', 'destruct', 'exists', 'do', 'auto']",1,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,prod_uSA,"['intros', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'do', 'simpl', 'auto', 'constructor', 'auto']",0,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,prod_dSA,"['intros', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'do', 'simpl', 'auto']",0,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,prod_incr,"['intros', 'hnf', 'intros', 'destruct', 'inversion', 'simpl', 'hnf', 'intros', 'split', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,prod_incrSA,"['constructor', 'intros', 'destruct', 'apply', 'auto', 'apply', 'apply']",0,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,prod_residualSA,"['constructor', 'intros', 'destruct', 'inversion', 'inversion', 'destruct', 'destruct', 'exists', 'hnf', 'intros', 'exists', 'hnf', 'intros', 'split', 'hnf', 'intros', 'split', 'simpl', 'auto']",0,1,0,0,0,5
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Model/OSAGenerators.json,prod_unitalSA,"['inversion', 'inversion', 'constructor', 'intros', 'destruct', 'destruct', 'destruct', 'exists', 'split', 'hnf', 'intros', 'destruct', 'destruct', 'exists', 'split', 'hnf', 'hnf', 'intros', 'try', 'simpl', 'auto', 'destruct', 'inversion', 'simpl', 'apply', 'apply', 'split', 'auto']",0,2,1,0,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Sound/Sound_Flat.json,sound_emp_sepcon_elim1,"['intros', 'rewrite', 'intros', 'rewrite', 'clear', 'destruct', 'eapply', '[| exact H].', 'eapply', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Sound/Sound_Flat.json,sound_emp_dup,"['intros', 'rewrite', 'intros', 'rewrite', 'rewrite', 'clear', 'destruct', 'pose', 'exists', 'auto']",0,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Sound/Sound_Upwards.json,sound_sepcon_emp,"['intros', 'unfold', 'rewrite', 'split', 'rewrite', 'intros', 'rewrite', 'destruct', 'rewrite', 'apply', 'unfold', 'specialize', 'eapply', 'eauto', 'rewrite', 'intros', 'rewrite', 'destruct', 'destruct', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto', 'eapply', 'eauto', 'rewrite', 'eauto']",1,0,2,3,2,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Sound/Sound_Downwards.json,sound_sepcon_comm,"['intros', 'rewrite', 'intros', 'rewrite', 'intros', 'destruct', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto']",0,0,1,1,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Sound/Sound_Downwards.json,sound_sepcon_assoc,"['intros', 'unfold', 'rewrite', 'split', 'intros', 'rewrite', 'intros', 'rewrite', 'destruct', 'rewrite', 'destruct', 'apply', 'apply', 'assert', 'destruct', 'destruct', 'apply', 'apply', 'rewrite', 'exists', 'split', '[| split', '[| split]]', 'auto', 'etransitivity', 'eauto', 'rewrite', 'exists', 'split', '[| split', '[| split]]', 'auto', 'reflexivity', 'rewrite', 'intros', 'rewrite', 'destruct', 'rewrite', 'destruct', 'assert', 'destruct', 'destruct', 'rewrite', 'exists', 'split', '[| split', '[| split]]', 'auto', 'etransitivity', 'eauto', 'rewrite', 'exists', 'split', '[| split', '[| split]]', 'auto', 'reflexivity']",1,0,2,2,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Sound/Sound_Downwards.json,sound_sepcon_elim1,"['intros', 'rewrite', 'intros', 'rewrite', 'destruct', 'apply', 'apply', 'eapply', 'eauto', 'eapply', 'eauto']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/SeparationLogic/Sound/Sound_Downwards.json,sound_sepcon_emp,"['intros', 'unfold', 'rewrite', 'split', 'rewrite', 'intros', 'clear', 'rewrite', 'destruct', 'rewrite', 'apply', 'unfold', 'apply', 'eapply', 'eauto', 'eapply', 'eauto', 'rewrite', 'intros', 'rewrite', 'destruct', 'destruct', 'exists', 'split', '[| split', '[| split]]', 'auto', 'reflexivity', 'apply', 'auto', 'eapply', 'eauto', 'rewrite', 'auto']",1,0,3,4,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/HenkinCompleteness.json,Lindenbaum_spec_included,"['intros', 'intros', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/HenkinCompleteness.json,Lindenbaum_spec_neg,"['intros', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/KripkeModel.json,prod_BranchJoinKripkeIntuitionisticModel,"['constructor', 'intros', 'hnf', 'simpl', 'destruct', 'destruct', 'exists', 'split', 'split', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/KripkeModel.json,fun_BranchJoinKripkeIntuitionisticModel,"['constructor', 'intros', 'destruct', 'intros', 'specialize', 'specialize', 'destruct', 'exists', 'auto', 'exists', 'split', 'intros', 'specialize', 'tauto']",0,0,0,0,1,5
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/KripkeModel.json,option00_BranchJoinKripkeIntuitionisticModel,"['constructor', 'intros', 'inversion', 'inversion', 'try', 'subst', 'exists', 'split', 'auto', 'inversion', 'subst', 'clear', 'destruct', 'exists', 'split', 'constructor', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/KripkeModel.json,NoBranch2BranchJoin,"['constructor', 'intros', 'pose', 'destruct', 'exists', 'split', 'auto', 'reflexivity', 'exists', 'split', 'auto', 'reflexivity']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/KripkeModel.json,eq_ikiM,"['constructor', 'intros', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/BasicSequentCalculus.json,deduction_subst1,"['intros', 'apply', 'auto', 'intros', 'inversion', 'subst', 'auto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/BasicSequentCalculus.json,derivable_trans,"['intros', 'eapply', 'eauto', 'eapply', 'eauto', 'apply']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/BasicSequentCalculus.json,deduction_weaken1,"['intros', 'eapply', 'eauto', 'intros', 'left', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/BasicSequentCalculus.json,derivable_assum1,"['intros', 'apply', 'right', 'constructor']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/BasicSequentCalculus.json,contextual_derivable_finite_witnessed,"['apply', 'hnf', 'intros', 'eapply', 'eauto', 'hnf', 'intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/TheoryOfSequentCalculus.json,DeductionWeaken_DerivableFiniteWitnessed_2_ContextualDerivableFiniteWitnessed,"['intros', 'hnf', 'intros', 'apply', 'clear', 'destruct', 'assert', 'clear', 'induction', 'exists', 'split', 'simpl', 'intros', 'tauto', 'destruct', 'rewrite', 'destruct', ""[exists xs' | exists (x :: xs')]"", 'split', 'intros', 'destruct', '[subst', 'auto', 'apply', 'auto', 'apply', 'auto', 'destruct', '[simpl', 'auto', 'apply', 'simpl', 'tauto', 'destruct', '[subst', 'auto', 'apply', 'auto', 'destruct', 'exists', 'split', 'rewrite', 'auto', 'eapply', 'eauto', 'unfold', 'intro', 'rewrite', 'auto']",3,3,1,2,2,5
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/TheoryOfSequentCalculus.json,DeductionWeaken_ContextualDerivableFiniteWitnessed_2_DerivableFiniteWitnessed,"['intros', 'hnf', 'intros', 'eapply', '[| rewrite <- (Union_Empty_left Phi)', 'apply', 'apply', 'clear', 'destruct', 'exists', 'split', 'auto', 'eapply', '[| rewrite Union_Empty_left', 'apply', 'auto']",0,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/TheoryOfSequentCalculus.json,DeductionSubst_2_DeductionSubst1,"['intros', 'hnf', 'intros', 'apply', 'auto', 'intros', 'inversion', 'subst', 'auto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/TheoryOfSequentCalculus.json,DeductionWeaken_ContextualDerivableFiniteWitnessed_DeductionSubst1_2_DeductionSubst,"['intros', 'hnf', 'intros', 'apply', 'destruct', 'eapply', '[| exact H2]', 'clear', 'induction', 'eapply', 'eauto', 'unfold', 'intro', 'rewrite', 'simpl', 'tauto', 'apply', 'apply', 'eapply', 'eauto', 'unfold', 'intro', 'rewrite', 'simpl', 'tauto', 'eapply', 'eauto', 'unfold', 'intro', 'rewrite', 'simpl', 'intros', 'auto', 'right', 'subst', 'constructor']",3,2,1,1,2,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/TheoryOfSequentCalculus.json,DerivableRefl_DeductionWeaken_2_DerivableAssu,"['intros', 'intros', 'eapply', '[| apply H].', 'intros', 'destruct', 'destruct', 'destruct', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/ProofTheory/TheoryOfSequentCalculus.json,DerivableAssu_2_DerivableRefl,"['intros', 'intros', 'apply', 'right', 'constructor']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Canonical_Kripke.json,denote_monotonic,"['intros', 'hnf', 'intros', 'change', 'change', 'destruct', 'destruct', 'erewrite', 'eapply', 'eauto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Canonical_Kripke.json,po_R,"['constructor', 'hnf', 'intros', 'destruct', 'apply', 'hnf', 'intros', 'auto', 'hnf', 'intros', 'destruct', 'destruct', 'destruct', 'rewrite', 'rewrite', 'rewrite', 'clear', 'unfold', 'firstorder']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Trivial.json,maximal_consistent_spec,"['intros', 'split', 'intros', 'split', 'auto', 'intros', 'specialize', 'specialize', 'specialize', 'apply', 'right', 'constructor', 'intros', 'hnf', 'intros', 'apply', 'unfold', 'destruct', 'exists', 'intro', 'apply', 'eapply', '[| exact H4].', 'intros', 'auto', 'destruct', 'auto']",1,0,1,0,2,4
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Trivial.json,MCS_element_derivable,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty.json,at_least_self,"['intros', 'hnf', 'intros', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty.json,at_least_left,"['intros', 'hnf', 'intros', 'destruct', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty.json,at_least_right,"['intros', 'hnf', 'intros', 'destruct', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty.json,sig_context_ext,"['intros', 'pose', 'destruct', 'simpl', 'subst', 'pose', 'subst', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_included_n_m,"['intros', 'induction', 'exact', 'refine', 'clear', 'unfold', 'intros', 'simpl', 'left', 'auto']",3,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_included_n_omega,"['intros', 'intros', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_included,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_pointwise_finite_decided,"['intros', 'split', '[apply (Lindenbaum_included_n_omega (S n)) | intros].', 'destruct', 'destruct', '[revert H0', 'apply', 'auto', 'assert', 'clear', 'induction', 'auto', 'apply', 'clear', 'simpl', 'destruct', 'auto', 'destruct', 'exfalso', 'pose', 'omega']",0,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_finite_witness,"['intros', 'induction', 'exists', 'constructor', 'destruct', 'destruct', 'exists', 'constructor', 'erewrite', 'revert', 'apply', 'apply', 'revert', 'apply', 'intro', 'apply', 'apply']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_preserve_n,"['intros', 'induction', 'auto', 'simpl', 'destruct', 'destruct', 'eapply', '[| exact H0].', 'rewrite', 'intros', 'rewrite', 'assert', '{', 'intros', 'apply', 'auto', '}', 'assert', '{', 'intros', 'subst', 'auto', '}', 'assert', '{', 'intros', 'subst', 'auto', '}', 'tauto', 'eapply', '[| exact IHn].', 'rewrite', 'intros', 'firstorder']",1,0,1,2,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_preserve_omega,"['intros', 'apply', 'intros', 'apply', 'destruct', 'rewrite', 'eapply', '[exact H1 |].', 'apply', 'auto']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_pointwise_finite_decided',"['intros', 'rewrite', 'simpl', 'split', 'intros', 'auto', 'destruct', 'auto', 'eapply', '[| apply (Lindenbaum_preserve_n H0 n)].', 'rewrite', 'intros', 'rewrite', 'split', 'intros', '[| auto].', 'destruct', 'auto', 'inversion', 'subst', 'auto']",0,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_constructable_Same_set,"['intros', 'pose', 'rewrite', 'apply', 'intros', 'apply', 'auto', 'apply', 'intros', 'apply', '[tauto |].', 'auto']",2,0,2,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_constructable_suffice,"['intros', 'hnf', 'intros', 'specialize', 'specialize', 'exists', 'split', 'auto', 'apply']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_preserves_by_finiteness,"['intros', 'hnf', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/Lindenbaum.json,Lindenbaum_ensures_by_conjunct,"['intros', 'hnf', 'intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,Included_derivable,"['intros', 'hnf', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,derivable_mono,"['intros', 'hnf', 'intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,derivable_derivable,"['intros', 'hnf', 'unfold', 'intros', 'eapply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,derivable_derivable_Same_set,"['intros', 'split', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,not_derivable_superset_preserved_derivable_subset_preserved,"['intros', 'hnf', 'intros', 'intro', 'apply', 'clear', 'eapply', '[| exact H2].', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,derivable_subset_preserved_subset_preserved,"['intros', 'hnf', 'intros', 'apply', 'intros', 'eapply', 'eauto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,derivable_superset_preserved_superset_preserved,"['intros', 'hnf', 'intros', 'apply', 'intros', 'eapply', 'eauto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,derivable_closed_element_derivable,"['intros', 'split', 'intros', 'auto', 'apply', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,can_derive_derivable_superset_preserved,"['intros', 'unfold', 'hnf', 'intros', 'apply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,cannot_derive_derivable_subset_preserved,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,can_derive_superset_preserved,"['intros', 'unfold', 'hnf', 'intros', 'eapply', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Complete/ContextProperty_Kripke.json,cannot_derive_subset_preserved,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/GeneralLogic/Semantics/Kripke.json,sat_mono,"['intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_andp,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_orp,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_impp,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_iffp,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_falsep,"['apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_truep,"['apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_sepcon,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_wand,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_proper_iff,"['apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_andp_sepcon1,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_andp_sepcon2,"['intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_sepcon_andp1,"['intros', 'rewrite', 'rewrite', 'apply', 'auto']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_sepcon_andp2,"['intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_sepcon_imply_andp,"['intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/Corable.json,corable_sepcon_is_andp,"['intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_andp,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_orp,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_sepcon,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_proper_impp,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_proper_iffp,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_andp_sepcon_iffp,"['intros', 'apply', 'apply', 'pose', 'simpl', 'rewrite', 'clear', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",1,1,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_dup,"['intros', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ProofTheory/CoreTransit.json,core_tr_absorb_corable,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ShallowEmbedded/MonoPredicateStable.json,MonoPred_stableSM,"['refine', 'intros', 'reflexivity', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ShallowEmbedded/MonoPredicateStable.json,MonoPred_pstable,"['constructor', 'intros', 'exact', 'intros', 'exact', 'intros', 'exact', 'exact', 'hnf', 'intros', 'exact']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ShallowEmbedded/MonoPredicateStable.json,MonoPred_mstable,"['constructor', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ShallowEmbedded/MonoPredicateStable.json,MonoPred_MAS,"['constructor', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ShallowEmbedded/MonoPredicateStable.json,MonoPred_sstable,"['constructor', 'intros', 'exact', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/ShallowEmbedded/MonoPredicateStable.json,MonoPred_SAS,"['constructor', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/Semantics/SemanticStable.json,DownwardsClosure_SAAbsorbStable,"['constructor', 'intros', 'hnf', 'destruct', 'exists', 'split', '[| split', '[| split', '[| split ]]]', 'auto', 'exists', 'split', '[| split]', 'auto', 'reflexivity', 'destruct', 'auto', 'destruct', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/Semantics/SemanticStable.json,prod_SAbis,"['constructor', 'intros', 'pose', 'pose', 'split', 'intros', 'destruct', 'destruct', 'specialize', 'destruct', 'specialize', 'destruct', 'exists', 'split', '[| split]', 'split', 'auto', 'intros', 'destruct', 'destruct', 'specialize', 'destruct', 'specialize', 'destruct', 'exists', 'split', '[| split]', 'split', 'auto', 'intros', 'pose', 'pose', 'split', 'intros', 'destruct', 'destruct', 'specialize', 'destruct', 'specialize', 'destruct', 'exists', 'split', '[| split]', 'split', 'auto', 'intros', 'destruct', 'destruct', 'specialize', 'destruct', 'specialize', 'destruct', 'exists', 'split', '[| split]', 'split', 'auto']",0,0,0,0,2,6
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/Semantics/SemanticStable.json,prod_SAabs,"['constructor', 'intros', 'destruct', 'destruct', 'exists', 'split', '[| split', '[| split', '[| split]]]', 'split', 'auto']",0,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/Semantics/SemanticStable.json,full_SAbis,"['constructor', 'intros', 'split', 'intros', 'destruct', 'exists', 'auto', 'destruct', 'exists', 'auto', 'intros', 'split', 'intros', 'destruct', 'exists', 'auto', 'destruct', 'exists', 'auto']",0,0,0,0,2,5
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/Semantics/SemanticStable.json,full_SAabs,"['constructor', 'intros', 'exists', 'split', '[| split', '[| split', '[| split]]]', 'solve', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/Semantics/SemanticStable.json,eq_SAbis,"['constructor', 'intros', 'subst', 'split', 'intros', 'exists', 'auto', 'exists', 'auto', 'intros', 'subst', 'split', 'intros', 'exists', 'auto', 'exists', 'auto']",0,0,0,1,2,3
/mnt/cisk/zmq/dataset/data/UnifySL/Extensions/Semantics/SemanticStable.json,geR_min_eq_SAabs,"['constructor', 'intros', 'exists', 'inversion', 'subst', 'split', '[| split', '[| split', '[| split]]]', 'auto', 'constructor', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,double_negp_elim,"['AddSequentCalculus', 'intros', 'unfold', 'pose', 'pose', 'pose', 'clear', 'pose', 'rewrite', 'pose', 'clear', 'pose', 'pose', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,double_negp,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,Classical2GodelDummett,"['constructor', 'AddSequentCalculus', 'intros', 'rewrite', 'set', 'clearbody', 'pose', 'apply', 'eapply', '[exact H |].', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,contrapositiveNN,"['AddSequentCalculus', 'intros', 'rewrite', 'rewrite', 'rewrite', 'apply', 'solve_assum']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,contrapositiveNP,"['AddSequentCalculus', 'intros', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,deduction_contrapositiveNN,"['AddAxiomatization', 'intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,deduction_contrapositiveNP,"['AddAxiomatization', 'intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Classical.json,impp2orp,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'rewrite', 'apply', '[apply derivable_excluded_middle |].', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,andp_proper_impp,"['AddSequentCalculus', 'hnf', 'intros', 'hnf', 'intros', 'rewrite', 'rewrite', 'apply', 'apply', 'pose', 'pose', 'pose', 'pose', 'pose', 'apply', 'auto']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,orp_proper_impp,"['AddSequentCalculus', 'hnf', 'intros', 'hnf', 'intros', 'rewrite', 'apply', 'eapply', '[exact H |].', 'apply', 'eapply', '[exact H0 |].', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,negp_proper_impp,"['AddSequentCalculus', 'hnf', 'intros', 'unfold', 'apply', 'auto', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,provable_iffp_equiv,"['AddSequentCalculus', 'constructor', 'hnf', 'intros', 'rewrite', 'apply', 'apply', 'hnf', 'intros', 'rewrite', 'pose', 'pose', 'apply', 'auto', 'hnf', 'intros', 'rewrite', 'pose', 'pose', 'pose', 'pose', 'apply', 'eapply', 'eauto']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,provable_proper_iffp,"['AddSequentCalculus', 'intros', 'hnf', 'intros', 'rewrite', 'rewrite', 'rewrite', 'pose', 'pose', 'split', 'intro', 'eapply', 'eauto']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,impp_proper_iffp,"['AddSequentCalculus', 'hnf', 'intros', 'hnf', 'intros', 'rewrite', 'rewrite', 'rewrite', 'pose', 'pose', 'pose', 'pose', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'auto', 'apply', 'auto']",0,0,2,3,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,andp_proper_iffp,"['AddSequentCalculus', 'hnf', 'intros', 'hnf', 'intros', 'rewrite', 'rewrite', 'rewrite', 'pose', 'pose', 'pose', 'pose', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'auto', 'apply', 'auto']",0,0,2,3,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,orp_proper_iffp,"['AddSequentCalculus', 'hnf', 'intros', 'hnf', 'intros', 'rewrite', 'rewrite', 'rewrite', 'pose', 'pose', 'pose', 'pose', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'auto', 'apply', 'auto']",0,0,2,3,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,iffp_proper_iffp,"['AddSequentCalculus', 'hnf', 'intros', 'hnf', 'intros', 'unfold', 'rewrite', 'apply']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,negp_proper_iffp,"['AddSequentCalculus', 'hnf', 'intros', 'unfold', 'apply', 'auto', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/RewriteClass.json,derivable_proper_iffp,"['hnf', 'intros', 'subst', 'hnf', 'intros', 'apply', 'pose', 'pose', 'split', 'intro', 'eapply', 'eauto']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_andp_intros,"['intros', 'rewrite', 'apply', 'solve_assum']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_andp_elim1,"['intros', 'rewrite', 'apply', 'solve_assum']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_andp_elim2,"['intros', 'rewrite', 'apply', 'solve_assum']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_orp_intros1,"['intros', 'rewrite', 'apply', 'solve_assum']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_orp_intros2,"['intros', 'rewrite', 'apply', 'solve_assum']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_orp_elim,"['intros', 'rewrite', 'apply', 'rewrite', 'solve_assum', 'rewrite', 'solve_assum']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_falsep_elim,"['intros', 'rewrite', 'apply', 'solve_assum']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,deduction_orp_elim',"['intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_double_negp_intros,"['intros', 'unfold', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,deduction_double_negp_intros,"['intros', 'eapply', 'eauto', 'apply']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_contradiction_elim,"['intros', 'pose', 'pose', 'unfold', 'rewrite', 'apply', 'apply', 'pose', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,deduction_contradiction_elim,"['intros', 'pose', 'pose', 'pose', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,derivable_iffp_refl,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,solve_andp_intros,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,solve_andp_elim1,"['AddSequentCalculus', 'intros', 'rewrite', 'eapply', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,solve_andp_elim2,"['AddSequentCalculus', 'intros', 'rewrite', 'eapply', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,solve_orp_impp,"['intros', 'eapply', '[| exact H0].', 'eapply', '[| exact H].', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,solve_orp_intros1,"['intros', 'eapply', '[| exact H].', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,solve_orp_intros2,"['intros', 'eapply', '[| exact H].', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,solve_impp_andp,"['AddSequentCalculus', 'intros', 'rewrite', 'rewrite', 'apply', 'auto']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,double_negp_intros,"['AddSequentCalculus', 'intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,provable_iffp_refl,"['AddSequentCalculus', 'intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,contrapositivePP,"['intros', 'eapply', '[apply provable_impp_arg_switch |].', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,contrapositivePN,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,deduction_contrapositivePP,"['AddAxiomatization', 'intros', 'eapply', 'eauto', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,deduction_contrapositivePN,"['AddAxiomatization', 'intros', 'eapply', 'eauto', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,provable_truep,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,orp_comm,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,orp_assoc,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', ""[apply deduction_orp_elim' |]"", 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', ""[| apply deduction_orp_elim']"", 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,andp_truep,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,truep_andp,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,falsep_orp,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,orp_falsep,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,truep_impp,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'solve_assum', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,andp_dup,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,orp_dup,"['AddSequentCalculus', 'intros', 'rewrite', 'apply', 'apply', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,impp_curry,"['AddSequentCalculus', 'intros', 'rewrite', 'rewrite', 'apply', 'apply', 'solve_assum', 'apply', 'apply', 'solve_assum', 'solve_assum']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,impp_uncurry,"['AddSequentCalculus', 'intros', 'rewrite', 'rewrite', 'apply', 'apply', 'solve_assum', 'solve_assum']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/Intuitionistic.json,impp_curry_uncurry,"['AddSequentCalculus', 'intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,prodp_comm,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,prodp_orp_distr_l,"['intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,prodp_orp_distr_r,"['intros', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,orp_funcp,"['intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,funcp_andp_distr_r,"['intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,falsep_prodp,"['intros', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,prodp_falsep,"['intros', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,prodp_iffp,"['intros', 'apply', 'apply', 'eapply', 'exact', 'eapply', 'exact', 'apply', 'eapply', 'exact', 'eapply', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,fold_left_iffp,"['intros', 'apply', 'apply', 'revert', 'apply', 'intros', 'eapply', 'exact', 'eapply', 'exact', 'apply', 'apply', 'revert', 'apply', 'intros', 'eapply', 'exact', 'eapply', 'exact']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,prodp_assoc,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,assoc_fold_left_fold_right_equiv,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,assoc_prodp_fold_left_equiv,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,assoc_fold_left_Permutation,"['intros', 'pose', 'assert', 'subst', 'apply', '[auto | apply provable_iffp_refl]).', 'specialize', 'clear', 'assert', '{', 'intros', 'rewrite', 'apply', '[auto | apply prodp_comm].', '}', 'specialize', 'clear', 'apply', 'auto', 'apply']",0,0,1,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,Build_LeftUnit',"['intros', 'constructor', 'intros', 'specialize', 'revert', 'AddSequentCalculus', 'rewrite', 'intros', 'eapply', 'eauto', 'rewrite', 'intros', 'eapply', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,Build_RightUnit',"['intros', 'constructor', 'intros', 'specialize', 'revert', 'AddSequentCalculus', 'rewrite', 'intros', 'eapply', 'eauto', 'rewrite', 'intros', 'eapply', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,Build_Associativity',"['intros', 'constructor', 'intros', 'specialize', 'revert', 'AddSequentCalculus', 'rewrite', 'intros', 'eapply', 'eauto', 'rewrite', 'intros', 'eapply', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,impp_andp_Adjoint,"['constructor', 'AddSequentCalculus', 'intros', 'split', 'intros', 'eapply', '[| exact H].', 'apply', 'eapply', '[| exact H].', 'apply']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,andp_LU,"['intros', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,andp_RU,"['intros', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,andp_Assoc,"['intros', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,falsep_andp,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,andp_falsep,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,andp_orp_distr_l,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,andp_orp_distr_r,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,multi_and_spec,"['intros', 'unfold', 'pose', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ProofTheory/ProofTheoryPatterns.json,multi_and_multi_imp,"['intros', 'unfold', 'rewrite', 'induction', 'simpl', 'apply', 'simpl', 'rewrite', 'apply', '[apply provable_iffp_refl |].', 'auto']",1,4,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Canonical_Kripke.json,classical_canonical_ident,"['constructor', 'intros', 'destruct', 'destruct', 'erewrite', 'assert', '[| subst', 'eapply', 'eauto', 'clear', 'apply', 'intros', 'split', '[apply H', 'auto', 'intros', 'pose', 'rewrite', 'apply', '[| apply (proj2_sig Phi)].', 'destruct', 'auto', 'exfalso', 'apply', 'unfold', 'rewrite', 'pose', 'revert', 'change', 'rewrite', 'apply']",1,0,2,2,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Truth_Kripke.json,truth_lemma_falsep,"['intros', 'rewrite', 'pose', 'pose', 'rewrite', 'split', '[intros [] |].', 'intro', 'apply', 'apply', 'auto']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Truth_Kripke.json,truth_lemma_andp,"['intros', 'rewrite', 'rewrite', 'apply', 'auto']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Lindenbaum_Kripke.json,Lindenbaum_for_orp_witnessed,"['intros', 'hnf', 'intros', 'specialize', 'rename', 'hnf', 'intros', 'pose', 'apply', 'pose', 'destruct', 'destruct', 'rewrite', 'apply', 'eapply', '[| exact H5].', 'unfold', 'intros', 'destruct', 'subst', 'apply', 'apply', 'rewrite', 'eapply', '[| apply Lindenbaum_included_n_omega].', 'eapply', '[| apply Lindenbaum_included_n_omega].', 'pose', 'apply', 'pose', 'apply', 'auto']",2,0,3,1,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Lindenbaum_Kripke.json,Lindenbaum_for_consistent,"['intros', 'hnf', 'intros', 'apply', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Trivial.json,classical_derivable_spec,"['intros', 'unfold', 'AddAxiomatization', 'fold', '~~ x)).', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'tauto']",1,0,0,3,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Trivial.json,MCS_nonelement_inconsistent,"['intros', 'split', 'intros', 'destruct', 'specialize', 'rewrite', 'rewrite', 'assert', 'left', 'auto', 'assert', 'specialize', 'apply', 'right', 'constructor', 'tauto', 'intro', 'pose', 'pose', 'destruct', 'rewrite', 'auto']",1,0,0,2,0,4
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Trivial.json,maximal_consistent_orp_witnessed,"['intros', 'hnf', 'intros', 'rewrite', 'apply', 'intro', 'apply', 'destruct', 'rewrite', 'destruct', 'rewrite', 'apply', 'eapply', '[exact H0 |].', 'apply', 'auto']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Trivial.json,MCS_andp_iff,"['intros', 'apply', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Trivial.json,MCS_orp_iff,"['intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Trivial.json,MCS_impp_iff,"['intros', 'split', 'intros', 'rewrite', 'apply', 'auto', 'pose', 'rewrite', 'rewrite', 'pose', 'rewrite', 'rewrite', 'destruct', '[| destruct H2].', 'rewrite', 'apply', 'auto', 'exfalso', 'apply', 'rewrite', 'pose', 'destruct', 'rewrite', 'auto', 'rewrite', 'unfold', 'rewrite', 'pose', 'auto']",0,0,2,6,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Trivial.json,MCS_negp_iff,"['intros', 'unfold', 'rewrite', 'assert', '[| tauto].', 'pose', 'rewrite', 'auto']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Lindenbaum_Trivial.json,Lindenbaum_for_max_consistent,"['intros', 'hnf', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Truth_Trivial.json,truth_lemma_falsep,"['intros', 'rewrite', 'pose', 'pose', 'rewrite', 'split', '[intros [] |].', 'intro', 'apply', 'apply', 'auto']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Truth_Trivial.json,truth_lemma_andp,"['intros', 'rewrite', 'rewrite', 'apply', 'auto']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Truth_Trivial.json,truth_lemma_orp,"['intros', 'rewrite', 'rewrite', 'apply', 'auto']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/Truth_Trivial.json,truth_lemma_impp,"['intros', 'rewrite', 'rewrite', 'apply', 'auto']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,context_orp_mono,"['intros', 'hnf', 'unfold', 'intros', 'hnf', 'destruct', 'subst', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,context_orp_mono',"['intros', 'apply', 'hnf', 'intros', 'eapply', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,cannot_derive_context_orp_captured,"['intros', 'unfold', 'hnf', 'intros', 'apply', 'intros', 'apply', 'clear', 'rewrite', 'apply', 'exists', 'split', '[| split]', 'auto']",3,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,DCS_truep,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,DCS_andp_iff,"['intros', 'pose', 'clear', 'rewrite', 'clear', 'split', 'intros', 'pose', 'pose', 'auto', 'destruct', 'pose', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,DCS_iffp,"['intros', 'split', 'intros', 'apply', 'rewrite', 'apply', 'auto', 'apply', 'rewrite', 'apply', 'auto']",1,0,2,1,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,DCS_orp_iff,"['intros', 'pose', 'clear', 'split', 'intros', 'apply', 'auto', 'rewrite', 'destruct', 'pose', 'auto', 'pose', 'auto']",1,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Complete/ContextProperty_Kripke.json,consistent_spec,"['intros', 'split', 'intros', 'intro', 'destruct', 'apply', 'clear', 'apply', 'auto', 'exists', 'auto']",0,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/DeepEmbedded/PropositionalLanguage.json,formula_countable,"['intros', 'assert', 'induction', 'apply', '[| solve_Countable].', 'apply', 'apply', 'hnf', 'intros', 'destruct', 'inversion', 'auto', 'hnf', 'intros', 'destruct', 'try', '1', 'eauto', 'f_equal', 'apply', '1', 'eauto', 'f_equal', 'apply', 'set', 'apply', '[| solve_Countable].', 'apply', 'hnf', 'intros', 'destruct', 'simpl', 'assert', 'assert', 'exists', 'auto', 'simpl', 'assert', 'assert', 'exists', 'auto', 'simpl', 'assert', 'assert', 'exists', 'auto', 'exists', 'auto', 'exists', 'auto', 'hnf', 'intros', 'destruct', 'destruct', 'try', 'destruct', 'try', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'destruct', 'auto', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'hnf', 'intros', 'destruct', 'destruct', 'try', 'destruct', 'try', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'f_equal', 'apply', 'inversion', 'inversion', 'subst', 'subst', 'repeat', 'apply', 'apply', '[| solve_Countable', 'auto', 'apply', 'hnf', 'intros', 'simpl', 'inversion', 'auto']",1,0,1,0,3,3
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/DeepEmbedded/TrivialSemantics.json,tpSM,"['constructor', 'simpl', 'intros', 'apply', 'simpl', 'intros', 'apply', 'simpl', 'intros', 'apply']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/DeepEmbedded/Complete_Classical_Trivial.json,AL_MC,['solve_at_least'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ShallowEmbedded/MonoPredicatePropositionalLogic.json,MonoPred_kiSM,"['constructor', 'intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ShallowEmbedded/MonoPredicatePropositionalLogic.json,MonoPred_kpSM,"['constructor', 'intros', 'apply', 'intros', 'apply', 'apply']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ShallowEmbedded/PredicatePropositionalLogic.json,Pred_tpSM,"['constructor', 'intros', 'apply', 'intros', 'apply', 'apply']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ShallowEmbedded/PredicatePropositionalLogic.json,Pred_cpGamma,"['constructor', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/ShallowEmbedded/PredicatePropositionalLogic.json,Pred_kpSM,"['constructor', 'intros', 'apply', 'intros', 'apply', 'apply']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Trivial.json,sat_andp,"['intros', 'simpl', 'unfold', 'destruct', 'split', 'auto', '[apply H | apply H0].']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Trivial.json,sat_orp,"['intros', 'simpl', 'unfold', 'destruct', 'split', 'auto', '[apply H | apply H0].']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Trivial.json,sat_falsep,"['intros', 'simpl', 'unfold', 'destruct', 'split', 'auto', '[apply H | apply H0].']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Kripke.json,andp_closed,"['intros', 'hnf', 'intros', 'destruct', 'split', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Kripke.json,orp_closed,"['intros', 'hnf', 'intros', 'destruct', '[left | right].', 'apply', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Kripke.json,falsep_closed,"['intros', 'hnf', 'intros', 'inversion']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Kripke.json,sat_andp,"['intros', 'simpl', 'unfold', 'destruct', 'split', '[apply H | apply H0].']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Kripke.json,sat_orp,"['intros', 'simpl', 'unfold', 'destruct', 'split', '[apply H | apply H0].']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Semantics/Kripke.json,sat_falsep,"['intros', 'simpl', 'unfold', 'destruct', 'split', '[apply H | apply H0].']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_andp_intros,"['intros', 'rewrite', 'simpl', 'intros', 'auto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_andp_elim1,"['intros', 'rewrite', 'intros', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_andp_elim2,"['intros', 'rewrite', 'intros', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_orp_intros1,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_orp_intros2,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_orp_elim,"['intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_falsep_elim,"['intros', 'rewrite', 'intros']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Classical_Trivial.json,sound_excluded_middle,"['intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_andp_intros,"['intros', 'rewrite', 'intros', 'rewrite', 'intros', 'rewrite', 'split', 'eapply', 'eauto', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_andp_elim1,"['intros', 'rewrite', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_andp_elim2,"['intros', 'rewrite', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_orp_intros1,"['intros', 'rewrite', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_orp_intros2,"['intros', 'rewrite', 'intros', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_orp_elim,"['intros', 'rewrite', 'intros', 'rewrite', 'intros', 'rewrite', 'intros', 'rewrite', 'destruct', 'rewrite', 'apply', 'auto', 'etransitivity', 'eauto', 'rewrite', 'apply', 'auto']",0,0,1,2,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_falsep_elim,"['intros', 'rewrite', 'intros', 'pose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_excluded_middle_ident,"['intros', 'unfold', 'rewrite', 'destruct', 'auto', 'right', 'intros', 'apply', 'subst', 'tauto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_impp_choice_no_branch,"['intros', 'rewrite', 'apply', 'intro', 'apply', 'destruct', 'apply', 'apply', 'destruct', 'apply', 'apply', 'destruct', 'apply', 'apply', 'destruct', 'destruct', 'pose', 'tauto', 'pose', 'tauto']",1,0,1,2,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/PropositionalLogic/Sound/Sound_Kripke.json,sound_weak_excluded_middle_branch_join,"['intros', 'unfold', 'rewrite', 'apply', 'intro', 'apply', 'destruct', 'apply', 'apply', 'destruct', 'apply', 'apply', 'destruct', 'apply', 'apply', 'destruct', 'destruct', 'eapply', '[| eassumption].', 'eapply', '[| eassumption].', 'rewrite', 'apply', '[| reflexivity].', 'apply', 'auto']",2,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/BigStepSemantics.json,Total2Partial_ImpBigStepSemantics,"['refine', 'intros', 'pose', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto', 'intros', 'pose', 'left', 'split', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'right', 'split', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'intros', 'pose', 'destruct', 'left', 'clear', 'induction', 'apply', 'auto', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto', 'apply', 'eauto', 'right', 'split', 'auto', 'clear', 'inversion', 'subst', 'econstructor', 'eauto', 'Defined']",0,0,1,0,3,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,singleton_trace_n_stream,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,sound_trace_and,"['intros', 'split', 'intros', 'split', 'hnf', 'intros', 'specialize', 'destruct', 'auto', 'destruct', 'hnf', 'intros', 'specialize', 'specialize', 'auto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,trace_app_sequential1,"['intros', 'hnf', 'intros', 'specialize', 'erewrite', 'erewrite', 'apply', 'auto']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,trace_app_sequential2,"['intros', 'hnf', 'intros', 'rewrite', 'destruct', 'specialize', 'change', 'erewrite', 'erewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,trace_app_sound1,"['intros', 'hnf', 'intros', 'specialize', 'erewrite', 'apply', 'auto']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,trace_app_sound2,"['intros', 'hnf', 'intros', 'rewrite', 'destruct', 'specialize', 'erewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,begin_end_state_singleton_trace,"['intros', 'apply', 'apply', 'reflexivity', 'reflexivity']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,begin_end_state_singleton_trace_rev,"['intros', 'inversion', 'subst', 'exfalso', 'match', 'remember', 'assert', 'auto', 'subst', 'simpl', 'inversion', 'pose', 'pose', 'inversion', 'subst', 'clear', 'inversion', 'inversion', 'subst', 'auto', 'pose', 'pose', 'tauto']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,traces_app_mono,"['intros', 'unfold', 'intros', 'destruct', 'destruct', 'left', 'exists', 'auto', 'destruct', 'right', 'exists', 'auto']",3,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,traces_power_mono,"['intros', 'induction', 'hnf', 'intros', 'auto', 'simpl', 'apply', 'auto']",0,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,traces_pstar_mono,"['intros', 'unfold', 'intros', 'destruct', 'exists', 'revert', 'apply', 'auto']",3,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,traces_pomega_mono,"['intros', 'unfold', 'intros', 'destruct', 'exists', 'split', 'auto', 'intros', 'apply']",4,0,0,0,2,3
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,Total2Partial_forward_trace,"['unfold', 'intros', 'destruct', 'split', 'auto', 'intros', 'apply', 'auto']",3,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Trace.json,Total2Partial_forward_trace_with_test,"['unfold', 'intros', 'destruct', 'split', 'auto', 'apply', 'auto']",2,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Resource_TraceSemantics.json,start_by_Aacq_or_Arel,"['intros', 'induction', 'inversion', 'destruct', 'subst', 'inversion', 'subst', 'solve_resource_action', 'inversion', 'subst', 'solve_resource_action', 'inversion', 'subst', 'solve_resource_action', 'inversion', 'subst', 'solve_resource_action', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/ProgramState.json,Total2Partial_forward,"['intros', 'inversion', 'constructor', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/ProgramState.json,clos_refl_trans_lift_relation_forward,"['intros', 'induction', 'apply', 'auto', 'destruct', 'auto', 'destruct', 'subst', 'simpl', 'subst', 'auto']",0,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/ProgramState.json,lift_function_rev,"['intros', 'destruct', 'auto', 'simpl', 'congruence']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/TraceSemantics.json,res_enable_acq_inv,"['intros', 'inversion', 'subst', 'solve_resource_action', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/TraceSemantics.json,res_enable_rel_inv,"['intros', 'inversion', 'subst', 'solve_resource_action', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/TraceSemantics.json,res_enable_not_res_inv,"['intros', 'inversion', 'subst', 'solve_resource_action', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/TraceSemantics.json,ordered_and_frame_AIr,"['intros', 'constructor', 'intros', 'pose', 'pose', 'exists', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/TraceSemantics.json,trace_access_Terminating_inv,"['intros', 'inversion', 'subst', 'apply', 'destruct', 'inversion', 'apply', 'destruct', 'inversion', 'apply', 'destruct', 'inversion', 'subst', 'exists', 'auto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/TraceSemantics.json,thread_local_state_enable_non_resource_action,"['intros', 'split', 'intros', 'constructor', 'auto', 'inversion', 'subst', 'solve_resource_action', 'auto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/TraceSemantics.json,ThreadLocal_AIPr,"['intros', 'constructor', 'intros', 'simpl', 'rewrite', 'rewrite', 'tauto', 'intros', 'simpl', 'destruct', 'rewrite', 'revert', 'apply']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Resource_Angelic.json,hoare_parallel_partial_sound,"['intros', 'unfold', 'destruct', 'exists', 'intros', 'apply', 'destruct', 'destruct', 'simpl', 'specialize', 'specialize', 'destruct', 'try', 'inversion', 'inversion', 'subst', 'congruence', 'destruct', 'inversion', 'inversion', 'inversion', 'subst', 'auto', 'rewrite', 'exists', 'split', '[| split]', 'auto', 'eapply', 'eauto', 'eapply', 'eauto']",2,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Frame.json,hoare_frame_partial_sound,"['intros', 'unfold', 'intros', 'rewrite', 'destruct', 'assert', 'destruct', 'destruct', 'inversion', 'subst', 'revert', 'apply', 'auto', 'rewrite', 'inversion', 'subst', 'exfalso', 'revert', 'apply', 'rename', 'exists', 'split', '[| split]', 'auto', 'apply', 'eapply', 'eauto']",3,0,1,1,2,2
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Frame.json,hoare_frame_total_sound,"['intros', 'unfold', 'intros', 'rewrite', 'destruct', 'assert', 'assert', 'destruct', 'destruct', 'inversion', 'subst', 'revert', 'apply', 'inversion', 'subst', 'revert', 'apply', 'revert', 'apply', 'rewrite', 'inversion', 'subst', 'exfalso', 'revert', 'apply', 'rename', 'exists', 'split', '[| split]', 'auto', 'apply', 'eapply', 'eauto']",3,0,1,1,1,2
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Imp.json,hoare_seq_partial_sound,"['intros', 'unfold', 'intros', 'apply', 'destruct', 'specialize', 'destruct', 'inversion', 'inversion', 'subst', 'clear', 'inversion', 'auto', 'inversion', 'subst', 'apply', 'subst', 'auto', 'eapply', '[| exact H6].', 'clear', 'rename', 'apply', 'auto', 'inversion', 'auto']",4,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Imp.json,hoare_while_partial_sound,"['intros', 'unfold', 'intros', 'apply', 'inversion', 'subst', 'clear', 'auto', 'induction', 'inversion', 'subst', 'auto', 'subst', 'eapply', '[eassumption |].', 'rewrite', 'split', 'auto', 'unfold', 'rewrite', 'intros', 'rewrite', 'pose', 'simpl', 'tauto', 'assert', 'firstorder', 'inversion', 'subst', 'apply', 'subst', 'auto', 'subst', 'eapply', '[| eassumption].', 'inversion', 'subst', 'specialize', 'destruct', 'subst', 'auto', 'apply', 'clear', 'assert', 'firstorder', 'eapply', '[| eassumption].', 'eapply', '[eassumption |].', 'exact', 'destruct', 'subst', 'auto']",4,0,0,2,3,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Imp.json,hoare_seq_total_sound,"['intros', 'unfold', 'intros', 'apply', 'destruct', 'specialize', 'destruct', 'inversion', 'inversion', 'inversion', 'subst', 'eapply', '[| exact H6].', 'clear', 'rename', 'apply', 'auto', 'inversion', 'auto']",4,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/SmallStepSemantics.json,Total2Partial_ImpSmallStepSemantics,"['refine', 'apply', 'apply', 'intros', 'pose', 'left', 'exists', 'split', '[| split]', 'auto', 'apply', 'auto', 'right', 'exists', 'auto', 'intros', 'pose', 'left', 'split', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'right', 'split', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'intros', 'pose', 'left', 'split', 'auto', 'exists', 'split', 'auto', 'apply', 'auto', 'right', 'split', 'auto', 'exists', 'split', 'auto', 'apply', 'auto']",1,0,3,0,4,1
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Basic.json,hoare_consequence_partial_sound,"['intros', 'unfold', 'intros', 'specialize', 'specialize', 'rewrite', 'apply', '[| reflexivity].', 'specialize', 'clear', 'destruct', 'auto', 'specialize', 'rewrite', 'apply', 'auto', 'reflexivity']",3,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Basic.json,hoare_consequence_total_sound,"['intros', 'unfold', 'intros', 'specialize', 'specialize', 'rewrite', 'apply', '[| reflexivity].', 'specialize', 'clear', 'destruct', 'auto', 'specialize', 'rewrite', 'apply', 'auto', 'reflexivity']",3,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Basic.json,hoare_conjunction_partial_sound,"['intros', 'unfold', 'intros', 'specialize', 'specialize', 'rewrite', 'destruct', 'apply', 'auto', 'apply', 'auto', 'destruct', 'auto', 'apply', 'split', 'assumption']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Basic.json,hoare_conjuntion_total_sound,"['intros', 'unfold', 'intros', 'specialize', 'specialize', 'apply', 'destruct', 'apply', 'auto', 'apply', 'auto', 'destruct', 'auto', 'apply', 'split', 'assumption']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Basic.json,hoare_disjunction_parial_sound,"['intros', 'unfold', 'intros', 'specialize', 'specialize', 'rewrite', 'destruct', 'apply', 'auto', 'destruct', 'auto', 'apply', 'left', 'assumption', 'apply', 'auto', 'destruct', 'auto', 'apply', 'right', 'assumption']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/HoareLogic/Sound_Basic.json,hoare_disjunction_total_sound,"['intros', 'unfold', 'intros', 'specialize', 'specialize', 'rewrite', 'destruct', 'apply', 'auto', 'destruct', 'auto', 'rewrite', 'left', 'assumption', 'apply', 'auto', 'destruct', 'auto', 'rewrite', 'right', 'assumption']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/IntuitionisticDerivedRules.json,boxp_andp,"['intros', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply']",1,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/IntuitionisticDerivedRules.json,orp_boxp,"['intros', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/IntuitionisticDerivedRules.json,boxp_TT,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/IntuitionisticDerivedRules.json,not_diamondp_FF,"['intros', 'unfold', 'rewrite', 'apply', 'apply']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/IntuitionisticDerivedRules.json,impp_diamondp,"['intros', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply']",1,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/IntuitionisticDerivedRules.json,orp_diamondp,"['intros', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/IntuitionisticDerivedRules.json,P_diamondp_P,"['intros', 'unfold', 'rewrite', 'apply']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/ClassicalDerivedRules.json,diamondp_orp,"['intros', 'apply', '[| apply orp_diamondp].', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",1,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/ClassicalDerivedRules.json,PropositionalTransparentModality2StrongPropositionalTransparentModality,"['constructor', 'intros', 'apply', '[apply axiom_K |].', 'rewrite', 'rewrite', 'apply', '[| apply orp_intros2].', 'rewrite', 'apply', 'rewrite', 'apply', '[| apply axiom1].', 'clear', 'AddSequentCalculus', 'rewrite', 'rewrite', 'apply', 'apply', 'solve_assum', 'apply', 'apply']",1,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/RewriteClass.json,boxp_proper_impp,"['hnf', 'intros', 'apply', 'eapply', 'eauto', 'apply']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/RewriteClass.json,boxp_proper_iffp,"['hnf', 'intros', 'apply', 'apply', 'eapply', 'eauto', 'eapply', 'eauto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/RewriteClass.json,diamondp_proper_impp,"['hnf', 'intros', 'unfold', 'rewrite', 'apply']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ProofTheory/RewriteClass.json,diamondp_proper_iffp,"['hnf', 'intros', 'unfold', 'rewrite', 'apply']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ShallowEmbedded/PredicateModalLogic.json,Pred_kmSM,"['constructor', 'intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ShallowEmbedded/PredicateModalLogic.json,Pred_KmGamma,"['constructor', 'intros', 'exact', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ShallowEmbedded/MonoPredicateModalLogic.json,MonoPred_fmSM,"['constructor', 'intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ShallowEmbedded/MonoPredicateModalLogic.json,MonoPred_KmGamma,"['constructor', 'intros', 'exact', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/ShallowEmbedded/MonoPredicateModalLogic.json,MonoPred_pmGamma,"['constructor', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Semantics/Flat.json,boxp_closed,"['intros', 'hnf', 'intros', 'hnf', 'intros', 'destruct', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Model/OrderedKripkeModel.json,prod_ukmM,"['constructor', 'intros', 'hnf', 'simpl', 'destruct', 'destruct', 'exists', 'split', 'split', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Model/OrderedKripkeModel.json,eq1_ukmM,"['constructor', 'intros', 'exists', 'simpl', 'split', 'reflexivity', 'hnf', 'subst', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Model/OrderedKripkeModel.json,eq2_ukmM,"['constructor', 'intros', 'exists', 'simpl', 'split', 'hnf', 'subst', 'auto', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Sound/Sound_Flat.json,sound_axiom_K,"['intros', 'rewrite', 'intros', 'rewrite', 'intros', 'rewrite', 'intros', 'destruct', 'specialize', 'specialize', 'rewrite', 'exact']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Sound/Sound_Flat.json,sound_boxp_orp,"['intros', 'unfold', 'rewrite', 'split', 'intros', 'clear', 'rewrite', 'rewrite', 'intros', 'apply', 'intro', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'destruct', 'pose', 'subst', 'clear', 'specialize', 'rewrite', 'tauto', 'rewrite', 'intros', 'rewrite', 'destruct', '[left | right]', 'auto']",3,0,0,3,2,2
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Sound/Sound_Kripke.json,sound_axiom_K,"['intros', 'rewrite', 'intros', 'specialize', 'specialize', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Sound/Sound_Kripke.json,sound_rule_N,"['intros', 'rewrite', 'intros', 'apply', 'auto']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/UnifySL/ModalLogic/Sound/Sound_Kripke.json,sound_boxp_orp,"['intros', 'unfold', 'rewrite', 'split', 'intros', 'apply', 'intro', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'destruct', 'pose', 'subst', 'clear', 'specialize', 'rewrite', 'tauto', 'rewrite', 'destruct', '[left | right]', 'auto']",3,0,0,1,2,2
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,synt_wp_monotonic,"['induction', 'simpl', 'firstorder']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,exec_inversion,"['induction', 'simpl', 'try', 'fail']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,exec_test_inversion,"['intros', 'pattern', 'apply', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,exec_deterministic,"['induction', 'intros', 'exec_inversion', 'eauto', 'intros', 'assert', 'auto', 'subst', 'auto']",1,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,exec_execn,"['induction', 'firstorder']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,reduces_wf,"['unfold', 'intros', 'apply', 'intros', 'unfold', 'decompose', 'clear', 'clear', 'case', 'intros', 'generalize', 'clear', 'elim', 'intros', 'inversion_clear', 'clear', 'intros', 'inversion_clear', 'inversion_clear', 'set', 'cut', 'auto', 'generalize', 'clear', 'case', 'simpl', 'intros', 'inversion_clear', 'intros', 'apply', 'intros', 'unfold', 'intuition', 'rewrite', 'eauto', 'intros', 'apply', 'unfold', 'rewrite', 'intuition', 'discriminate']",7,2,2,1,1,2
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,wp_complete,"['unfold', 'intros', 'case', 'clear', 'intros', 'case', 'clear', 'generalize', 'clear', 'elim', 'clear', 'simpl', 'intros', 'exec_inversion', 'auto', 'intros', 'exec_inversion', 'auto', 'intros', 'exec_inversion', 'case', 'simpl', 'firstorder', 'intros', 'exec_inversion', 'eauto', 'intros', 'constructor', 'constructor', 'unfold', '(intuition eauto with hoare)', 'dec2', 'case', 'clear', 'intros', 'exec_inversion', 'intros', 'exec_inversion', 'rewrite', 'intros', 'exec_inversion', 'unfold', 'eauto']",3,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,soundness,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/totalhoarelogic.json,completeness,['intuition'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/exgcd.json,Zgcd_minus,"['intros', 'case', 'constructor', 'intuition', 'replace', 'auto', 'omega']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/hoare-tut/exgcd.json,Zneq_bool_false,"['intros', 'apply', 'generalize', 'clear', 'unfold', 'case', 'auto', 'try', 'discriminate', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/exgcd.json,Zneq_bool_true,"['intros', 'unfold', 'intros', 'subst', 'rewrite', 'discriminate']",3,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/exgcd.json,gcd_partial_proof,"['intros', 'apply', 'simpl', 'intros', 'intuition', 'constructor', 'simpl', 'intuition', 'cutrewrite', 'auto']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/hoare-tut/exgcd.json,gcd_total_proof,"['intros', 'apply', 'simpl', 'intros', 'intuition', 'constructor', 'simpl', 'constructor', 'constructor', 'apply', 'auto', 'unfold', 'simpl', '(intuition auto with zarith).', 'cutrewrite', 'auto', 'cut', 'auto', 'cut', 'auto', 'cut', 'auto', 'intros', 'rewrite', 'discriminate']",2,3,1,2,2,0
/mnt/cisk/zmq/dataset/data/hoare-tut/exgcd.json,enum_3N_stupid,"['apply', 'simpl', 'constructor', 'intuition']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/hoarelogic.json,exec_Iif_true,"['intros', 'apply', 'rewrite', 'auto']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/hoarelogic.json,exec_Iif_false,"['intros', 'apply', 'rewrite', 'auto']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/hoare-tut/hoarelogic.json,wp_entails_wlp,"['unfold', 'intros', 'dec2', 'dec2', 'rewrite', 'auto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,fold_plus_split,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'rewrite', 'rewrite', 'auto']",0,1,0,3,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,fold_plus_permutation,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'repeat', 'rewrite', 'auto', 'intros', 'apply', 'auto']",3,1,1,1,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,length_encode_nId,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'rewrite', 'auto', 'intros', 'case', 'auto']",0,1,0,3,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,weight_permutation,"['intros', 'unfold', 'apply', 'apply', 'auto']",1,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,ulist_unique_key,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'apply', 'auto', 'intros', 'red', 'intros', 'absurd', 'auto', 'inversion', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,restrict_code_unique_key,"['intros', 'apply', 'unfold', 'replace', 'apply', 'auto', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,2,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,restrict_code_in,"['intros', 'apply', 'apply', 'auto', 'apply', 'generalize', 'unfold', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'try', 'auto']",1,2,2,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,restrict_code_encode_length_inc,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Weight.json,restrict_code_encode_length,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree2BTree.json,to_btree_inb,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'apply', 'auto', 'inversion', 'auto', 'intros', 'apply', 'auto', 'inversion', 'auto', 'intros', 'inversion', 'auto']",2,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree2BTree.json,to_btree_inpb,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree2BTree.json,to_btree_all_leaves,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree2BTree.json,to_btree_distinct_leaves,"['intros', 'apply', 'rewrite', 'apply', 'auto']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree2BTree.json,to_btree_distinct_pbleaves,"['intros', 'apply', 'rewrite', 'apply', 'auto']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree2BTree.json,to_btree_smaller,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'case', 'intros', 'case', 'intros', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'intros', 'Contradict', 'auto', 'apply', 'intros', 'Contradict', 'auto', 'apply', 'intros', 'apply', 'auto', 'case', 'intros', 'case', 'intros', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'intros', 'Contradict', 'auto', 'apply', 'intros', 'Contradict', 'auto', 'apply', 'intros', 'simpl', 'repeat', 'auto', 'case', 'intros', 'case', 'intros', 'repeat', 'simpl', 'auto', 'case', 'auto', 'apply', 'auto', 'intros', 'repeat', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'case', 'intros', 'case', 'intros', 'repeat', 'simpl', 'auto', 'case', 'auto', 'apply', 'auto', 'intros', 'repeat', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'intros', 'Contradict', 'apply', 'apply', 'auto', 'intros', 'Contradict', 'apply', 'intros', 'Contradict', 'apply', 'intros', 'Contradict', 'apply', 'apply', 'auto']",4,2,3,1,5,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_permutation,"['intros', 'generalize', 'elim', 'clear', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'apply', 'apply', 'apply', 'auto']",2,0,2,2,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_cons_l,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,1,1,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_in_inb_inb,"['intros', 'generalize', 'elim', 'clear', 'auto', 'simpl', 'intros', 'auto', 'rewrite', 'auto', 'case', 'intros', 'cut', 'auto', 'simpl', 'intros', 'auto', 'apply', 'simpl', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'rewrite', 'auto', 'apply', 'simpl', 'auto', 'apply', 'simpl', 'auto']",2,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_in_inb,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_app,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",2,1,1,0,2,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_number_of_nodes,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'rewrite', 'simpl', 'auto', 'intros', 'repeat', 'apply', 'auto', 'apply']",2,2,2,0,3,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,all_cover_aux_cover,"['intros', 'elim', 'simpl', 'auto', 'intros', 'elim', 'intros', 'case', 'clear', 'intros', 'case', 'clear', 'simpl', 'intros', 'case', 'intros', 'case', 'clear', 'simpl', 'intros', 'rewrite', 'rewrite', 'auto', 'apply', 'auto', 'case', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto']",2,2,2,3,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,all_cover_cover,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_all_cover_aux,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'generalize', 'intros', 'discriminate', 'intros', 'discriminate', 'intros', 'inversion', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,2,2,0,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_all_cover,"['intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_dec,"['intros', 'case', 'intros', 'left', 'apply', 'auto', 'intros', 'right', 'Contradict', 'apply', 'auto', 'Defined']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Cover.json,cover_all_leaves,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'apply', 'auto']",0,1,1,2,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/ISort.json,insert_ordered,"['intros', 'elim', 'clear', 'auto', 'simpl', 'auto', 'intros', 'simpl', 'generalize', 'pattern', 'case', 'intros', 'auto', 'intros', 'simpl', 'generalize', 'pattern', 'case', 'intros', 'auto', 'generalize', 'simpl', 'generalize', 'pattern', 'case', 'intros', 'auto']",1,1,0,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/ISort.json,insert_permutation,"['intros', 'elim', 'simpl', 'auto', 'intros', 'CaseEq', 'intros', 'auto', 'apply', 'auto']",0,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/ISort.json,isort_ordered,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/huffman/theories/ISort.json,isort_permutation,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/WeightTree.json,le_sum_correct1,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/WeightTree.json,le_sum_correct2,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/WeightTree.json,weight_tree_list_node,"['intros', 'simpl', 'ring']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/WeightTree.json,weight_tree_list_permutation,"['intros', 'elim', 'auto', 'simpl', 'auto', 'intros', 'ring', 'simpl', 'auto', 'intros', 'ring', 'intros', 'apply', 'auto']",1,1,1,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/WeightTree.json,ordered_sum_leaves_eq,"['intros', 'apply', 'exact', 'exact', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Prod2List.json,prod2list_app,"['intros', 'unfold', 'rewrite', 'auto', 'rewrite', 'rewrite', 'apply', 'repeat', 'auto', 'apply', 'rewrite', 'auto', 'apply']",1,0,1,4,3,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Prod2List.json,prod2list_le_l,"['intros', 'change', 'repeat', 'auto', 'apply', 'auto', 'repeat', 'apply', 'auto', 'repeat', 'repeat', 'apply', 'auto', 'unfold', 'simpl', 'rewrite', 'auto', 'rewrite', 'auto', 'replace', '[ idtac | ring ].', 'apply', 'auto', 'apply', 'auto', 'repeat', 'auto', 'replace', '[ auto with arith | ring ].']",0,2,1,1,4,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Prod2List.json,prod2list_le_r,"['intros', 'change', 'repeat', 'auto', 'apply', 'auto', 'repeat', 'apply', 'auto', 'repeat', 'repeat', 'apply', 'auto', 'unfold', 'simpl', 'rewrite', 'auto', 'rewrite', 'auto', 'replace', '[ idtac | ring ].', 'apply', 'auto', 'apply', 'auto', 'repeat', 'auto', 'replace', '[ auto with arith | ring ].']",0,2,1,1,4,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Prod2List.json,prod2list_eq,"['intros', 'change', 'repeat', 'auto', 'ring']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/CoverMin.json,cover_min_permutation,"['intros', 'split', 'apply', 'auto', 'inversion', 'auto', 'intros', 'assert', 'inversion', 'auto', 'apply', 'auto', 'inversion', 'auto']",0,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pbtree_dec,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'try', 'right', 'red', 'intros', 'discriminate', 'intros', 'case', 'intros', 'left', 'rewrite', 'auto', 'right', 'red', 'Contradict', 'inversion', 'auto', 'intros', 'case', 'try', 'right', 'red', 'intros', 'discriminate', 'intros', 'case', 'intros', 'rewrite', 'auto', 'intros', 'right', 'Contradict', 'inversion', 'auto', 'intros', 'case', 'try', 'right', 'red', 'intros', 'discriminate', 'intros', 'case', 'intros', 'rewrite', 'auto', 'intros', 'right', 'Contradict', 'inversion', 'auto', 'intros', 'case', 'try', 'right', 'red', 'intros', 'discriminate', 'intros', 'case', 'intros', 'case', 'intros', 'left', 'rewrite', 'rewrite', 'auto', 'right', 'Contradict', 'injection', 'auto', 'right', 'Contradict', 'injection', 'auto', 'Defined']",0,1,0,3,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,inpb_dec,"['intros', 'elim', 'intros', 'case', 'try', 'right', 'red', 'intros', 'inversion', 'auto', 'fail', 'intros', 'case', 'intros', 'left', 'rewrite', 'auto', 'right', 'Contradict', 'inversion', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intros', 'left', 'rewrite', 'auto', 'right', 'red', 'intros', 'generalize', 'inversion', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intros', 'left', 'rewrite', 'auto', 'right', 'red', 'intros', 'generalize', 'inversion', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intros', 'left', 'rewrite', 'auto', 'right', 'red', 'intros', 'generalize', 'inversion', 'auto', 'Defined']",1,0,0,1,1,4
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,inpb_trans,"['intros', 'generalize', 'elim', 'clear', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_Leaf,"['intros', 'red', 'intros', 'inversion']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_l,"['intros', 'red', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_r,"['intros', 'red', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_pl,"['intros', 'red', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_pr,"['intros', 'red', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_pbleaf,"['intros', 'red', 'intros', 'inversion']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_pbleft,"['intros', 'red', 'intros', 'apply', 'auto', 'inversion', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_pbright,"['intros', 'red', 'intros', 'apply', 'auto', 'inversion', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,in_pbcompute_inpb,"['intros', 'elim', 'simpl', 'auto', 'intros', 'try', 'fail', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'apply', 'auto', 'case', 'intros', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'apply', 'auto', 'case', 'intros', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intros', 'auto', 'apply', 'apply', 'injection', 'intros', 'rewrite', 'auto', 'case', 'intros', 'auto', 'apply', 'apply', 'injection', 'intros', 'rewrite', 'auto']",1,1,2,2,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pb_unique_prefix1,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', '[ injection H3 | case H3 ].', 'case', 'intros', '[ injection H4 | case H4 ].', 'intros', 'apply', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'cut', '[ intros HH1', 'inversion', 'auto', 'injection', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'cut', '[ intros HH1', 'inversion', 'auto', 'injection', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'intros', 'case', 'case', 'clear', 'intros', 'generalize', 'inversion', 'intros', 'case', 'intros', 'case', 'intros', 'discriminate', 'intros', 'apply', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'generalize', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'inversion', 'inversion', 'intros', 'inversion', 'generalize', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'inversion', 'inversion', 'intros', 'inversion', 'generalize', 'inversion', 'intros', 'case', 'intros', 'case', 'intros', 'discriminate', 'intros', 'apply', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto']",2,1,1,3,1,5
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pb_unique_key,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'intros', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'intros', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'intros', 'simpl', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'intros', 'simpl', 'auto', 'intros', 'case', 'auto', 'case', 'auto', 'intros', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'apply', 'injection', 'intros', 'rewrite', 'apply']",2,1,2,2,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pb_unique_prefix,"['intros', 'split', 'try', 'apply', 'auto']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pbadd_prop2,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'apply', 'auto', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'simpl', 'auto']",2,2,1,1,3,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pbfree_pbadd_prop1,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'clear', 'intros', 'elim', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'elim', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'elim', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto']",2,2,2,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pbfree_pbadd_prop2,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'inversion', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'inversion', 'auto', 'intros', 'apply', 'apply', 'auto', 'inversion', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'inversion', 'auto', 'intros', 'apply', 'inversion', 'auto', 'intros', 'case', 'intros', 'inversion', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'inversion', 'auto', 'intros', 'apply', 'inversion', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'inversion', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'inversion', 'auto']",2,2,2,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_pbadd_prop1,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'clear', 'intros', 'case', 'auto']",1,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,in_pbleaf_node,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'clear', 'intros', 'red', 'intros', 'inversion', 'intros', 'case', 'intros', 'red', 'intros', 'case', 'inversion', 'auto', 'intros', 'red', 'intros', 'case', 'inversion', 'auto']",1,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,inpbleaf_eq,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'clear', 'intros', 'inversion', 'auto', 'intros', 'case', 'intros', 'apply', 'inversion', 'auto', 'intros', 'apply', 'inversion', 'auto']",2,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,inpbleaf_pbadd_inv,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'clear', 'intros', 'inversion', 'auto', 'intros', 'case', 'intros', 'case', 'auto', 'intros', 'left', 'apply', 'auto', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'left', 'apply', 'auto', 'intros', 'case', 'auto', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'case', 'auto', 'intros', 'case', 'auto', 'intros', 'left', 'apply', 'auto', 'inversion', 'auto', 'intros', 'case', 'auto', 'inversion', 'auto', 'intros', 'inversion', 'left', 'apply', 'auto', 'case', 'auto', 'intros', 'inversion', 'case', 'auto', 'case', 'auto']",1,1,1,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,inpb_pbadd,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', '(case t1', 'simpl', 'auto', 'intros', '(case t1', 'simpl', 'auto']",0,2,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,inpb_pbadd_ex,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'case', 'case', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'left', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'case', 'auto', 'intros', 'inversion', 'auto', 'case', 'auto', 'intros', 'inversion', 'auto', 'left', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'case', 'auto', 'intros', 'inversion', 'auto', 'left', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'case', 'auto']",0,2,0,0,1,5
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,all_pbleaves_in,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'intros', 'inversion', 'auto', 'intros', 'apply', 'inversion', 'auto']",1,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,all_pbleaves_inpb,"['intros', 'elim', 'simpl', 'auto', 'intros', '[ rewrite H | case H ]', 'auto', 'intros', 'case', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,all_pbleaves_unique,"['intros', 'elim', 'simpl', 'auto', 'intros', 'red', 'intros', 'inversion', 'intros', 'case', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'try', 'apply', 'auto', 'try']",1,1,3,0,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,all_pbleaves_ulist,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'intros', 'case', 'auto', 'apply', 'apply']",2,1,3,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,all_pbleaves_pbadd,"['intros', 'elim', 'simpl', 'auto', 'intros', 'auto', 'case', 'intros', 'case', 'intros', 'case', 'simpl', 'auto', 'intros', 'elim', 'simpl', 'auto', 'intuition', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'elim', 'simpl', 'auto', 'intuition', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intuition', 'intros', 'case', 'simpl', 'auto', 'intros', 'elim', 'simpl', 'auto', 'intuition', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'elim', 'simpl', 'auto', 'intuition', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intuition']",0,2,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,ulist_pbadd_prop2,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'rewrite', 'intros', 'apply', 'simpl', 'auto', 'intros', 'auto', '(case H0', 'rewrite', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'Contradict', 'auto', 'apply', 'auto', 'intros', 'case', 'intros', 'Contradict', 'rewrite', 'apply', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'simpl', 'auto', 'rewrite', 'intros', 'apply', 'simpl', 'auto', 'intros', 'auto', '(case H0', 'rewrite', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'Contradict', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'case', 'intros', 'Contradict', 'rewrite', 'apply', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,4,1,3,3,3
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,distinct_pbleaves_pbadd_prop2,"['intros', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,all_pbleaves_compute_pb,"['cut', '[ intros HH | idtac ].', 'intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'rewrite', 'apply', 'auto', 'repeat', 'auto', 'repeat', 'auto', 'intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'case', 'simpl', 'auto']",1,2,1,3,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pbbuild_distinct_pbleaves,"['intros', 'elim', 'unfold', 'simpl', 'auto', 'intros', 'case', 'auto', 'simpl', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto', 'change', 'red', 'intros', 'case', 'red', 'intros', 'discriminate', 'intros', 'case', 'auto', 'apply', 'apply', 'auto']",2,3,2,0,3,2
/mnt/cisk/zmq/dataset/data/huffman/theories/PBTree.json,pbbuild_compute_peq,"['intros', 'elim', 'simpl', 'auto', 'intros', 'unfold', 'rewrite', 'auto', 'change', 'apply', 'auto', 'apply', 'apply', 'intros', 'unfold', 'rewrite', 'auto', 'change', 'apply', 'auto', 'apply', 'apply', 'intros', 'unfold', 'rewrite', 'rewrite', 'auto', 'rewrite', 'auto', 'change', 'apply', 'apply', 'apply', 'apply', 'apply']",2,1,3,3,3,2
/mnt/cisk/zmq/dataset/data/huffman/theories/UList.json,ulist_inv,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/UList.json,ulist_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'simpl', 'auto', 'red', 'intros', 'case', 'auto', 'intros', 'inversion', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/UList.json,ulist_app_inv,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'case', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto']",0,1,1,2,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/UList.json,ulist_app_inv_l,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'apply', 'auto', 'Contradict', 'auto', 'apply', 'auto']",0,1,1,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/UList.json,ulist_app_inv_r,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/UList.json,ulist_dec,"['intros', 'elim', 'auto', 'intros', 'auto', 'case', 'intros', 'auto', 'right', 'red', 'intros', 'inversion', 'auto', 'right', 'Contradict', 'apply', 'Defined']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/UList.json,ulist_perm,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'auto', 'inversion', 'auto', 'Contradict', 'apply', 'auto', 'inversion', 'auto', 'intros', 'apply', 'auto', 'inversion', 'auto', 'inversion', 'auto', 'simpl', 'Contradict', 'case', 'auto', 'intros', 'case', 'rewrite', 'simpl', 'auto', 'apply', 'auto', 'inversion', 'auto', 'Contradict', 'simpl', 'auto', 'inversion', 'auto', 'inversion', 'auto']",1,2,1,1,3,2
/mnt/cisk/zmq/dataset/data/huffman/theories/SubstPred.json,subst_pred_ordered_cover_l,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/SubstPred.json,subst_pred_ordered_cover_r,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/SubstPred.json,subst_pred_length,"['intros', 'elim', 'auto', 'intros', 'repeat', 'auto']",1,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/SubstPred.json,ordered_cover_subst_pred,"['intros', 'generalize', 'elim', 'clear', 'intros', 'case', 'simpl', 'intros', 'discriminate', 'intros', 'case', 'simpl', 'auto', 'intros', 'exists', 'auto', 'intros', 'discriminate', 'intros', 'case', 'auto', 'rewrite', 'auto', '(rewrite <- H3', 'rewrite', 'auto', 'intros', 'case', 'auto', 'rewrite', 'auto', '(rewrite <- H3', 'rewrite', 'rewrite', 'auto', 'intros', 'exists', 'auto', 'rewrite', 'auto']",2,3,0,2,3,2
/mnt/cisk/zmq/dataset/data/huffman/theories/SubstPred.json,height_pred_subst_pred,"['intros', 'generalize', 'elim', 'clear', 'auto', 'intros', 'case', 'simpl', 'intros', 'discriminate', 'intros', 'case', 'intros', 'try', 'exists', 'auto', 'intros', 'case', 'auto', 'rewrite', 'auto', '(rewrite <- H3', 'rewrite', 'auto', 'intros', 'case', 'auto', 'rewrite', 'auto', '(rewrite <- H3', 'rewrite', 'rewrite', 'auto', 'intros', 'exists', 'rewrite', 'auto']",2,2,0,2,3,2
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,unique_key_inv,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,unique_key_in,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,unique_key_in_inv,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'clear', 'intros', 'case', 'intros', 'injection', 'injection', 'intros', 'apply', 'auto', 'case', 'injection', 'intros', 'rewrite', 'auto', 'case', 'injection', 'intros', 'rewrite', 'auto', 'apply', 'auto']",2,1,1,2,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,unique_key_perm,"['intros', 'elim', 'auto', 'intros', 'apply', 'intros', 'red', 'intros', 'case', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'intros', 'apply', 'intros', 'red', 'simpl', 'intros', 'case', 'auto', 'injection', 'intros', 'rewrite', 'simpl', 'auto', 'case', 'auto', 'apply', 'intros', 'red', 'simpl', 'intros', 'case', 'simpl', 'auto', 'apply', 'apply']",3,4,3,1,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,unique_key_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'red', 'intros', 'case', 'change', 'apply', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto']",2,1,2,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,unique_key_ulist,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'inversion', 'red', 'intros', 'case', 'intros', 'simpl', 'intros', 'case', 'auto', 'rewrite', 'auto', 'apply', 'apply', 'auto']",3,2,2,1,3,3
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,ulist_unique_key,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'apply', 'auto', 'intros', 'red', 'intros', 'absurd', 'auto', 'inversion', 'auto', 'change', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/UniqueKey.json,unique_key_map,"['intros', 'elim', 'simpl', 'auto', 'intros', 'CaseEq', 'intros', 'auto', 'apply', 'auto', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'red', 'intros', 'case', 'left', 'apply', 'auto', 'change', 'apply', 'auto', 'rewrite', 'rewrite', 'simpl', 'auto', 'generalize', 'change', 'apply', 'intros', 'red', 'intros', 'case', 'auto']",1,2,2,1,3,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Restrict.json,restrict_code_unique_key,"['intros', 'apply', 'unfold', 'replace', 'apply', 'auto', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,2,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Restrict.json,restrict_code_in,"['intros', 'apply', 'apply', 'auto', 'apply', 'generalize', 'unfold', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'try', 'auto']",1,2,2,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Restrict.json,restrict_code_encode_incl,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",1,1,2,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Restrict.json,restrict_code_encode,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Restrict.json,restrict_unique_prefix,"['intros', 'split', 'intros', 'apply', 'auto', 'unfold', 'case', 'intros', 'case', 'simpl', 'intros', 'rewrite', 'case', 'auto', 'apply', 'intros', 'rewrite', 'auto', 'unfold', 'case', 'intros', 'case', 'simpl', 'intros', 'rewrite', 'case', 'auto', 'apply', 'intros', 'rewrite', 'auto', 'unfold', 'apply', 'auto']",3,2,3,2,2,5
/mnt/cisk/zmq/dataset/data/huffman/theories/Restrict.json,frequency_list_restric_code_map,"['intros', 'unfold', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",2,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/OneStep.json,one_step_weight_tree_list,"['intros', 'rewrite', 'rewrite', 'repeat', 'apply', 'cut', 'simpl', 'intros', 'injection', 'intros', 'repeat', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'apply', 'auto']",2,1,1,3,3,0
/mnt/cisk/zmq/dataset/data/huffman/theories/OneStep.json,one_step_comp,"['intros', 'cut', 'intros', 'split', 'rewrite', 'rewrite', 'repeat', 'apply', 'injection', 'intros', 'auto', 'rewrite', 'rewrite', 'auto', 'red', 'exists', 'exists', 'repeat', 'auto', 'simpl', 'simpl', 'injection', 'auto', 'intros', 'apply', 'auto', 'apply', 'exact', 'exact', 'apply', 'generalize', 'auto', 'apply', 'generalize', 'auto', 'rewrite', 'apply', 'generalize', 'auto', 'generalize', 'auto', 'change', 'apply', 'auto', 'change', 'apply', 'auto']",1,0,2,3,5,1
/mnt/cisk/zmq/dataset/data/huffman/theories/SameSumLeaves.json,same_sum_leaves_length,"['intros', 'rewrite', 'rewrite', 'repeat', 'auto', 'apply', 'auto']",0,0,1,2,2,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,add_frequency_list_perm,"['intros', 'generalize', 'elim', 'simpl', 'clear', 'auto', 'intros', 'case', 'auto', 'intros', 'simpl', 'rewrite', 'auto', 'simpl', 'intros', 'apply', '[ idtac | simpl in |- *', 'auto', 'change', 'repeat', 'auto']",4,2,0,1,3,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,add_frequency_list_in_inv,"['intros', 'elim', 'simpl', 'auto', 'intros', 'auto', 'injection', 'auto', 'intros', 'simpl', 'auto', 'case', 'simpl', 'auto', 'intros', 'cut', 'auto', 'simpl', 'intros', 'auto', 'injection', 'auto', 'intuition']",2,3,0,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,add_frequency_list_unique_key,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'red', 'intros', 'case', 'auto', 'rewrite', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'red', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'apply', 'apply', 'auto']",1,1,2,1,3,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,add_frequency_list_1,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'left', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'intros', 'red', 'intros', 'case', 'auto']",2,1,1,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,add_frequency_list_in,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'left', 'apply', 'injection', 'auto', 'rewrite', 'intros', 'case', 'auto', 'intros', 'right', 'apply', 'apply', 'auto', 'case', 'auto', 'intros', 'case', 'injection', 'auto']",0,2,2,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,add_frequency_list_not_in,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'injection', 'auto', 'intros', 'apply', 'auto']",1,2,1,0,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,frequency_list_in,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'right', 'apply', 'auto']",1,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,frequency_list_perm,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,frequency_list_unique,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,in_frequency_map,"['intros', 'elim', 'simpl', 'auto', 'intros', 'auto', 'rewrite', 'elim', 'simpl', 'auto', 'intros', 'simpl', 'auto', 'case', 'simpl', 'auto', 'cut', 'auto', 'elim', 'simpl', 'auto', 'intros', 'simpl', 'auto', 'case', 'simpl', 'auto', 'intros', 'auto', 'left', 'rewrite', 'auto', 'intros', 'auto']",1,2,0,1,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,in_frequency_map_inv,"['intros', 'case', 'auto', 'intros', 'simpl', 'rewrite', 'apply']",1,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,number_of_occurrences_O,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,number_of_occurrences_permutation_ex,"['intros', 'elim', 'simpl', 'auto', 'intros', 'exists', 'split', 'auto', 'intros', 'case', 'simpl', 'intros', 'case', 'intros', 'exists', 'split', 'auto', 'pattern', 'rewrite', 'auto', 'case', 'intros', 'exists', 'split', 'auto', 'apply', 'auto', 'simpl', 'apply', 'auto', 'apply', 'auto', 'simpl', 'Contradict', 'case', 'intros', 'auto', 'case', 'auto']",1,4,1,1,4,5
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,number_of_occurrences_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'simpl', 'auto']",1,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,number_of_occurrences_permutation,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'case', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto']",2,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Frequency.json,frequency_number_of_occurrences,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'intros', 'rewrite', 'apply', 'auto', 'apply', 'rewrite', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'apply', 'intros', 'Contradict', 'auto', 'rewrite', 'apply', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'intros', 'apply', 'auto']",3,2,3,3,3,1
/mnt/cisk/zmq/dataset/data/huffman/theories/OrderedCover.json,ulist_ordered_cover,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'injection', 'intros', 'rewrite', 'auto', 'generalize', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'cut', 'intros', 'cut', '[ intros HH3 | idtac ].', 'rewrite', 'apply', 'apply', 'auto', 'apply', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'rewrite', 'auto', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'apply', 'auto', 'injection', 'auto', 'injection', 'auto', 'generalize', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'split', '[ exists (nil (A:=A)) | exists l5 ]', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'case', 'auto', 'injection', 'auto', 'intros', 'split', '[ exists (a1 :: l7) | exists l8 ]', 'simpl', 'auto', 'apply', 'auto', 'injection', 'auto']",2,2,3,4,3,3
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,height_pred_ordered_cover,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,height_pred_length,"['intros', 'elim', 'simpl', 'auto', 'intros', 'repeat', 'auto']",1,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,height_pred_weight,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'rewrite', 'ring', 'apply', 'auto']",0,1,1,3,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,ordered_cover_height_pred,"['intros', 'generalize', 'elim', 'clear', 'intros', 'exists', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'exists', 'auto']",1,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,height_pred_larger,"['intros', 'generalize', 'elim', 'clear', 'auto', 'intros', '[ rewrite H2 | case H2 ]', 'auto', 'intros', 'apply', 'auto', 'case', 'auto']",2,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,height_pred_shrink,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,height_pred_compute_code,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'repeat', 'cut', '[ intros E1 | idtac ].', 'cut', '[ intros E2 | idtac ].', 'apply', 'repeat', 'repeat', 'auto', 'intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto']",3,2,1,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/HeightPred.json,weight_tree_compute,"['intros', 'rewrite', 'auto', 'apply', 'auto', 'rewrite', 'unfold', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto', 'apply', 'auto', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'ring', 'apply', 'auto']",1,1,1,5,3,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,in_alphabet_incl,"['intros', 'red', 'intros', 'case', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,in_alphabet_cons,"['intros', 'red', 'simpl', 'intros', 'exists', 'rewrite', 'auto', 'case', 'auto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,in_alphabet_inv,"['intros', 'red', 'intros', 'apply', 'simpl', 'auto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,code_dec,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'left', 'exists', 'rewrite', 'auto', 'case', 'intros', 'left', 'case', 'intros', 'exists', 'auto', 'intros', 'right', 'intros', 'red', 'intros', '[ case H1 | case (n l0) ]', 'auto', 'injection', 'auto', 'Defined']",0,1,0,1,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,in_alphabet_dec,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'left', 'red', 'simpl', 'intros', '[ case H2', 'intros', 'exists', 'rewrite', 'auto', 'right', 'red', 'intros', 'case', 'simpl', 'auto', 'right', 'Contradict', 'auto', 'red', 'intros', 'case', 'simpl', 'auto', 'intros', 'exists', 'auto', 'Defined']",1,3,0,1,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,not_null_inv,"['intros', 'red', 'intros', 'red', 'intros', 'case', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,not_null_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'red', 'intros', 'discriminate', 'apply', 'auto', 'apply']",1,2,1,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,not_null_map,"['intros', 'elim', 'simpl', 'auto', 'intros', 'red', 'intros', 'red', 'intros', 'inversion', 'intros', 'apply', 'auto', 'red', 'intros', 'discriminate']",1,1,1,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,is_prefix_refl,"['intros', 'elim', 'simpl', 'auto']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,unique_prefix1,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,unique_prefix2,"['intros', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,unique_prefix_inv,"['intros', 'split', 'intros', 'apply', 'simpl', 'auto', 'apply', 'auto']",1,2,1,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,unique_prefix_permutation,"['intros', 'cut', '[ intros HP', 'split', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,3,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,find_code_correct1,"['intros', 'elim', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'case', 'intros', 'case', 'simpl', 'auto', 'intros', 'left', 'apply', 'auto']",0,2,1,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,find_code_correct2,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'injection', 'auto', 'apply', 'simpl', 'auto', 'rewrite', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'injection', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",2,2,1,1,3,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,find_code_permutation,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'case', 'auto', 'intros', 'apply', 'apply', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'rewrite', 'rewrite', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto']",2,2,3,1,3,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,in_find_map,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'auto', 'case', 'auto', 'intros', 'case', 'injection', 'auto', 'case', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,find_val_correct1,"['intros', 'elim', 'simpl', 'auto', 'intros', 'discriminate', 'intros', 'case', 'intros', 'case', 'auto', 'intros', 'injection', 'intros', 'left', 'apply', 'auto']",0,1,1,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,find_val_correct2,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'apply', 'case', 'intros', 'injection', 'auto', 'apply', 'simpl', 'auto', 'rewrite', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'injection', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",2,2,1,1,3,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,encode_app,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'rewrite', 'auto']",0,1,0,2,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,encode_cons_inv,"['intros', 'generalize', 'elim', 'simpl', 'auto', 'clear', 'intros', 'case', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'rewrite', 'auto']",1,2,0,2,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,encode_permutation,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto']",1,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,encode_permutation_val,"['intros', 'elim', 'simpl', 'auto', 'clear', 'intros', 'repeat', 'auto', 'intros', 'apply', 'auto']",2,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,decode_correct,"['intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,correct_encoding,"['intros', 'elim', 'simpl', 'auto', 'intros', 'unfold', 'simpl', 'rewrite', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'case', 'simpl', 'auto', 'intros', 'apply', 'auto', 'case', 'simpl', 'auto', 'intros', 'case', 'intros', 'case', 'auto', 'intros', 'cut', 'intros', 'rewrite', 'apply', 'auto', 'apply', 'auto', 'case', 'auto']",2,4,2,3,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Code.json,frequency_not_null,"['intros', 'CaseEq', 'auto', 'intros', 'rewrite', 'Contradict', 'simpl', 'auto', 'intros', 'case', 'case', 'simpl', 'auto', 'intros', 'rewrite', 'Contradict', 'simpl', 'auto', 'intros', 'case', 'intros', 'apply', 'auto', 'intros', 'absurd', 'cut', 'rewrite', 'simpl', 'intros', 'inversion', 'case', 'rewrite', 'auto', 'apply', 'apply', 'simpl', 'rewrite', 'auto', 'case', 'auto', 'apply', 'rewrite', 'auto', 'intros', 'apply', 'auto', 'case', 'auto', 'apply', 'rewrite', 'auto', 'intros', 'apply', 'auto']",2,6,3,3,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_refl,"['simple', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_sym,"['intros', 'elim', 'apply', 'intros', 'apply', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_length,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'auto']",0,1,0,2,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_in,"['intros', 'elim', 'simpl', 'auto', 'intuition']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_app_comp,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'cut', 'auto', 'intros', 'apply', 'auto', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",2,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_app_swap,"['intros', 'elim', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'replace', 'apply', 'auto', 'apply', 'auto', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'replace', 'apply', 'auto', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply']",1,1,2,2,3,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_transposition,"['intros', 'apply', 'auto', 'change', 'repeat', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'repeat', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,in_permutation_ex,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'exists', 'rewrite', 'auto', 'case', 'auto', 'intros', 'exists', 'apply', 'auto']",0,1,1,1,1,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_cons_ex_aux,"['intros', 'elim', 'clear', 'intros', 'case', 'simpl', 'intros', 'discriminate', 'intros', 'case', 'simpl', 'exists', 'exists', 'simpl', 'split', 'auto', 'apply', 'injection', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'case', 'auto', 'injection', 'auto', 'intros', 'exists', 'exists', 'split', 'simpl', 'auto', 'apply', 'injection', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'case', 'simpl', 'case', 'try', 'discriminate', 'intros', 'exists', 'exists', 'simpl', 'split', 'auto', 'repeat', 'injection', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'case', 'simpl', 'intros', 'exists', 'exists', 'simpl', 'split', 'auto', 'repeat', 'injection', 'auto', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'exists', 'exists', 'simpl', 'split', 'auto', 'repeat', 'injection', 'auto', 'intros', 'case', 'intros', 'case', 'intros', 'exists', 'exists', 'split', 'auto', 'apply', 'auto']",1,3,1,2,3,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_cons_ex,"['intros', 'apply', 'simpl', 'auto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_inv,"['intros', 'case', 'intros', 'apply', 'generalize', 'case', 'simpl', 'auto', 'intros', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply']",1,2,2,3,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,split_one_permutation,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'generalize', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'auto', 'injection', 'intros', '(rewrite <- H4', 'rewrite', 'apply', 'auto', 'apply', 'apply', 'auto', 'case', 'simpl', 'auto']",1,2,2,4,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,split_one_in_ex,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'auto', 'exists', 'left', 'apply', 'auto', 'case', 'auto', 'intros', 'exists', 'right', 'auto', 'apply', 'auto']",0,1,1,0,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,all_permutations_aux_permutation,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'intros', 'rewrite', 'auto', 'case', 'simpl', 'intros', 'discriminate', 'intros', 'case', 'clear', 'intros', 'case', 'clear', 'intros', 'case', 'simpl', 'intros', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'change', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto']",1,3,2,2,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,all_permutations_permutation,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_all_permutations_aux,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'intros', 'rewrite', 'auto', 'simpl', 'intros', 'discriminate', 'intros', 'case', 'intros', 'rewrite', 'discriminate', 'clear', 'intros', 'case', 'auto', 'apply', 'auto', 'intros', 'apply', 'auto', 'apply', 'simpl', 'apply', 'auto', 'apply', 'apply', 'change', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'auto']",2,4,2,2,3,3
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_all_permutations,"['intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_dec,"['intros', 'case', 'intros', 'left', 'apply', 'auto', 'intros', 'right', 'Contradict', 'apply', 'auto', 'Defined']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_map,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,permutation_flat_map,"['intros', 'elim', 'simpl', 'auto', 'intros', 'auto', 'repeat', 'apply', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Permutation.json,fold_left_permutation,"['intros', 'generalize', 'elim', 'clear', 'simpl', 'auto', 'intros', 'rewrite', 'auto', 'intros', 'apply', 'auto']",2,1,1,2,1,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Ordered.json,ordered_inv_order,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Ordered.json,ordered_inv,"['intros', 'inversion', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Ordered.json,ordered_skip,"['intros', 'case', 'clear', 'auto', 'intros', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply']",1,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Ordered.json,ordered_trans,"['intros', 'generalize', 'elim', 'clear', 'intros', 'inversion', 'simpl', 'intros', 'rewrite', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply']",2,1,2,2,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Ordered.json,ordered_trans_app,"['intros', 'generalize', 'elim', 'simpl', 'clear', 'intros', 'case', 'intros', 'rewrite', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,1,2,1,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Ordered.json,ordered_perm_antisym_eq,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'apply', 'apply', 'auto', 'intros', 'case', 'simpl', 'intros', 'absurd', 'simpl', 'red', 'intros', 'discriminate', 'apply', 'auto', 'intros', 'cut', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'pattern', 'rewrite', 'auto', 'apply', 'auto', 'apply', 'auto', 'generalize', 'simpl', '(intros H2', 'case', 'auto', 'clear', 'intros', 'generalize', 'simpl', '(intros H3', 'case', 'auto', 'clear', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto']",3,3,2,1,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Ordered.json,ordered_map_inv,"['intros', 'elim', 'simpl', 'auto', 'intros', 'case', 'simpl', 'auto', 'intros', 'inversion', 'auto']",0,2,0,0,1,4
/mnt/cisk/zmq/dataset/data/huffman/theories/Build.json,build_cover,"['intros', 'elim', 'clear', 'auto', 'intros', 'try', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/Build.json,build_comp,"['intros', 'generalize', 'elim', 'clear', 'intros', 'generalize', 'inversion', 'clear', 'simpl', 'repeat', 'auto', 'case', 'intros', 'absurd', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'red', 'intros', 'discriminate', 'apply', 'intros', 'inversion', 'case', 'intros', 'case', 'intros', 'absurd', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'red', 'intros', 'discriminate', 'apply', 'apply', 'case', 'auto', 'case', 'auto']",2,1,2,1,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/Build.json,build_same_weight_tree,"['intros', 'apply', 'auto', 'exists', 'exists', 'simpl', 'auto']",1,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/Build.json,build_permutation,"['intros', 'generalize', 'elim', 'clear', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'intros', 'apply', 'auto', 'case', 'intros', 'exists', 'exists', 'exists', 'repeat', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,2,2,3,1
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,inb_trans,"['intros', 'generalize', 'elim', 'clear', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,number_of_nodes_inb_le,"['intros', 'elim', 'clear', 'simpl', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'auto']",1,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,inb_antisym,"['intros', 'elim', 'auto', 'intros', 'absurd', 'rewrite', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto', 'intros', 'absurd', 'rewrite', 'simpl', 'auto', 'apply', 'auto', 'apply', 'auto']",0,2,1,0,2,1
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,btree_dec,"['intros', 'elim', 'intros', 'case', 'intros', 'case', 'intros', 'left', 'rewrite', 'auto', 'intros', 'right', 'Contradict', 'inversion', 'auto', 'intros', 'right', 'red', 'intros', 'discriminate', 'intros', 'case', 'intros', 'right', 'red', 'intros', 'discriminate', 'intros', 'case', 'intros', 'case', 'intros', 'left', 'rewrite', 'rewrite', 'auto', 'right', 'rewrite', 'Contradict', 'inversion', 'auto', 'right', 'Contradict', 'inversion', 'auto', 'Defined']",0,0,0,2,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,inb_dec,"['intros', 'elim', 'simpl', 'auto', 'clear', 'intros', 'elim', 'simpl', 'auto', 'clear', 'intros', 'case', 'intros', 'left', 'rewrite', 'simpl', 'auto', 'right', 'red', 'Contradict', 'inversion', 'auto', 'intros', 'auto', 'intros', 'auto', 'right', 'red', 'intros', 'inversion', 'case', 'auto', 'case', 'auto', 'intros', 'elim', 'auto', 'intros', 'right', 'red', 'intros', 'inversion', 'intros', 'case', 'intros', 'auto', 'case', 'intros', 'auto', 'case', 'intros', 'left', 'rewrite', 'auto', 'right', 'red', 'intros', 'inversion', 'auto', 'case', 'rewrite', 'rewrite', 'auto', 'Defined']",0,2,0,3,1,4
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,all_leaves_in,"['intros', 'elim', 'simpl', 'auto', 'intros', 'inversion', 'auto', 'intros', 'apply', 'inversion', 'auto']",1,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,all_leaves_inb,"['intros', 'elim', 'simpl', 'auto', 'intros', '[ rewrite H | case H ]', 'auto', 'intros', 'case', 'auto']",0,1,0,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,distinct_leaves_leaf,"['intros', 'red', 'intros', 'inversion']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,distinct_leaves_l,"['intros', 'red', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,distinct_leaves_r,"['intros', 'red', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,all_leaves_unique,"['intros', 'elim', 'simpl', 'auto', 'intros', 'red', 'intros', 'inversion', 'intros', 'case', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'try', 'apply', 'auto', 'try']",1,1,3,0,2,4
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,all_leaves_ulist,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'intros', 'case', 'auto', 'apply', 'apply']",2,1,3,0,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,distinct_leaves_dec,"['intros', 'case', 'intros', 'left', 'apply', 'auto', 'right', 'Contradict', 'apply', 'auto', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,length_compute_lt_O,"['intros', 'elim', 'simpl', 'auto', 'intros', 'rewrite', 'replace', 'auto', 'apply', 'generalize', 'elim', 'simpl', 'auto', 'generalize', 'elim', 'simpl', 'auto']",0,1,0,1,2,2
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,inCompute_inb,"['intros', 'elim', 'simpl', 'auto', 'intros', 'try', 'fail', 'injection', 'intros', 'rewrite', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'intros', 'auto', 'apply', 'apply', 'injection', 'intros', 'rewrite', 'auto', 'case', 'intros', 'auto', 'apply', 'apply', 'injection', 'intros', 'rewrite', 'auto']",0,1,1,2,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,in_alphabet_compute_code,"['intros', 'elim', 'simpl', 'auto', 'intros', 'cut', 'auto', 'intros', 'case', 'intros', 'apply', 'auto']",1,1,1,0,1,3
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,btree_unique_prefix1,"['intros', 'elim', 'simpl', 'intros', 'case', 'intros', '[ injection H3 | case H3 ].', 'case', 'intros', '[ injection H4 | case H4 ].', 'intros', 'apply', 'auto', 'intros', 'case', 'case', 'clear', 'intros', 'generalize', 'inversion', 'intros', 'case', 'intros', 'case', 'intros', 'discriminate', 'intros', 'apply', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'generalize', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'inversion', 'inversion', 'intros', 'inversion', 'generalize', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'case', 'intros', 'inversion', 'inversion', 'intros', 'inversion', 'generalize', 'inversion', 'intros', 'case', 'intros', 'case', 'intros', 'discriminate', 'intros', 'apply', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto', 'case', 'intros', 'case', 'intros', 'injection', 'intros', 'rewrite', 'rewrite', 'auto']",3,1,1,3,1,5
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,btree_unique_prefix2,"['intros', 'elim', 'simpl', 'auto', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'intros', 'simpl', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'intros', 'simpl', 'auto', 'intros', 'case', 'auto', 'case', 'auto', 'intros', 'apply', 'auto', 'injection', 'intros', 'rewrite', 'apply', 'injection', 'intros', 'rewrite', 'apply']",2,1,2,2,2,3
/mnt/cisk/zmq/dataset/data/huffman/theories/BTree.json,btree_unique_prefix,"['intros', 'split', 'try', 'apply', 'auto']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/PolTac/NatGroundTac.json,le_correct,"['induction', 'destruct', 'simpl', 'auto', 'intros', 'discriminate']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/PolTac/NatGroundTac.json,lt_correct,"['induction', 'destruct', 'simpl', 'auto', 'intros', 'discriminate']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nle_le,"['intros', 'case', 'case', 'unfold', 'simpl', 'try', 'discriminate', 'intros', 'elim', 'simpl', 'intros', 'inversion', 'intros', 'rewrite', 'intros', 'inversion', 'intros', 'absurd', 'auto', 'apply', 'auto']",1,2,1,1,1,5
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,le_Nle,"['intros', 'case', 'case', 'unfold', 'simpl', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'apply', 'repeat', 'auto']",0,2,0,0,2,2
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nle_le_rev,"['intros', 'apply', 'repeat', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nlt_lt,"['intros', 'case', 'case', 'unfold', 'simpl', 'try', 'discriminate', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'apply', 'auto']",1,1,1,0,1,3
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,lt_Nlt,"['intros', 'case', 'case', 'unfold', 'simpl', 'try', 'discriminate', 'auto', 'intros', 'rewrite', 'rewrite', 'simpl', 'apply', 'auto']",0,3,1,2,1,2
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nlt_lt_rev,"['intros', 'apply', 'repeat', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nge_ge,"['intros', 'case', 'case', 'unfold', 'simpl', 'try', 'discriminate', 'auto', 'intros', 'elim', 'simpl', 'intros', 'inversion', 'intros', 'rewrite', 'intros', 'inversion', 'intros', 'absurd', 'auto', 'apply', 'auto']",1,2,1,1,2,5
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,ge_Nge,"['intros', 'case', 'case', 'unfold', 'simpl', 'try', 'discriminate', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'auto', 'intros', 'case', 'apply', 'repeat', 'auto']",0,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nge_ge_rev,"['intros', 'apply', 'repeat', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Ngt_gt,"['intros', 'case', 'case', 'unfold', 'simpl', 'try', 'discriminate', 'auto', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'apply', 'auto']",1,1,1,0,1,3
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,gt_Ngt,"['intros', 'case', 'case', 'unfold', 'simpl', 'try', 'discriminate', 'auto', 'intros', 'rewrite', 'rewrite', 'simpl', 'apply', 'auto']",0,3,1,2,1,2
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Ngt_gt_rev,"['intros', 'apply', 'repeat', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Neq_eq_rev,"['intros', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nle_gt_trans,"['intros', 'to_nat', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Ngt_le_trans,"['intros', 'to_nat', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/NAux.json,Nle_add_l,"['intros', 'to_nat', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/NGroundTac.json,Lt_diff_Gt,"['intros', 'discriminate']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/NGroundTac.json,Eq_diff_Gt,"['intros', 'discriminate']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/NatSignTac.json,hyp_test,"['intros', 'hyp_nsign_tac', 'hyp_nsign_tac', 'try', 'hyp_nsign_tac', 'hyp_nsign_tac']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/NatSignTac.json,hyp_test1,"['intros', 'hyp_nsign_tac', 'hyp_nsign_tac', 'try', 'hyp_nsign_tac', 'hyp_nsign_tac']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,plus_eq_compat_l,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,plus_neg_compat_l,"['intros', 'case', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,plus_ge_compat_l,"['intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,plus_neg_reg_l,"['intros', 'case', 'subst', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,plus_ge_reg_l,"['intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_eq_compat_l,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_neg_compat_l,"['intros', 'case', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_lt_compat_l,"['intros', 'to_nat', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_gt_compat_l,"['intros', 'to_nat', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_le_compat_l,"['intros', 'to_nat', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_ge_compat_l,"['intros', 'to_nat', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_neg_reg_l,"['intros', 'case', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_lt_reg_l,"['intros', 'to_nat', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_gt_reg_l,"['intros', 'to_nat', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_le_reg_l,"['intros', 'to_nat', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nplus_ge_reg_l,"['intros', 'to_nat', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Nge_trans,"['intros', 'to_nat', 'red', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Rge_trans,"['intros', 'red', 'apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Z2R_le,"['intros', 'repeat', 'intros', 'apply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Z2R_lt,"['intros', 'repeat', 'intros', 'apply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Z2R_ge,"['intros', 'repeat', 'intros', 'apply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/PolTac/PolAux.json,Z2R_gt,"['intros', 'repeat', 'intros', 'red', 'apply', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/angles/point_orthocentre.json,orthocentre_double,"['unfold', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'cut', '(intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'auto']",0,0,3,0,1,2
/mnt/cisk/zmq/dataset/data/angles/point_orthocentre.json,symetrique_orthocentre_cercle,"['intros', 'try', 'apply', 'auto', 'cut', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,colineaire_sym,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,colineaire_modulo_pi,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,orthogonal_opp,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,orthogonal_colineaire,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,colineaire_transitive,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,double_orthogonal,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,critere_orthogonal,"['intros', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,critere_orthogonal_reciproque,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,bissectrice_double,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,bissectrice_unicite,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,bissectrice_direction,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,isocele_bissectrice_hauteur,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,orthogonal_bissectrice,"['intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,bissectrice_hauteur_isocele,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,isocele_hauteur_bissectrice,"['unfold', 'intros', 'generalize', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",4,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,bissectrice_deux_isoceles,"['unfold', 'intros', 'cut', 'intros', 'cut', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'cut', 'intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",2,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,bissectrice_droite,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,milieu_isocele,"['unfold', 'intros', 'elim', 'intros', 'clear', 'try', 'apply', 'auto']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,existence_mediatrice_base_isocele,"['intros', 'try', 'elim', 'intros', 'try', 'cut', 'intros', 'elim', 'intros', 'clear', 'try', 'cut', 'intros', 'unfold', 'split', '[ idtac | try assumption ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'split', '[ idtac | try assumption ].', 'apply', 'auto', 'apply', 'auto']",1,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,concours_3circonscrits,"['unfold', 'intros', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'apply', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto']",3,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,circonscrit_3centres,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'auto', 'intros', 'elim', 'auto', 'intros', 'elim', 'auto', 'intros', 'split', '[ apply double_orthogonal', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,1,0,2,3
/mnt/cisk/zmq/dataset/data/angles/point_napoleon.json,general_Napoleon,"['intros', 'try', 'cut', 'intros', 'elim', '[ intros O3 H6', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'clear', 'try', 'exists', 'elim', '[ try exact H7 | idtac | idtac | idtac ].', 'intros', 'elim', 'intros', 'clear', 'try', 'split', '[ idtac | split', '[ try assumption | idtac ] ].', 'apply', 'auto', 'unfold', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'apply', 'auto', 'apply', 'auto', 'unfold', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'apply', 'auto', 'apply', 'auto', 'unfold', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'apply', 'auto', 'assumption', 'assumption', 'assumption', 'apply', 'auto']",0,0,2,0,2,2
/mnt/cisk/zmq/dataset/data/angles/point_cocyclicite.json,triangle_rectangle,"['unfold', 'intros', 'try', 'apply', 'apply', 'apply', 'auto', 'try']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/angles/point_cocyclicite.json,triangle_diametre,"['unfold', 'intros', 'try', 'apply', 'apply', 'auto', 'try']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/angles/point_cocyclicite.json,changement_base_cocyclique,"['intros', 'try', 'cut', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,3,0,1,2
/mnt/cisk/zmq/dataset/data/angles/point_cocyclicite.json,changement_base_cocyclique_2,"['intros', 'try', 'cut', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,3,0,1,2
/mnt/cisk/zmq/dataset/data/angles/point_cocyclicite.json,deux_rectangles,"['unfold', 'intros', 'try', 'apply', 'unfold', 'intros', 'try', 'apply', 'apply', 'auto', 'apply', 'auto']",2,0,4,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,calcul4,"['intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,angle_inscrit,"['intros', 'try', 'unfold', 'lapply', 'intros', 'lapply', 'intros', 'cut', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'try', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'try', 'try', 'try', 'try']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,tangente,"['unfold', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'lapply', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'try']",3,0,4,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,tangente_reciproque,"['unfold', 'intros', 'try', 'unfold', 'lapply', 'auto', 'intros', 'try', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,4,0,3,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,cocyclique,"['intros', 'try', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,exists_opp_angle,"['elim', 'intros', 'clear', 'try', 'intros', 'try', 'elim', 'intros', 'try', 'exists', 'apply', 'apply', 'auto', 'auto']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,construction_orthogonal,"['intros', 'try', 'cut', 'intros', 'try', 'elim', 'intros', 'clear', 'try', 'exists', 'auto', 'elim', 'intros', 'try', 'exists', 'apply', 'auto', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,unicite_circonscrit,"['unfold', 'intros', 'cut', 'intros', 'cut', 'intros', 'cut', 'intros', 'split', '[ idtac | try assumption ].', 'split', '[ idtac | try assumption ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'cut', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'generalize', 'intros', 'apply', 'auto', 'apply', 'auto', 'generalize', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'auto', 'apply', 'auto']",4,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,construction_isocele_base,"['intros', 'try', 'elim', 'intros', 'try', 'elim', 'intros', 'try', 'elim', 'intros', 'try', 'exists', 'exists', 'split', '[ try assumption | idtac ].', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply']",0,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,abba,"['intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply']",0,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,calcul5,"['intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,construction_circonscrit_vecteur,"['intros', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'clear', 'try', 'exists', 'exists', 'elim', 'intros', 'try', 'exists', 'generalize', 'generalize', 'intros', 'try', 'split', '[ split', 'try', 'cut', 'intros', 'split', '[ try assumption | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'split', '[ try assumption | idtac ].', 'split', '[ try assumption | idtac ].', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,2,0,1,3
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,isocele_sym,"['unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply']",3,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,unicite_perpendiculaire,"['unfold', 'intros', 'try', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'cut', '(intros', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/angles/point_tangente.json,reciproque_cocyclique,"['unfold', 'intros', 'try', 'elim', '[ intros O H2', 'try', 'exists', 'elim', ""[ intros O' H1"", 'try', 'exists', 'split', '[ split', '[ idtac | try assumption ] | idtac ].', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'try', 'cut', 'intros', 'elim', 'intros', 'try', 'elim', 'intros', 'try', 'elim', 'intros', 'try', 'elim', 'intros', 'try', 'cut', 'intros', 'split', '[ try assumption | idtac ].', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'intros', 'apply', 'unfold', 'apply', 'auto']",3,0,4,0,2,4
/mnt/cisk/zmq/dataset/data/angles/point_Simson.json,projete_ortho_cote,"['intros', 'try', 'cut', 'intros', 'cut', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'unfold', 'apply', 'auto']",1,0,3,0,2,0
/mnt/cisk/zmq/dataset/data/angles/point_Simson.json,droite_Simson,"['unfold', 'intros', '(split', '[ intros H6', 'try', 'apply', 'auto', 'cut', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto', 'unfold', 'intros', 'apply', 'auto', 'apply', 'auto', 'cut', 'intros', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'generalize', 'intros', 'try', 'elim', '[ intros O H8', 'elim', 'intros', 'clear', 'try', 'elim', 'unfold', 'intros', 'clear', 'try', 'apply', 'elim', 'intros', 'clear', 'try', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'elim', 'intros', 'elim', 'intros', 'clear', 'auto', 'try']",4,0,3,0,2,2
/mnt/cisk/zmq/dataset/data/coq-procrastination/src/Procrastination.json,group_fold,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,nat_sum,"['simple', 'left', 'reflexivity', 'intros', 'right', 'split', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_n_n,"['simple', 'trivial', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_l_or_r,"['intros', 'cut', 'intros', 'elim', 'intros', 'left', 'assumption', 'intros', 'right', 'exact', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,plus_n_O,"['simple', 'trivial', 'intros', 'simpl', 'rewrite', 'trivial']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,S_plus_l,"['simpl', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,S_plus_r,"['intros', 'rewrite', 'rewrite', 'simpl', 'trivial']",0,1,0,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,max_le_Sr_0,"['simple', 'simple', 'simpl', 'split', 'exact', 'exact', 'intros', 'split', 'elim', 'intros', 'intros', 'simpl', 'exact', 'elim', 'intros', 'simpl', 'exact', 'split', 'simpl', 'cut', 'intros', 'rewrite', 'trivial', 'rewrite', 'auto', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'simpl', 'elim', 'intros', 'exact', 'cut', 'cut', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'exact', 'simpl', 'trivial', 'simpl', 'trivial']",1,0,2,3,1,5
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,max_le_Sr,"['intros', 'elim', 'intros', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,plus_O_r,"['simple', 'simpl', 'trivial', 'intros', 'simpl', 'rewrite', 'trivial']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,plus_O_l,"['simple', 'simpl', 'trivial', 'intros', 'simpl', 'rewrite', 'trivial']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_mult_lS,"['simple', 'simpl', 'intro', 'cut', 'intros', 'rewrite', 'exact', 'exact', 'simpl', 'intros', 'exact']",1,1,2,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_mult_rS,"['intros', 'cut', 'cut', 'intros', 'rewrite', 'rewrite', 'exact', 'exact', 'exact']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_disj,"['intros', 'cut', 'intro', 'elim', 'intros', 'left', 'exact', 'right', 'exact', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_mult_l,"['intro', 'simple', 'intros', 'cut', 'intro', 'rewrite', 'trivial', 'symmetry', 'exact', 'induction', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'cut', 'intro', 'cut', 'intro', 'elim', 'intros', 'cut', 'intros', 'exact', 'exact', 'cut', 'cut', 'intros', 'apply', 'exact', 'exact', 'exact', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'cut', 'intro', 'cut', 'intro', 'exact', 'exact', 'exact', 'cut', 'intro', 'exact', 'exact']",4,0,2,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_mult_r,"['intros', 'cut', 'intros', 'cut', 'intros', 'rewrite', 'rewrite', 'exact', 'exact', 'exact']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,le_mult_mult,"['intros', 'cut', 'intro', 'cut', 'intro', 'exact', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,Sn_eq_Sm_n_eq_m,"['simple', 'simple', 'intros', 'reflexivity', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'reflexivity']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,bool_dec_eq,"['intros', 'case', 'case', 'left', 'trivial', 'right', 'exact', 'case', 'right', 'exact', 'left', 'trivial']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,bool_is_false_or_true,"['simple', 'right', 'trivial', 'left', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,bool_is_true_or_false,"['simple', 'left', 'trivial', 'right', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,in_M0_false,"['intros', 'intro', 'elim', 'intros', 'inversion']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,in_M1_id,"['intros', 'elim', 'intros', 'cut', 'intro', 'rewrite', 'cut', 'intros', 'cut', 'intro', 'inversion', 'trivial', 'transitivity', 'symmetry', 'assumption', 'assumption', 'exact', 'cut', 'intro', 'elim', 'intros', 'cut', 'intro', 'cut', 'intro', 'inversion', 'transitivity', 'symmetry', 'assumption', 'assumption', 'exact', 'exact', 'elim', 'intros', 'right', 'assumption', 'intro', 'left', 'exact']",0,0,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,in_M2_disj,"['intros', 'elim', 'simple', 'simpl', 'intro', 'left', 'split', 'assumption', 'simple', 'intros', 'right', 'simpl', 'split', 'assumption', 'intros', 'left', 'simpl', 'split', 'assumption', 'intros', 'right', 'simpl', 'split', 'assumption']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,indprinciple_nat_gen,"['intro', 'intro', 'simple', 'intros', 'apply', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'intro', 'rewrite', 'apply', 'intros', 'exact']",3,0,2,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,beq_nat_complete,"['simple', 'simple', 'intros', 'reflexivity', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'rewrite', 'reflexivity']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/bases.json,beq_nat_correct,"['simple', 'reflexivity', 'intros', 'simpl', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,kill_non_coacc_lazy_eq_kill_non_coacc,"['intros', 'unfold', 'unfold', 'unfold', 'induction', 'rewrite', 'reflexivity', 'split', 'exact', 'intros', 'rewrite', 'exact']",1,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,non_coacc_kill_0,"['simple', 'intros', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'inversion', 'reflexivity', 'rewrite', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'simpl', 'unfold', 'elim', 'intros', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'exact', 'exact']",1,4,1,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,non_coacc_kill_1,"['simple', 'intros', 'induction', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'split', 'reflexivity', 'simpl', 'inversion', 'simpl', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'unfold', 'elim', 'intros', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'exact', 'exact']",1,3,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_0,"['intros', 'split', 'intros', 'intros', 'elim', 'intros', 'intros', 'elim', 'intros', 'apply', 'unfold', 'apply', 'unfold', 'intros', 'exact', 'exact', 'exact', 'intros', 'unfold', 'elim', 'intros', 'split', 'exact', 'elim', 'intros', 'exact', 'unfold', 'apply', 'unfold', 'intros', 'exact', 'exact']",4,0,4,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_1,"['unfold', 'intros', 'elim', 'intros', 'apply', 'unfold', 'apply', 'unfold', 'apply', 'unfold', 'intros', 'exact', 'exact', 'exact', 'exact']",3,0,4,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_2,"['unfold', 'intros', 'apply', 'elim', 'intros', 'apply', 'split', 'exact', 'exact', 'elim', 'intros', 'apply', 'split', 'assumption', 'exact', 'exact', 'exact']",3,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_3,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_rec_0,"['unfold', 'intros', 'rewrite', 'apply', 'elim', 'intros', 'exact', 'exact']",2,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_rec_1,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_rec_2,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_rec_3,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_rec_4,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_rev,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_0,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_1,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_2,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_3,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_4,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_5,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_6,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_7,"['unfold', 'intros', 'apply', 'exact', 'apply', 'intros', 'exact', 'intros', 'exact']",4,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_8,"['unfold', 'intros', 'apply', 'apply', 'intros', 'exact', 'intros', 'exact']",4,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_9,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_10,"['unfold', 'intros', 'inversion', 'inversion', 'apply', 'apply', 'apply', 'intros', 'elim', 'intros', 'exact', 'exact', 'exact']",3,0,4,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_rec_0,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_rec_1,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_rec_2,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_rec_3,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_rec_4,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_co_rec,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_nonco_kill_0,"['unfold', 'intros', 'apply', 'unfold', 'apply', 'unfold', 'apply', 'unfold', 'intros', 'exact', 'exact', 'exact', 'elim', 'intros', 'exact', 'exact', 'exact']",3,0,4,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_nonco_kill_1,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_nonco_kill_2,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_nonco_kill_3,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_nonco_kill_4,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,rec_nonco_kill,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_dir,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_semantics,"['simple', 'simpl', 'intros', 'split', 'exact', 'unfold', 'intros', 'apply', 'unfold', 'apply', 'unfold', 'intros', 'exact', 'exact']",4,1,4,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill.json,predta_kill_non_coacc_lazy_semantics,"['intros', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compat_sym,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'left', 'split', 'assumption', 'elim', 'intros', 'right', 'split', 'assumption']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_0,"['intros', 'unfold', 'apply', 'simpl', 'rewrite', 'trivial', 'simpl', 'rewrite', 'trivial']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_1,"['intros', 'unfold', 'unfold', 'intros', 'induction', 'apply', 'simpl', 'assumption', 'simpl', 'assumption', 'apply', 'simpl', 'assumption', 'simpl', 'assumption']",3,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_2,"['intros', 'unfold', 'unfold', 'intros', 'induction', 'apply', 'simpl', 'assumption', 'simpl', 'assumption', 'apply', 'simpl', 'assumption', 'simpl', 'assumption']",3,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_3,"['intros', 'unfold', 'unfold', 'intros', 'unfold', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'simpl', 'rewrite', 'assumption', 'simpl', 'rewrite', 'trivial', 'rewrite', 'inversion']",3,3,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_4,"['intros', 'unfold', 'unfold', 'intros', 'unfold', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'assumption', 'simpl', 'trivial']",3,3,0,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_5,"['unfold', 'intros', 'unfold', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'assumption', 'simpl', 'rewrite', 'trivial']",3,2,0,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_6,"['unfold', 'intros', 'unfold', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'assumption', 'simpl', 'rewrite', 'trivial']",3,2,0,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,mpl_compat_sym,"['unfold', 'intros', 'apply', 'exact']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_pl_compat,"['intros', 'inversion', 'inversion', 'unfold', 'left', 'split', 'reflexivity', 'rewrite', 'inversion', 'rewrite', 'inversion', 'inversion', 'rewrite', 'inversion', 'unfold', 'right', 'split', 'intro', 'inversion', 'unfold', 'right', 'split', 'intro', 'inversion', 'inversion', 'rewrite', 'inversion', 'unfold', 'right', 'split', 'intro', 'inversion', 'unfold', 'right', 'split', 'intro', 'inversion']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_rec_0,"['unfold', 'intros', 'inversion', 'rewrite', 'inversion', 'reflexivity']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_rec_1,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_rec_2,"['unfold', 'intros', 'simpl', 'unfold', 'rewrite', 'reflexivity', 'inversion', 'exact', 'exact', 'exact']",3,1,1,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_rec_3,"['unfold', 'intros', 'apply', 'inversion', 'rewrite', 'inversion', 'exact', 'exact']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_rec_4,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_rec_5,"['intros', 'unfold', 'intros', 'exact']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_tl_length_rec_6,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compatible_sym,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'assumption']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compatible_empt_r,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'inversion', 'rewrite', 'inversion', 'reflexivity']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compatible_empt_l,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compatible_cons_r,"['intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'inversion', 'rewrite', 'inversion', 'intro', 'exact']",1,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compatible_cons_l,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compatible_compat,"['simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'unfold', 'right', 'split', 'intro', 'inversion', 'intros', 'elim', 'unfold', 'induction', 'right', 'split', 'intro', 'inversion', 'left', 'split', 'reflexivity']",1,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compatible_compat_0,"['unfold', 'intros', 'unfold', 'intros', 'inversion']",3,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compatible_compat_1,"['unfold', 'intros', 'unfold', 'intros', 'induction', 'inversion', 'unfold', 'unfold', 'exact', 'unfold', 'exact']",3,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compatible_compat_2,"['unfold', 'unfold', 'intros', 'induction', 'inversion', 'induction', 'induction', 'simpl', 'apply', 'unfold', 'intros', 'unfold', 'apply', 'simpl', 'induction', 'exact', 'inversion', 'simpl', 'induction', 'simpl', 'exact', 'inversion', 'exact', 'exact', 'inversion', 'induction', 'inversion', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'induction', 'simpl', 'apply', 'unfold', 'unfold', 'intros', 'simpl', 'rewrite', 'apply', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'rewrite', 'inversion', 'simpl', 'rewrite', 'inversion', 'induction', 'inversion', 'elim', 'intro', 'rewrite', 'exact', 'inversion', 'exact', 'simpl', 'rewrite', 'reflexivity', 'apply', 'unfold', 'unfold', 'intros', 'apply', 'simpl', 'simpl', 'induction', 'simpl', 'inversion', 'elim', 'intro', 'rewrite', 'rewrite', 'exact', 'inversion', 'rewrite', 'simpl', 'rewrite', 'simpl', 'induction', 'inversion', 'elim', 'intro', 'rewrite', 'inversion', 'reflexivity', 'inversion', 'simpl', 'exact', 'simpl', 'rewrite', 'exact', 'apply', 'unfold', 'unfold', 'intros', 'induction', 'apply', 'simpl', 'simpl', 'exact', 'simpl', 'rewrite', 'simpl', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'exact', 'cut', 'cut', 'intros', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'exact', 'exact', 'exact', 'unfold', 'unfold', 'intros', 'apply', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'unfold', 'unfold', 'intros', 'apply', 'induction', 'simpl', 'assumption', 'induction', 'simpl', 'assumption']",5,6,3,4,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compatible_compat,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predta_compatible_compat_0,"['unfold', 'intros', 'unfold', 'intros', 'inversion']",3,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predta_compatible_compat_1,"['unfold', 'intros', 'unfold', 'unfold', 'intros', 'induction', 'inversion', 'apply', 'apply', 'split', 'assumption', 'split', 'assumption', 'apply', 'apply', 'split', 'exact', 'split', 'exact']",3,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predta_compatible_compat_2,"['unfold', 'unfold', 'unfold', 'intros', 'cut', 'cut', 'unfold', 'intros', 'induction', 'apply', 'intros', 'exact', 'simpl', 'assumption', 'exact', 'induction', 'apply', 'intros', 'exact', 'simpl', 'exact', 'exact', 'apply', 'intros', 'exact', 'simpl', 'exact', 'exact', 'apply', 'exact', 'simpl', 'exact', 'exact', 'unfold', 'intros', 'apply', 'elim', 'intros', 'split', 'induction', 'simpl', 'exact', 'exact', 'unfold', 'intros', 'apply', 'elim', 'intros', 'split', 'intros', 'induction', 'simpl', 'exact', 'exact']",4,2,3,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predta_compatible_compat,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,dta_compatible_compat,"['simple', 'simple', 'simpl', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,states_correct_wrt_sign_compatibles,"['unfold', 'intros', 'unfold', 'unfold', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'inversion', 'unfold', 'split', 'split', 'rewrite', 'exact', 'exact']",3,1,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predtas_correct_wrt_sign_compatibles,"['unfold', 'unfold', 'intros', 'elim', 'elim', 'intros', 'exact']",2,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,dtas_correct_wrt_sign_compatibles,"['unfold', 'unfold', 'intros', 'induction', 'induction', 'exact']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compat_check_correct,"['simple', 'intros', 'inversion', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'inversion', 'reflexivity']",1,1,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,pl_compat_check_complete,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'intro', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'exact', 'inversion', 'intro', 'rewrite', 'inversion', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'inversion', 'inversion', 'intros', 'simpl', 'inversion', 'exact']",2,0,0,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,state_correct_wrt_sign_with_offset_M2,"['unfold', 'intros', 'split', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact']",2,1,0,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predta_correct_wrt_sign_M2,"['unfold', 'intros', 'split', 'intros', 'apply', 'induction', 'simpl', 'exact', 'intros', 'apply', 'induction', 'simpl', 'exact']",3,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compat_check_0_correct,"['unfold', 'simple', 'intros', 'reflexivity', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'intros', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'simpl', 'split', 'exact', 'induction', 'simpl', 'exact', 'intros', 'elim', 'intros', 'simpl', 'split', 'exact', 'induction', 'simpl', 'exact']",2,3,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compat_check_0_complete,"['unfold', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'split', 'rewrite', 'split', 'rewrite', 'exact', 'rewrite', 'rewrite', 'exact', 'inversion', 'rewrite', 'inversion', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'inversion', 'inversion', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'inversion', 'inversion']",2,3,0,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compat_check_correct,"['intros', 'unfold', 'apply', 'unfold', 'simpl', 'exact']",1,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,st_compat_check_complete,"['intros', 'unfold', 'intros', 'cut', 'intro', 'unfold', 'elim', 'intros', 'split', 'simpl', 'exact', 'apply', 'unfold', 'exact']",3,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predta_compat_check_correct,"['simple', 'intros', 'reflexivity', 'intros', 'simpl', 'unfold', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'intros', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'unfold', 'unfold', 'intros', 'apply', 'induction', 'simpl', 'exact', 'unfold', 'unfold', 'intros', 'apply', 'induction', 'simpl', 'exact']",5,5,2,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,predta_compat_check_complete,"['simple', 'intros', 'unfold', 'intros', 'inversion', 'intros', 'simpl', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'rewrite', 'inversion', 'intros', 'unfold', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'unfold', 'unfold', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'inversion', 'inversion']",5,4,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,dta_compat_check_correct,"['simple', 'intro', 'intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/signature.json,dta_compat_check_complete,"['simple', 'intro', 'intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,predta_kill_non_coacc_correct_wrt_sign,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,dta_kill_non_coacc_correct_wrt_sign,"['simple', 'simpl', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,dta_kill_non_coacc_lazy_correct_wrt_sign,"['intros', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,predta_kill_non_coacc_correct_ref_ok,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'elim', 'intros', 'apply', 'split', 'exact', 'exact']",3,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,dta_kill_non_coacc_correct_ref_ok,"['simple', 'simpl', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,dta_kill_non_coacc_lazy_correct_ref_ok,"['intros', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,dta_kill_non_coacc_correct_main_state,"['simple', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'apply', 'split', 'exact', 'exact']",2,1,1,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/non_coacc_kill_correct.json,dta_kill_non_coacc_lazy_correct_main_state,"['intros', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_aux_0_inj,"['simple', 'simple', 'intros', 'simpl', 'inversion', 'rewrite', 'trivial', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'inversion', 'intros', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'rewrite', 'trivial', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'trivial']",2,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_aux_1_inj,"['simple', 'simple', 'intros', 'simpl', 'inversion', 'rewrite', 'trivial', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'simpl', 'inversion', 'rewrite', 'trivial', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'trivial']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_aux_0_1_img_disj,"['simple', 'simple', 'intros', 'intro', 'simpl', 'inversion', 'intros', 'intro', 'inversion', 'intro', 'inversion', 'intros', 'induction', 'intro', 'inversion', 'intro', 'unfold', 'unfold', 'inversion', 'exact', 'intro', 'inversion', 'simple', 'intros', 'intro', 'inversion', 'intros', 'intro', 'inversion', 'intro', 'inversion']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_aux_img_disj,"['simple', 'simple', 'simple', 'intros', 'split', 'intro', 'inversion', 'inversion', 'intros', 'split', 'intro', 'inversion', 'simpl', 'inversion', 'elim', 'intros', 'exact', 'split', 'intro', 'inversion', 'inversion', 'simple', 'intros', 'split', 'intro', 'simpl', 'inversion', 'elim', 'intros', 'exact', 'inversion', 'intros', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'simpl', 'inversion', 'exact', 'inversion', 'simple', 'intros', 'split', 'intro', 'inversion', 'inversion', 'intros', 'split', 'intro', 'inversion', 'simpl', 'inversion', 'exact', 'split', 'intro', 'inversion', 'inversion', 'intros', 'induction', 'induction', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'induction', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'simpl', 'inversion', 'elim', 'intros', 'exact', 'simpl', 'inversion', 'elim', 'intros', 'exact', 'split', 'intro', 'inversion', 'inversion', 'induction', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'simple', 'intros', 'induction', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'intros', 'induction', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'intros', 'induction', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion', 'split', 'intro', 'inversion', 'inversion']",1,0,1,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_aux_0_2_img_disj,"['intros', 'elim', 'intros', 'assumption']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_aux_1_2_img_disj,"['intros', 'elim', 'intros', 'assumption']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_aux_2_inj,"['simple', 'intros', 'induction', 'induction', 'induction', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'trivial', 'trivial', 'assumption', 'inversion', 'simpl', 'inversion', 'elim', 'induction', 'inversion', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'trivial', 'inversion', 'induction', 'simpl', 'inversion', 'elim', 'inversion', 'simpl', 'inversion', 'rewrite', 'split', 'trivial', 'induction', 'induction', 'simpl', 'inversion', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'elim', 'inversion', 'inversion', 'induction', 'inversion', 'simpl', 'inversion', 'elim', 'inversion', 'induction', 'simpl', 'inversion', 'elim', 'inversion', 'inversion', 'simple', 'intros', 'induction', 'induction', 'inversion', 'inversion', 'inversion', 'induction', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'trivial', 'inversion', 'simpl', 'inversion', 'elim', 'induction', 'inversion', 'inversion', 'inversion', 'intros', 'induction', 'induction', 'inversion', 'inversion', 'inversion', 'induction', 'inversion', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'trivial', 'inversion', 'induction', 'inversion', 'intros', 'induction', 'induction', 'inversion', 'inversion', 'inversion', 'induction', 'simpl', 'inversion', 'elim', 'inversion', 'simpl', 'inversion', 'rewrite', 'split', 'trivial', 'induction', 'inversion', 'intros', 'induction', 'induction', 'induction', 'simpl', 'inversion', 'elim', 'inversion', 'simpl', 'inversion', 'elim', 'induction', 'inversion', 'induction', 'simpl', 'inversion', 'rewrite', 'split', 'trivial', 'inversion', 'simpl', 'inversion', 'induction', 'induction', 'inversion', 'simpl', 'inversion', 'elim', 'inversion', 'induction', 'inversion', 'induction', 'inversion', 'simpl', 'inversion', 'rewrite', 'split', 'trivial', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'inversion', 'simpl', 'inversion', 'induction', 'inversion', 'induction', 'simpl', 'inversion', 'inversion', 'split', 'trivial']",1,1,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_inj,"['simple', 'simple', 'simple', 'simple', 'intros', 'split', 'trivial', 'inversion', 'inversion', 'inversion', 'inversion', 'simpl', 'inversion', 'rewrite', 'split', 'trivial', 'simpl', 'inversion', 'elim', 'simpl', 'inversion', 'elim', 'inversion', 'simpl', 'inversion', 'elim', 'simpl', 'inversion', 'rewrite', 'split', 'trivial', 'simpl', 'inversion', 'elim', 'inversion', 'simpl', 'inversion', 'elim', 'simpl', 'inversion', 'elim', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'trivial']",1,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_surj_0,"['intros', 'elim', 'intro', 'elim', 'intros', 'left', 'split', 'simpl', 'rewrite', 'trivial', 'intros', 'elim', 'intros', 'elim', 'intros', 'right', 'left', 'split', 'simpl', 'rewrite', 'trivial', 'intro', 'elim', 'intros', 'elim', 'intros', 'right', 'right', 'split', 'split', 'simpl', 'rewrite', 'trivial']",0,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_surj_1,"['intros', 'elim', 'intros', 'elim', 'intros', 'left', 'split', 'simpl', 'rewrite', 'trivial', 'elim', 'intros', 'elim', 'intros', 'right', 'right', 'split', 'split', 'simpl', 'rewrite', 'trivial', 'elim', 'intros', 'elim', 'intros', 'right', 'right', 'split', 'split', 'simpl', 'rewrite', 'trivial']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_surj_2,"['intros', 'elim', 'intros', 'elim', 'intros', 'right', 'right', 'split', 'split', 'simpl', 'rewrite', 'trivial', 'elim', 'intros', 'right', 'left', 'elim', 'intros', 'split', 'simpl', 'rewrite', 'trivial', 'elim', 'intros', 'elim', 'intros', 'right', 'right', 'split', 'split', 'simpl', 'rewrite', 'trivial']",0,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_surj_3,"['intros', 'elim', 'intros', 'elim', 'intros', 'right', 'right', 'split', 'split', 'simpl', 'rewrite', 'trivial', 'elim', 'intros', 'right', 'right', 'elim', 'intros', 'split', 'split', 'simpl', 'rewrite', 'trivial', 'elim', 'intros', 'elim', 'intros', 'right', 'right', 'split', 'split', 'simpl', 'rewrite', 'trivial']",0,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_surj_4,"['simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'exact', 'split', 'right', 'left', 'split', 'trivial', 'split', 'left', 'split', 'reflexivity', 'right', 'right', 'split', 'split', 'reflexivity']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_surj_5,"['intros', 'elim', 'intros', 'assumption']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_conv_surj,"['simple', 'split', 'split', 'reflexivity', 'intro', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'rewrite', 'trivial', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'rewrite', 'trivial', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'rewrite', 'trivial']",0,1,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_inv_0,"['intros', 'induction', 'unfold', 'simpl', 'unfold', 'rewrite', 'reflexivity', 'unfold', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'reflexivity']",0,4,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_inv_1,"['simple', 'intros', 'unfold', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'intros', 'unfold', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'reflexivity']",2,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_inv_2,"['simple', 'simple', 'intros', 'simpl', 'rewrite', 'reflexivity', 'intros', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simple', 'intros', 'simpl', 'rewrite', 'reflexivity', 'intros', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simple', 'intros', 'simpl', 'rewrite', 'reflexivity', 'intros', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'reflexivity']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_inv_inv_0,"['simple', 'simple', 'simpl', 'reflexivity', 'simpl', 'exact', 'simple', 'simpl', 'exact', 'intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,iad_inv_inv_1,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'rewrite', 'reflexivity']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_card_0,"['simple', 'intros', 'simpl', 'exact', 'simpl', 'exact']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_aux_0,"['simple', 'intros', 'simpl', 'exact', 'simpl', 'exact']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_aux_1,"['intros', 'simpl', 'apply', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_aux_2,"['intros', 'simpl', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_invar_0,"['intros', 'unfold', 'apply', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_invar_1,"['intros', 'unfold', 'rewrite', 'exact']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_invar_2,"['intros', 'unfold', 'rewrite', 'exact']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_invar_3,"['intros', 'unfold', 'rewrite', 'exact']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_invar_4,"['intros', 'unfold', 'rewrite', 'exact']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_ess_invar_5,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,indprinciple_0,"['intros', 'induction', 'induction', 'simpl', 'simpl', 'cut', 'cut', 'cut', 'cut', 'intros', 'split', 'apply', 'elim', 'intros', 'assumption', 'exact', 'intros', 'exact', 'intros', 'exact', 'elim', 'intros', 'exact', 'exact', 'intros', 'exact', 'intros', 'exact', 'apply', 'elim', 'intros', 'assumption', 'exact', 'elim', 'intros', 'assumption', 'exact', 'exact', 'exact', 'exact', 'exact', 'split', 'exact', 'exact', 'induction', 'split', 'apply', 'elim', 'intros', 'assumption', 'simpl', 'exact', 'exact', 'exact', 'split', 'exact', 'exact']",0,1,2,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,indprinciple_1,"['intros', 'induction', 'induction', 'simpl', 'elim', 'simpl', 'elim', 'induction', 'simpl', 'elim', 'split', 'exact', 'exact']",0,1,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,indprinciple_2,"['simple', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,indprinciple_pl,"['intros', 'elim', 'intros', 'split', 'assumption', 'exact', 'exact']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0_0,"['unfold', 'intros', 'induction', 'simpl', 'unfold', 'induction', 'elim', 'simpl', 'reflexivity', 'simpl', 'induction', 'unfold', 'simpl', 'elim', 'simpl', 'reflexivity']",2,3,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0_1,"['simple', 'unfold', 'intros', 'simpl', 'induction', 'simpl', 'reflexivity', 'simpl', 'reflexivity', 'unfold', 'intros', 'induction', 'simpl', 'reflexivity', 'reflexivity']",3,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0_2,"['unfold', 'intros', 'induction', 'simpl', 'induction', 'simpl', 'reflexivity', 'simpl', 'reflexivity', 'simpl', 'induction', 'simpl', 'reflexivity', 'reflexivity']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0_3,"['unfold', 'unfold', 'intros', 'induction', 'elim', 'elim', 'intros', 'elim', 'exact', 'intros', 'elim', 'intros', 'rewrite', 'replace', 'replace', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'exact', 'exact', 'exact', 'exact', 'reflexivity', 'reflexivity']",2,1,1,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0_4,"['unfold', 'unfold', 'intros', 'induction', 'elim', 'elim', 'intro', 'elim', 'exact', 'elim', 'intros', 'rewrite', 'induction', 'replace', 'replace', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'exact', 'exact', 'exact', 'exact', 'reflexivity', 'reflexivity', 'simpl', 'reflexivity']",2,1,1,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_0_invar_essence,"['intro', 'intro', 'elim', 'intros', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_product_1,"['intros', 'induction', 'elim', 'induction', 'simpl', 'inversion', 'reflexivity']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_tl_length_prod_0,"['unfold', 'intros', 'split', 'intros', 'inversion', 'intros', 'split', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'intros', 'elim', 'intro', 'rewrite', 'reflexivity', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'exact']",2,1,0,2,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_tl_length_prod_1,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'exact']",2,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_tl_length_prod_2,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'exact']",2,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_tl_length_prod_3,"['unfold', 'unfold', 'intros', 'split', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'replace', 'elim', 'intros', 'cut', 'intro', 'inversion', 'elim', 'intros', 'elim', 'intros', 'apply', 'elim', 'intro', 'rewrite', 'simpl', 'cut', 'intro', 'inversion', 'exact', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'intro', 'replace', 'exact', 'elim', 'intro', 'rewrite', 'reflexivity', 'elim', 'intros', 'rewrite', 'simpl', 'symmetry', 'exact', 'exact', 'apply', 'inversion', 'exact', 'exact', 'unfold', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'exact', 'elim', 'apply', 'rewrite', 'simpl', 'apply', 'exact', 'exact', 'unfold', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'exact', 'elim', 'apply', 'rewrite', 'simpl', 'apply', 'exact', 'exact', 'exact', 'exact', 'reflexivity', 'intros', 'inversion']",3,3,2,3,0,8
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_tl_length_prod_4,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'replace', 'inversion', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'rewrite', 'unfold', 'unfold', 'simpl', 'elim', 'intro', 'exact', 'intro', 'elim', 'apply', 'apply', 'exact', 'exact', 'exact', 'right', 'elim', 'intro', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'reflexivity', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'exact', 'unfold', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'exact', 'intro', 'elim', 'apply', 'apply', 'exact', 'exact', 'exact', 'left', 'rewrite', 'apply', 'rewrite', 'exact', 'unfold', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'exact', 'elim', 'apply', 'apply', 'exact', 'exact', 'reflexivity']",2,3,3,6,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_tl_length_prod_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_tl_length_prod,"['intros', 'elim', 'intros', 'unfold', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_0,"['simple', 'intros', 'elim', 'intros', 'induction', 'replace', 'apply', 'apply', 'unfold', 'unfold', 'elim', 'intro', 'exact', 'intro', 'simpl', 'cut', 'intro', 'cut', 'intros', 'cut', 'intro', 'rewrite', 'elim', 'rewrite', 'simpl', 'rewrite', 'simpl', 'reflexivity', 'exact', 'apply', 'exact', 'apply', 'exact', 'exact', 'reflexivity', 'simpl', 'exact']",1,3,3,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_path_product_n,"['simple', 'intros', 'induction', 'induction', 'simpl', 'reflexivity', 'inversion', 'inversion', 'intros', 'induction', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'simpl', 'inversion', 'inversion', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_inj,"['simple', 'simple', 'simple', 'simple', 'intros', 'split', 'reflexivity', 'intros', 'simpl', 'rewrite', 'simpl', 'inversion', 'intros', 'simpl', 'rewrite', 'simpl', 'inversion', 'intros', 'simpl', 'rewrite', 'simpl', 'inversion', 'intros', 'induction', 'simpl', 'simpl', 'rewrite', 'inversion', 'induction', 'simpl', 'rewrite', 'simpl', 'inversion', 'induction', 'simpl', 'rewrite', 'simpl', 'inversion', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'simpl', 'simpl', 'simpl', 'inversion', 'inversion', 'inversion', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'reflexivity']",2,3,0,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_1_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_1_1,"['unfold', 'intros', 'inversion', 'inversion', 'rewrite', 'inversion', 'rewrite', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'exact']",2,1,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_1_2,"['unfold', 'intros', 'inversion', 'rewrite', 'inversion', 'rewrite', 'inversion', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'elim', 'intros', 'rewrite', 'simpl', 'exact']",2,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_1_3,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'replace', 'inversion', 'inversion', 'simpl', 'apply', 'apply', 'inversion', 'exact', 'exact', 'rewrite', 'unfold', 'unfold', 'elim', 'intros', 'exact', 'cut', 'intro', 'elim', 'apply', 'rewrite', 'simpl', 'exact', 'exact', 'simpl', 'exact', 'inversion', 'elim', 'apply', 'apply', 'exact', 'inversion', 'rewrite', 'inversion', 'elim', 'exact', 'rewrite', 'unfold', 'unfold', 'elim', 'intro', 'exact', 'intro', 'simpl', 'rewrite', 'simpl', 'elim', 'apply', 'apply', 'exact', 'exact', 'inversion', 'induction', 'elim', 'simpl', 'intro', 'inversion', 'inversion', 'elim', 'reflexivity']",3,4,4,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_1_4,"['unfold', 'unfold', 'intros', 'induction', 'clear', 'clear', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'replace', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'exact', 'rewrite', 'inversion', 'exact', 'exact', 'exact', 'rewrite', 'exact', 'unfold', 'unfold', 'elim', 'intro', 'exact', 'intro', 'rewrite', 'elim', 'apply', 'simpl', 'simpl', 'apply', 'apply', 'exact', 'exact', 'exact', 'apply', 'apply', 'exact', 'inversion', 'rewrite', 'inversion', 'rewrite', 'elim', 'exact', 'exact', 'exact', 'rewrite', 'unfold', 'unfold', 'elim', 'intro', 'exact', 'intro', 'simpl', 'simpl', 'elim', 'apply', 'apply', 'exact', 'exact', 'inversion', 'inversion', 'simpl', 'intro', 'inversion', 'induction', 'elim', 'simpl', 'intro', 'inversion', 'induction', 'elim', 'induction', 'elim', 'simpl', 'intro', 'inversion', 'rewrite', 'unfold', 'unfold', 'simpl', 'simpl', 'elim', 'intro', 'exact', 'intro', 'elim', 'apply', 'apply', 'exact', 'exact', 'reflexivity', 'inversion', 'rewrite', 'inversion']",3,4,3,5,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_1_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_1,"['intros', 'elim', 'intros', 'unfold', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_2,"['intros', 'unfold', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_3_0,"['unfold', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'right', 'exact']",2,1,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_3_1,"['unfold', 'intros', 'split', 'split', 'split', 'elim', 'intro', 'rewrite', 'simpl', 'inversion', 'reflexivity', 'intro', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'inversion', 'reflexivity', 'split', 'inversion', 'rewrite', 'inversion', 'exact', 'exact']",2,1,1,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_3_2,"['unfold', 'intros', 'split', 'split', 'split', 'elim', 'intro', 'rewrite', 'simpl', 'inversion', 'reflexivity', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'simpl', 'inversion', 'reflexivity', 'split', 'exact', 'inversion', 'rewrite', 'inversion', 'exact']",2,2,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_3_3,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'cut', 'intro', 'rewrite', 'clear', 'inversion', 'elim', 'intros', 'elim', 'intros', 'left', 'split', 'split', 'elim', 'intros', 'elim', 'intros', 'split', 'simpl', 'rewrite', 'reflexivity', 'split', 'exact', 'exact', 'inversion', 'exact', 'exact', 'unfold', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'exact', 'intro', 'elim', 'apply', 'rewrite', 'simpl', 'apply', 'exact', 'exact', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'right', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'left', 'split', 'split', 'split', 'exact', 'split', 'exact', 'apply', 'intro', 'rewrite', 'induction', 'inversion', 'rewrite', 'elim', 'intro', 'right', 'exact', 'inversion', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'inversion', 'exact', 'unfold', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'exact', 'elim', 'apply', 'rewrite', 'simpl', 'apply', 'exact', 'exact', 'reflexivity']",3,4,2,3,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_3_4,"['unfold', 'unfold', 'intros', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'intros', 'cut', 'intro', 'rewrite', 'clear', 'inversion', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'inversion', 'rewrite', 'unfold', 'unfold', 'simpl', 'elim', 'intro', 'exact', 'intro', 'elim', 'apply', 'apply', 'exact', 'exact', 'exact', 'elim', 'intro', 'rewrite', 'inversion', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'rewrite', 'exact', 'split', 'inversion', 'exact', 'inversion', 'elim', 'exact', 'intro', 'elim', 'intro', 'rewrite', 'induction', 'simpl', 'inversion', 'rewrite', 'inversion', 'induction', 'inversion', 'rewrite', 'inversion', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'rewrite', 'exact', 'split', 'apply', 'intro', 'rewrite', 'induction', 'inversion', 'rewrite', 'inversion', 'exact', 'inversion', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'inversion', 'rewrite', 'exact', 'exact', 'rewrite', 'unfold', 'unfold', 'simpl', 'elim', 'intro', 'exact', 'intros', 'elim', 'apply', 'apply', 'exact', 'exact', 'inversion', 'exact', 'exact', 'rewrite', 'exact', 'unfold', 'unfold', 'rewrite', 'simpl', 'elim', 'intro', 'exact', 'intro', 'elim', 'apply', 'apply', 'apply', 'exact', 'exact', 'exact', 'elim', 'intro', 'rewrite', 'inversion', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'inversion', 'exact', 'inversion', 'rewrite', 'elim', 'exact', 'intro', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'elim', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'simpl', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'elim', 'intro', 'inversion', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'apply', 'intro', 'rewrite', 'induction', 'inversion', 'rewrite', 'elim', 'exact', 'rewrite', 'exact', 'unfold', 'rewrite', 'unfold', 'simpl', 'elim', 'intro', 'exact', 'elim', 'apply', 'apply', 'exact', 'exact', 'rewrite', 'inversion', 'assumption', 'rewrite', 'exact', 'unfold', 'rewrite', 'simpl', 'unfold', 'elim', 'intro', 'exact', 'intro', 'elim', 'apply', 'apply', 'exact', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'reflexivity']",3,5,2,5,0,8
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_3_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_3,"['intro', 'intro', 'elim', 'intro', 'intro', 'exact']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_path_incl_4,"['intros', 'unfold', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_0_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_0_1,"['unfold', 'intros', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'inversion', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'trivial', 'inversion', 'inversion']",3,2,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_0_2,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'rewrite', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'rewrite', 'inversion']",3,2,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_0_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_0,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_1_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_1_1,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'split', 'split', 'simpl', 'split', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'inversion', 'inversion']",3,1,0,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_1_2,"['unfold', 'intros', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'simpl', 'exact', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'simpl', 'exact', 'simpl', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'simpl', 'induction', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'intros', 'split', 'split', 'split', 'exact', 'simpl', 'exact', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'induction', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'simpl', 'split', 'exact', 'exact', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact']",2,1,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_1_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductl_1,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_0_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_0_1,"['unfold', 'intros', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'inversion', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'trivial', 'inversion', 'inversion']",3,2,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_0_2,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'rewrite', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'inversion']",3,2,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_0_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_0,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_1_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_1_1,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'split', 'split', 'simpl', 'split', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'inversion', 'inversion']",3,1,0,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_1_2,"['unfold', 'intros', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'simpl', 'induction', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'simpl', 'induction', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'simpl', 'induction', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'exact']",2,1,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_1_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,sproductr_1,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,s_produit_0,"['simple', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'unfold', 'exact', 'unfold', 'exact', 'intros', 'induction', 'inversion', 'unfold', 'exact', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'simpl', 'exact']",1,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,s_produit_1,"['simple', 'simple', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'inversion', 'simple', 'intros', 'simpl', 'inversion', 'intros', 'unfold', 'exact', 'intros', 'simpl', 'unfold', 'exact', 'simple', 'intros', 'inversion', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'simpl', 'exact', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'exact', 'exact']",3,2,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_0_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_0_1,"['unfold', 'intros', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'inversion', 'inversion', 'simpl', 'rewrite', 'trivial', 'inversion', 'inversion']",3,1,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_0_2,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'induction', 'induction', 'rewrite', 'simpl', 'elim', 'simpl', 'trivial', 'simpl', 'trivial', 'simpl', 'exact', 'induction', 'rewrite', 'simpl', 'elim', 'simpl', 'trivial', 'simpl', 'rewrite', 'trivial', 'simpl', 'assumption', 'rewrite', 'simpl', 'elim', 'simpl', 'trivial', 'simpl', 'rewrite', 'trivial', 'simpl', 'trivial', 'rewrite', 'simpl', 'elim', 'simpl', 'trivial', 'simpl', 'trivial', 'simpl', 'trivial', 'induction', 'rewrite', 'induction', 'simpl', 'elim', 'simpl', 'trivial', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'elim', 'simpl', 'trivial', 'simpl', 'rewrite', 'trivial', 'exact', 'simpl', 'elim', 'simpl', 'trivial', 'simpl', 'rewrite', 'trivial', 'simpl', 'exact', 'simpl', 'elim', 'simpl', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'rewrite', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'trivial', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'rewrite', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'trivial', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'inversion']",3,3,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_0_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_0,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_1_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_1_1,"['unfold', 'intros', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'inversion', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'trivial', 'inversion', 'inversion']",3,2,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_1_2,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'rewrite', 'inversion', 'induction', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'induction', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'simpl', 'elim', 'reflexivity', 'reflexivity', 'simpl', 'exact', 'inversion']",3,2,0,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_1_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_1,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_2,"['simple', 'intros', 'inversion', 'intros', 'induction', 'unfold', 'inversion', 'exact', 'exact', 'intros', 'induction', 'inversion', 'unfold', 'exact', 'induction', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'simpl', 'exact', 'simpl', 'exact', 'simpl', 'induction', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact']",1,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_3_0,"['unfold', 'intros', 'simpl', 'inversion']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_3_1,"['unfold', 'intros', 'simpl', 'split', 'split', 'split', 'split', 'elim', 'intro', 'rewrite', 'split', 'reflexivity', 'split', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion']",3,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_3_2,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'induction', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'reflexivity', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'reflexivity', 'elim', 'intros', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'clear', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'induction', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'clear', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'clear', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'clear', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'clear', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'elim', 'intros', 'intros', 'rewrite', 'split', 'split', 'reflexivity', 'rewrite', 'split', 'simpl', 'simpl', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact']",2,1,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_3_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_4_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_4_1,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'split', 'split', 'split', 'split', 'split', 'symmetry', 'exact', 'split', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'intro', 'rewrite', 'inversion']",3,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_4_2,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'rewrite', 'simpl', 'assumption', 'split', 'assumption', 'rewrite', 'simpl', 'rewrite', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'simpl', 'split', 'simpl', 'exact', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'assumption', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'assumption', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'induction', 'clear', 'induction', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'induction', 'simpl', 'inversion', 'clear', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'clear', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'clear', 'induction', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'induction', 'clear', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'clear', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'clear', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'clear', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'split', 'simpl', 'assumption']",2,3,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_4_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_4,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_produit_5,"['simple', 'intros', 'induction', 'inversion', 'intros', 'induction', 'simpl', 'inversion', 'cut', 'intro', 'rewrite', 'exact', 'reflexivity', 'cut', 'intro', 'rewrite', 'exact', 'reflexivity', 'simple', 'intros', 'inversion', 'intros', 'cut', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'assumption', 'split', 'assumption', 'reflexivity', 'intros', 'clear', 'clear', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'split', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'reflexivity', 'split', 'exact', 'exact', 'induction', 'clear', 'induction', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'induction', 'inversion', 'split', 'split', 'split', 'split', 'split', 'simpl', 'simpl', 'inversion', 'reflexivity', 'simpl', 'split', 'assumption', 'induction', 'split', 'split', 'split', 'split', 'simpl', 'split', 'simpl', 'inversion', 'reflexivity', 'split', 'assumption', 'split', 'split', 'split', 'split', 'simpl', 'simpl', 'inversion', 'split', 'reflexivity', 'split', 'assumption', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'induction', 'inversion', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'induction', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'split', 'reflexivity', 'split', 'assumption', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'induction', 'split', 'split', 'split', 'split', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'clear', 'induction', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'induction', 'simpl', 'inversion', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'induction', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'clear', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'induction', 'simpl', 'inversion', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'induction', 'simpl', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'split', 'reflexivity', 'split', 'assumption', 'split', 'split', 'split', 'split', 'simpl', 'inversion', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'induction', 'split', 'split', 'split', 'split', 'simpl', 'split', 'reflexivity', 'split', 'assumption', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'simpl', 'split', 'reflexivity', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'assumption']",1,1,1,3,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_rec_0,"['simple', 'intros', 'inversion', 'inversion', 'simpl', 'exact', 'intros', 'inversion', 'inversion', 'simpl', 'apply', 'exact', 'exact']",1,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_rec_1,"['intros', 'elim', 'elim', 'intros', 'cut', 'intro', 'elim', 'intros', 'elim', 'intros', 'apply', 'exact', 'apply', 'exact', 'exact', 'elim', 'intros', 'elim', 'intros', 'exact']",1,0,2,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_rec_2,"['simple', 'intros', 'inversion', 'split', 'split', 'simpl', 'split', 'reflexivity', 'split', 'exact', 'exact', 'intros', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'split', 'split', 'simpl', 'split', 'rewrite', 'elim', 'intros', 'rewrite', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'exact']",1,0,1,1,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,pl_produit_rec_3,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'exact', 'exact', 'transitivity', 'exact', 'symmetry', 'exact', 'transitivity', 'exact', 'symmetry', 'exact', 'exact', 'exact', 'transitivity', 'symmetry', 'exact', 'exact']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_inter_0,"['unfold', 'intros', 'inversion', 'inversion', 'inversion', 'inversion', 'apply', 'exact', 'apply', 'exact', 'apply', 'cut', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'cut', 'intro', 'exact', 'apply', 'split', 'exact', 'split', 'exact', 'cut', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'cut', 'intro', 'exact', 'apply', 'split', 'exact', 'split', 'exact', 'exact', 'exact']",2,0,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_inter_1,"['unfold', 'intros', 'inversion', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'split', 'apply', 'exact', 'apply', 'exact', 'cut', 'intro', 'exact', 'apply', 'split', 'exact', 'split', 'exact']",2,0,0,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_inter_direct,"['intro', 'intro', 'intro', 'intro', 'intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,predta_inter_reciproque,"['intro', 'intro', 'intro', 'intro', 'intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,inter_semantics_0,"['simple', 'simple', 'intros', 'simpl', 'simpl', 'split', 'intros', 'elim', 'intros', 'exact', 'intros', 'exact']",2,0,1,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter.json,inter_semantics,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,prec_list_kill_correct_wrt_sign_invar,"['intros', 'apply', 'intros', 'elim', 'intros', 'exact']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,states_kill_aux_correct_wrt_sign_invar,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'exact', 'exact']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,states_kill_correct_wrt_sign_invar,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'inversion', 'rewrite', 'exact']",2,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,preDTA_kill_correct_wrt_sign_invar,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,DTA_kill_correct_wrt_sign_invar,"['simple', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'rewrite', 'unfold', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'unfold', 'intros', 'inversion']",4,2,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,DTA_kill_empty_states_lazy_correct_wrt_sign_invar,"['intro', 'rewrite', 'unfold', 'exact']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,kill_empty_correct_wrt_sign_invar,"['simple', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'rewrite', 'simpl', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'rewrite', 'inversion', 'unfold', 'intros', 'inversion']",4,3,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,kill_empty_lazy_correct_wrt_sign_invar,"['intro', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,prec_list_kill_occur,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'exact', 'exact', 'inversion', 'rewrite', 'inversion', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'exact', 'exact', 'rewrite', 'exact', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'exact', 'exact', 'inversion', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'exact', 'rewrite', 'inversion', 'rewrite', 'exact', 'rewrite', 'rewrite', 'exact', 'intros', 'simpl', 'inversion', 'rewrite', 'inversion']",2,0,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,prec_list_kill_ref_ok_invar,"['intros', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'split', 'exact']",4,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,states_kill_aux_ref_ok_invar,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,states_kill_ref_ok_invar,"['intros', 'unfold', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'inversion', 'rewrite', 'exact']",1,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,preDTA_kill_ref_ok_distinct_invar,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,preDTA_kill_ref_ok_invar,"['intros', 'elim', 'intros', 'apply', 'elim', 'intro', 'intro', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,DTA_kill_ref_ok_invar,"['simple', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'rewrite', 'simpl', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'inversion']",4,3,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,DTA_kill_ref_ok_invar_lazy,"['intro', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,inter_DTA_main_state_correct_invar,"['simple', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'unfold', 'unfold', 'split', 'exact', 'rewrite', 'simpl', 'unfold', 'intros', 'split', 'reflexivity']",3,4,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_correct.json,inter_DTA_main_state_correct_invar_lazy,"['intro', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_exists,"['simple', 'intros', 'elim', 'intros', 'split', 'exact', 'split', 'exact']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,non_empty_pl_path_exists,"['simple', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'simpl', 'exact', 'intros', 'elim']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_0_0,"['unfold', 'intros', 'inversion', 'split', 'split', 'exact', 'exact']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_0_1,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'exact']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_0_2,"['unfold', 'intros', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'apply', 'exact', 'intro', 'rewrite', 'inversion', 'exact']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_0_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_0,"['intros', 'elim', 'intros', 'split', 'exact']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_1_0,"['unfold', 'intros', 'inversion', 'exact']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_1_1,"['unfold', 'intros', 'inversion', 'apply', 'exact', 'induction', 'inversion', 'apply', 'inversion', 'exact', 'exact']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_1_2,"['unfold', 'intros', 'induction', 'inversion_clear', 'induction', 'inversion', 'rewrite', 'inversion_clear', 'elim', 'trivial', 'apply', 'apply', 'inversion', 'rewrite', 'inversion', 'elim', 'auto', 'exact']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_1_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_equiv_1,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_rec_length,"['simple', 'intros', 'inversion', 'simpl', 'reflexivity', 'intros', 'inversion', 'simpl', 'rewrite', 'reflexivity', 'exact']",1,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,liste_rec_length_0,"['unfold', 'intros', 'inversion', 'reflexivity']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,liste_rec_length_1,"['unfold', 'intros', 'induction', 'inversion', 'inversion', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,liste_rec_length_2,"['unfold', 'intros', 'simpl', 'induction', 'inversion', 'simpl', 'inversion', 'rewrite', 'inversion', 'rewrite', 'reflexivity']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,liste_rec_length_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,liste_rec_length,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_incl_length_0,"['unfold', 'intros', 'inversion', 'reflexivity']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_incl_length_1,"['unfold', 'intros', 'inversion', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_incl_length_2,"['unfold', 'intros', 'inversion', 'rewrite', 'inversion', 'elim', 'exact']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_incl_length_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,pl_path_incl_length,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/pl_path.json,forall_incl_length,"['simple', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'exact', 'intro', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'apply', 'apply', 'intros', 'apply', 'replace', 'apply', 'exact', 'reflexivity', 'apply', 'apply', 'intros', 'cut', 'intros', 'simpl', 'inversion', 'reflexivity', 'exact', 'apply', 'intros', 'apply', 'apply', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'intros', 'induction', 'exact', 'elim', 'intros', 'cut', 'intros', 'inversion', 'transitivity', 'symmetry', 'exact', 'inversion', 'reflexivity']",4,0,2,4,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_0_0,"['intros', 'elim', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_0_1,"['intros', 'cut', 'intros', 'simpl', 'rewrite', 'exact', 'unfold', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_0_2,"['intros', 'cut', 'intro', 'elim', 'intros', 'simpl', 'cut', 'intro', 'cut', 'intro', 'exact', 'exact', 'exact', 'simpl', 'cut', 'cut', 'intros', 'exact', 'exact', 'exact', 'unfold', 'unfold', 'exact']",1,1,2,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_0,"['simple', 'intros', 'exact', 'intros', 'exact', 'intros', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_1_0,"['intros', 'elim', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_1_1,"['intros', 'cut', 'intros', 'simpl', 'rewrite', 'exact', 'unfold', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_1_2,"['intros', 'cut', 'intro', 'elim', 'intros', 'simpl', 'cut', 'intro', 'cut', 'intro', 'exact', 'exact', 'exact', 'simpl', 'cut', 'cut', 'intros', 'exact', 'exact', 'exact', 'unfold', 'unfold', 'exact']",1,1,2,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_1,"['simple', 'intros', 'exact', 'intros', 'exact', 'intros', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,borne_2,"['intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'cut', 'cut', 'intros', 'exact', 'apply', 'unfold', 'split', 'assumption', 'apply', 'unfold', 'split', 'assumption']",1,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_0_0,"['simple', 'simpl', 'trivial', 'intros', 'simpl', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_0,"['intro', 'intro', 'intro', 'simple', 'intros', 'unfold', 'unfold', 'case', 'intros', 'cut', 'cut', 'intros', 'exact', 'exact', 'cut', 'intro', 'exact', 'simpl', 'exact', 'intros', 'cut', 'cut', 'intros', 'exact', 'exact', 'cut', 'intro', 'exact', 'simpl', 'exact', 'case', 'intros', 'unfold', 'unfold', 'cut', 'intro', 'rewrite', 'cut', 'intro', 'exact', 'cut', 'cut', 'intros', 'exact', 'cut', 'intro', 'exact', 'cut', 'intro', 'exact', 'exact', 'exact', 'exact', 'intros', 'unfold', 'unfold', 'cut', 'cut', 'intros', 'exact', 'exact', 'apply', 'cut', 'cut', 'intros', 'exact', 'exact', 'apply', 'exact']",2,1,2,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_1,"['intros', 'induction', 'simpl', 'exact', 'simpl', 'exact']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_2,"['intros', 'simpl', 'induction', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_3,"['unfold', 'intros', 'induction', 'cut', 'intro', 'rewrite', 'cut', 'intro', 'exact', 'exact', 'generalize', 'generalize', 'simpl', 'trivial', 'cut', 'cut', 'intros', 'exact', 'exact', 'exact']",2,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_4,"['unfold', 'intro', 'intro', 'intro', 'intros', 'cut', 'cut', 'intros', 'induction', 'cut', 'intros', 'induction', 'assumption', 'assumption', 'exact', 'induction', 'cut', 'intro', 'rewrite', 'cut', 'intro', 'apply', 'cut', 'intro', 'exact', 'exact', 'exact', 'generalize', 'generalize', 'simpl', 'trivial', 'exact', 'exact', 'exact']",1,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_5_0,"['intros', 'simpl', 'apply', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,conservation_5,"['intros', 'unfold', 'unfold', 'cut', 'cut', 'intros', 'cut', 'intros', 'rewrite', 'apply', 'apply', 'exact', 'unfold', 'trivial', 'exact', 'exact']",1,1,2,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,sem_listes_0,"['intros', 'intro', 'inversion', 'rewrite', 'discriminate', 'rewrite', 'inversion']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,sem_listes_1,"['intros', 'intro', 'cut', 'intro', 'exact', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,sem_listes_2,"['intros', 'inversion', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_0_0,"['intros', 'induction', 'induction', 'simpl', 'discriminate', 'simpl', 'discriminate', 'trivial']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_0_1,"['unfold', 'intros', 'cut', 'intros', 'rewrite', 'exact', 'exact']",2,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_0_2,"['intro', 'intro', 'intro', 'intro', 'simple', 'intros', 'simpl', 'rewrite', 'rewrite', 'discriminate', 'intros', 'elim', 'intro', 'assumption', 'intro', 'cut', 'intro', 'simpl', 'rewrite', 'rewrite', 'simpl', 'simpl', 'simpl', 'rewrite', 'discriminate', 'exact']",2,2,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_0_5,"['unfold', 'unfold', 'intros', 'cut', 'intro', 'elim', 'intros', 'cut', 'intros', 'elim', 'intros', 'induction', 'simpl', 'discriminate', 'exact', 'induction', 'simpl', 'discriminate', 'exact', 'induction', 'simpl', 'discriminate', 'exact']",2,2,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_0_6,"['simple', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'simpl', 'fold', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'rewrite', 'inversion', 'inversion']",2,0,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_0_7,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_0,"['cut', 'intros', 'unfold', 'intros', 'exact', 'exact']",3,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_0,"['unfold', 'simple', 'intro', 'intro', 'simple', 'intros', 'simpl', 'discriminate', 'intros', 'simpl', 'discriminate', 'intro', 'intro', 'simple', 'intros', 'elim', 'intro', 'intro', 'simple', 'intros', 'simpl', 'simpl', 'assumption', 'simpl', 'intros', 'assumption']",3,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_1_0,"['intro', 'intro', 'intro', 'simple', 'intros', 'simpl', 'discriminate', 'intros', 'simpl', 'rewrite', 'rewrite', 'simpl', 'assumption']",2,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_1_1,"['intros', 'cut', 'intro', 'elim', 'intros', 'cut', 'intro', 'elim', 'intros', 'split', 'exact', 'exact', 'exact']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_1,"['intro', 'intro', 'intro', 'unfold', 'unfold', 'simple', 'intros', 'simpl', 'discriminate', 'intro', 'intro', 'simple', 'intros', 'elim', 'cut', 'intro', 'elim', 'intros', 'cut', 'intro', 'elim', 'intros', 'apply', 'cut', 'intro', 'exact', 'exact', 'exact', 'exact']",3,2,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_2_0,"['intro', 'simple', 'simple', 'intro', 'simpl', 'discriminate', 'intros', 'simpl', 'discriminate', 'intro', 'simpl', 'trivial', 'intros', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_2_1,"['intro', 'intro', 'intro', 'intro', 'intro', 'intro', 'intro', 'induction', 'intro', 'simpl', 'discriminate', 'intros', 'cut', 'cut', 'cut', 'intros', 'elim', 'left', 'assumption', 'elim', 'elim', 'intros', 'right', 'split', 'assumption', 'simpl', 'intros', 'simpl', 'simpl', 'simpl', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'discriminate', 'intros', 'simpl', 'simpl', 'simpl', 'simpl', 'rewrite', 'rewrite', 'simpl', 'discriminate', 'exact', 'exact', 'exact']",3,3,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_2_2,"['intros', 'elim', 'intro', 'simpl', 'simpl', 'rewrite', 'simpl', 'trivial', 'intro', 'elim', 'intro', 'intro', 'simpl', 'simpl', 'rewrite', 'rewrite', 'simpl', 'exact']",0,2,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar_2,"['intros', 'unfold', 'unfold', 'simple', 'simple', 'intro', 'intros', 'simpl', 'discriminate', 'intros', 'simpl', 'discriminate', 'intros', 'elim', 'simple', 'intros', 'cut', 'intro', 'elim', 'intros', 'exact', 'intros', 'exact', 'cut', 'intro', 'elim', 'intros', 'left', 'exact', 'right', 'elim', 'intros', 'split', 'unfold', 'exact', 'exact', 'exact', 'intros', 'simpl', 'discriminate']",3,2,2,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invar,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,invarl,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_1_0,"['intros', 'unfold', 'unfold', 'induction', 'simpl', 'elim', 'intros', 'intros', 'elim', 'intros', 'cut', 'cut', 'intros', 'exact', 'apply', 'unfold', 'split', 'split', 'split', 'split', 'assumption', 'assumption', 'simpl', 'rewrite', 'rewrite', 'simpl', 'assumption']",1,4,2,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_1_1,"['intros', 'unfold', 'unfold', 'split', 'split', 'assumption']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_1_2,"['intros', 'unfold', 'simpl', 'trivial']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_1_3,"['intros', 'unfold', 'unfold', 'unfold', 'cut', 'intro', 'cut', 'intros', 'exact', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'exact', 'intro', 'rewrite', 'exact', 'case', '[ left | right ]', 'auto', 'cut', 'cut', 'generalize', 'intros', 'simpl', 'rewrite', 'rewrite', 'simpl', 'exact', 'cut', 'intro', 'exact', 'exact', 'cut', 'intro', 'exact', 'exact']",3,3,2,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_1_4_0,"['intro', 'intro', 'intro', 'intro', 'simple', 'intros', 'simpl', 'cut', 'intro', 'elim', 'trivial', 'intro', 'intro', 'simple', 'intros', 'simpl', 'discriminate', 'intros', 'simpl', 'simpl', 'rewrite', 'simpl', 'trivial']",2,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_1_4,"['intro', 'intro', 'intro', 'intro', 'unfold', 'intros', 'induction', 'cut', 'intro', 'cut', 'intro', 'exact', 'cut', 'intro', 'exact', 'intro', 'inversion', 'exact', 'simpl', 'discriminate']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/semantics.json,semantic_equiv_1,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,pl_path_recon_true,"['intro', 'simple', 'intros', 'exact', 'intros', 'inversion', 'elim', 'intros', 'apply', 'apply', 'split', 'exact']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,kill_empty_states_lazy_eg_kill_empty_states,"['unfold', 'intros', 'rewrite', 'reflexivity']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,pl_kill_0,"['simple', 'intros', 'elim', 'intro', 'rewrite', 'simpl', 'inversion', 'rewrite', 'inversion', 'elim', 'reflexivity', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'intro', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'split', 'reflexivity', 'apply', 'intro', 'inversion', 'rewrite', 'split', 'split', 'reflexivity', 'assumption', 'split', 'split', 'reflexivity', 'assumption', 'rewrite', 'split', 'split', 'reflexivity', 'assumption', 'intros', 'simpl', 'split', 'split', 'reflexivity', 'inversion', 'exact']",3,2,0,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,pl_kill_1,"['simple', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'apply', 'exact', 'rewrite', 'exact', 'inversion', 'elim', 'symmetry', 'exact', 'rewrite', 'inversion', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'exact', 'rewrite', 'exact', 'elim', 'intros', 'split', 'apply', 'assumption', 'exact', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'exact', 'rewrite', 'exact', 'inversion', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'elim', 'intros', 'split', 'apply', 'intro', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'exact', 'rewrite', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'apply', 'intro', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'exact', 'rewrite', 'rewrite', 'elim', 'intros', 'split', 'apply', 'exact', 'intro', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'reflexivity', 'exact', 'intros', 'simpl', 'inversion', 'rewrite', 'inversion', 'split', 'exact', 'exact']",3,2,1,3,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,pl_kill_prec_empty,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'intros', 'rewrite', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'rewrite', 'inversion', 'intros', 'reflexivity']",2,0,0,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,st_kill_0,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'simpl', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'intros', 'simpl', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'cut', 'intro', 'rewrite', 'inversion', 'exact', 'induction', 'rewrite', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'inversion', 'intro', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'induction', 'simpl', 'reflexivity', 'simpl', 'reflexivity', 'rewrite', 'simpl', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'elim', 'intro', 'rewrite', 'rewrite', 'inversion', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'induction', 'rewrite', 'simpl', 'exact', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'simpl', 'rewrite', 'simpl', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'induction', 'rewrite', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'elim', 'intro', 'rewrite', 'rewrite', 'inversion', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'induction', 'simpl', 'reflexivity', 'reflexivity', 'rewrite', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'elim', 'intro', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'inversion', 'reflexivity', 'rewrite', 'rewrite', 'simpl', 'induction', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'unfold', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'induction', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact']",2,3,1,4,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,st_kill_1,"['intros', 'unfold', 'elim', 'intros', 'cut', 'intro', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'rewrite', 'split', 'reflexivity', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'split', 'reflexivity', 'exact']",1,0,0,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,st_kill_2,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'inversion', 'split', 'split', 'reflexivity', 'rewrite', 'exact', 'inversion', 'intro', 'rewrite', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'induction', 'inversion', 'induction', 'elim', 'intros', 'elim', 'intros', 'split', 'simpl', 'split', 'assumption', 'simpl', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'reflexivity', 'inversion', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'simpl', 'split', 'assumption', 'rewrite', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'inversion', 'rewrite', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'split', 'simpl', 'split', 'assumption', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'simpl', 'split', 'assumption', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'inversion', 'induction', 'induction', 'inversion', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'inversion', 'induction', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'simpl', 'apply', 'rewrite', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'apply', 'rewrite', 'simpl', 'exact', 'apply', 'rewrite', 'simpl', 'exact', 'apply', 'rewrite', 'exact', 'rewrite', 'rewrite', 'induction', 'simpl', 'simpl', 'apply', 'rewrite', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'apply', 'rewrite', 'rewrite', 'exact', 'apply', 'rewrite', 'simpl', 'exact', 'apply', 'rewrite', 'simpl', 'rewrite', 'simpl', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'exact', 'exact']",2,4,2,3,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,st_kill_3,"['simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'split', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'split', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'split', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'inversion', 'inversion', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'rewrite', 'induction', 'simpl', 'exact', 'rewrite', 'exact', 'intro', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'rewrite', 'simpl', 'induction', 'simpl', 'exact', 'rewrite', 'exact', 'intro', 'rewrite', 'inversion', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'rewrite', 'simpl', 'induction', 'simpl', 'exact', 'rewrite', 'exact', 'intro', 'rewrite', 'inversion', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'rewrite', 'simpl', 'induction', 'simpl', 'exact', 'rewrite', 'assumption', 'intro', 'rewrite', 'inversion']",1,3,0,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,st_kill_4,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'intro', 'inversion', 'inversion', 'apply', 'intro', 'inversion']",3,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_0,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'intros', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'rewrite', 'rewrite', 'simpl', 'induction', 'reflexivity', 'induction', 'rewrite', 'simpl', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'inversion', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'simpl', 'induction', 'reflexivity', 'rewrite', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'elim', 'intro', 'rewrite', 'rewrite', 'simpl', 'inversion', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'induction', 'rewrite', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'inversion', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'induction', 'reflexivity', 'rewrite', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'inversion', 'reflexivity', 'rewrite', 'rewrite', 'induction', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'exact', 'rewrite', 'rewrite', 'reflexivity', 'exact']",2,3,0,3,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_1,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'split', 'split', 'reflexivity', 'rewrite', 'exact', 'inversion', 'rewrite', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'induction', 'inversion', 'induction', 'simpl', 'simpl', 'apply', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'inversion', 'inversion', 'induction', 'inversion', 'apply', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'inversion', 'rewrite', 'induction', 'simpl', 'simpl', 'apply', 'rewrite', 'rewrite', 'exact', 'inversion', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'simpl', 'apply', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'inversion', 'induction', 'simpl', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'assumption', 'rewrite', 'rewrite', 'inversion', 'inversion', 'induction', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'induction', 'simpl', 'rewrite', 'simpl', 'exact', 'rewrite', 'induction', 'simpl', 'simpl', 'exact', 'exact', 'exact', 'rewrite', 'rewrite', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'exact', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'exact', 'exact']",2,4,2,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_d_0,"['unfold', 'intros', 'induction', 'simpl', 'elim']",2,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_d_1,"['simple', 'intros', 'inversion', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'split', 'reflexivity', 'apply', 'rewrite', 'exact', 'exact', 'rewrite', 'exact', 'exact', 'split', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'split', 'exact', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'intros', 'elim', 'intros', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'split', 'split', 'reflexivity', 'exact', 'intro', 'rewrite', 'split', 'split', 'reflexivity', 'exact', 'intros', 'inversion', 'split', 'split', 'reflexivity', 'exact']",2,2,2,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_d_2,"['unfold', 'intros', 'inversion', 'inversion', 'rewrite', 'simpl', 'fold', 'elim', 'intros', 'elim', 'intros', 'apply', 'elim', 'intros', 'elim', 'intros', 'apply', 'unfold', 'elim', 'intros', 'unfold', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'reflexivity', 'exact', 'apply', 'exact', 'exact']",4,1,2,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_d_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_d,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_r_0,"['unfold', 'intros', 'induction', 'simpl', 'elim']",2,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_r_1,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'apply', 'rewrite', 'exact', 'rewrite', 'exact', 'inversion', 'rewrite', 'inversion', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'apply', 'rewrite', 'exact', 'rewrite', 'exact', 'rewrite', 'apply', 'exact', 'rewrite', 'inversion', 'rewrite', 'inversion', 'apply', 'rewrite', 'exact', 'rewrite', 'exact', 'inversion', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'induction', 'inversion', 'rewrite', 'rewrite', 'inversion', 'apply', 'exact', 'rewrite', 'inversion', 'rewrite', 'induction', 'inversion', 'rewrite', 'rewrite', 'inversion', 'apply', 'exact', 'rewrite', 'rewrite', 'induction', 'inversion', 'rewrite', 'rewrite', 'inversion', 'exact', 'intros', 'simpl', 'inversion', 'rewrite', 'inversion', 'exact']",2,0,1,4,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_r_2,"['unfold', 'intros', 'inversion', 'elim', 'intros', 'elim', 'intros', 'apply', 'rewrite', 'unfold', 'cut', 'intro', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'apply', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'reflexivity', 'rewrite', 'inversion', 'reflexivity']",3,0,1,4,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_r_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_r,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_semantics,"['intros', 'split', 'exact', 'exact']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dta_kill_empty_states_semantics,"['simple', 'intros', 'unfold', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'exact', 'intro', 'rewrite', 'split', 'intros', 'elim', 'intros', 'elim', 'intros', 'cut', 'intro', 'inversion', 'rewrite', 'inversion', 'exact', 'intros', 'simpl', 'inversion', 'inversion', 'simpl', 'inversion', 'rewrite', 'inversion']",3,1,0,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dta_kill_empty_states_lazy_semantics,"['intro', 'rewrite', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,kill_empty_correct_wrt_sign_invar_0,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'apply', 'rewrite', 'inversion', 'exact', 'exact', 'rewrite', 'inversion', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'apply', 'exact', 'exact', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'apply', 'exact', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'inversion', 'exact', 'rewrite', 'inversion', 'inversion', 'rewrite', 'inversion', 'exact', 'rewrite', 'inversion', 'rewrite', 'inversion', 'exact', 'intros', 'inversion', 'simpl', 'inversion', 'exact']",2,0,2,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,kill_empty_correct_wrt_sign_invar_1,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'exact']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,kill_empty_correct_wrt_sign_invar,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'cut', 'intros', 'rewrite', 'exact', 'unfold', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'reflexivity']",2,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_kill_empty_0,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'exact', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'exact', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'exact', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'elim', 'intros', 'split', 'exact', 'rewrite', 'inversion', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'exact', 'intro', 'rewrite', 'inversion', 'rewrite', 'exact', 'rewrite', 'rewrite', 'exact', 'intros', 'simpl', 'inversion', 'split', 'exact']",2,0,0,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_kill_empty_1,"['simple', 'intros', 'split', 'intros', 'inversion', 'exact', 'inversion', 'exact', 'intros', 'split', 'intros', 'inversion', 'apply', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact', 'inversion', 'apply', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact']",1,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_kill_empty_2,"['simple', 'intros', 'inversion', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'exact', 'inversion', 'elim', 'elim', 'intros', 'split', 'rewrite', 'exact', 'intros', 'inversion', 'split', 'exact']",1,0,0,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_kill_empty_3,"['intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'unfold', 'cut', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'apply', 'rewrite', 'apply', 'elim', 'intros', 'elim', 'intros', 'exact', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'reflexivity']",1,0,2,4,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/states_kill_empty.json,dt_kill_empty_kill_empty,"['intros', 'split', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'cut', 'intro', 'inversion', 'split', 'exact', 'elim', 'intros', 'exact']",0,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,adcnv_inj0,"['simple', 'simple', 'intro', 'trivial', 'intro', 'simpl', 'intro', 'inversion', 'simpl', 'intro', 'inversion', 'simpl', 'intros', 'cut', 'simpl', 'intro', 'simpl', 'rewrite', 'trivial', 'inversion', 'trivial']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,adcnv_inj1,"['simple', 'simple', 'intros', 'trivial', 'simpl', 'intros', 'inversion', 'simpl', 'intros', 'inversion', 'simpl', 'intros', 'cut', 'intro', 'rewrite', 'trivial', 'inversion', 'trivial']",2,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,adcnv_ok,"['simple', 'simple', 'simpl', 'intro', 'inversion', 'simpl', 'intros', 'intro', 'inversion', 'simpl', 'intro', 'inversion', 'simpl', 'intros', 'intro', 'inversion']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,adcnv_disj,"['simple', 'split', 'left', 'simpl', 'trivial', 'simple', 'intros', 'split', 'right', 'simpl', 'trivial', 'intros', 'split', 'left', 'simpl', 'trivial', 'split', 'right', 'simpl', 'trivial']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_0_inj,"['simple', 'intros', 'induction', 'simpl', 'inversion', 'cut', 'cut', 'intros', 'rewrite', 'rewrite', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'exact', 'exact', 'simpl', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'trivial']",1,1,1,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_1_inj,"['simple', 'intros', 'induction', 'simpl', 'inversion', 'cut', 'cut', 'cut', 'intros', 'rewrite', 'rewrite', 'rewrite', 'trivial', 'exact', 'exact', 'exact', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'trivial']",1,1,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,umpl_conv_0_inj,"['simple', 'simple', 'simpl', 'intros', 'trivial', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'intro', 'intro', 'simple', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'intros', 'inversion', 'intro', 'intro', 'intro', 'intro', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'cut', 'cut', 'intros', 'rewrite', 'rewrite', 'trivial', 'exact', 'exact']",3,1,1,3,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,umpl_conv_1_inj,"['simple', 'simple', 'intros', 'trivial', 'intros', 'inversion', 'intros', 'inversion', 'intro', 'intro', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'intros', 'inversion', 'intro', 'intro', 'intro', 'intro', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'cut', 'cut', 'intros', 'rewrite', 'rewrite', 'trivial', 'exact', 'exact']",2,0,1,3,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_0_img,"['simple', 'intros', 'split', 'split', 'split', 'trivial', 'intros', 'inversion']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_0_img_0,"['intros', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'split', 'split', 'split', 'assumption', 'split', 'inversion', 'trivial', 'split', 'inversion', 'trivial', 'inversion', 'trivial', 'exact']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_0_img_1,"['simple', 'intros', 'inversion', 'intros', 'trivial']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_1_img,"['simple', 'intros', 'split', 'split', 'split', 'trivial', 'intros', 'inversion']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_1_img_0,"['intros', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'split', 'split', 'split', 'assumption', 'split', 'inversion', 'trivial', 'split', 'inversion', 'trivial', 'inversion', 'trivial', 'exact']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_1_img_1,"['simple', 'intros', 'inversion', 'intros', 'trivial']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_0,"['simple', 'intros', 'simpl', 'inversion', 'intros', 'unfold', 'unfold', 'cut', 'intro', 'rewrite', 'rewrite', 'induction', 'simpl', 'simpl', 'inversion', 'trivial', 'simpl', 'simpl', 'cut', 'intro', 'rewrite', 'rewrite', 'inversion', 'trivial', 'exact', 'intros', 'cut', 'intro', 'exact', 'cut', 'intros', 'elim', 'intros', 'assumption', 'intro', 'cut', 'intro', 'rewrite', 'inversion', 'exact', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'exact', 'simple', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact']",3,2,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_1,"['simple', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'simpl', 'cut', 'intro', 'rewrite', 'rewrite', 'inversion', 'trivial', 'cut', 'intro', 'elim', 'intros', 'assumption', 'rewrite', 'inversion', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact']",3,1,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_2,"['simple', 'simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'intros', 'inversion', 'simple', 'intro', 'simple', 'simpl', 'intros', 'simpl', 'inversion', 'cut', 'intros', 'rewrite', 'trivial', 'exact', 'simple', 'intros', 'simpl', 'inversion', 'intros', 'inversion', 'intros', 'inversion', 'intro', 'simple', 'intros', 'inversion', 'intros', 'induction', 'induction', 'simpl', 'simpl', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'rewrite', 'rewrite', 'inversion', 'exact', 'inversion', 'inversion', 'simpl', 'simpl', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'rewrite', 'inversion', 'exact', 'simpl', 'simpl', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intros', 'rewrite', 'trivial', 'exact', 'rewrite', 'inversion', 'exact', 'intros', 'induction', 'simpl', 'unfold', 'simpl', 'apply', 'simpl', 'trivial', 'induction', 'simpl', 'unfold', 'apply', 'simpl', 'simpl', 'trivial', 'simpl', 'simpl', 'unfold', 'exact', 'simpl', 'simpl', 'unfold', 'exact']",3,6,1,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_3,"['simple', 'intros', 'inversion', 'simple', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'cut', 'intros', 'rewrite', 'trivial', 'exact', 'simpl', 'intros', 'inversion', 'intro', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'induction', 'simple', 'intros', 'simpl', 'cut', 'intros', 'elim', 'intros', 'simpl', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'simpl', 'rewrite', 'rewrite', 'inversion', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'cut', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'rewrite', 'rewrite', 'inversion', 'exact', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact']",3,3,1,3,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_4,"['simple', 'intros', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simple', 'intro', 'simple', 'intros', 'simpl', 'induction', 'simpl', 'split', 'simpl', 'inversion', 'trivial', 'split', 'inversion', 'trivial', 'split', 'inversion', 'trivial', 'simpl', 'intros', 'inversion', 'intro', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'simpl', 'intros', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'trivial', 'rewrite', 'inversion', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'simpl', 'intros', 'exact']",3,2,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_5,"['intros', 'cut', 'intros', 'elim', 'intros', 'split', 'split', 'assumption', 'rewrite', 'exact', 'exact']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_6,"['simple', 'intros', 'induction', 'inversion', 'induction', 'inversion', 'simple', 'intro', 'simple', 'intros', 'simpl', 'inversion', 'split', 'trivial', 'simpl', 'intros', 'inversion', 'simple', 'intro', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'simpl', 'simple', 'intros', 'simpl', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'trivial', 'intro', 'rewrite', 'inversion', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'intro', 'intro', 'intro', 'simple', 'intros', 'inversion', 'simple', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'cut', 'intro', 'elim', 'intro', 'rewrite', 'inversion', 'split', 'trivial', 'rewrite', 'inversion', 'exact', 'intros', 'inversion', 'intro', 'simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'split', 'trivial', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'simpl', 'exact', 'simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'simpl', 'intros', 'exact']",3,1,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_7,"['intros', 'elim', 'intros', 'split', 'intros', 'split', 'assumption', 'rewrite', 'exact']",0,0,0,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_invar_8,"['simple', 'intros', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'unfold', 'unfold', 'intros', 'induction', 'split', 'unfold', 'induction', 'trivial', 'simpl', 'induction', 'inversion', 'split', 'simpl', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'cut', 'intro', 'cut', 'intro', 'rewrite', 'trivial', 'symmetry', 'exact', 'cut', 'intro', 'elim', 'intros', 'assumption', 'rewrite', 'inversion', 'exact', 'simpl', 'inversion', 'unfold', 'intro', 'intro', 'intro', 'intro', 'simple', 'intros', 'split', 'simpl', 'trivial', 'simple', 'intros', 'inversion', 'intros', 'split', 'simpl', 'trivial', 'intros', 'inversion']",3,2,0,1,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_0,"['intros', 'unfold', 'unfold', 'cut', 'intros', 'exact', 'exact']",1,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_1,"['intros', 'unfold', 'unfold', 'cut', 'intros', 'exact', 'exact']",1,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_2,"['intros', 'unfold', 'simpl', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_4,"['intros', 'unfold', 'simpl', 'unfold', 'exact']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_0r,"['intros', 'unfold', 'unfold', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'apply', 'apply', 'exact', 'exact']",4,1,2,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_1r,"['intros', 'unfold', 'unfold', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'apply', 'exact']",4,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_2r,"['intros', 'unfold', 'intros', 'cut', 'intros', 'rewrite', 'exact', 'cut', 'intros', 'rewrite', 'symmetry', 'exact', 'simpl', 'trivial']",3,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_3r,"['intros', 'unfold', 'unfold', 'unfold', 'intros', 'cut', 'intro', 'cut', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'apply', 'exact', 'trivial', 'exact', 'exact', 'symmetry', 'trivial']",3,1,2,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_4r,"['intros', 'unfold', 'unfold', 'intros', 'cut', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'cut', 'intro', 'exact', 'symmetry', 'trivial', 'symmetry', 'trivial']",3,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_5r,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv0_r,"['intros', 'apply', 'trivial', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_0,"['simple', 'intros', 'simpl', 'inversion', 'intros', 'unfold', 'cut', 'intro', 'rewrite', 'rewrite', 'induction', 'simpl', 'simpl', 'inversion', 'inversion', 'trivial', 'simpl', 'simpl', 'cut', 'intro', 'rewrite', 'simpl', 'rewrite', 'inversion', 'trivial', 'exact', 'cut', 'intros', 'elim', 'intros', 'exact', 'intro', 'cut', 'intro', 'rewrite', 'inversion', 'exact', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact']",4,4,2,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_1,"['simple', 'simpl', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'cut', 'intro', 'rewrite', 'rewrite', 'inversion', 'trivial', 'cut', 'intros', 'elim', 'intros', 'assumption', 'rewrite', 'inversion', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact']",3,1,1,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_2,"['simple', 'intros', 'induction', 'simpl', 'inversion', 'induction', 'inversion', 'simple', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'simpl', 'intros', 'inversion', 'simple', 'intro', 'intro', 'intro', 'simple', 'intros', 'simpl', 'inversion', 'simple', 'intros', 'simpl', 'simpl', 'cut', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'rewrite', 'inversion', 'exact', 'intros', 'simpl', 'inversion', 'intros', 'inversion', 'intros', 'induction', 'simpl', 'simpl', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'rewrite', 'inversion', 'exact', 'inversion', 'intros', 'induction', 'inversion', 'induction', 'inversion', 'inversion', 'simpl', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact']",3,2,1,3,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_3,"['simple', 'simpl', 'intros', 'inversion', 'simple', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'simpl', 'intros', 'inversion', 'intro', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'induction', 'simple', 'intros', 'simpl', 'simpl', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'rewrite', 'rewrite', 'inversion', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'cut', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'rewrite', 'inversion', 'exact', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'inversion', 'simpl', 'inversion', 'cut', 'intro', 'rewrite', 'trivial', 'exact', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact', 'intros', 'simpl', 'simpl', 'exact']",3,2,1,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_4,"['simple', 'simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'inversion', 'inversion', 'simple', 'intro', 'simple', 'intros', 'simpl', 'inversion', 'split', 'trivial', 'simpl', 'intros', 'inversion', 'intro', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'induction', 'simple', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'split', 'trivial', 'inversion', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'trivial', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'inversion', 'split', 'trivial', 'intro', 'intro', 'intro', 'intro', 'simple', 'intros', 'simpl', 'exact', 'simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact']",3,2,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_5,"['intros', 'cut', 'intros', 'elim', 'intros', 'split', 'split', 'assumption', 'rewrite', 'exact', 'exact']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_6,"['simple', 'simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'split', 'trivial', 'simpl', 'intros', 'inversion', 'intro', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'induction', 'simple', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'split', 'trivial', 'inversion', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'split', 'trivial', 'inversion', 'simpl', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'split', 'trivial', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'exact', 'simple', 'intros', 'simpl', 'exact', 'simpl', 'exact', 'simpl', 'exact']",3,2,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_7,"['intros', 'elim', 'intros', 'split', 'intros', 'split', 'assumption', 'rewrite', 'exact']",0,0,0,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_invar_8,"['simple', 'intros', 'simpl', 'induction', 'inversion', 'induction', 'inversion', 'unfold', 'unfold', 'intro', 'intro', 'simple', 'intros', 'simpl', 'inversion', 'simple', 'intros', 'split', 'simpl', 'trivial', 'intros', 'simpl', 'inversion', 'intros', 'simpl', 'split', 'simpl', 'trivial', 'intro', 'intro', 'intro', 'intro', 'simple', 'simpl', 'intros', 'inversion', 'simple', 'intros', 'split', 'simpl', 'trivial', 'intros', 'simpl', 'inversion', 'intros', 'split', 'simpl', 'trivial']",4,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_0,"['intros', 'unfold', 'unfold', 'cut', 'intros', 'exact', 'exact']",1,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_1,"['intros', 'unfold', 'unfold', 'cut', 'intros', 'exact', 'exact']",1,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_2,"['intros', 'unfold', 'simpl', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_3,"['intros', 'unfold', 'unfold', 'unfold', 'simpl', 'exact']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_4,"['intros', 'unfold', 'unfold', 'simpl', 'exact']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_0r,"['intros', 'unfold', 'unfold', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'apply', 'apply', 'exact', 'exact']",4,1,2,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_1r,"['intros', 'unfold', 'unfold', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'apply', 'exact']",4,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_2r,"['intros', 'unfold', 'intros', 'cut', 'intros', 'rewrite', 'exact', 'cut', 'intros', 'rewrite', 'symmetry', 'exact', 'simpl', 'trivial']",3,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_3r,"['intros', 'unfold', 'unfold', 'unfold', 'intros', 'cut', 'intro', 'cut', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'apply', 'exact', 'trivial', 'exact', 'exact', 'symmetry', 'trivial']",3,1,2,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_4r,"['intros', 'unfold', 'unfold', 'intros', 'cut', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'cut', 'intro', 'exact', 'symmetry', 'trivial', 'symmetry', 'trivial']",3,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_5r,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv1_r,"['intros', 'apply', 'trivial', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_disj,"['intros', 'intro', 'cut', 'cut', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'exact', 'exact']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_1,"['intros', 'unfold', 'cut', 'intros', 'unfold', 'cut', 'intros', 'rewrite', 'rewrite', 'trivial', 'exact', 'exact']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_2_0,"['intros', 'unfold', 'unfold', 'intro', 'apply', 'apply', 'exact', 'exact']",2,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_2_1,"['intros', 'unfold', 'unfold', 'intros', 'apply', 'apply', 'assumption', 'exact']",4,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_2_2,"['unfold', 'simpl', 'intros', 'exact']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_2_3,"['intros', 'unfold', 'unfold', 'unfold', 'simpl', 'unfold', 'intros', 'apply', 'exact', 'exact']",4,3,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_2_4,"['intros', 'unfold', 'unfold', 'simpl', 'intros', 'exact']",2,3,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_2_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_2,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_3_0,"['intros', 'unfold', 'unfold', 'intros', 'apply', 'apply', 'exact', 'exact']",4,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_3_1,"['intros', 'unfold', 'unfold', 'intros', 'apply', 'exact', 'exact']",4,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_3_2,"['intros', 'unfold', 'simpl', 'intros', 'exact']",2,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_3_3,"['intros', 'unfold', 'unfold', 'unfold', 'intros', 'simpl', 'unfold', 'exact']",4,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_3_4,"['intros', 'unfold', 'unfold', 'simpl', 'intros', 'exact']",2,3,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_3_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_3,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_4_0,"['intros', 'unfold', 'unfold', 'intros', 'rewrite', 'apply', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'apply', 'rewrite', 'exact']",3,1,2,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_4_1,"['intros', 'unfold', 'intros', 'unfold', 'apply', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'exact']",3,0,3,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_4_2,"['intros', 'unfold', 'intros', 'exact']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_4_3,"['intros', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",3,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_4_4,"['intros', 'unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",3,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_4_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_4,"['intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_5_0,"['intros', 'unfold', 'unfold', 'intros', 'rewrite', 'apply', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact', 'apply', 'rewrite', 'exact']",3,1,2,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_5_1,"['intros', 'unfold', 'intros', 'unfold', 'apply', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'exact']",3,0,3,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_5_2,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_5_3,"['intros', 'unfold', 'unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'exact', 'exact']",4,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_5_4,"['intros', 'unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",3,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_5_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_5,"['intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_0,"['simple', 'intros', 'simpl', 'rewrite', 'trivial', 'simpl', 'trivial']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_1,"['simpl', 'intros', 'trivial']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_2,"['intros', 'induction', 'inversion', 'trivial']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_3,"['intros', 'intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_0d_0,"['intros', 'rewrite', 'trivial']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_0d_1,"['intro', 'simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'exact', 'apply', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'exact', 'intros', 'elim', 'trivial']",2,0,1,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_0d,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'induction', 'exact', 'rewrite', 'assumption']",0,0,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_1d_0,"['intros', 'simpl', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_1d_1,"['intros', 'induction', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'apply', 'rewrite', 'trivial', 'simpl', 'assumption']",0,2,1,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_1d,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'assumption', 'intros', 'elim', 'intros', 'induction', 'exact', 'simpl', 'assumption']",0,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_r_0,"['intros', 'induction', 'simpl', 'inversion', 'left', 'exact', 'elim', 'intros', 'left', 'exact', 'intro', 'right', 'assumption', 'simpl', 'right', 'assumption']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_r_1,"['intros', 'elim', 'intros', 'elim', 'intros', 'left', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'elim']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_pl_r,"['intros', 'induction', 'exact', 'exact']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_7_0,"['unfold', 'intros', 'simpl', 'inversion']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_7_1,"['unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'trivial']",3,2,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_7_2,"['unfold', 'intros', 'induction', 'simpl', 'apply', 'simpl', 'assumption', 'induction', 'simpl', 'apply', 'simpl', 'assumption', 'simpl', 'apply', 'simpl', 'assumption', 'simpl', 'simpl', 'exact']",2,3,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_7_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_7,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_8_0,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_8_1,"['unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'simpl', 'elim', 'intro', 'rewrite', 'simpl', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'rewrite', 'inversion', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'trivial', 'intro', 'rewrite', 'rewrite', 'inversion', 'inversion']",3,1,0,3,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_8_2,"['unfold', 'intros', 'induction', '[ induction c as [| p] | induction c as [| p0] ].', 'elim', 'simpl', 'induction', 'simpl', 'assumption', 'simpl', 'apply', 'intro', 'inversion', 'simpl', 'assumption', 'simpl', 'induction', 'simpl', 'simpl', 'assumption', 'simpl', 'apply', 'intro', 'inversion', 'simpl', 'simpl', 'assumption', 'simpl', 'induction', 'induction', 'simpl', 'simpl', 'apply', 'intro', 'inversion', 'elim', 'trivial', 'rewrite', 'trivial', 'simpl', 'simpl', 'assumption', 'simpl', 'apply', 'intro', 'inversion', 'simpl', 'induction', 'simpl', 'assumption', 'apply', 'intro', 'inversion', 'rewrite', 'elim', 'trivial', 'simpl', 'assumption', 'induction', 'simpl', 'simpl', 'simpl', 'apply', 'assumption', 'intro', 'inversion', 'simpl', 'simpl', 'assumption', 'simpl', 'elim', 'trivial']",3,2,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_8_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,mpl_compat_8,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_0,"['unfold', 'intros', 'inversion', 'simpl', 'rewrite', 'inversion', 'apply', 'simpl', 'rewrite', 'trivial', 'assumption']",2,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_1_0,"['intros', 'unfold', 'inversion', 'simpl', 'rewrite', 'inversion', 'apply', 'simpl', 'rewrite', 'simpl', 'rewrite', 'trivial', 'apply', 'apply', 'simpl', 'rewrite', 'trivial', 'simpl', 'rewrite', 'trivial', 'assumption']",1,3,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_1_1,"['intros', 'unfold', 'inversion', 'apply', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'cut', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'inversion', 'trivial', 'exact', 'intro', 'rewrite', 'rewrite', 'inversion', 'assumption']",1,3,0,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_2_0,"['intro', 'intro', 'simple', 'intros', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'inversion', 'trivial', 'assumption', 'intros', 'unfold', 'elim', 'intros', 'rewrite', 'apply', 'simpl', 'trivial', 'inversion', 'simpl', 'inversion', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'inversion', 'apply', 'cut', 'intro', 'cut', 'intros', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'simpl', 'inversion', 'trivial', 'simpl', 'trivial', 'exact', 'assumption', 'intros', 'simpl', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'assumption']",3,3,2,3,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_2_1,"['intros', 'cut', 'simpl', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'apply', 'simpl', 'trivial', 'inversion', 'assumption', 'elim', 'intro', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'exact', 'inversion', 'apply', 'simpl', 'trivial', 'simpl', 'inversion', 'assumption', 'intro', 'apply', 'apply', 'apply', 'exact', 'assumption', 'inversion', 'apply', 'simpl', 'trivial', 'simpl', 'inversion', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'cut', 'intro', 'unfold', 'intros', 'unfold', 'unfold', 'elim', 'intro', 'rewrite', 'inversion', 'apply', 'simpl', 'rewrite', 'trivial', 'rewrite', 'simpl', 'assumption', 'apply', 'apply', 'apply', 'exact']",4,5,1,3,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_2,"['unfold', 'intros', 'induction', 'exact', 'induction', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'rewrite', 'inversion', 'apply', 'simpl', 'rewrite', 'trivial', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'exact', 'inversion', 'apply', 'simpl', 'rewrite', 'simpl', 'rewrite', 'inversion', 'trivial', 'assumption', 'exact']",2,4,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_3,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d_1,"['unfold', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'exact', 'intro', 'apply', 'assumption', 'intro', 'exact', 'assumption']",2,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s_0d,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s0d,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s1d_0,"['unfold', 'intros', 'inversion', 'simpl', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s1d_1_0,"['intros', 'simpl', 'elim', 'intro', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'inversion', 'trivial', 'trivial', 'rewrite', 'rewrite', 'inversion']",1,2,1,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s1d_1_1,"['intros', 'simpl', 'rewrite', 'apply', 'simpl', 'rewrite', 'trivial', 'inversion', 'simpl', 'rewrite', 'inversion', 'apply', 'rewrite', 'exact', 'assumption']",1,2,1,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s1d_1,"['unfold', 'intros', 'cut', 'intro', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'exact', 'intro', 'exact', 'inversion', 'simpl', 'elim', 'intro', 'exact', 'intro', 'rewrite', 'inversion']",2,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s1d_2,"['unfold', 'intros', 'induction', 'induction', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'induction', 'induction', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'induction', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'induction', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'inversion', 'simpl', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'inversion', 'simpl', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'inversion', 'simpl', 'apply', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact']",2,3,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s1d_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s1d,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_std_0,"['unfold', 'intros', 'inversion', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_std_1,"['unfold', 'intros', 'split', 'induction', 'unfold', 'cut', 'intro', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'simpl', 'elim', 'intro', 'exact', 'rewrite', 'inversion', 'unfold', 'exact', 'unfold', 'cut', 'intro', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'simpl', 'elim', 'intro', 'exact', 'intro', 'rewrite', 'inversion', 'induction', 'unfold', 'cut', 'intro', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'simpl', 'elim', 'intro', 'exact', 'intro', 'rewrite', 'inversion', 'unfold', 'cut', 'intro', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'simpl', 'elim', 'intro', 'exact', 'intro', 'rewrite', 'inversion', 'cut', 'intro', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'elim', 'intro', 'exact', 'intro', 'simpl', 'rewrite', 'inversion']",2,1,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_std_2,"['unfold', 'intros', 'induction', 'simpl', 'split', 'assumption', 'assumption', 'unfold', 'induction', 'induction', 'simpl', 'cut', 'intro', 'split', 'assumption', 'assumption', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'elim', 'intros', 'unfold', 'induction', 'assumption', 'assumption', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'induction', 'cut', 'intro', 'split', 'assumption', 'assumption', 'simpl', 'inversion', 'simpl', 'apply', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'split', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'elim', 'intros', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'assumption', 'assumption', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'cut', 'intros', 'split', 'assumption', 'assumption', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'induction', 'induction', 'cut', 'intro', 'split', 'assumption', 'assumption', 'simpl', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'cut', 'intro', 'split', 'assumption', 'assumption', 'simpl', 'cut', 'intros', 'elim', 'intros', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'cut', 'intro', 'split', 'assumption', 'assumption', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'split', 'assumption', 'simpl', 'cut', 'intro', 'elim', 'intros', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'induction', 'cut', 'intro', 'split', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'elim', 'intros', 'induction', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'induction', 'cut', 'intro', 'split', 'assumption', 'simpl', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'cut', 'intros', 'split', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'elim', 'intros', 'induction', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'cut', 'intro', 'split', 'assumption', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'induction', 'cut', 'intro', 'split', 'assumption', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'split', 'assumption', 'induction', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'elim', 'intros', 'induction', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'cut', 'intro', 'elim', 'intros', 'induction', 'assumption', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'cut', 'cut', 'intros', 'induction', 'cut', 'intro', 'elim', 'intros', 'split', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'inversion', 'simpl', 'exact', 'induction', 'cut', 'intro', 'elim', 'intros', 'split', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'inversion', 'simpl', 'exact', 'cut', 'intro', 'elim', 'intros', 'split', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'inversion', 'simpl', 'exact', 'cut', 'intro', 'elim', 'intros', 'split', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'inversion', 'simpl', 'exact', 'exact', 'exact']",4,3,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_std,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_sd,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s_rpl_0,"['unfold', 'intros', 'simpl', 'left', 'assumption']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s_rpl_1,"['unfold', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'rewrite', 'cut', 'intro', 'elim', 'intro', 'left', 'rewrite', 'apply', 'simpl', 'rewrite', 'trivial', 'assumption', 'right', 'rewrite', 'rewrite', 'apply', 'simpl', 'rewrite', 'trivial', 'trivial', 'apply', 'apply', 'simpl', 'rewrite', 'trivial', 'simpl', 'rewrite', 'rewrite', 'trivial', 'assumption', 'inversion', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'elim', 'intro', 'rewrite', 'right', 'inversion', 'apply', 'simpl', 'rewrite', 'trivial', 'trivial', 'elim', 'intro', 'rewrite', 'inversion', 'left', 'apply', 'simpl', 'rewrite', 'trivial', 'trivial', 'inversion', 'rewrite', 'rewrite', 'inversion']",3,2,1,4,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s_rpl_2,"['unfold', 'intros', 'induction', 'induction', 'simpl', 'cut', 'intro', 'elim', 'intro', 'left', 'trivial', 'intro', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'induction', 'simpl', 'inversion', 'right', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'elim', 'intro', 'inversion', 'simpl', 'inversion', 'intro', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'simpl', 'inversion', 'right', 'simpl', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'induction', 'simpl', 'inversion', 'right', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'induction', 'cut', 'intro', 'elim', 'intro', 'inversion', 'left', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'simpl', 'apply', 'assumption', 'assumption', 'inversion', 'simpl', 'right', 'apply', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'elim', 'intro', 'left', 'inversion', 'simpl', 'inversion', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'exact', 'induction', 'simpl', 'cut', 'intro', 'elim', 'intros', 'inversion', 'inversion', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'exact', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'inversion', 'right', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'elim', 'intro', 'inversion', 'simpl', 'left', 'apply', 'simpl', 'assumption', 'assumption', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'exact', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'simpl', 'inversion', 'right', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'right', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'cut', 'intro', 'elim', 'intros', 'left', 'inversion', 'simpl', 'inversion', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'exact', 'inversion', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'inversion', 'right', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'elim', 'intros', 'left', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'apply', 'apply', 'exact', 'inversion', 'simpl', 'simpl', 'apply', 'simpl', 'assumption', 'assumption']",2,3,1,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s_rpl_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_s_rpl,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_str_0,"['unfold', 'intros', 'induction', 'elim', 'intros', 'inversion', 'inversion', 'inversion', 'inversion', 'simpl', 'right', 'elim', 'intro', 'assumption', 'simpl', 'right', 'elim', 'intro', 'assumption', 'assumption']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_str_1,"['unfold', 'intros', 'induction', 'simpl', 'left', 'elim', 'intro', 'assumption', 'unfold', 'elim', 'intros', 'elim', 'intro', 'right', 'assumption', 'left', 'assumption', 'elim', 'intro', 'left', 'trivial', 'right', 'trivial', 'elim', 'intros', 'elim', 'intro', 'left', 'trivial', 'right', 'trivial', 'exact']",2,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_str_2,"['unfold', 'intros', 'induction', 'simpl', 'elim', 'intro', 'left', 'assumption', 'unfold', 'elim', 'intro', 'elim', 'intro', 'right', 'trivial', 'left', 'trivial', 'elim', 'intro', 'right', 'trivial', 'left', 'trivial', 'cut', 'cut', 'intros', 'induction', 'simpl', 'cut', 'intro', 'elim', 'intro', 'inversion', 'left', 'apply', 'simpl', 'assumption', 'assumption', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'elim', 'intro', 'inversion', 'left', 'apply', 'simpl', 'assumption', 'assumption', 'intro', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'induction', 'simpl', 'clear', 'clear', 'clear', 'cut', 'intro', 'elim', 'intro', 'left', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'intro', 'inversion', 'right', 'apply', 'simpl', 'assumption', 'assumption', 'elim', 'intro', 'left', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'inversion', 'right', 'apply', 'simpl', 'simpl', 'assumption', 'assumption', 'clear', 'clear', 'clear', 'simpl', 'cut', 'intro', 'elim', 'intro', 'left', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'intro', 'right', 'inversion', 'apply', 'simpl', 'assumption', 'assumption', 'elim', 'intro', 'inversion', 'left', 'apply', 'simpl', 'assumption', 'assumption', 'right', 'apply', 'simpl', 'assumption', 'assumption', 'simpl', 'cut', 'intro', 'elim', 'intro', 'inversion', 'left', 'apply', 'simpl', 'assumption', 'assumption', 'inversion', 'right', 'apply', 'simpl', 'assumption', 'assumption', 'elim', 'intro', 'inversion', 'left', 'simpl', 'apply', 'assumption', 'assumption', 'right', 'apply', 'simpl', 'assumption', 'assumption', 'exact', 'exact']",2,3,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_str_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_str,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_state,"['intros', 'split', 'intro', 'induction', 'apply', 'left', 'trivial', 'intro', 'elim', 'intro', 'induction', 'elim', 'intros', 'assumption', 'induction', 'elim', 'intros', 'assumption']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insd_0,"['unfold', 'unfold', 'intros', 'apply', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'assumption', 'exact']",3,1,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insd_1,"['unfold', 'unfold', 'intros', 'apply', 'assumption', 'exact']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insd_2,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insd_3,"['unfold', 'unfold', 'intros', 'apply', 'exact', 'exact']",3,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insd_4,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insd_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_ins_d,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insr_0,"['unfold', 'unfold', 'intros', 'apply', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'assumption', 'apply', 'assumption', 'unfold', 'split', 'split', 'assumption', 'assumption', 'assumption']",3,1,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insr_1,"['unfold', 'intros', 'unfold', 'intros', 'cut', 'intro', 'elim', 'intros', 'apply', 'assumption', 'assumption', 'unfold', 'split', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'split', 'split', 'assumption', 'split', 'assumption', 'split', 'exact', 'assumption']",4,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insr_2,"['intros', 'unfold', 'intros', 'split', 'exact', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'simpl', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'assumption', 'split', 'assumption', 'split', 'assumption']",3,2,0,1,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insr_3,"['unfold', 'unfold', 'intros', 'split', 'apply', 'cut', 'intro', 'exact', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'cut', 'cut', 'intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'rewrite', 'inversion', 'intro', 'assumption', 'elim', 'intros', 'exact', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'assumption', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'cut', 'intro', 'elim', 'intros', 'assumption', 'unfold', 'split', 'split', 'split', 'split', 'split', 'assumption', 'split', 'assumption', 'split', 'exact', 'assumption', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'split', 'split', 'split', 'split', 'split', 'assumption', 'split', 'assumption', 'split', 'assumption']",2,1,1,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insr_4,"['unfold', 'intros', 'split', 'apply', 'cut', 'intro', 'elim', 'intros', 'assumption', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'assumption', 'split', 'assumption', 'split', 'exact', 'assumption', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'split', 'split', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'assumption', 'split', 'assumption', 'split', 'assumption']",2,0,0,1,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_insr_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,new_state_ins_r,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_0,"['intros', 'split', 'simpl', 'intro', 'exact', 'simpl', 'intro', 'exact']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_1,"['intros', 'cut', 'intro', 'elim', 'intros', 'split', 'intros', 'apply', 'exact', 'intro', 'exact', 'exact']",1,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_2,"['intros', 'cut', 'intro', 'elim', 'intros', 'split', 'intros', 'apply', 'exact', 'intro', 'exact', 'exact']",1,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_3,"['intros', 'split', 'intro', 'inversion', 'unfold', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'induction', 'inversion', 'apply', 'rewrite', 'inversion', 'rewrite', 'assumption', 'assumption', 'intro', 'apply', 'unfold', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'assumption', 'assumption']",0,0,2,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_4,"['intros', 'split', 'intro', 'inversion', 'unfold', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'induction', 'inversion', 'apply', 'rewrite', 'inversion', 'rewrite', 'assumption', 'assumption', 'intro', 'apply', 'unfold', 'rewrite', 'elim', 'intro', 'elim', 'rewrite', 'assumption', 'assumption']",0,0,2,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_5,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_6,"['intros', 'split', 'intro', 'apply', 'unfold', 'rewrite', 'rewrite', 'trivial', 'assumption', 'intro', 'inversion', 'unfold', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'assumption']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_7,"['intros', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'split', 'intro', 'apply', 'apply', 'elim', 'intro', 'left', 'exact', 'right', 'exact', 'intro', 'elim', 'intro', 'left', 'exact', 'intro', 'right', 'exact']",0,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_8,"['intros', 'apply', 'unfold', 'rewrite', 'exact', 'intro', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'inversion', 'intro', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'inversion']",1,0,1,4,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_0_occur,"['simple', 'intros', 'simpl', 'inversion', 'rewrite', 'exact', 'exact', 'exact', 'intros', 'simpl', 'inversion']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_1_occur,"['simple', 'intros', 'simpl', 'inversion', 'rewrite', 'exact', 'exact', 'exact', 'intros', 'simpl', 'inversion']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_0_occur_in_img,"['simple', 'intros', 'simpl', 'inversion', 'split', 'trivial', 'elim', 'intros', 'split', 'trivial', 'elim', 'intros', 'split', 'trivial', 'intros', 'inversion']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_1_occur_in_img,"['simple', 'intros', 'simpl', 'inversion', 'split', 'trivial', 'elim', 'intros', 'split', 'trivial', 'elim', 'intros', 'split', 'trivial', 'intros', 'inversion']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_0_ref_ok,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'split', 'rewrite', 'exact', 'rewrite', 'exact', 'assumption']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_conv_1_ref_ok,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'split', 'rewrite', 'exact', 'rewrite', 'exact', 'assumption']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,u_merge_ref_ok,"['unfold', 'intros', 'elim', 'intro', 'intros', 'elim', 'intro', 'elim', 'intros', 'split', 'exact', 'elim', 'intros', 'split', 'exact']",2,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_compat_0_0,"['simple', 'simple', 'intros', 'unfold', 'right', 'split', 'intro', 'inversion', 'intro', 'inversion', 'intro', 'inversion', 'elim', 'intros', 'inversion', 'elim', 'intros', 'elim', 'simple', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'intros', 'inversion', 'elim', 'intros', 'elim', 'intros', 'simpl', 'unfold', 'left', 'split', 'trivial']",3,1,0,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_compat_0_1,"['simple', 'simple', 'intros', 'unfold', 'right', 'split', 'intro', 'inversion', 'intro', 'inversion', 'intro', 'inversion', 'elim', 'intros', 'inversion', 'elim', 'intros', 'elim', 'simple', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'intros', 'inversion', 'elim', 'intros', 'elim', 'intros', 'simpl', 'unfold', 'left', 'split', 'trivial']",3,1,0,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_compat_1_0,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,upl_conv_compat_1_1,"['simple', 'simple', 'intros', 'unfold', 'right', 'split', 'intro', 'inversion', 'intro', 'inversion', 'intro', 'inversion', 'elim', 'intros', 'inversion', 'elim', 'intros', 'elim', 'simple', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'intros', 'inversion', 'elim', 'intros', 'elim', 'intros', 'simpl', 'unfold', 'left', 'split', 'trivial']",3,1,0,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,umpl_conv_0_compat,"['unfold', 'intros', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'apply', 'exact', 'assumption', 'assumption']",2,0,0,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,umpl_conv_1_compat,"['unfold', 'intros', 'elim', 'elim', 'intro', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'apply', 'exact', 'assumption', 'assumption']",2,0,0,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,umpl_conv_0_1_compat,"['unfold', 'intros', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'apply', 'exact', 'assumption']",2,0,0,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,udta_conv_0_compat,"['unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'assumption', 'assumption']",2,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,udta_conv_1_compat,"['unfold', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'assumption', 'assumption']",2,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,udta_conv_0_1_compat,"['unfold', 'intros', 'elim', 'elim', 'intros', 'intros', 'rewrite', 'rewrite', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'exact']",2,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,insert_ostate_9,"['intros', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'cut', 'intro', 'exact', 'apply', 'exact', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_semantics_0,"['unfold', 'simple', 'simple', 'intros', 'unfold', 'unfold', 'elim', 'elim', 'intros', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'unfold', 'apply', 'exact', 'exact', 'trivial']",2,2,2,3,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union.json,union_semantics,"['intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,coacc_transitive_0,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,coacc_transitive_1,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,coacc_transitive,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_mapget_true_l,"['simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'induction', 'exact', 'induction', 'exact', 'exact', 'exact']",2,2,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_mapget_true_ld,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_mapget_true_r,"['simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'simpl', 'simpl', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'elim', 'intros', 'rewrite', 'reflexivity', 'inversion', 'intros', 'induction', 'inversion', 'inversion', 'simpl', 'elim', 'intros', 'induction', 'exact', 'induction', 'exact', 'exact', 'exact']",1,2,1,1,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_mapget_true_rd,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_mapget_true_inv,"['simple', 'intros', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'inversion', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'left', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'rewrite', 'rewrite', 'right', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'simpl', 'induction', 'elim', 'intros', 'left', 'simpl', 'assumption', 'intros', 'right', 'simpl', 'assumption', 'induction', 'elim', 'intros', 'simpl', 'left', 'assumption', 'right', 'assumption', 'elim', 'intros', 'simpl', 'left', 'assumption', 'right', 'assumption', 'elim', 'intros', 'simpl', 'left', 'assumption', 'right', 'assumption']",2,3,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_replace_mapget_ins_true_0,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'simpl', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'intros', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact']",2,3,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_replace_mapget_ins_true_1,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'intros', 'induction', 'simpl', 'simpl', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'induction', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact']",2,3,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_replace_mapget_true_inv,"['simple', 'intros', 'inversion', 'simpl', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'rewrite', 'left', 'rewrite', 'rewrite', 'reflexivity', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'right', 'reflexivity', 'intros', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'right', 'exact', 'elim', 'intros', 'inversion', 'intros', 'right', 'exact', 'right', 'exact', 'induction', 'induction', 'simpl', 'simpl', 'right', 'exact', 'simpl', 'induction', 'elim', 'intros', 'inversion', 'left', 'reflexivity', 'intros', 'simpl', 'right', 'exact', 'simpl', 'right', 'exact', 'elim', 'intros', 'inversion', 'intros', 'simpl', 'right', 'exact', 'induction', 'simpl', 'simpl', 'elim', 'intros', 'inversion', 'right', 'exact', 'induction', 'right', 'exact', 'elim', 'intros', 'inversion', 'left', 'reflexivity', 'intros', 'right', 'exact', 'right', 'exact', 'induction', 'simpl', 'simpl', 'right', 'exact', 'induction', 'simpl', 'simpl', 'elim', 'intros', 'inversion', 'intros', 'right', 'exact', 'right', 'exact', 'left', 'reflexivity']",3,3,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_def_ok,"['simple', 'simple', 'intros', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'elim', 'intros', 'simpl', 'split', 'exact', 'exact']",2,2,2,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_def_ok_d,"['unfold', 'intros', 'apply', 'exact', 'apply', 'apply', 'exact', 'exact']",3,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_replace_def_ok,"['intro', 'simple', 'intros', 'exact', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'reflexivity', 'simpl', 'reflexivity', 'intros', 'simpl', 'induction', 'simpl', 'split', 'exact', 'exact', 'induction', 'split', 'exact', 'exact', 'split', 'exact', 'exact', 'split', 'exact', 'exact']",2,2,2,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_replace_def_ok_d,"['unfold', 'intros', 'apply', 'exact']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,pl_coacc_def_ok,"['simple', 'simpl', 'intros', 'exact', 'simpl', 'exact']",1,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,st_coacc_def_ok,"['simple', 'simpl', 'exact', 'simpl', 'intros', 'exact', 'intros', 'simpl', 'exact']",2,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_0_def_ok,"['simple', 'simpl', 'intros', 'induction', 'exact', 'simpl', 'intros', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'exact', 'intros', 'induction', 'simpl', 'exact', 'simpl', 'exact', 'simpl', 'exact']",1,2,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_def_ok,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lemd_reflexive,"['unfold', 'simple', 'intros', 'unfold', 'unfold', 'induction', 'split', 'exact', 'split', 'exact', 'inversion', 'inversion', 'intros', 'unfold', 'unfold', 'induction', 'inversion', 'simpl', 'rewrite', 'simpl', 'split', 'reflexivity', 'split', 'reflexivity', 'rewrite', 'exact', 'inversion', 'unfold', 'unfold', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'split', 'split', 'exact', 'exact', 'split', 'exact', 'exact', 'split', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact']",2,4,2,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lemd_antisymmetric,"['unfold', 'unfold', 'simple', 'simple', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'reflexivity', 'inversion', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'induction', 'inversion', 'inversion', 'inversion', 'intros', 'decompose', 'inversion', 'intros', 'decompose', 'decompose', 'induction', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'rewrite', 'rewrite', 'simpl', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'inversion', 'inversion', 'intros', 'decompose', 'decompose', 'induction', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'elim', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'reflexivity', 'split', 'exact', 'split', 'exact', 'exact', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'exact', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'exact', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'exact']",1,4,2,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lemd_transitive,"['simple', 'unfold', 'unfold', 'intros', 'decompose', 'decompose', 'induction', 'induction', 'induction', 'split', 'exact', 'split', 'exact', 'inversion', 'inversion', 'inversion', 'inversion', 'inversion', 'inversion', 'unfold', 'unfold', 'intros', 'decompose', 'decompose', 'induction', 'inversion', 'induction', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'simpl', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'split', 'simpl', 'reflexivity', 'simpl', 'split', 'reflexivity', 'rewrite', 'exact', 'inversion', 'inversion', 'inversion', 'unfold', 'unfold', 'intros', 'decompose', 'decompose', 'induction', 'inversion', 'inversion', 'clear', 'induction', 'inversion', 'inversion', 'clear', 'clear', 'intros', 'induction', 'inversion', 'inversion', 'clear', 'clear', 'simpl', 'elim', 'elim', 'elim', 'elim', 'elim', 'intros', 'split', 'split', 'exact', 'exact', 'split', 'split', 'exact', 'exact', 'split', 'exact', 'exact']",2,3,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_inc_ld,"['unfold', 'unfold', 'simple', 'intros', 'decompose', 'induction', 'induction', 'induction', 'simpl', 'split', 'exact', 'split', 'exact', 'inversion', 'inversion', 'inversion', 'inversion', 'inversion', 'inversion', 'intros', 'decompose', 'induction', 'inversion', 'induction', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'simpl', 'simpl', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'split', 'reflexivity', 'split', 'reflexivity', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'inversion', 'inversion', 'intros', 'decompose', 'induction', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'clear', 'simpl', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'split', 'split', 'assumption', 'split', 'split', 'elim', 'intros', 'assumption', 'elim', 'intros', 'assumption', 'elim', 'intros', 'elim', 'intros', 'split', 'assumption', 'assumption', 'split', 'assumption', 'split', 'assumption', 'assumption', 'split', 'assumption', 'split', 'assumption']",1,5,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_inc_rd,"['unfold', 'unfold', 'simple', 'intros', 'decompose', 'induction', 'induction', 'induction', 'simpl', 'split', 'exact', 'split', 'exact', 'inversion', 'inversion', 'inversion', 'inversion', 'inversion', 'inversion', 'intros', 'decompose', 'induction', 'inversion', 'induction', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'simpl', 'simpl', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'split', 'reflexivity', 'split', 'reflexivity', 'rewrite', 'rewrite', 'rewrite', 'exact', 'inversion', 'inversion', 'inversion', 'intros', 'decompose', 'induction', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'clear', 'simpl', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'split', 'split', 'assumption', 'split', 'split', 'elim', 'intros', 'assumption', 'elim', 'intros', 'assumption', 'elim', 'intros', 'elim', 'intros', 'split', 'assumption', 'assumption', 'split', 'assumption', 'split', 'assumption', 'assumption', 'split', 'assumption', 'split', 'assumption']",1,5,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_or_inc_d,"['intros', 'apply', 'apply', 'unfold', 'decompose', 'exact', 'exact', 'apply', 'unfold', 'decompose', 'exact', 'exact']",1,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_0_incr,"['unfold', 'unfold', 'simple', 'intros', 'decompose', 'induction', 'induction', 'simpl', 'split', 'exact', 'split', 'exact', 'exact', 'inversion', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'apply', 'exact', 'inversion', 'simpl', 'induction', 'exact', 'intros', 'decompose', 'induction', 'induction', 'simpl', 'exact', 'inversion', 'inversion', 'induction', 'inversion', 'simpl', 'simpl', 'simpl', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'rewrite', 'rewrite', 'inversion', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'exact', 'exact', 'inversion', 'inversion', 'intros', 'decompose', 'induction', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'clear', 'elim', 'intros', 'elim', 'elim', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'elim', 'intros', 'exact', 'unfold', 'split', 'assumption', 'split', 'assumption', 'unfold', 'split', 'assumption', 'split', 'assumption', 'split', 'assumption', 'split', 'assumption', 'split', 'assumption', 'split', 'assumption']",2,6,2,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_replace_inc,"['simple', 'simple', 'intros', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'simpl', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'simpl', 'rewrite', 'exact', 'elim', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'induction', 'simpl', 'split', 'exact', 'exact', 'induction', 'simpl', 'split', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",3,4,2,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,map_replace_inc_d,"['unfold', 'intros', 'decompose', 'split', 'exact', 'split', 'exact', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_increasing,"['unfold', 'unfold', 'intros', 'exact']",2,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lattice_lemd_bounded_0,"['unfold', 'intros', 'inversion', 'exact']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lattice_lemd_bounded_1,"['unfold', 'unfold', 'intros', 'inversion', 'inversion', 'inversion', 'exact']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lattice_lemd_bounded_2,"['unfold', 'unfold', 'intros', 'inversion', 'inversion', 'inversion', 'exact']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lattice_lemd_bounded_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lattice_lemd_bounded,"['intros', 'inversion', 'split', 'exact', 'exact']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,lattice_bounded,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,pl_coacc_contain_coacc_ads,"['simple', 'intros', 'inversion', 'simpl', 'elim', 'intros', 'elim', 'intros', 'exact', 'simpl', 'apply', 'apply', 'elim', 'intros', 'exact', 'simpl', 'apply', 'apply', 'elim', 'intros', 'exact', 'simpl', 'intros', 'inversion']",2,2,2,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,st_coacc_contain_coacc_ads,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'apply', 'inversion', 'exact', 'apply', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'intros', 'elim', 'intros', 'simpl', 'induction', 'simpl', 'apply', 'apply', 'induction', 'apply', 'exact', 'apply', 'apply', 'apply', 'exact']",2,5,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_0_contain_coacc_ads,"['simple', 'intros', 'inversion', 'simpl', 'intros', 'induction', 'inversion', 'unfold', 'simpl', 'rewrite', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'simpl', 'apply', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'inversion', 'exact', 'inversion', 'intros', 'induction', 'inversion', 'inversion', 'elim', 'intros', 'elim', 'intros', 'simpl', 'induction', 'simpl', 'simpl', 'apply', 'exact', 'induction', 'simpl', 'simpl', 'apply', 'exact', 'exact', 'exact']",3,7,1,3,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_contain_coacc_ads_0,"['unfold', 'intros', 'apply', 'apply', 'elim', 'intros', 'exact']",3,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_contain_coacc_ads_1,"['unfold', 'intros', 'split', 'simpl', 'unfold', 'elim', 'intros', 'apply']",3,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_contain_coacc_ads_2,"['unfold', 'intros', 'elim', 'intros', 'split', 'simpl', 'apply', 'apply', 'unfold', 'intros', 'exact', 'exact', 'exact']",2,1,4,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_contain_coacc_ads_3,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,pl_coacc_rev,"['simple', 'simpl', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'exact', 'intros', 'exact', 'intros', 'simpl', 'cut', 'intro', 'elim', 'intro', 'inversion']",2,1,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,st_coacc_rev,"['simple', 'intros', 'simpl', 'elim', 'intros', 'simpl', 'split', 'split', 'simpl', 'rewrite', 'split', 'reflexivity', 'exact', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'induction', 'simpl', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'induction', 'simpl', 'exact']",2,2,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_0_rev,"['simple', 'intros', 'induction', 'simpl', 'elim', 'inversion', 'inversion', 'induction', 'inversion', 'unfold', 'simpl', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'elim', 'intros', 'rewrite', 'simpl', 'split', 'split', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'simpl', 'rewrite', 'rewrite', 'elim', 'intros', 'split', 'reflexivity', 'split', 'assumption', 'split', 'assumption', 'reflexivity', 'simpl', 'elim', 'inversion', 'induction', 'inversion', 'inversion', 'clear', 'unfold', 'elim', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'split', 'split', 'split', 'split', 'split', 'induction', 'simpl', 'exact', 'split', 'exact', 'split', 'exact', 'induction', 'simpl', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'split', 'split', 'split', 'split', 'induction', 'simpl', 'exact']",2,4,0,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_rev,"['unfold', 'intros', 'elim', 'intros', 'right', 'symmetry', 'exact', 'intros', 'left', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'split', 'split', 'exact']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_reverse,"['simple', 'simpl', 'intros', 'elim', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'elim', 'intros', 'apply', 'exact', 'exact', 'exact', 'intros', 'rewrite', 'elim', 'intros', 'exact', 'apply', 'exact', 'exact', 'apply', 'unfold', 'intros', 'exact', 'exact']",5,1,3,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_fix_0,"['intros', 'unfold', 'apply', 'unfold', 'split', 'exact', 'intros', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'exact', 'unfold', 'intros', 'exact', 'exact', 'exact', 'exact']",3,0,4,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_fix_1,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'unfold', 'elim', 'elim', 'intros', 'elim', 'intros', 'exact', 'unfold', 'split', 'exact', 'intros', 'split', 'exact', 'split', 'exact', 'elim', 'intros', 'exact', 'exact', 'exact', 'exact', 'exact', 'apply', 'apply', 'apply', 'unfold', 'intros', 'exact', 'exact', 'unfold', 'apply', 'unfold', 'intros', 'exact', 'exact', 'exact']",3,0,5,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_fix_2,"['unfold', 'intros', 'split', 'exact']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_fix,"['intros', 'split', 'intros', 'elim', 'intros', 'exact', 'intros', 'elim', 'intros', 'exact', 'exact']",0,0,2,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/coacc_test.json,predta_coacc_0_fix,"['intros', 'unfold', 'rewrite', 'exact', 'split', 'exact', 'intros', 'rewrite', 'exact']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_states_non_empty_lazy_eg_dta_states_non_empty,"['simple', 'simpl', 'intros', 'unfold', 'apply', 'split', 'exact', 'intros', 'rewrite', 'exact']",2,1,1,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_app_ne_aux_def_ok,"['simple', 'intros', 'unfold', 'intros', 'induction', 'simpl', 'unfold', 'exact', 'unfold', 'simpl', 'exact', 'simpl', 'unfold', 'simpl', 'exact', 'intros', 'unfold', 'intros', 'unfold', 'unfold', 'induction', 'simpl', 'inversion', 'simpl', 'simpl', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'simpl', 'inversion', 'intros', 'unfold', 'unfold', 'intros', 'induction', 'simpl', 'inversion', 'simpl', 'inversion', 'simpl', 'split', 'unfold', 'unfold', 'simpl', 'elim', 'intros', 'exact', 'unfold', 'unfold', 'elim', 'intros', 'exact']",4,6,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_app_ne_def_ok,"['intros', 'unfold', 'unfold', 'intros', 'exact']",3,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_app_ne_inc_0,"['simple', 'intros', 'induction', 'elim', 'intro', 'elim', 'intros', 'elim', 'intro', 'elim', 'intros', 'replace', 'replace', 'apply', 'apply', 'exact', 'apply', 'exact', 'exact', 'apply', 'exact', 'exact', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'exact', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'exact', 'replace', 'replace', 'exact', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intro', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'replace', 'replace', 'apply', 'apply', 'exact', 'apply', 'exact', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'exact', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'exact', 'simpl', 'rewrite', 'rewrite', 'exact', 'simpl', 'intros', 'exact']",2,2,3,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_app_ne_inc_1,"['simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_app_ne_inc_2,"['simple', 'simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'simple', 'intros', 'simpl', 'exact', 'simpl', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'exact', 'exact', 'intros', 'simpl', 'exact', 'simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'split', 'exact', 'exact']",3,3,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_app_ne_inc_3,"['simple', 'simple', 'intros', 'induction', 'simpl', 'exact', 'inversion', 'inversion', 'simple', 'intros', 'inversion', 'induction', 'simpl', 'exact', 'simpl', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'intro', 'rewrite', 'simpl', 'rewrite', 'exact', 'exact', 'elim', 'exact', 'inversion', 'simple', 'intros', 'inversion', 'inversion', 'elim', 'intros', 'induction', 'simpl', 'exact', 'exact', 'split', 'exact', 'exact']",1,3,1,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dta_app_ne_inc,"['intros', 'unfold', 'unfold', 'intros', 'exact']",3,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,pl_non_empty_path_true_0,"['unfold', 'simpl', 'intros', 'reflexivity']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,pl_non_empty_path_true_1,"['unfold', 'intros', 'inversion', 'simpl', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'rewrite', 'reflexivity']",2,1,0,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,pl_non_empty_path_true_2,"['unfold', 'intros', 'induction', 'elim', 'inversion', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity']",2,0,0,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,pl_non_empty_path_true,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,pl_non_empty_path_true_rev,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'rewrite', 'exact', 'rewrite', 'inversion', 'elim', 'intro', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'elim', 'intros', 'apply', 'intro', 'rewrite', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'assumption', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'inversion', 'rewrite', 'elim', 'intros', 'split', 'split', 'apply', 'elim', 'intros', 'assumption', 'intro', 'rewrite', 'elim', 'intros', 'inversion', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'assumption', 'intros', 'split', 'split', 'exact', 'exact']",4,0,2,3,0,8
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,st_non_empty_0,"['simple', 'intros', 'inversion', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'exact', 'simpl', 'induction', 'simpl', 'rewrite', 'simpl', 'reflexivity', 'induction', 'simpl', 'rewrite', 'elim', 'intro', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity', 'rewrite', 'elim', 'intro', 'rewrite', 'reflexivity']",1,3,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,st_non_empty_1,"['simple', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'simpl', 'simpl', 'simpl', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'reflexivity', 'inversion', 'inversion', 'intros', 'induction', 'inversion', 'inversion', 'elim', 'intros', 'induction', 'simpl', 'simpl', 'apply', 'exact', 'induction', 'simpl', 'simpl', 'elim', 'intros', 'exact', 'exact', 'exact']",1,4,2,3,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_0,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'replace', 'apply', 'exact', 'exact', 'reflexivity']",2,3,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_1,"['unfold', 'unfold', 'intros', 'simpl', 'fold', 'apply', 'exact']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_2,"['unfold', 'intros', 'simpl', 'reflexivity']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_3,"['unfold', 'intros', 'simpl', 'fold', 'elim', 'intros', 'elim', 'intros', 'apply', 'exact', 'apply', 'exact', 'exact']",4,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_4,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'apply', 'intro', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'exact']",4,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_6,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_d,"['intros', 'split', 'exact']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_7,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_r_0,"['simple', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'simpl', 'rewrite', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'simpl', 'rewrite', 'simpl', 'rewrite', 'inversion', 'rewrite', 'simpl', 'rewrite', 'elim', 'intros', 'rewrite', 'left', 'reflexivity', 'rewrite', 'simpl', 'rewrite', 'right', 'exact', 'inversion', 'inversion', 'intros', 'induction', 'inversion', 'inversion', 'induction', 'simpl', 'simpl', 'simpl', 'simpl', 'elim', 'intros', 'exact', 'elim', 'intros', 'induction', 'simpl', 'simpl', 'simpl', 'exact', 'exact', 'exact']",1,3,2,3,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_r_1,"['simple', 'intros', 'simpl', 'inversion', 'simpl', 'split', 'split', 'split', 'simpl', 'rewrite', 'reflexivity', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'split', 'split', 'simpl', 'split', 'assumption', 'split', 'split', 'simpl', 'split', 'assumption', 'rewrite', 'simpl', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'split', 'simpl', 'split', 'split', 'assumption', 'split', 'split', 'simpl', 'split', 'assumption']",2,2,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_r_2,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'split', 'exact', 'exact', 'inversion', 'intro', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'apply', 'intro', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'rewrite', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'exact', 'rewrite', 'rewrite', 'inversion', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'apply', 'intro', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'reflexivity', 'intros', 'split', 'split', 'exact', 'exact']",3,1,1,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_r_3,"['unfold', 'simpl', 'intros', 'cut', 'intro', 'elim', 'intro', 'inversion']",1,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_r_4,"['unfold', 'simple', 'intros', 'inversion', 'inversion', 'rewrite', 'inversion', 'elim', 'auto', 'elim', 'intros', 'inversion', 'rewrite', 'inversion', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'exact', 'elim', 'intros', 'induction', 'inversion', 'rewrite', 'inversion', 'elim', 'auto', 'split', 'exact', 'intros', 'inversion', 'split', 'exact']",1,1,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_r_5,"['unfold', 'intros', 'elim', 'intros', 'unfold', 'simpl', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'apply', 'exact', 'exact', 'exact', 'apply', 'exact', 'exact']",3,1,2,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_r,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_fix_0,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_fix_1,"['intros', 'elim', 'intros', 'elim', 'intro', 'rewrite', 'exact', 'elim', 'intros', 'unfold', 'elim', 'apply', 'exact', 'unfold', 'exact', 'exact']",1,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_fix_2,"['unfold', 'intros', 'split', 'exact']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_fix,"['intros', 'split', 'intros', 'elim', 'intros', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'exact']",0,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/empty_test.json,dt_non_empty_lazy_fix,"['intro', 'unfold', 'rewrite', 'exact', 'split', 'exact', 'intro', 'rewrite', 'exact']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,domain_equal_mapget,"['simple', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'simpl', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'simpl', 'rewrite', 'rewrite', 'split', 'reflexivity', 'inversion', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'elim', 'intros', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact']",1,2,0,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,domain_equal_reflexive,"['intros', 'induction', 'exact', 'simpl', 'reflexivity', 'split', 'exact', 'exact']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,domain_equal_symmetric,"['simple', 'simple', 'intros', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'simpl', 'simpl', 'exact', 'inversion', 'simple', 'intros', 'inversion', 'inversion', 'simpl', 'elim', 'intros', 'split', 'exact', 'exact']",1,0,2,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,domain_equal_transitive,"['intro', 'intro', 'intro', 'simple', 'simple', 'simple', 'intros', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'inversion', 'intro', 'intro', 'simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'simpl', 'elim', 'elim', 'intros', 'split', 'exact', 'exact']",2,2,2,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,map_sum,"['intros', 'induction', 'left', 'reflexivity', 'right', 'left', 'split', 'split', 'reflexivity', 'right', 'right', 'split', 'split', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,prechain_sum,"['intros', 'induction', 'left', 'split', 'reflexivity', 'right', 'split', 'split', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,chain_def_ok,"['intros', 'induction', 'inversion', 'exact', 'inversion', 'exact', 'rewrite', 'exact']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,chain_incr,"['intros', 'induction', 'inversion', 'exact', 'inversion', 'apply', 'simpl', 'exact', 'exact', 'rewrite', 'apply', 'simpl', 'exact', 'exact']",0,1,1,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,pre_domok_incr_chain_0,"['unfold', 'intros', 'elim', 'intros', 'inversion', 'inversion', 'exact']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,pre_domok_incr_chain_1,"['unfold', 'intros', 'induction', 'elim', 'intros', 'inversion', 'inversion', 'inversion', 'simpl', 'exact', 'elim', 'intros', 'inversion', 'inversion', 'simpl', 'apply', 'apply', 'split', 'assumption']",2,1,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,pre_domok_incr_chain_2,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,pre_domok_incr_chain,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_0,"['unfold', 'intros', 'left', 'exact']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_1,"['unfold', 'intros', 'unfold', 'intros', 'elim', 'intros', 'right', 'rewrite', 'exact', 'intros', 'left', 'exact']",3,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_2,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intro', 'right', 'rewrite', 'exact', 'intro', 'left', 'exact', 'intros', 'right', 'exact']",2,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_3,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_4,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_5,"['intros', 'intro', 'inversion', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_6,"['intros', 'intro', 'inversion', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_7,"['intros', 'intro', 'inversion', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl_8,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,dist_compl,"['intros', 'split', 'intros', 'elim', 'intros', 'elim', 'exact', 'exact']",0,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,MapFlag_sum,"['intros', 'induction', 'split', 'left', 'reflexivity', 'split', 'right', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lazy_power_eg_power_0,"['simple', 'intros', 'simpl', 'intros', 'split', 'intros', 'inversion', 'reflexivity', 'intros', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'intros', 'inversion', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'exact', 'inversion', 'elim', 'intros', 'rewrite', 'split', 'intros', 'inversion', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'split', 'exact', 'intros', 'inversion', 'rewrite', 'split', 'intros', 'inversion', 'inversion', 'elim', 'intros', 'rewrite', 'reflexivity']",3,1,0,1,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lazy_power_eg_power,"['intros', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact']",1,0,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_eq_0,"['intros', 'induction', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'simpl', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'simpl', 'rewrite', 'rewrite', 'simpl', 'simpl', 'rewrite', 'reflexivity']",1,2,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_eq,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'reflexivity']",0,1,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_def_ok,"['intros', 'induction', 'rewrite', 'simpl', 'exact', 'rewrite', 'simpl', 'exact']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,power_def_ok,"['intros', 'replace', 'apply', 'simpl', 'exact', 'simpl', 'reflexivity']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_ult_const_0,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'split', 'rewrite', 'rewrite', 'split', 'exact', 'simpl', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion']",2,2,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_ult_const_1,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'rewrite', 'split', 'exact', 'simpl', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'split', 'rewrite', 'split', 'exact', 'simpl', 'exact']",2,1,0,2,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_ult_const_2,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'rewrite', 'exact', 'exact', 'simpl', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'reflexivity', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'reflexivity', 'exact']",2,0,1,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_ult_const_3,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_ult_const_4,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_last,"['intros', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'reflexivity']",0,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_dom_ok,"['intros', 'induction', 'simpl', 'exact', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'exact']",0,1,0,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_incr,"['intros', 'induction', 'simpl', 'exact', 'elim', 'intro', 'rewrite', 'simpl', 'rewrite', 'inversion', 'simpl', 'apply', 'simpl', 'exact', 'simpl', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'rewrite', 'apply', 'simpl', 'exact', 'exact']",0,5,1,4,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_increasing_chain,"['intros', 'apply', 'split', 'exact', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_length,"['intros', 'induction', 'simpl', 'reflexivity', 'simpl', 'elim', 'intro', 'elim', 'intros', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'reflexivity']",1,3,0,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_non_sas_chain,"['intros', 'cut', 'split', 'assumption', 'intro', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'split', 'assumption', 'exact']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_non_sas_chain_fp_0,"['intros', 'elim', 'intros', 'apply', 'elim', 'intros', 'exact']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_non_sas_chain_fp_1,"['intros', 'unfold', 'induction', 'rewrite', 'simpl', 'exact', 'elim', 'intros', 'split', 'rewrite', 'simpl', 'exact', 'rewrite', 'simpl', 'rewrite', 'exact']",1,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_non_sas_chain_fp_2,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'apply', 'exact', 'generalize', 'intros', 'induction', 'rewrite', 'simpl', 'simpl', 'exact', 'rewrite', 'simpl', 'rewrite', 'exact', 'exact']",1,2,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_inf_fps,"['intros', 'induction', 'simpl', 'elim', 'intros', 'elim', 'intros', 'exact', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'exact']",0,2,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,iteres_lower_fix_point,"['intros', 'split', 'elim', 'intros', 'apply', 'exact', 'exact', 'exact', 'unfold', 'intros', 'exact']",3,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,leb_reflexive,"['simple', 'simpl', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,leb_antisymmetric,"['simple', 'simple', 'intros', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'reflexivity']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,leb_transitive,"['simple', 'simple', 'simple', 'intros', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'exact', 'elim', 'intros', 'induction', 'exact']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lem_reflexive,"['unfold', 'simple', 'exact', 'simpl', 'intros', 'rewrite', 'exact', 'intros', 'simpl', 'split', 'exact', 'exact']",2,2,1,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lem_antisymmetric,"['unfold', 'simple', 'simple', 'intros', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'reflexivity']",2,3,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lem_transitive,"['unfold', 'simple', 'simple', 'simple', 'intros', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'exact', 'rewrite', 'elim', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'split', 'exact', 'exact']",2,3,2,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lem_order,"['unfold', 'split', 'exact', 'split', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,map_mini_appartient,"['unfold', 'intros', 'induction', 'simpl', 'exact', 'simpl', 'reflexivity', 'simpl', 'split', 'exact', 'exact']",2,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,map_maxi_appartient,"['unfold', 'intros', 'induction', 'simpl', 'exact', 'simpl', 'reflexivity', 'simpl', 'split', 'exact', 'exact']",2,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,map_mini_mini,"['intros', 'unfold', 'split', 'exact', 'induction', 'intros', 'induction', 'simpl', 'exact', 'elim', 'elim', 'intros', 'induction', 'elim', 'unfold', 'simpl', 'rewrite', 'simpl', 'rewrite', 'elim', 'intro', 'rewrite', 'exact', 'elim', 'intros', 'induction', 'elim', 'elim', 'simpl', 'unfold', 'simpl', 'elim', 'intros', 'split', 'exact', 'exact']",2,5,1,1,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,map_maxi_maxi,"['intros', 'unfold', 'split', 'exact', 'induction', 'intros', 'induction', 'simpl', 'exact', 'elim', 'elim', 'intros', 'induction', 'elim', 'unfold', 'simpl', 'rewrite', 'simpl', 'rewrite', 'elim', 'intro', 'rewrite', 'exact', 'elim', 'intros', 'induction', 'elim', 'elim', 'simpl', 'unfold', 'simpl', 'elim', 'intros', 'split', 'exact', 'exact']",2,5,1,1,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,map_mini_mapget_false,"['intro', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'reflexivity', 'inversion', 'intros', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact']",2,1,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,map_mini_mapget_true,"['intros', 'cut', 'intros', 'exact', 'intro', 'inversion']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,mlattice,"['intros', 'split', 'exact', 'split', 'exact', 'exact']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_0,"['unfold', 'intros', 'elim', 'intros', 'inversion', 'induction', 'elim', 'elim', 'clear', 'clear', 'split', 'split', 'split', 'split', 'elim', 'intros', 'apply', 'exact', 'exact', 'split', 'split', 'apply', 'elim', 'intros', 'exact', 'exact', 'split', 'simpl', 'split', 'exact', 'exact', 'simpl', 'reflexivity']",3,0,2,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_1,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'inversion', 'inversion', 'induction', 'inversion', 'inversion', 'clear', 'clear', 'induction', 'inversion', 'inversion', 'clear', 'clear', 'elim', 'elim', 'intros', 'inversion', 'rewrite', 'rewrite', 'elim', 'intros', 'split', 'split', 'split', 'split', 'elim', 'intros', 'exact', 'exact', 'split', 'split', 'apply', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact', 'simpl', 'simpl', 'elim', 'intros', 'exact', 'exact', 'split', 'simpl', 'split', 'exact', 'exact', 'simpl', 'reflexivity', 'intros', 'split', 'split', 'split', 'split', 'apply', 'elim', 'intros', 'assumption', 'elim', 'intros', 'assumption', 'elim', 'intros', 'assumption', 'exact', 'split', 'split', 'apply', 'elim', 'intros', 'assumption', 'exact', 'split', 'simpl', 'split', 'exact', 'elim', 'intros', 'assumption', 'simpl', 'reflexivity', 'inversion', 'inversion', 'split', 'exact', 'exact']",2,1,2,1,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_2,"['unfold', 'unfold', 'intros', 'inversion', 'inversion', 'induction', 'elim', 'elim', 'clear', 'clear', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'clear', 'clear', 'clear', 'inversion', 'induction', 'elim', 'elim', 'clear', 'clear', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'split', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'rewrite', 'inversion', 'inversion', 'assumption', 'elim', 'intros', 'assumption', 'rewrite', 'simpl', 'elim', 'intros', 'elim', 'intros', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'elim', 'intros', 'assumption', 'rewrite', 'simpl', 'elim', 'elim', 'intros', 'exact', 'rewrite', 'inversion', 'assumption', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'rewrite', 'simpl', 'elim', 'intros', 'intro', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'apply', 'rewrite', 'elim', 'intros', 'simpl', 'elim', 'intros', 'intro', 'rewrite', 'exact', 'rewrite', 'inversion', 'assumption', 'split', 'simpl', 'simpl', 'elim', 'elim', 'intros', 'split', 'exact', 'exact', 'simpl', 'simpl', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'intro', 'split', 'split', 'split', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'split', 'apply', 'rewrite', 'inversion', 'inversion', 'assumption', 'elim', 'intros', 'assumption', 'rewrite', 'rewrite', 'simpl', 'elim', 'elim', 'intros', 'exact', 'apply', 'rewrite', 'simpl', 'elim', 'elim', 'intros', 'intro', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'apply', 'elim', 'intros', 'assumption', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'exact', 'rewrite', 'inversion', 'assumption', 'apply', 'intro', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'rewrite', 'exact', 'rewrite', 'inversion', 'assumption', 'split', 'assumption', 'simpl', 'split', 'split', 'exact', 'elim', 'elim', 'intros', 'exact', 'rewrite', 'rewrite', 'reflexivity', 'induction', 'elim', 'elim', 'clear', 'clear', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'split', 'split', 'assumption', 'split', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'apply', 'rewrite', 'inversion', 'inversion', 'assumption', 'elim', 'intros', 'assumption', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'exact', 'apply', 'intro', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'apply', 'elim', 'intros', 'assumption', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'exact', 'rewrite', 'inversion', 'assumption', 'apply', 'intro', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'rewrite', 'exact', 'rewrite', 'inversion', 'assumption', 'simpl', 'split', 'split', 'elim', 'elim', 'intros', 'exact', 'exact', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'intro', 'split', 'split', 'split', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'apply', 'rewrite', 'inversion', 'inversion', 'assumption', 'elim', 'intros', 'assumption', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'exact', 'apply', 'intro', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'rewrite', 'simpl', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'apply', 'elim', 'intros', 'assumption', 'rewrite', 'elim', 'elim', 'intros', 'simpl', 'exact', 'rewrite', 'inversion', 'assumption', 'apply', 'intro', 'rewrite', 'elim', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'rewrite', 'inversion', 'assumption', 'split', 'assumption', 'simpl', 'split', 'split', 'exact', 'elim', 'elim', 'intros', 'exact', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'split', 'assumption', 'inversion', 'assumption']",4,3,3,4,0,8
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_3,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_4,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_6,"['unfold', 'intros', 'induction', 'simpl', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'inversion', 'inversion', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'elim', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'inversion', 'inversion', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'elim', 'inversion', 'elim', 'elim', 'inversion', 'elim', 'elim']",2,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_7,"['unfold', 'intros', 'induction', 'simpl', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'inversion', 'inversion', 'induction', 'elim', 'induction', 'elim', 'induction', 'elim', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'inversion', 'rewrite', 'rewrite', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'elim', 'reflexivity', 'elim', 'elim', 'elim', 'elim', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'inversion', 'inversion', 'inversion', 'induction', 'elim', 'induction', 'elim', 'induction', 'elim', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'inversion', 'rewrite', 'rewrite', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'elim', 'reflexivity', 'elim', 'elim', 'elim', 'elim', 'elim', 'induction', 'elim', 'induction', 'elim', 'induction', 'elim', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'inversion', 'inversion', 'rewrite', 'rewrite', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'induction', 'induction', 'elim', 'reflexivity', 'elim', 'elim', 'reflexivity', 'elim', 'elim', 'elim', 'elim', 'elim']",2,2,0,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_8,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'apply', 'rewrite', 'replace', 'exact', 'simpl', 'rewrite', 'simpl', 'reflexivity']",3,3,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_9,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded_10,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lattice_bounded,"['unfold', 'intros', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,eq_bool_equal,"['simple', 'simple', 'intro', 'reflexivity', 'intro', 'elim', 'reflexivity', 'simple', 'intro', 'elim', 'reflexivity', 'intro', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,equal_eq_bool,"['simple', 'reflexivity', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,eqm_bool_equal,"['simple', 'simple', 'intros', 'reflexivity', 'intros', 'inversion', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'simpl', 'elim', 'intro', 'rewrite', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'reflexivity', 'inversion', 'inversion', 'inversion', 'intros', 'induction', 'inversion', 'inversion', 'simpl', 'elim', 'intro', 'rewrite', 'elim', 'intro', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'inversion', 'inversion']",1,0,0,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,equal_eqm_bool,"['simple', 'reflexivity', 'intros', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'simpl', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lem_get_leb,"['simple', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'simpl', 'elim', 'intro', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'rewrite', 'exact', 'inversion', 'inversion', 'elim', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'simpl', 'elim', 'intros', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'exact', 'exact']",2,2,1,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,lem_domain_equal,"['simple', 'simple', 'intros', 'exact', 'intros', 'inversion', 'intros', 'inversion', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'simpl', 'elim', 'intros', 'exact', 'rewrite', 'elim', 'intros', 'inversion', 'intros', 'induction', 'inversion', 'inversion', 'elim', 'intros', 'simpl', 'split', 'exact', 'exact']",2,0,2,0,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,andb_inc_r,"['simple', 'simple', 'intros', 'induction', 'exact', 'intros', 'inversion', 'intros', 'induction', 'exact', 'intros', 'induction', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,andb_inc_l,"['simple', 'simple', 'intros', 'induction', 'exact', 'intros', 'inversion', 'intros', 'induction', 'exact', 'intros', 'induction', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,orb_inc_r,"['simple', 'simple', 'intros', 'induction', 'exact', 'intros', 'inversion', 'intros', 'induction', 'exact', 'intros', 'induction', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,orb_inc_l,"['simple', 'simple', 'intros', 'induction', 'exact', 'intros', 'inversion', 'intros', 'induction', 'exact', 'intros', 'induction', 'exact']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,andb_incr,"['intros', 'apply', 'exact', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/lattice_fixpoint.json,orb_incr,"['intros', 'apply', 'exact', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_correct_wrt_sign_invar,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,st_produit_l_correct_wrt_sign_invar_with_offset,"['simple', 'unfold', 'intros', 'inversion', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'split', 'rewrite', 'rewrite', 'split', 'exact', 'rewrite', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'inversion', 'intros', 'elim', 'intros', 'unfold', 'intros', 'unfold', 'unfold', 'induction', 'induction', 'simpl', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'inversion', 'rewrite', 'simpl', 'exact', 'induction', 'inversion', 'inversion', 'inversion', 'reflexivity', 'exact', 'induction', 'simpl', 'inversion', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'unfold', 'induction', 'simpl', 'inversion', 'elim', 'intros', 'split', 'rewrite', 'induction', 'exact', 'reflexivity', 'simpl', 'inversion', 'exact', 'simpl', 'inversion', 'induction', 'clear', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'unfold', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'exact', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'exact', 'inversion', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'inversion', 'exact', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'inversion', 'exact']",4,4,1,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,st_produit_r_correct_wrt_sign_invar_with_offset,"['simple', 'unfold', 'intros', 'inversion', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'rewrite', 'inversion', 'split', 'rewrite', 'rewrite', 'split', 'exact', 'rewrite', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'inversion', 'intros', 'elim', 'intros', 'unfold', 'intros', 'unfold', 'unfold', 'induction', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'simpl', 'induction', 'exact', 'inversion', 'induction', 'exact', 'inversion', 'exact', 'induction', 'simpl', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'inversion', 'exact', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'exact', 'inversion', 'elim', 'intros', 'split', 'exact', 'intros', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'exact', 'inversion', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'inversion', 'exact', 'inversion', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'inversion', 'exact']",4,4,1,2,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,st_produit_correct_wrt_sign_invar_with_offset,"['simple', 'simple', 'intros', 'simpl', 'unfold', 'intros', 'inversion', 'intros', 'simpl', 'unfold', 'intros', 'inversion', 'intros', 'simpl', 'unfold', 'intros', 'inversion', 'simple', 'simpl', 'intros', 'unfold', 'intros', 'inversion', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'replace', 'exact', 'reflexivity', 'simple', 'simpl', 'intros', 'exact', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'unfold', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'induction', 'exact', 'induction', 'exact', 'exact', 'exact']",6,3,2,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,st_produit_correct_wrt_sign_invar,"['intros', 'replace', 'apply', 'unfold', 'simpl', 'exact', 'unfold', 'simpl', 'exact', 'reflexivity']",0,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,positive_sum,"['simple', 'intros', 'right', 'right', 'split', 'reflexivity', 'intros', 'right', 'left', 'split', 'reflexivity', 'left', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,preDTA_produit_l_correct_wrt_sign_invar,"['simple', 'intros', 'simpl', 'exact', 'simpl', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'apply', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'intros', 'elim', 'intros', 'induction', 'simpl', 'unfold', 'intros', 'induction', 'simpl', 'exact', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'inversion', 'induction', 'cut', 'intros', 'unfold', 'intros', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'unfold', 'simple', 'exact', 'intro', 'exact', 'cut', 'intro', 'unfold', 'intros', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'inversion', 'unfold', 'simple', 'exact', 'intro', 'exact', 'cut', 'intros', 'unfold', 'intros', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'unfold', 'simple', 'exact', 'intro', 'exact']",5,6,2,1,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,preDTA_produit_r_correct_wrt_sign_invar,"['simple', 'intros', 'simpl', 'exact', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'apply', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'intros', 'elim', 'intros', 'induction', 'simpl', 'unfold', 'intros', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'induction', 'cut', 'intros', 'unfold', 'intros', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'unfold', 'simple', 'exact', 'intro', 'exact', 'cut', 'intro', 'unfold', 'intros', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'unfold', 'simple', 'exact', 'intro', 'exact', 'cut', 'intro', 'unfold', 'intros', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'unfold', 'simple', 'exact', 'intro', 'exact']",5,5,1,1,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,preDTA_produit_correct_wrt_sign_invar,"['simple', 'simple', 'simpl', 'intros', 'exact', 'simpl', 'intros', 'exact', 'intros', 'simpl', 'exact', 'simple', 'simpl', 'intros', 'exact', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'replace', 'exact', 'reflexivity', 'simple', 'simpl', 'intros', 'exact', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'unfold', 'intros', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact']",5,1,2,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,inter_correct_wrt_sign_invar,"['simple', 'simple', 'simpl', 'intros', 'exact']",1,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok_lem_0,"['unfold', 'intros', 'induction', 'induction', 'simpl', 'inversion', 'simpl', 'right', 'right', 'exact', 'induction', 'simpl', 'inversion', 'simpl', 'right', 'right', 'exact']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok_lem_1,"['unfold', 'intros', 'induction', 'simpl', 'inversion', 'simpl', 'induction', 'inversion']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok_lem_2,"['unfold', 'intros', 'induction', 'inversion', 'induction', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok_lem_3,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'cut', 'intros', 'rewrite', 'inversion', 'right', 'left', 'split', 'split', 'reflexivity', 'exact', 'left', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'exact', 'exact', 'elim', 'intros', 'left', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'exact', 'exact', 'intros', 'elim', 'intros', 'right', 'left', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'exact', 'exact', 'intros', 'right', 'right', 'exact', 'reflexivity']",2,0,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok_lem_4,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'cut', 'intro', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'exact', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'exact', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'split', 'split', 'exact', 'split', 'exact', 'exact', 'reflexivity']",2,0,1,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok_lem_5,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok_lem_6,"['unfold', 'intro', 'intro', 'elim', 'intros', 'exact']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,pl_produit_ref_ok,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'rewrite', 'split', 'exact']",2,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,s_produit_l_ref_ok,"['simple', 'simpl', 'unfold', 'intros', 'inversion', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'apply', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'intro', 'intro', 'intro', 'intro', 'unfold', 'intros', 'cut', 'intros', 'elim', 'intros', 'simpl', 'induction', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'inversion', 'simpl', 'exact', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'intros', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'reflexivity', 'inversion']",4,5,1,2,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,s_produit_r_ref_ok,"['simple', 'simpl', 'unfold', 'intros', 'inversion', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'apply', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'intro', 'intro', 'intro', 'intro', 'unfold', 'intros', 'cut', 'intro', 'elim', 'intros', 'simpl', 'induction', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'reflexivity', 'inversion']",3,5,1,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,st_M0_ref_ok,"['unfold', 'intros', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,s_produit_ref_ok,"['simple', 'simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'exact', 'simple', 'intros', 'simpl', 'exact', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'replace', 'exact', 'reflexivity', 'simple', 'intros', 'intros', 'simpl', 'exact', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'simpl', 'elim', 'intros', 'elim', 'intros', 'unfold', 'intros', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact']",5,1,1,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,preDTA_produit_l_ref_ok,"['unfold', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'apply', 'simpl', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'cut', 'intros', 'induction', 'simpl', 'induction', 'exact', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'inversion', 'induction', 'induction', 'simpl', 'inversion', 'clear', 'induction', 'simpl', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'inversion', 'exact', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'inversion', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'inversion', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'simpl', 'inversion', 'simpl', 'exact', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'reflexivity']",4,4,2,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,preDTA_produit_r_ref_ok,"['unfold', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'apply', 'simpl', 'rewrite', 'reflexivity', 'intros', 'elim', 'intros', 'cut', 'intro', 'induction', 'simpl', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'induction', 'simpl', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'induction', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'inversion', 'induction', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'exact', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'reflexivity']",4,4,1,2,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,preDTA_produit_ref_okd,"['simple', 'simple', 'simpl', 'intros', 'unfold', 'intros', 'inversion', 'simpl', 'intros', 'unfold', 'intros', 'inversion', 'intros', 'simpl', 'unfold', 'intros', 'inversion', 'simple', 'simpl', 'intros', 'unfold', 'intros', 'inversion', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'replace', 'exact', 'reflexivity', 'simple', 'intros', 'simpl', 'unfold', 'intros', 'inversion', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'elim', 'elim', 'intros', 'simpl', 'unfold', 'intros', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'simpl', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'exact', 'simpl', 'exact']",6,3,1,1,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,preDTA_produit_ref_ok,"['intros', 'cut', 'intro', 'unfold', 'elim', 'intros', 'exact', 'apply', 'unfold', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,DTA_inter_ref_ok_invar,"['simple', 'simple', 'intros', 'simpl', 'simpl', 'simpl', 'exact']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/inter_correct.json,inter_DTA_main_state_correct_invar,"['simple', 'simple', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'exact']",2,1,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,prec_list_ref_ok_destr,"['unfold', 'intros', 'split', 'intros', 'exact', 'intros', 'exact']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,state_ref_ok_M2_destr,"['unfold', 'intros', 'split', 'intros', 'apply', 'induction', 'exact', 'apply', 'induction', 'exact']",3,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,preDTA_ref_ok_def,"['intros', 'unfold', 'unfold', 'unfold', 'split', 'intros', 'exact', 'intros', 'exact']",1,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,preDTA_ref_ok_distinct_dest,"['unfold', 'intros', 'split', 'intros', 'apply', 'induction', 'exact', 'intros', 'apply', 'induction', 'exact']",3,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,prec_list_ref_ok_check_correct,"['simple', 'simpl', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'unfold', 'unfold', 'elim', 'intros', 'rewrite', 'reflexivity', 'intros', 'reflexivity']",1,2,0,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,prec_list_ref_ok_check_complete,"['simple', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'unfold', 'intros', 'inversion', 'unfold', 'elim', 'intro', 'elim', 'intros', 'split', 'rewrite', 'exact', 'intro', 'rewrite', 'inversion', 'exact', 'exact', 'inversion', 'intros', 'rewrite', 'inversion', 'inversion', 'intros', 'unfold', 'intros', 'inversion']",5,0,1,3,0,6
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,state_ref_ok_check_correct,"['unfold', 'simple', 'intros', 'reflexivity', 'intros', 'simpl', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'intros', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'apply', 'induction', 'simpl', 'exact', 'intros', 'apply', 'induction', 'simpl', 'exact']",3,5,1,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,state_ref_ok_check_complete,"['unfold', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'simpl', 'rewrite', 'exact', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'inversion', 'inversion']",2,3,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,predta_ref_ok_check_correct_0,"['intros', 'unfold', 'induction', 'intros', 'reflexivity', 'simpl', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'apply', 'induction', 'simpl', 'exact', 'intros', 'apply', 'induction', 'simpl', 'exact']",3,4,1,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,predta_ref_ok_check_complete_0,"['unfold', 'simple', 'simpl', 'intros', 'inversion', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'induction', 'exact', 'induction', 'exact', 'exact', 'exact', 'inversion', 'inversion']",1,2,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,predta_ref_ok_check_correct,"['unfold', 'intros', 'elim', 'intros', 'apply', 'unfold', 'exact']",3,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,predta_ref_ok_check_complete,"['intros', 'elim', 'intros', 'apply', 'unfold', 'exact']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,dta_ref_ok_check_correct,"['simple', 'simpl', 'intro', 'intro', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,dta_ref_ok_check_complete,"['simple', 'simpl', 'intro', 'intro', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,DTA_main_state_correct_check_correct,"['simple', 'simpl', 'intros', 'unfold', 'elim', 'intros', 'rewrite', 'reflexivity']",2,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/refcorrect.json,DTA_main_state_correct_check_complete,"['simple', 'simpl', 'intros', 'elim', 'intro', 'elim', 'intros', 'split', 'exact', 'rewrite', 'inversion']",1,1,0,0,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,upl_conv_0_correct_wrt_sign_invar,"['simple', 'intros', 'simpl', 'inversion', 'simpl', 'exact', 'exact', 'simpl', 'inversion', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,upl_conv_1_correct_wrt_sign_invar,"['simple', 'intros', 'simpl', 'inversion', 'simpl', 'exact', 'exact', 'simpl', 'inversion', 'exact']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,umpl_conv_0_correct_wrt_sign_invar_0,"['simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'unfold', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'split', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'split', 'exact', 'exact', 'inversion', 'simpl', 'rewrite', 'reflexivity', 'intros', 'unfold', 'unfold', 'intros', 'unfold', 'unfold', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'simpl', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'simpl', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'simpl', 'exact']",5,4,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,umpl_conv_0_correct_wrt_sign_invar,"['unfold', 'intros', 'elim', 'intros', 'split', 'simpl', 'exact', 'unfold', 'simpl', 'exact', 'exact']",2,1,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,umpl_conv_1_correct_wrt_sign_invar_0,"['simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'unfold', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'split', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'split', 'exact', 'exact', 'inversion', 'simpl', 'rewrite', 'reflexivity', 'intros', 'unfold', 'unfold', 'intros', 'unfold', 'unfold', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'simpl', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'simpl', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'simpl', 'exact']",5,4,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,umpl_conv_1_correct_wrt_sign_invar,"['unfold', 'intros', 'elim', 'intros', 'split', 'simpl', 'exact', 'unfold', 'simpl', 'exact', 'exact']",2,1,1,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_0_correct_wrt_sign_invar_0,"['unfold', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'intros', 'simpl', 'induction', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact']",4,5,3,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_0_correct_wrt_sign_invar,"['unfold', 'intros', 'unfold', 'intros', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'inversion', 'exact', 'inversion']",3,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_1_correct_wrt_sign_invar_0,"['unfold', 'simple', 'intros', 'inversion', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'intros', 'simpl', 'induction', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact', 'apply', 'intros', 'apply', 'induction', 'simpl', 'exact', 'exact']",4,5,3,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_1_correct_wrt_sign_invar,"['unfold', 'intros', 'unfold', 'intros', 'induction', 'simpl', 'inversion', 'induction', 'simpl', 'exact', 'inversion', 'exact']",3,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,umerge_correct_wrt_sign_invar,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'exact', 'rewrite', 'exact', 'elim', 'intros', 'elim', 'intros', 'apply', 'exact', 'rewrite', 'exact']",3,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_pl_correct_wrt_sign_invar,"['simple', 'intros', 'simpl', 'inversion', 'simpl', 'rewrite', 'exact', 'rewrite', 'exact', 'intros', 'inversion', 'rewrite', 'inversion', 'simpl', 'exact']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_mpl_correct_wrt_sign_invar_0,"['simple', 'unfold', 'intros', 'exact', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'elim', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'inversion', 'split', 'rewrite', 'split', 'rewrite', 'rewrite', 'exact', 'exact', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'intros', 'rewrite', 'rewrite', 'inversion', 'intros', 'unfold', 'intros', 'cut', 'cut', 'intros', 'induction', 'simpl', 'cut', 'intros', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'unfold', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'simpl', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'intros', 'rewrite', 'rewrite', 'simpl', 'exact', 'induction', 'cut', 'intro', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'unfold', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'cut', 'intros', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'unfold', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'cut', 'intro', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'induction', 'simpl', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'exact', 'unfold', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'simpl', 'exact', 'simpl', 'inversion', 'unfold', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'unfold', 'intros', 'elim', 'intros', 'split', 'induction', 'simpl', 'simpl', 'exact', 'induction', 'simpl', 'exact']",4,3,2,2,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_mpl_correct_wrt_sign_invar_1,"['simple', 'simpl', 'simple', 'intros', 'exact', 'exact', 'exact', 'simpl', 'simple', 'intros', 'exact', 'intros', 'elim', 'intros', 'rewrite', 'unfold', 'intros', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'elim', 'intros', 'split', 'rewrite', 'split', 'elim', 'intros', 'rewrite', 'rewrite', 'exact', 'elim', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'elim', 'intro', 'elim', 'intros', 'rewrite', 'unfold', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'split', 'rewrite', 'rewrite', 'exact', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'inversion', 'exact', 'rewrite', 'rewrite', 'inversion', 'intros', 'simpl', 'induction', 'exact', 'induction', 'clear', 'replace', 'exact', 'reflexivity', 'clear', 'replace', 'exact', 'reflexivity', 'replace', 'exact', 'reflexivity', 'simple', 'intros', 'simpl', 'exact', 'intros', 'simpl', 'induction', 'replace', 'exact', 'reflexivity', 'induction', 'replace', 'exact', 'reflexivity', 'replace', 'exact', 'reflexivity', 'replace', 'exact', 'reflexivity', 'intros', 'simpl', 'elim', 'elim', 'intros', 'cut', 'cut', 'intros', 'unfold', 'intros', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'exact', 'induction', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'exact', 'elim', 'intros', 'split', 'simpl', 'exact', 'simpl', 'exact', 'elim', 'intros', 'simpl', 'simpl', 'split', 'exact', 'exact', 'exact', 'exact']",5,1,2,3,0,7
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_mpl_correct_wrt_sign_invar,"['intros', 'replace', 'apply', 'unfold', 'simpl', 'exact', 'unfold', 'simpl', 'exact', 'unfold', 'reflexivity']",0,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_0_correct_wrt_sign_invar,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'unfold', 'exact', 'unfold', 'exact', 'rewrite', 'inversion', 'rewrite', 'exact', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'intros', 'rewrite', 'inversion']",2,1,1,1,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,insert_ostate_correct_wrt_sign_invar,"['unfold', 'unfold', 'intros', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'exact']",2,1,1,1,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_correct_wrt_sign_invar,"['unfold', 'simple', 'simple', 'unfold', 'unfold', 'unfold', 'intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'exact', 'intro', 'rewrite', 'simpl', 'exact']",3,3,0,2,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,upl_conv_0_ref_ok_invar,"['simple', 'intros', 'simpl', 'inversion', 'split', 'split', 'reflexivity', 'exact', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'exact', 'exact', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'exact', 'exact', 'intros', 'simpl', 'inversion']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,upl_conv_1_ref_ok_invar,"['simple', 'intros', 'simpl', 'inversion', 'split', 'split', 'reflexivity', 'exact', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'exact', 'exact', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'exact', 'exact', 'intros', 'simpl', 'inversion']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_0_ref_ok_invar_0,"['intros', 'elim', 'intros', 'split', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'split', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'exact']",0,0,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_1_ref_ok_invar_0,"['intros', 'elim', 'intros', 'split', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'split', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'split', 'elim', 'intros', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'split', 'exact', 'exact']",0,0,1,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_0_ref_ok_invar,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'elim', 'intros', 'split', 'rewrite', 'exact']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,udta_conv_1_ref_ok_invar,"['unfold', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'decompose', 'elim', 'intros', 'split', 'rewrite', 'exact']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,MapMerge_ref_ok_invar,"['unfold', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'elim', 'intros', 'rewrite', 'split', 'reflexivity', 'rewrite', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'reflexivity', 'intro', 'rewrite', 'split', 'reflexivity']",2,0,0,3,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,u_merge_ref_ok_invar,"['unfold', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_pl_ref_ok_invar,"['simple', 'simpl', 'intros', 'unfold', 'elim', 'intros', 'inversion', 'rewrite', 'exact', 'exact', 'exact', 'intros', 'unfold', 'intros', 'simpl', 'exact']",5,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_mpl_0_ref_ok_invar,"['simple', 'simpl', 'intros', 'exact', 'intros', 'simpl', 'unfold', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'elim', 'intros', 'rewrite', 'inversion', 'apply', 'apply', 'simpl', 'rewrite', 'reflexivity', 'apply', 'simpl', 'rewrite', 'reflexivity', 'inversion', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'reflexivity', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'apply', 'simpl', 'rewrite', 'reflexivity', 'exact', 'rewrite', 'rewrite', 'inversion', 'intros', 'simpl', 'unfold', 'intros', 'cut', 'cut', 'intros', 'induction', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'induction', 'clear', 'induction', 'simpl', 'exact', 'cut', 'intro', 'induction', 'simpl', 'exact', 'exact', 'exact', 'unfold', 'intros', 'apply', 'induction', 'simpl', 'exact', 'cut', 'intro', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'unfold', 'intros', 'apply', 'induction', 'simpl', 'exact', 'cut', 'intros', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact', 'unfold', 'intros', 'apply', 'induction', 'exact', 'unfold', 'intros', 'apply', 'induction', 'exact', 'unfold', 'intros', 'apply', 'induction', 'exact']",5,6,3,3,0,5
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_mpl_correct_ref_ok_invar,"['simple', 'simpl', 'intros', 'induction', 'exact', 'exact', 'exact', 'simple', 'simpl', 'intros', 'exact', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'replace', 'exact', 'reflexivity', 'simple', 'intros', 'simpl', 'exact', 'intros', 'replace', 'exact', 'reflexivity', 'intros', 'elim', 'intros', 'elim', 'intros', 'simpl', 'unfold', 'intros', 'induction', 'simpl', 'exact', 'induction', 'simpl', 'exact', 'exact', 'exact']",5,3,2,0,0,3
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_ref_ok,"['simple', 'simple', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'unfold', 'intros', 'unfold', 'unfold', 'unfold', 'elim', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'elim', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'elim', 'intros', 'rewrite', 'split', 'reflexivity', 'cut', 'intro', 'rewrite', 'exact', 'apply', 'elim', 'intros', 'exact', 'elim', 'intros', 'exact', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'reflexivity', 'split', 'exact', 'rewrite', 'intros', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'elim', 'intros', 'rewrite', 'split', 'reflexivity', 'elim', 'intros', 'rewrite', 'exact', 'elim', 'intros', 'rewrite', 'split', 'reflexivity', 'exact', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intros', 'rewrite', 'split', 'reflexivity', 'elim', 'intros', 'rewrite', 'inversion', 'rewrite', 'exact', 'exact', 'rewrite', 'rewrite', 'exact']",3,1,2,3,0,4
/mnt/cisk/zmq/dataset/data/tree-automata/union_correct.json,union_DTA_main_state_correct_invar,"['simple', 'simple', 'simpl', 'unfold', 'intros', 'elim', 'elim', 'intros', 'unfold', 'rewrite', 'rewrite', 'unfold', 'unfold', 'split', 'rewrite', 'rewrite', 'reflexivity']",3,2,0,3,0,2
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,term_list_disj,"['simple', 'left', 'trivial', 'right', 'split', 'split', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,high_aux_0,"['intros', 'unfold', 'unfold', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,high_aux_1,"['intros', 'unfold', 'unfold', 'trivial']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,high_aux_2,"['intros', 'cut', 'intro', 'cut', 'intro', 'exact', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,high_aux_3,"['intros', 'simpl', 'unfold', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,high_aux_4,"['intros', 'cut', 'intro', 'rewrite', 'exact', 'unfold', 'trivial']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,pl_sum,"['intros', 'induction', 'right', 'split', 'split', 'split', 'reflexivity', 'left', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,taille_aux_0,"['intros', 'simpl', 'apply', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,taille_aux_1,"['intros', 'unfold', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,taille_aux_2,"['intros', 'simpl', 'apply', 'exact']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,prec_in_state_M0_false,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,state_in_dta_M0_false,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,prec_occur_1,"['intros', 'induction', 'inversion', 'exact', 'exact', 'exact', 'inversion']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,prec_contained_0,"['intros', 'induction', 'inversion', 'exact', 'exact', 'exact', 'inversion']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,prec_contained_1,"['intros', 'induction', 'inversion', 'exact', 'exact', 'exact', 'inversion']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,term_occur_0_0,"['unfold', 'unfold', 'intros', 'inversion', 'exact', 'apply', 'unfold', 'exact']",2,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,term_occur_0_1,"['unfold', 'intros', 'induction', 'inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,term_occur_0_2,"['unfold', 'unfold', 'intros', 'inversion', 'apply', 'exact', 'exact', 'apply', 'exact', 'exact']",2,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,term_occur_0,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,term_occur_1,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,indprinciple_3_0,"['unfold', 'intros', 'induction', 'simpl', 'inversion']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,indprinciple_3_1,"['unfold', 'intros', 'induction', 'apply', 'intros', 'apply', 'apply', 'exact', 'exact']",4,0,3,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,indprinciple_3_2,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,indprinciple_term,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,Ndouble_plus_one_inv_xH,"['simple', 'intros', 'reflexivity', 'simpl', 'intros', 'inversion']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/tree-automata/defs.json,Ndouble_plus_one_inv_xI,"['simple', 'intros', 'inversion', 'intros', 'simpl', 'inversion', 'reflexivity']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_inf_opp_sup_seq,"['destruct', 'split', 'intros', 'intro', 'case', 'clear', 'intros', 'split', 'intro', 'apply', 'simpl', 'rewrite', 'apply', 'exists', 'apply', 'assert', 'ring', 'simpl', 'rewrite', 'clear', 'auto', 'intro', 'case', 'clear', 'intros', 'split', 'intros', 'unfold', 'rewrite', 'apply', 'simpl', 'apply', 'exists', 'assert', 'ring', 'simpl', 'rewrite', 'apply', 'auto', 'intro', 'case', 'clear', 'intros', 'exists', 'apply', 'auto', 'intro', 'case', 'clear', 'intros', 'exists', 'apply', 'rewrite', 'auto', 'intros', 'apply', 'intros', 'apply', 'rewrite', 'apply']",3,3,3,3,1,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_sup_opp_inf_seq,"['case', 'split', 'move', 'case', 'split', 'move', 'apply', 'have', 'first', 'move', 'exists', 'apply', 'rewrite', 'apply', 'move', 'case', 'split', 'move', 'have', 'first', 'move', 'apply', 'exists', 'rewrite', 'apply', 'move', 'apply', 'move', 'apply', 'rewrite', 'apply', 'move', 'case', 'exists', 'apply', 'move', 'case', 'exists', 'apply', 'rewrite']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_sup_seq_lub,"['destruct', 'intro', 'split', 'intro', 'destruct', 'simpl', 'intros', 'apply', 'intros', 'set', 'change', 'rewrite', 'apply', 'now', 'clear', 'simpl', 'intros', 'rewrite', 'easy', 'intros', 'destruct', 'intros', 'apply', 'auto', 'intros', 'set', 'case', 'clear', 'intros', 'apply', 'assert', 'simpl', 'ring', 'rewrite', 'clear', 'apply', 'exists', 'auto', 'generalize', 'clear', 'intros', 'case', 'clear', 'simpl', 'intros', 'assert', 'exists', 'auto', 'generalize', 'clear', 'now', 'apply', 'intro', 'destruct', 'simpl', 'intro', 'case', 'clear', 'intros', 'contradict', 'apply', 'exists', 'auto', 'easy', 'generalize', 'clear', 'intro', 'case', 'clear', 'intros', 'assert', 'exists', 'auto', 'generalize', 'clear', 'now', 'intro', 'destruct', 'intros', 'generalize', 'clear', 'intro', 'rewrite', 'apply', 'intuition', 'generalize', 'rewrite', 'intuition', 'easy', 'now', 'destruct']",4,1,2,3,2,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Rbar_is_lub_sup_seq,"['destruct', 'intros', 'intro', 'split', 'intro', 'apply', 'apply', 'exists', 'auto', 'pattern', 'rewrite', 'apply', 'apply', 'intro', 'destruct', 'now', 'now', 'intro', 'assert', 'intros', 'rewrite', 'clear', 'apply', 'generalize', 'clear', 'apply', 'pattern', 'rewrite', 'apply', 'intro', 'apply', 'intro', 'destruct', 'now', 'now', 'intro', 'assert', 'intros', 'rewrite', 'clear', 'apply', 'generalize', 'clear', 'apply', 'simpl', 'auto', 'intros', 'apply', 'simpl', 'auto', 'apply', 'exists', 'auto']",2,2,1,2,3,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_inf_seq_glb,"['move', 'apply', 'apply', 'move', 'split', 'case', 'exists', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Rbar_is_glb_inf_seq,"['move', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'split', 'case', 'exists', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_sup_seq_ext,"['case', 'rewrite', 'move', 'case', 'split', 'move', 'rewrite', 'case', 'exists', 'rewrite', 'move', 'case', 'exists', 'rewrite', 'move', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_inf_seq_ext,"['case', 'rewrite', 'move', 'case', 'split', 'move', 'rewrite', 'case', 'exists', 'rewrite', 'move', 'rewrite', 'move', 'case', 'exists', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_sup_seq,"['case', 'intro', 'destruct', 'now', 'left', 'auto', 'now', 'exists', 'exists', 'rewrite', 'case', 'intros', 'exists', 'apply', 'auto']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_inf_seq,"['case', 'exists', 'apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_sup_seq_unique,"['move', 'rewrite', 'case', 'case', 'case', 'apply', 'apply', 'set', 'apply', 'case', 'case', 'have', '[by field | move => -> ]', 'have', '[ simpl', 'field', 'apply', 'have', '[by field | move => -> ]', 'have', '[ simpl', 'field', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Sup_seq_correct,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_inf_seq_unique,"['move', 'rewrite', 'case', 'case', 'case', 'apply', 'apply', 'set', 'apply', 'case', 'case', 'have', '[by field | move => -> ]', 'have', '[ simpl', 'field', 'apply', 'have', '[by field | move => -> ]', 'have', '[ simpl', 'field', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Inf_seq_correct,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Sup_seq_ext,"['intro', 'rewrite', 'case', 'simpl', 'intros', 'apply']",2,2,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Inf_seq_ext,"['intro', 'rewrite', 'case', 'simpl', 'intros', 'apply']",2,2,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Rbar_sup_eq_lub,"['rewrite', 'case', 'rewrite', 'case', 'apply', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Inf_eq_glb,"['rewrite', 'case', 'rewrite', 'case', 'apply', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Sup_opp_inf,"['rewrite', 'case', 'apply', 'apply', 'rewrite']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Inf_opp_sup,"['rewrite', 'rewrite', 'repeat', 'intros', 'apply', 'apply', 'move', 'apply', 'move', 'split', 'case', 'exists', 'rewrite']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Sup_seq_scal_l,"['case', 'rewrite', 'case', 'case', 'simpl', 'apply', 'apply', 'apply', 'apply', 'suff', 'case', 'case', 'try', 'try', 'case', 'left', 'intros', 'apply', 'apply', 'apply', 'exists', 'suff', 'case', 'case', 'try', 'try', 'case', 'left', 'intros', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'suff', 'case', 'case', 'try', 'try', 'case', 'try', 'left', 'intros', 'rewrite', 'apply', 'apply', 'exists', 'rewrite', 'transitivity', 'apply', 'move', 'case', 'apply', 'ring', 'case', 'case', 'case', 'case', 'transitivity', 'apply', 'move', 'split', 'move', 'ring_simplify', 'apply', 'exists', 'apply', 'ring_simplify', 'apply', 'case', 'apply', 'ring', 'case', 'case', 'case', 'case']",1,2,1,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Inf_seq_scal_l,"['move', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'by', 'move', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_sup_seq_le,"['destruct', 'destruct', 'intros', 'case', 'clear', 'intros', 'case', 'clear', 'intros', 'apply', 'intros', 'rewrite', 'clear', 'apply', 'exists', 'auto']",2,0,1,1,1,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_inf_seq_le,"['case', 'case', 'case', 'case', 'apply', 'apply', 'exists']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Sup_seq_le,"['intros', 'unfold', 'case', 'intros', 'case', 'simpl', 'intros', 'apply', 'auto']",3,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Inf_seq_le,"['move', 'rewrite', 'case', 'case', 'apply']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Inf_le_sup,"['rewrite', 'case', 'case', 'rewrite', 'case', 'case', 'apply', 'set', 'case', 'case', 'apply', 'have', 'first', 'move', 'have', 'first', 'move', 'apply', 'set', 'case', 'move', 'apply', 'set', 'case', 'move', 'apply', 'move', 'apply']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_sup_seq_major,"['case', 'move', 'case', 'apply', 'apply', 'apply', 'move', 'case', 'move', 'case', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Sup_seq_minor_lt,"['rewrite', 'case', 'simpl', 'split', 'case', 'apply', 'case', 'simpl', 'exists', 'replace', 'apply', 'apply', 'by', 'case', 'apply', 'exact', 'apply']",0,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Sup_seq_minor_le,"['intros', 'destruct', 'apply', 'apply', 'exists', 'rewrite', 'rewrite', 'case', 'simpl', 'apply']",0,2,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_opp_LimSup_seq,"['case', 'split', 'move', 'case', 'split', 'move', 'case', 'exists', 'split', 'by', 'apply', 'apply', 'right', 'ring', 'case', 'exists', 'apply', 'apply', 'right', 'ring', 'move', 'case', 'split', 'move', 'case', 'exists', 'split', 'by', 'apply', 'rewrite', 'apply', 'right', 'ring', 'case', 'exists', 'apply', 'rewrite', 'apply', 'right', 'ring', 'move', 'case', 'exists', 'split', 'by', 'apply', 'move', 'case', 'exists', 'split', 'by', 'apply', 'rewrite', 'move', 'case', 'exists', 'apply', 'apply', 'move', 'case', 'exists', 'apply', 'rewrite', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_opp_LimInf_seq,"['case', 'split', 'move', 'case', 'split', 'move', 'case', 'exists', 'split', 'by', 'apply', 'apply', 'right', 'ring', 'case', 'exists', 'apply', 'apply', 'right', 'ring', 'move', 'case', 'split', 'move', 'case', 'exists', 'split', 'by', 'apply', 'rewrite', 'apply', 'right', 'ring', 'case', 'exists', 'apply', 'rewrite', 'apply', 'right', 'ring', 'move', 'case', 'exists', 'apply', 'apply', 'move', 'case', 'exists', 'apply', 'rewrite', 'apply', 'move', 'case', 'exists', 'split', 'by', 'apply', 'move', 'case', 'exists', 'split', 'by', 'apply', 'rewrite']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_infSup_seq,"['case', 'rewrite', 'split', 'split', 'move', 'apply', 'case', 'exists', 'rewrite', 'intuition', 'case', 'exists', 'rewrite', 'case', 'simpl', 'case', 'case', 'apply', 'apply', 'apply', 'apply', 'right', 'field', 'case', 'apply', 'by', 'split', 'move', 'move', 'apply', 'case', 'exists', 'intuition', 'case', 'exists', 'apply', 'contradict', 'apply', 'apply', 'rewrite', 'move', 'case', 'apply', 'exists', 'rewrite', 'intuition', 'move', 'move', 'apply', 'case', 'exists', 'intuition', 'move', 'case', 'exists', 'rewrite', 'case', 'simpl', 'case', 'case', 'apply', 'apply', 'apply', 'apply', 'intuition', 'case', 'apply', 'by', 'move', 'case', 'exists', 'apply', 'contradict', 'apply', 'apply', 'rewrite']",0,1,3,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_supInf_seq,"['rewrite', 'rewrite', 'rewrite', 'rewrite', 'split', 'apply', 'rewrite']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_seq_ext_loc,"['case', 'move', 'case', 'split', 'move', 'case', 'exists', 'rewrite', 'intuition', 'case', 'exists', 'rewrite', 'intuition', 'move', 'case', 'exists', 'rewrite', 'intuition', 'move', 'case', 'exists', 'rewrite', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_seq_ext,"['move', 'apply', 'exists', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_seq_ext_loc,"['case', 'apply', 'apply', 'exists', 'rewrite', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_seq_ext,"['move', 'apply', 'exists', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_LimSup_seq,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_LimInf_seq,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_seq_unique,"['move', 'rewrite', 'case', 'apply', 'apply', 'rewrite', 'apply']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_seq_unique,"['move', 'rewrite', 'case', 'apply', 'apply', 'rewrite', 'apply']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimSup_InfSup_seq,"['apply', 'apply', 'rewrite', 'case']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimInf_SupInf_seq,"['apply', 'apply', 'rewrite', 'case']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_LimInf_seq_le,"['case', 'case', 'apply', 'set', 'replace', 'replace', 'field', 'apply', 'case', 'case', 'apply', 'apply', 'intuition', 'apply', 'intuition', 'case', 'case', 'absurd', 'apply', 'intuition', 'apply', 'intuition', 'case', 'case', 'absurd', 'apply', 'intuition', 'apply', 'intuition', 'case', 'case', 'absurd', 'apply', 'intuition', 'apply', 'intuition']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimSup_LimInf_seq_le,"['rewrite', 'case', 'rewrite', 'case', 'apply']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_seq_const,"['intros', 'split', 'intros', 'exists', 'split', 'apply', 'apply', 'ring_simplify', 'apply', 'exists', 'apply', 'ring_simplify', 'apply']",0,0,1,0,0,6
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimSup_seq_const,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_seq_const,"['intros', 'split', 'intros', 'exists', 'split', 'apply', 'apply', 'ring_simplify', 'apply', 'exists', 'apply', 'ring_simplify', 'apply']",0,0,1,0,0,6
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimInf_seq_const,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimSup_seq_opp,"['rewrite', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimInf_seq_opp,"['rewrite', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,LimInf_le,"['intros', 'apply', 'rewrite', 'apply', 'move', 'apply', 'apply']",1,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_seq_scal_pos,"['case', 'move', 'suff', 'case', 'split', 'move', 'case', 'exists', 'split', 'by', 'rewrite', 'apply', 'by', 'apply', 'right', 'field', 'apply', 'case', 'exists', 'rewrite', 'apply', 'by', 'apply', 'right', 'field', 'apply', 'apply', '[ by case eps | by [] ].', 'case', 'case', 'move', 'case', 'exists', 'split', 'by', 'rewrite', 'apply', 'by', 'by', 'case', 'case', 'move', 'case', 'exists', 'rewrite', 'apply', 'by', 'apply']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_seq_scal_pos,"['move', 'apply', 'apply', 'replace', 'apply', 'move', 'ring', 'apply', 'case', 'apply', 'ring', 'case', 'case', 'case', 'case']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_seq_ind_1,"['case', 'split', 'move', 'case', 'split', 'move', 'case', 'exists', 'case', 'apply', 'split', 'apply', 'apply', 'case', 'exists', 'apply', 'intuition', 'move', 'case', 'split', 'move', 'case', 'exists', 'intuition', 'case', 'exists', 'case', 'apply', 'apply', 'intuition', 'move', 'case', 'exists', 'case', 'apply', 'split', 'apply', 'apply', 'move', 'case', 'exists', 'intuition', 'move', 'case', 'exists', 'apply', 'intuition', 'move', 'case', 'exists', 'case', 'apply', 'apply', 'intuition']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_seq_ind_1,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_seq_ind_k,"['elim', 'split', 'apply', 'rewrite', 'rewrite', 'rewrite', 'split', 'apply', 'rewrite']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimInf_seq_ind_k,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_spec,"['destruct', 'split', 'intros', 'destruct', 'exists', 'apply', 'now', 'intros', 'specialize', 'apply', 'now', 'intros', 'destruct', 'exists', 'apply', 'now', 'intros', 'specialize', 'apply', 'now', 'intros', 'destruct', 'exists', 'apply', 'now', 'intros', 'specialize', 'apply', 'now']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_Reals,"['split', 'move', 'apply', 'now', 'unfold', 'change', 'apply', 'case', 'case', 'exists', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_LimSup_seq,"['move', 'case', 'move', 'case', 'split', 'move', 'exists', 'split', 'apply', 'apply', 'exists', 'apply', 'move', 'case', 'exists', 'split', 'apply', 'apply', 'by']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_LimInf_seq,"['move', 'case', 'move', 'case', 'split', 'move', 'exists', 'split', 'apply', 'apply', 'exists', 'apply', 'by', 'move', 'case', 'exists', 'split', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_LimSup_LimInf_lim_seq,"['case', 'apply', 'move', 'case', 'case', 'exists', 'apply', 'split', 'apply', 'intuition', 'apply', 'intuition', 'exact', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_LimSup_LimInf_seq,"['split', 'case', 'transitivity', 'apply', 'apply', 'apply', 'apply', 'exists', 'apply', 'rewrite', 'case', 'rewrite', 'case']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_ext_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_ext_loc,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_ext_loc,"['intros', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'by', 'rewrite', 'case', 'apply', 'apply', 'by', 'rewrite', 'case']",0,0,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_ext,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_ext,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_ext,"['move', 'apply', 'exists']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_unique,"['move', 'rewrite', 'replace', 'cond_pos', 'apply', 'field', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_correct,"['intros', 'cut', 'intros', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_correct',"['intros', 'cut', 'intros', 'rewrite', 'apply', 'replace', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_finite_lim_seq_correct,"['split', 'case', 'split', 'exists', 'rewrite', 'case', 'case', 'exists', 'rewrite', 'rewrite']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_dec,"['case', 'left', 'apply', 'right', 'contradict', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_finite_lim_seq_dec,"['case', 'apply', 'case', 'left', 'exists', 'right', 'rewrite', 'rewrite', 'case', 'right', 'rewrite', 'rewrite', 'case', 'right', 'rewrite', 'contradict', 'apply']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_cauchy_corr,"['split', 'apply', 'apply', 'move', 'case', 'exists', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'exists', 'apply', 'intros', 'rewrite', 'case', 'case', 'case', 'case', 'exists', 'apply', 'split', 'case', 'replace', 'apply', 'apply', 'apply', 'apply', 'intuition', 'apply', 'apply', 'intuition', 'apply', 'field_simplify', 'rewrite', 'apply', 'move', 'case', 'contradict', 'apply', 'apply', 'move', 'case', 'move', 'contradict', 'apply']",1,0,3,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_INR,"['apply', 'move', 'suff', 'exists', 'apply', 'rewrite', 'case', 'apply', 'apply', 'apply']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_INR,"['exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_INR,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_const,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_const,"['exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_const,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,eventually_subseq_loc,"['intros', 'exists', 'intros', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'assert', 'induction', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'specialize', 'replace', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'exact', 'rewrite', 'now']",1,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,eventually_subseq,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_subseq,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_subseq,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_subseq,"['move', 'apply', 'apply', 'exact', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_incr_1,"['split', 'intros', 'destruct', 'exists', 'intros', 'apply', 'now', 'exists', 'intros', 'destruct', 'try', 'apply', 'now']",1,0,1,0,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_incr_1,"['split', 'move', 'exists', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_incr_1,"['rewrite', 'replace', 'replace', 'by', 'rewrite', 'case', 'case', 'case', 'case', 'apply', 'apply', 'set', 'apply', 'case', 'case', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'case', 'case', 'case', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'replace', 'apply', 'have', 'case', 'case', 'case', 'apply', 'apply', 'apply', 'have', 'case', 'case', 'apply', 'apply', 'have', 'case', 'case', 'apply', 'apply', 'by', 'have', 'case', 'case', 'apply', 'apply', 'have', 'case', 'case', 'case', 'apply', 'apply', 'have', 'case', 'case', 'case', 'apply', 'apply', 'by', 'rewrite', 'case', 'case', 'case', 'case', 'apply', 'apply', 'set', 'apply', 'case', 'case', 'case', 'apply', 'replace', 'replace', 'apply', 'apply', 'apply', 'case', 'case', 'replace', 'replace', 'apply', 'apply', 'apply', 'have', 'case', 'case', 'apply', 'have', 'case', 'case', 'case', 'apply', 'apply', 'have', 'case', 'case', 'case', 'apply', 'apply', 'by', 'have', 'case', 'case', 'case', 'apply', 'apply', 'have', 'case', 'case', 'apply', 'have', 'case', 'case', 'apply', 'by']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_incr_n,"['split', 'elim', 'move', 'apply', 'rewrite', 'apply', 'move', 'apply', 'rewrite', 'elim', 'move', 'apply', 'rewrite', 'apply', 'move', 'apply', 'rewrite']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_incr_n,"['split', 'move', 'exists', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_incr_n,"['elim', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,filterlim_le,"['intros', 'apply', 'intros', 'apply', 'destruct', 'destruct', 'try', 'assert', 'apply', 'now', 'apply', 'assert', 'apply', 'replace', 'apply', 'rewrite', 'assert', 'apply', 'replace', 'apply', 'rewrite', 'specialize', 'specialize', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'now', 'assert', 'apply', 'apply', 'rewrite', 'apply', 'assert', 'now', 'specialize', 'specialize', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'now', 'assert', 'now', 'assert', 'apply', 'apply', 'rewrite', 'apply', 'specialize', 'specialize', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'now', 'assert', 'now', 'assert', 'now', 'specialize', 'specialize', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'now']",2,0,4,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_le_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_le_loc,"['intros', 'move', 'move', 'unfold', 'case', 'case', 'case', 'case', 'intros', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_le,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,filterlim_ge_p_infty,"['intros', 'intros', 'assert', 'now', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'now']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,filterlim_le_m_infty,"['intros', 'intros', 'pose', 'assert', 'now', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'now']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,filterlim_le_le,"['intros', 'destruct', 'intros', 'assert', 'now', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'apply', 'split', 'apply', 'now', 'apply', 'now', 'apply', 'apply', 'now', 'apply', 'apply', 'now']",2,0,2,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_le_le_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_le_le,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_le_p_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_le_m_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_decr_compare,"['move', 'apply', 'apply', 'case', 'move', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'elim', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_incr_compare,"['move', 'apply', 'apply', 'case', 'move', 'apply', 'apply', 'apply', 'elim', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_decr,"['move', 'exists', 'apply', 'rewrite', 'case', 'case', 'move', 'case', 'exists', 'apply', 'split', 'apply', 'apply', 'elim', 'rewrite', 'apply', 'apply', 'case', 'apply', 'intuition', 'apply', 'move', 'exists', 'apply', 'move', 'case', 'exists', 'apply', 'elim', 'apply', 'apply', 'apply']",0,0,2,1,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_incr,"['move', 'exists', 'apply', 'rewrite', 'case', 'case', 'move', 'case', 'exists', 'apply', 'split', 'apply', 'elim', 'apply', 'apply', 'apply', 'apply', 'move', 'case', 'exists', 'apply', 'elim', 'apply', 'apply', 'apply', 'move', 'exists', 'apply']",0,0,2,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_finite_lim_seq_decr,"['intros', 'apply', 'have', 'exists', 'apply', 'rewrite', 'case', 'case', 'move', 'case', 'exists', 'apply', 'split', 'apply', 'apply', 'elim', 'rewrite', 'apply', 'apply', 'case', 'apply', 'intuition', 'apply', 'move', 'apply', 'case', 'apply', 'move', 'split', 'apply', 'case', 'by', 'apply', 'case', 'move', 'contradict', 'apply', 'elim', 'apply', 'apply', 'apply', 'case', 'move', 'contradict', 'apply']",1,0,3,1,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_finite_lim_seq_incr,"['intros', 'case', 'move', 'apply', 'move', 'apply', 'move', 'move', 'exists', 'apply', 'apply', 'intros', 'case', 'exists', 'replace', 'rewrite', 'apply']",1,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,filterlim_Rbar_opp,"['intros', 'exists', 'intros', 'apply', 'rewrite', 'rewrite', 'exists', 'intros', 'apply', 'apply', 'rewrite', 'exists', 'intros', 'apply', 'apply', 'rewrite']",1,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_opp,"['split', 'move', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_opp,"['split', 'case', 'exists', 'apply', 'apply', 'move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_opp,"['rewrite', 'rewrite', 'case', 'case', 'apply', 'field']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_plus,"['intros', 'eapply', 'try', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_plus,"['intros', 'exists', 'apply', 'try', 'rewrite', 'rewrite', 'apply']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_plus,"['intros', 'apply', 'eapply', 'try', 'try', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_minus,"['intros', 'eapply', 'try', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_minus',"['intros', 'eapply', 'try', 'by']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_minus,"['intros', 'exists', 'eapply', 'try', 'rewrite', 'rewrite', 'apply']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_minus,"['intros', 'apply', 'eapply', 'try', 'try', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_inv,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_inv,"['intros', 'apply', 'exists', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_inv,"['move', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_mult,"['intros', 'eapply', 'try', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_mult',"['intros', 'eapply', 'try', 'by']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_mult,"['intros', 'exists', 'eapply', 'try', 'rewrite', 'rewrite', 'apply']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_mult,"['move', 'apply', 'eapply', 'try', 'try', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,filterlim_Rbar_mult_r,"['intros', 'apply', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_scal_l,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_scal_l,"['move', 'exists', 'eapply', 'try']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_scal_l,"['case', 'rewrite', 'rewrite', 'case', 'rewrite', 'case', 'case', 'case', 'case', 'move', 'rewrite', 'wlog', 'case', 'apply', 'case', 'rewrite', 'rewrite', 'rewrite', 'apply', 'contradict', 'rewrite', 'ring', 'apply', 'rewrite', 'move', 'ring', 'rewrite', 'rewrite', 'case', 'rewrite', 'case', 'simpl', 'apply', 'apply', 'rewrite', 'rewrite', 'case', 'case', 'case', 'case', 'apply', 'field']",0,2,2,4,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_scal_r,"['move', 'apply', 'move', 'apply', 'rewrite', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_scal_r,"['move', 'apply', 'try', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_scal_r,"['rewrite', 'apply', 'intuition']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_div,"['intros', 'eapply', 'try', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_div',"['intros', 'eapply', 'try', 'now', 'case', 'by']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_div,"['intros', 'apply', 'apply', 'exists', 'eapply', 'try', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_div,"['move', 'apply', 'eapply', 'try', 'try', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_adj,"['move', 'suff', 'suff', 'split', 'try', 'suff', 'split', 'try', 'apply', 'rewrite', 'try', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'move', 'apply', 'elim', 'apply', 'apply', 'apply', 'move', 'apply', 'elim', 'apply', 'apply', 'move', 'apply', 'move', 'apply', 'case', 'move', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'elim', 'rewrite', 'apply', 'rewrite', 'apply', 'elim', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,4,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_continuous,"['move', 'apply', 'apply', 'exact']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,filterlim_Rabs,"['case', 'apply', 'intros', 'exists', 'apply', 'apply', 'apply', 'intros', 'exists', 'apply', 'apply', 'rewrite']",1,0,3,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_abs,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_abs,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_abs,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_abs_0,"['split', 'rewrite', 'apply', 'apply', 'apply', 'move', 'case', 'exists', 'move', 'rewrite']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_geom,"['intros', 'apply', 'move', 'case', 'exists', 'rewrite', 'apply']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_geom,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_geom,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_geom_p,"['intros', 'apply', 'move', 'case', 'apply', 'exists', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_geom_p,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,Lim_seq_geom_p,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,ex_lim_seq_geom_m,"['intros', 'apply', 'destruct', 'case', 'case', 'move', 'set', 'case', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'move', 'apply', 'case', 'rewrite', 'move', 'rewrite', 'case', 'have', 'apply', 'move', 'rewrite', 'case', 'move', 'apply', 'pattern', 'replace', 'replace', 'apply', 'case', 'have', 'apply', 'move', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'case', 'move', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'apply']",1,0,3,4,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lim_seq.json,is_lim_seq_Rbar_loc_seq,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,domin_antisym,"['intros', 'move', 'apply', 'generalize', 'apply', 'intros', 'generalize', 'lra']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,domin_trans,"['intros', 'apply', 'intros', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",2,0,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_le_2,"['intros', 'apply', 'move', 'apply', 'apply', 'rewrite', 'apply', 'case', 'field_simplify', 'rewrite', 'apply', 'rewrite', 'apply', 'move', 'apply', 'apply', 'rewrite', 'apply', 'case', 'field_simplify', 'rewrite']",1,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_refl,"['intros', 'apply', 'rewrite', 'apply', 'apply', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_carac_0,"['intros', 'exists', 'split', 'intro', 'rewrite', 'apply', 'apply']",0,0,1,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_ext_loc,"['move', 'move', 'apply', 'move', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,is_domin_le,"['intros', 'intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_scal,"['intros', 'apply', 'exists', 'move', 'cut', 'apply', 'now', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_plus,"['intros', 'move', 'apply', 'simpl', 'now']",0,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,domin_mult_r,"['intros', 'move', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'apply']",0,0,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,domin_mult,"['intros', 'move', 'generalize', 'apply', 'rewrite', 'rewrite', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,domin_inv,"['intros', 'have', 'generalize', 'apply', 'case', 'rewrite', 'apply', 'move', 'apply', 'apply', 'by', 'generalize', 'apply', 'rewrite', 'replace', 'split', 'apply', 'replace', 'split', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_mult,"['intros', 'case', 'case', 'apply', 'move', 'rewrite', 'ring', 'repeat', 'apply', 'apply', 'apply']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,equiv_inv,"['intros', 'have', 'generalize', 'apply', 'case', 'rewrite', 'generalize', 'rewrite', 'lra', 'apply', 'move', 'generalize', 'clear', 'apply', 'intros', 'rewrite', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'field_simplify', 'rewrite', 'by', 'apply', 'apply', 'field', 'split']",1,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,domin_comp,"['intros', 'generalize', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Equiv.json,filterlim_equiv,"['intros', 'apply', 'unfold', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'pose', 'assert', 'assert', 'apply', 'apply', 'apply', 'exists', 'simpl', 'intros', 'split', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'generalize', 'apply', 'simpl', 'intros', 'apply', 'rewrite', 'replace', 'apply', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'now', 'field', 'apply', 'apply', 'apply', 'apply', 'pose', 'assert', 'now', 'generalize', 'apply', 'simpl', 'intros', 'apply', 'apply', 'generalize', 'rewrite', 'replace', 'apply', 'rewrite', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'pose', 'assert', 'now', 'generalize', 'apply', 'simpl', 'intros', 'apply', 'apply', 'generalize', 'rewrite', 'replace', 'intros', 'apply', 'rewrite', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply']",2,2,4,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,is_RInt_gen_at_point,"['split', 'intros', 'apply', 'specialize', 'destruct', 'destruct', 'now', 'intros', 'exists', 'try', 'intros', 'exists', 'apply', 'exact']",1,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,ex_RInt_gen_ext,"['move', 'case', 'exists', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,is_RInt_gen_point,"['apply', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,is_RInt_gen_swap,"['intros', 'specialize', 'destruct', 'exact', 'apply', 'specialize', 'destruct', 'exists', 'split', 'exact', 'exact']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,is_RInt_gen_Chasles,"['intros', 'specialize', 'intros', 'specialize', 'specialize', 'destruct', 'destruct', 'apply', 'intros', 'specialize', 'specialize', 'destruct', 'destruct', 'exists', 'split', 'apply', 'now']",1,0,1,0,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,is_RInt_gen_opp,"['intros', 'move', 'specialize', 'unfold', 'apply', 'move', 'exists', 'apply', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,is_RInt_gen_minus,"['intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,is_RInt_gen_unique,"['apply', 'apply', 'intros', 'rewrite', 'now']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,RInt_gen_correct,"['intros', 'erewrite', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,RInt_gen_ext,"['move', 'rewrite', 'symmetry', 'apply', 'apply', 'first']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,ex_RInt_gen_at_point,"['split', 'case', 'rewrite', 'exists', 'rewrite', 'exists']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_gen.json,RInt_gen_at_point,"['move', 'apply', 'apply', 'exact']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,RtoC_inj,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Ceq_dec,"['destruct', 'destruct', 'case', 'case', 'left', 'right', 'contradict', 'now', 'simpl', 'right', 'contradict', 'now', 'simpl']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_0,"['unfold', 'simpl', 'rewrite', 'apply']",0,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_1,"['unfold', 'simpl', 'rewrite', 'apply']",0,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_opp,"['unfold', 'simpl', 'intros', 'apply', 'ring']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_triangle,"['intros', 'rewrite', 'apply', 'apply', 'unfold', 'simpl', 'ring_simplify', 'rewrite', 'rewrite', 'ring_simplify', 'replace', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'ring_simplify', 'replace', 'apply', 'repeat', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,1,3,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_mult,"['intros', 'unfold', 'rewrite', 'apply', 'simpl', 'ring', 'apply', 'apply', 'apply', 'apply']",1,1,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Rmax_Cmod,"['case', 'rewrite', 'apply', 'apply', 'rewrite', 'ring_simplify', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_2Rmax,"['case', 'apply', 'rewrite', 'rewrite', 'try', 'try', 'apply', 'simpl', '[ rewrite Rplus_comm | ]', 'rewrite', 'apply', 'ring_simplify', 'apply', 'rewrite']",0,1,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,RtoC_plus,"['unfold', 'simpl', 'rewrite']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,RtoC_opp,"['unfold', 'simpl', 'rewrite']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,RtoC_minus,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,RtoC_mult,"['unfold', 'simpl', 'apply', 'simpl', 'ring']",0,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,RtoC_inv,"['intros', 'apply', 'simpl', 'field']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,RtoC_div,"['intros', 'apply', 'simpl', 'field']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cplus_comm,"['apply', 'simpl', 'apply']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cplus_assoc,"['apply', 'simpl', 'apply']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cplus_0_r,"['apply', 'simpl', 'apply']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cplus_0_l,"['apply', 'simpl', 'apply']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cplus_opp_r,"['apply', 'simpl', 'apply']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Copp_plus_distr,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Copp_minus_distr,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_comm,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_assoc,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_0_r,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_0_l,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_1_r,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_1_l,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cinv_r,"['move', 'apply', 'simpl', 'field', 'contradict', 'apply', 'apply', 'simpl', 'apply', 'contradict', 'apply', 'apply', 'simpl', 'apply']",0,2,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cinv_l,"['intros', 'rewrite', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_plus_distr_l,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_plus_distr_r,"['apply', 'simpl', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Copp_0,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_m1,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_ge_0,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_gt_0,"['intros', 'split', 'destruct', 'apply', 'contradict', 'apply', 'rewrite']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_norm,"['intros', 'unfold', 'simpl', 'apply', 'rewrite', 'apply']",1,2,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_R,"['intros', 'unfold', 'simpl', 'rewrite', 'apply']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_inv,"['intros', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'exact', 'contradict', 'now', 'contradict', 'now']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmod_div,"['move', 'rewrite', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cmult_neq_0,"['intros', 'assert', 'rewrite', 'rewrite', 'apply', 'destruct', 'now', 'now']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,Cminus_eq_contra,"['intros', 'contradict', 'apply', 'apply', 'now', 'now']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,C_field_theory,"['constructor', 'constructor', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'easy', 'exact', 'intros', 'injection', 'exact', 'easy', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,C_NormedModule_mixin_compat1,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,C_NormedModule_mixin_compat2,"['intros', 'rewrite', 'replace', 'apply', 'rewrite', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,scal_R_Cmult,"['intros', 'apply', 'rewrite', 'ring']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,C_complete_ax1,"['intros', 'apply', 'simpl', 'revert', 'apply', 'split', 'intros', 'destruct', 'exists', 'split', 'apply', 'intros', 'apply', 'intros', 'eapply', 'intros', 'apply', 'intros', 'destruct', 'exists', 'move', 'apply', 'intros', 'apply', 'apply', 'split', 'intros', 'destruct', 'exists', 'split', 'apply', 'intros', 'apply', 'intros', 'eapply', 'intros', 'apply', 'intros', 'destruct', 'exists', 'move', 'apply', 'intros', 'apply']",2,1,3,0,0,6
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,C_complete_ax2,"['intros', 'split', 'apply', 'intros', 'apply', 'apply', 'apply', 'apply']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,is_C_lim_unique,"['case', 'apply', 'simpl', 'apply', 'apply', 'destruct', 'clear', 'exists', 'apply', 'exists', 'intros', 'apply', 'split', 'simpl', 'apply', 'apply', 'contradict', 'clear', 'destruct', 'now', 'apply', 'apply', 'destruct', 'clear', 'exists', 'apply', 'apply', 'exists', 'intros', 'apply', 'split', 'simpl', 'apply', 'apply', 'contradict', 'clear', 'destruct', 'now']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Complex.json,C_derive_correct,"['case', 'replace', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_point,"['intros', 'apply', 'move', 'exists', 'rewrite', 'rewrite', 'apply', 'apply', 'move', 'rewrite', 'case']",1,0,1,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_point,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_swap,"['unfold', 'intros', 'rewrite', 'apply', 'intros', 'rewrite', 'apply', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'apply', 'apply']",3,0,3,5,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_swap,"['intros', 'case', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_ext,"['intros', 'exists', 'revert', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_const,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_comp_opp,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_comp_lin,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_Chasles_0,"['intros', 'case', 'exists', 'rewrite', 'case', 'case', 'exists', 'rewrite', 'case', 'apply', 'generalize', 'generalize', 'case', 'case', 'move', 'rewrite', 'case', 'move', 'rewrite', 'case', 'have', 'apply', 'apply', 'repeat', 'apply', 'apply', 'apply', 'apply', 'specialize', 'apply', 'specialize', 'apply', 'have', 'repeat', 'apply', 'apply', 'apply', 'exists', 'move', 'rewrite', 'case', 'rewrite', 'rewrite', 'rewrite', 'apply', 'set', 'replace', 'exact', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'generalize', 'rewrite', 'replace', 'rewrite', 'simpl', 'apply', 'intros', 'case', 'apply', 'apply', 'apply', 'split', 'apply', 'apply', 'apply', 'ring_simplify', 'apply', 'apply', 'ring_simplify', 'apply', 'specialize', 'apply', 'apply', 'apply', 'apply', 'split', 'apply', 'apply', 'apply', 'ring_simplify', 'apply', 'apply', 'ring_simplify', 'apply', 'specialize', 'apply', 'split', 'apply', 'simpl', 'field', 'apply', 'apply', 'apply', 'specialize', 'apply', 'specialize', 'apply', 'apply', 'specialize', 'specialize', 'apply', 'replace', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'split', 'apply', 'apply', 'split', 'apply', 'rewrite', 'apply', 'by', 'split', 'rewrite', 'apply', 'rewrite', 'apply', 'move', 'apply', 'apply', 'rewrite', 'split', 'apply', 'apply', 'split', 'apply', 'rewrite', 'apply', 'by', 'split', 'rewrite', 'move', 'apply', 'rewrite', 'apply']",1,3,4,4,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_Chasles_0,"['case', 'case', 'case', 'case', 'case', 'exists', 'apply', 'try', 'split']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_Chasles_2,"['intros', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'generalize', 'clear', 'apply', 'replace', 'move', 'apply', 'now', 'rewrite', 'rewrite']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_Chasles,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_scal,"['intros', 'apply', 'intros', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply']",2,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_scal,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_opp,"['intros', 'apply', 'intros', 'rewrite', 'rewrite', 'apply', 'apply', 'rewrite', 'apply']",2,0,3,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_opp,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_plus,"['intros', 'apply', 'intros', 'rewrite', 'apply', 'apply', 'apply']",2,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_plus,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_minus,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_inside,"['intros', 'wlog', 'case', 'intros', 'now', 'apply', 'apply', 'try', 'now', 'apply', 'split', 'exact', 'assert', 'apply', 'apply', 'now', 'exact']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_SF,"['apply', 'rewrite', 'apply', 'rewrite', 'apply', 'move', 'unfold', 'clear', 'simpl', 'eapply', 'rewrite', 'case', 'unfold', 'simpl', 'case', 'contradict', 'apply', 'move', 'apply', 'case', 'case', 'eapply', 'clear', 'revert', 'simpl', 'rewrite', 'case', 'rewrite', 'case', 'contradict', 'apply', 'eapply', 'apply', 'move', 'apply', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'contradict', 'apply', 'apply']",0,2,3,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,norm_RInt_le_const,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,norm_RInt_le_const_abs,"['intros', 'unfold', 'case', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'now', 'intros', 'apply', 'now', 'apply', 'apply', 'apply', 'intros', 'apply', 'now']",3,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_fct_extend_fst,"['intros', 'destruct', 'exists', 'apply', 'apply', 'exists', 'replace', 'apply', 'clear', 'apply', 'rewrite', 'rewrite']",0,0,2,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_fct_extend_snd,"['intros', 'destruct', 'exists', 'apply', 'apply', 'exists', 'replace', 'apply', 'clear', 'apply', 'rewrite', 'rewrite']",0,0,2,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_fct_extend_pair,"['move', 'apply', 'generalize', 'intros', 'generalize', 'intros', 'simpl', 'exists', 'rewrite', 'simpl', 'split', 'apply', 'apply', 'apply', 'apply']",3,1,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_fct_extend_fst,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_fct_extend_snd,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_fct_extend_pair,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_fct_extend_pair,"['intros', 'apply', 'simpl', 'apply', 'apply', 'apply', 'apply']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_unique,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_correct,"['intros', 'erewrite', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_point,"['apply', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_const,"['apply', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_Chasles,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_plus,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_minus,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,is_RInt_ge_0,"['intros', 'set', 'apply', 'apply', 'unfold', 'apply', 'intros', 'replace', 'apply', 'apply', 'now', 'apply', 'apply', 'intros', 'unfold', 'case', 'apply', 'case', 'apply', 'apply', 'now', 'apply', 'rewrite', 'rewrite', 'rewrite', 'intros', 'unfold', 'case', 'now', 'case', 'now', 'easy']",2,0,5,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_ge_0,"['intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_le,"['intros', 'apply', 'exact', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_lt,"['intros', 'apply', 'assert', 'apply', 'rewrite', 'rewrite', 'intros', 'now', 'apply', 'apply', 'assert', 'apply', 'rewrite', 'rewrite', 'intros', 'now', 'apply', 'apply', 'rewrite', 'apply', 'now', 'apply', 'apply', 'intros', 'apply', 'apply', 'apply']",2,0,4,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_Reals_1,"['move', 'exists', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,RInt_Reals,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt.json,ex_RInt_norm,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_dec,"['case', 'apply', 'case', 'left', 'exists', 'right', 'case', 'absurd', 'rewrite', 'apply', 'right', 'case', 'absurd', 'rewrite', 'apply', 'right', 'case', 'contradict', 'exists']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_unique,"['move', 'replace', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_correct,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_Reals,"['split', 'apply', 'move', 'set', 'case', 'exists', 'rewrite', 'apply', 'apply', 'move', 'case', 'exists', 'rewrite', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_Reals_0,"['move', 'exists', 'case', 'replace', 'move', 'set', 'apply', 'case', 'exists', 'rewrite', 'apply', 'apply', 'rewrite', 'replace', 'apply', 'apply']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_Reals_1,"['case', 'exists', 'apply', 'move', 'case', 'exists', 'rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Cauchy_ex_series,"['intros', 'set', 'assert', 'apply', 'apply', 'apply', 'destruct', 'exists', 'intros', 'elim', 'destruct', 'rewrite', 'replace', 'apply', 'apply', 'apply', 'now', 'now', 'rewrite', 'field', 'apply', 'rewrite', 'rewrite', 'apply', 'now']",0,0,3,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_ext,"['move', 'apply', 'intros', 'now']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_ext,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_ext,"['move', 'apply', 'apply', 'intros', 'now']",1,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_incr_1,"['intros', 'apply', 'induction', 'simpl', 'rewrite', 'rewrite', 'now', 'rewrite', 'simpl', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'intros', 'omega', 'pattern', 'replace', 'apply', 'apply', 'apply', 'rewrite', 'apply']",2,3,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_incr_n,"['case', 'apply', 'clear', 'elim', 'rewrite', 'apply', 'apply', 'move', 'apply', 'ring', 'apply', 'rewrite', 'apply', 'replace', 'assumption', 'rewrite', 'apply', 'simpl', 'apply']",0,2,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_decr_1,"['intros', 'apply', 'exists', 'intros', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'omega', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'intros', 'exists', 'intros', 'apply', 'omega', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",2,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_decr_n,"['case', 'apply', 'clear', 'elim', 'rewrite', 'apply', 'apply', 'apply', 'replace', 'apply', 'rewrite', 'rewrite', 'apply', 'now', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_incr_n,"['case', 'split', 'apply', 'intuition', 'split', 'move', 'exists', 'apply', 'apply', 'now', 'exists', 'apply', 'apply', 'now']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_incr_1,"['move', 'apply', 'rewrite', 'apply', 'rewrite', 'ring_simplify', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_incr_n,"['move', 'apply', 'rewrite', 'apply', 'by', 'rewrite', 'ring_simplify', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_incr_1_aux,"['move', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_incr_n_aux,"['elim', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'ring', 'intuition', 'move', 'intuition']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_lim_0,"['intros', 'apply', 'intros', 'apply', 'case', 'exists', 'case', 'apply', 'apply', 'replace', 'apply', 'intuition', 'rewrite']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_le,"['move', 'have', 'apply', 'apply', 'move', 'apply', 'elim', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'intros', 'rewrite', 'apply', 'apply']",1,0,4,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_opp,"['move', 'apply', 'elim', 'rewrite', 'easy', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_opp,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_opp,"['rewrite', 'rewrite', 'rewrite', 'elim', 'rewrite', 'ring', 'rewrite', 'ring']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_plus,"['move', 'apply', 'elim', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'try', 'apply', 'now']",0,1,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_plus,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_minus,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_minus,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_plus,"['intros', 'replace', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_minus,"['intros', 'rewrite', 'rewrite', 'apply', 'now']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_scal,"['move', 'apply', 'elim', 'simpl', 'rewrite', 'rewrite', 'apply', 'now']",0,1,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_scal_l,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_scal,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_scal_l,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_scal_l,"['rewrite', 'have', 'case', 'case', 'rewrite', 'case', 'case', 'case', 'case', 'case', 'rewrite', 'case', 'case', 'case', 'case', 'rewrite', 'apply', 'elim', 'rewrite', 'ring', 'rewrite', 'ring']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_scal_r,"['move', 'rewrite', 'apply', 'move', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_scal_r,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_scal_r,"['rewrite', 'apply', 'move', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_mult_pos,"['move', 'have', 'case', 'simpl', 'apply', 'rewrite', 'apply', 'ring_simplify', 'apply', 'apply', 'apply', 'have', 'case', 'apply', 'rewrite', 'rewrite', 'apply', 'replace', 'replace', 'rewrite', 'rewrite', 'replace', 'elim', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'replace', 'ring', 'rewrite', '[ | by apply lt_O_Sn].', 'rewrite', '[ | by apply le_O_n].', 'rewrite', '[ | by apply le_O_n].', 'apply', 'apply', 'ring_simplify', 'apply', 'apply', 'repeat', 'apply', 'rewrite', 'elim', 'rewrite', 'rewrite', 'try', 'apply', 'rewrite', 'apply', 'apply', 'intuition', 'rewrite', 'rewrite', 'try', 'replace', 'rewrite', 'replace', 'rewrite', 'apply', 'rewrite', 'try', 'rewrite', 'apply', 'rewrite', 'elim', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'replace', 'replace', 'rewrite', 'rewrite', 'try', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'elim', 'rewrite', 'apply', 'apply', 'intuition', 'rewrite', 'apply', 'apply', 'ring', 'rewrite', 'apply', 'rewrite', 'elim', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'try', 'ring', 'replace', 'rewrite', 'simpl', 'apply', 'now', 'elim', 'rewrite', 'apply', 'intuition', 'have', 'move', 'case', 'case', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'try', 'rewrite', 'apply', 'apply', 'change', 'apply', 'intros', 'rewrite', 'split', 'replace', 'suff', 'apply', 'apply', 'move', 'case', 'exists', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'move', 'replace', 'replace', 'repeat', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,4,4,4,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_mult,"['move', 'set', 'set', 'set', 'set', 'have', 'move', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'assert', 'apply', 'apply', 'exists', 'have', 'move', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'exists', 'have', 'move', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'assert', 'apply', 'apply', 'exists', 'have', 'move', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'exists', 'apply', 'move', 'rewrite', 'apply', 'rewrite', 'field', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', 'replace', 'ring', 'rewrite', 'apply', 'rewrite', 'field', 'rewrite', 'apply', 'rewrite', 'field']",0,0,4,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_DAlembert,"['move', 'have', 'apply', 'case', 'move', 'apply', 'apply', 'move', 'exists', 'move', 'apply', 'case', 'field_simplify', 'rewrite', 'apply', 'case', 'apply', 'apply', 'move', 'rewrite', 'rewrite', 'apply', 'apply', 'rewrite', 'elim', 'rewrite', 'rewrite', 'apply', 'apply', 'replace', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'field', 'split', 'apply', 'apply', 'apply', 'set', 'exists', 'apply', 'move', 'rewrite', 'rewrite', 'apply', 'unfold', 'lra', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'rewrite', 'unfold', 'lra', 'apply', 'apply', 'easy']",0,2,4,4,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,not_ex_series_DAlembert,"['move', 'set', 'have', 'unfold', 'lra', 'have', 'apply', 'case', 'apply', 'apply', 'apply', 'exists', 'move', 'apply', 'replace', 'field', 'apply', 'case', 'apply', 'have', 'elim', 'rewrite', 'apply', 'replace', 'apply', 'field', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'move', 'have', 'rewrite', 'apply', 'apply', 'apply', 'move', 'field', 'apply', 'rewrite', 'apply', 'apply', 'move', 'split', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'by']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,is_series_geom,"['move', 'apply', 'move', 'rewrite', 'rewrite', 'reflexivity', 'apply', 'apply', 'apply', 'change', 'replace', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'simpl', 'ring']",0,1,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,ex_series_geom,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Series.json,Series_geom,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,lub_cara,"['intros', 'intro', 'assert', 'intros', 'apply', 'now', 'clear', 'unfold', 'destruct', 'assert', 'intro', 'apply', 'assert', 'apply', 'assert', 'apply', 'assumption', 'unfold', 'destruct', 'assert', 'now', 'apply', 'contradiction', 'rewrite', 'apply', 'contradiction', 'unfold', 'assert', 'clear', 'clear', 'intro', 'assert', 'apply', 'clear', 'intro', 'assert', 'apply', 'destruct', 'destruct', 'assert', 'now', 'contradiction', 'right', 'rewrite', 'trivial', 'now', 'contradiction']",1,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,cousin,"['intros', 'assert', 'intros', 'apply', 'now', 'clear', 'set', 'assert', 'apply', 'exists', 'intros', 'apply', 'exists', 'split', 'split', 'apply', 'apply', 'exists', 'simpl', 'split', 'intros', 'apply', 'destruct', 'split', 'intros', 'apply', 'destruct', 'split', 'easy', 'destruct', 'assert', 'now', 'apply', 'intro', 'destruct', 'clear', 'destruct', 'assert', 'assumption', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'set', 'assert', 'split', 'unfold', 'unfold', 'intros', 'rewrite', 'apply', 'case', 'rewrite', 'replace', 'replace', 'replace', 'split', 'rewrite', 'unfold', 'apply', 'apply', 'apply', 'rewrite', 'simpl', 'replace', 'rewrite', 'rewrite', 'easy', 'rewrite', 'rewrite', 'simpl', 'easy', 'rewrite', 'simpl', 'replace', 'rewrite', 'rewrite', 'easy', 'rewrite', 'simpl', 'apply', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'case', 'assert', 'rewrite', 'simpl', 'unfold', 'simpl', 'easy', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'easy', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'simpl', 'assert', 'apply', 'now', 'split', 'rewrite', 'case', 'rewrite', 'case', 'now', 'case', 'apply', 'replace', 'apply', 'apply', 'apply', 'rewrite', 'unfold', 'apply', 'apply', 'case', 'assert', 'rewrite', 'simpl', 'easy', 'rewrite', 'apply', 'destruct', 'rewrite', 'rewrite', 'easy', 'rewrite', 'destruct', 'now', 'move', 'apply', 'unfold', 'rewrite', 'unfold', 'apply', 'unfold', 'assert', 'now', 'apply', 'destruct', 'move', 'rewrite', 'apply', 'contradiction', 'move', 'rewrite', 'apply', 'contradiction', 'now', 'move', 'rewrite', 'unfold', 'apply', 'contradiction', 'move', 'rewrite', 'unfold', 'contradiction', 'move', 'rewrite', 'unfold', 'contradiction', 'unfold', 'split', 'unfold', 'simpl', 'apply', 'rewrite', 'rewrite', 'easy', 'apply', 'split', 'apply', 'split', 'unfold', 'rewrite', 'unfold', 'intros', 'apply', 'case', 'assumption', 'intro', 'unfold', 'replace', 'replace', 'replace', 'now', 'rewrite', 'simpl', 'rewrite', 'case', 'easy', 'move', 'rewrite', 'contradiction', 'rewrite', 'rewrite', 'case', 'easy', 'move', 'rewrite', 'apply', 'contradiction', 'rewrite', 'rewrite', 'case', 'easy', 'move', 'rewrite', 'apply', 'contradiction', 'clear', 'intro', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'replace', 'replace', 'replace', 'rewrite', 'rewrite', 'simpl', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'replace', 'assumption', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'easy', 'replace', 'rewrite', 'easy', 'rewrite', 'simpl', 'rewrite', 'easy', 'rewrite', 'rewrite', 'case', 'rewrite', 'replace', 'rewrite', 'case', 'assert', 'apply', 'rewrite', 'unfold', 'apply', 'destruct', 'rewrite', 'rewrite', 'easy', 'rewrite', 'simpl', 'easy', 'move', 'absurd', 'assumption', 'apply', 'replace', 'rewrite', 'easy', 'rewrite', 'rewrite', 'simpl', 'easy', 'destruct', 'split', 'apply', 'replace', 'apply', 'assert', 'apply', 'destruct', 'destruct', 'set', 'assert', 'apply', 'now', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'assert', 'apply', 'assert', 'unfold', 'split', 'split', 'apply', 'apply', 'apply', 'now', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'now', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assumption', 'exists', 'split', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'intros', 'case', 'apply', 'apply', 'intro', 'replace', 'replace', 'replace', 'now', 'rewrite', 'rewrite', 'rewrite', 'move', 'rewrite', 'rewrite', 'move', 'rewrite', 'rewrite', 'move', 'intro', 'rewrite', 'replace', 'replace', 'replace', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'split', 'apply', 'rewrite', 'apply', 'now', 'rewrite', 'rewrite', 'simpl', 'easy', 'rewrite', 'rewrite', 'simpl', 'easy', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'split', 'intro', 'rewrite', 'intro', 'case', 'apply', 'apply', 'intro', 'replace', 'replace', 'unfold', 'case', 'unfold', 'rewrite', 'now', 'intro', 'replace', 'replace', 'now', 'rewrite', 'rewrite', 'rewrite', 'move', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'move', 'rewrite', 'apply', 'move', 'intro', 'rewrite', 'unfold', 'rewrite', 'replace', 'replace', 'replace', 'apply', 'replace', 'now', 'rewrite', 'replace', 'rewrite', 'rewrite', 'easy', 'rewrite', 'simpl', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'apply', 'rewrite', 'apply', 'replace', 'rewrite', 'rewrite', 'easy', 'rewrite', 'rewrite', 'simpl', 'easy', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'case', 'unfold', 'rewrite', 'apply', 'apply', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'move', 'rewrite', 'rewrite', 'rewrite', 'apply', 'move', 'intro', 'rewrite', 'replace', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'replace', 'rewrite', 'rewrite', 'easy', 'rewrite', 'rewrite', 'simpl', 'easy', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'move', 'rewrite', 'apply', 'move', 'intro', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'replace', 'replace', 'replace', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'apply', 'assumption', 'apply', 'field_simplify', 'rewrite', 'apply', 'replace', 'rewrite', 'rewrite', 'easy', 'rewrite', 'rewrite', 'simpl', 'easy', 'rewrite', 'rewrite', 'rewrite', 'replace', 'rewrite', 'destruct', 'rewrite', 'case', 'assert', 'apply', 'rewrite', 'apply', 'destruct', 'rewrite', 'rewrite', 'easy', 'rewrite', 'simpl', 'easy', 'replace', 'rewrite', 'rewrite', 'easy', 'rewrite', 'rewrite', 'simpl', 'easy', 'rewrite', 'rewrite', 'split', 'unfold', 'simpl', 'apply', 'easy', 'apply', 'assert', 'rewrite', 'now', 'apply', 'contradiction', 'apply', 'assert', 'apply', 'intros', 'apply', 'apply', 'contradiction']",4,6,7,8,0,8
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,is_KHInt_point,"['intros', 'unfold', 'apply', 'intro', 'rewrite', 'rewrite', 'easy', 'intros', 'unfold', 'destruct', 'exists', 'cond_pos', 'intros', 'apply', 'apply']",3,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,ex_KHInt_point,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,is_KHInt_const,"['intros', 'intros', 'destruct', 'exists', 'intros', 'apply', 'rewrite', 'destruct', 'destruct', 'rewrite', 'rewrite', 'rewrite', 'replace', 'apply', 'apply']",1,0,2,1,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,ex_KHInt_const,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,KHInt_correct,"['intros', 'unfold', 'apply', 'exists', 'split', 'exact', 'intros', 'apply']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,is_KHInt_unique,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,KHInt_point,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/KHInt.json,KHInt_const,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_iter',"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_cat,"['elim', 'rewrite', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_ext,"['elim', 'by', 'rewrite', 'rewrite', 'left', 'intros', 'apply', 'right']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_comp,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_const,"['elim', 'rewrite', 'case', 'simpl', 'ring']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,In_mem,"['apply', 'case', 'constructor', 'elim', 'rewrite', 'case', 'now', 'apply', 'apply', 'right', 'apply', 'elim', 'simpl', 'case', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'by']",0,0,2,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,In_iota,"['generalize', 'case', 'apply', 'case', 'apply', 'apply', 'change', 'split', 'split', 'case', 'intro', 'omega', 'intro', 'rewrite', 'contradict', 'eapply', 'contradict', 'eapply', 'change', 'split', 'case', 'apply', 'apply', 'case', 'move', 'case', 'rewrite', 'try', 'move', 'case']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_nat_ext_loc,"['intros', 'apply', 'intros', 'apply', 'apply']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_nat_point,"['unfold', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_nat_Chasles,"['intros', 'rewrite', 'pattern', 'replace', 'rewrite', 'apply', 'change', 'omega', 'change', 'omega']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Iter.json,iter_nat_S,"['rewrite', 'apply', 'rewrite', 'elim', 'rewrite']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_dec,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_R,"['split', 'apply', 'intros', 'rewrite', 'apply']",1,0,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_R,"['split', 'apply', 'intros', 'rewrite', 'apply']",1,0,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_eq,"['apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_1,"['apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_1,"['assert', 'now', 'rewrite', 'split', 'apply', 'rewrite']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_unique,"['move', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_correct,"['move', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_Reals,"['split', 'move', 'set', 'apply', 'case', 'exists', 'rewrite', 'rewrite', 'apply', 'intros', 'rewrite', 'apply', 'apply', 'move', 'case', 'exists', 'rewrite', 'rewrite', 'apply', 'intros', 'now']",1,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_ext,"['move', 'apply', 'move', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_ext,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_ext,"['move', 'apply', 'move', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_0,"['apply', 'elim', 'now', 'rewrite', 'rewrite', 'now', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_0,"['exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_0,"['rewrite', 'apply', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_le,"['move', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'split', 'apply', 'apply']",0,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_correct,"['intros', 'apply', 'apply', 'intros', 'apply', 'now']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_0,"['exists', 'apply', 'elim', 'rewrite', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_ge_0,"['rewrite', 'case', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_inside,"['move', 'assert', 'contradict', 'apply', 'rewrite', 'case', 'apply', 'apply', 'contradict', 'move', 'apply', 'apply', 'case']",0,0,3,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_inside,"['move', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_outside,"['case', 'move', 'have', 'contradict', 'apply', 'apply', 'case', 'exists', 'rewrite', 'contradict', 'apply', 'case', 'set', 'exists', 'case', 'apply', 'move', 'rewrite', 'apply', 'apply', 'elim', 'apply', 'apply', 'case', 'apply', 'apply', 'rewrite', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_ext,"['move', 'rewrite', 'case', 'case', 'apply', 'apply', 'apply', 'move', 'apply', 'rewrite', 'apply', 'apply', 'move', 'apply', 'rewrite']",0,0,3,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_DAlembert,"['move', 'case', 'rewrite', 'exists', 'apply', 'elim', 'rewrite', 'rewrite', 'apply', 'apply', 'case', 'rewrite', 'apply', 'replace', 'apply', 'apply', 'apply', 'case', 'case', 'apply', 'apply', 'apply', 'apply', 'case', 'apply', 'move', 'apply', 'apply', 'apply', 'apply']",0,0,2,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_finite_DAlembert,"['move', 'apply', 'rewrite', 'case', 'apply', 'case', 'apply', 'apply', 'apply', 'rewrite', 'rewrite', 'replace', 'apply', 'apply', 'apply', 'apply', 'contradict', 'have', 'move', 'apply', 'apply', 'move', 'move', 'apply', 'move', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'move', 'rewrite', 'case', 'case', 'try', 'suff', 'absurd', 'suff', 'move', 'contradict', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'split', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'exists', 'apply', 'elim', 'rewrite', 'rewrite', 'apply', 'lra', 'case', 'exists', 'apply', 'elim', 'rewrite', 'rewrite', 'apply']",0,0,3,3,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_infinite_DAlembert,"['move', 'rewrite', 'case', 'case', 'have', 'have', 'have', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'exists', 'apply', 'elim', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'move', 'apply', 'by', 'apply', 'rewrite', 'apply', 'apply', 'by', 'by', 'move', 'apply', 'case', 'exists', 'apply', 'elim', 'rewrite', 'rewrite', 'apply']",0,0,3,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_Reals_0,"['move', 'rewrite', 'have', 'exists', 'exists', 'split', 'rewrite', 'apply', 'apply', 'rewrite', 'move', 'apply', 'case', 'exists', 'replace', 'rewrite', 'apply', 'elim', 'rewrite', 'by', 'rewrite', 'move', 'rewrite', 'apply', 'apply', 'apply', 'split', 'apply', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,3,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_Reals_1,"['case', 'have', 'rewrite', 'case', 'have', 'move', 'apply', 'move', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'exists', 'apply', 'intros', 'case', 'exists', 'set', 'replace', 'rewrite', 'apply', 'rewrite', 'elim', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'by', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'have', 'move', 'apply', 'have', 'case', 'apply', 'have', 'lra', 'move', 'lra']",1,0,4,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_Reals_2,"['move', 'have', 'case', 'have', 'generalize', 'lra', 'exists', 'lra', 'have', 'apply', 'exists', 'split', 'apply', 'by', 'by', 'case', 'apply', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_plus,"['move', 'apply', 'elim', 'simpl', 'rewrite', 'now', 'simpl', 'rewrite', 'generalize', 'generalize', 'repeat', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'now']",0,1,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_plus,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_plus,"['intros', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_plus,"['move', 'move', 'apply', 'rewrite', 'rewrite', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_scal,"['move', 'apply', 'elim', 'simpl', 'rewrite', 'rewrite', 'now', 'simpl', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'clear', 'elim', 'rewrite', 'rewrite', 'by', 'now']",0,1,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_scal,"['rewrite', 'apply', 'move', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_scal,"['move', 'apply', 'move', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,0,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_scal,"['rewrite', 'case', 'case', 'apply', 'apply', 'apply', 'assert', 'apply', 'move', 'apply', 'apply', 'rewrite', 'field', 'apply', 'apply', 'apply']",0,0,4,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_scal_r,"['rewrite', 'apply', 'move', 'rewrite', 'ring']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_disk_scal_r,"['move', 'apply', 'move', 'rewrite', 'apply', 'rewrite', 'ring', 'apply', 'apply']",0,0,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_scal_r,"['intros', 'rewrite', 'apply', 'apply', 'by']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_incr_1,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PS_incr_n_simplify,"['case', 'elim', 'rewrite', 'case', 'case', 'apply', 'rewrite', 'rewrite', 'apply', 'elim', 'apply', 'elim', 'apply', 'rewrite', 'case', 'by', 'apply']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_incr_n,"['move', 'elim', 'rewrite', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_incr_n,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_decr_1,"['move', 'apply', 'intros', 'induction', 'unfold', 'simpl', 'rewrite', 'rewrite', 'try', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'now', 'apply', 'apply', 'intros', 'induction', 'simpl', 'rewrite', 'rewrite', 'now', 'rewrite', 'apply', 'rewrite', 'apply', '[idtac|reflexivity].', 'now', 'apply', 'apply', 'apply', 'intros', 'omega', 'apply']",1,3,5,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_decr_1,"['case', 'rewrite', 'apply', 'exists', 'now']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_decr_n,"['move', 'case', 'apply', 'clear', 'simpl', 'rewrite', 'elim', 'rewrite', 'now', 'set', 'rewrite', 'replace', 'assert', 'apply', 'move', 'rewrite', 'apply', 'apply', 'ring', 'rewrite', 'apply', 'unfold', 'repeat', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'now', 'apply', 'try', 'rewrite', 'apply', 'clear', 'rewrite', 'elim', 'rewrite', 'rewrite', 'rewrite', 'rewrite']",0,1,4,3,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_decr_n,"['intros', 'induction', 'unfold', 'now', 'apply', 'intros', 'unfold', 'apply', 'ring', 'apply', 'apply', 'now']",2,0,3,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_incr_1,"['rewrite', 'unfold', 'rewrite', 'apply', 'case', 'rewrite', 'ring', 'elim', 'rewrite', 'ring', 'rewrite', 'ring']",0,0,0,4,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_incr_n,"['elim', 'rewrite', 'rewrite', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_decr_1,"['intros', 'case', 'rewrite', 'ring', 'move', 'rewrite', 'rewrite', 'now']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_decr_1_aux,"['intros', 'rewrite', 'rewrite', 'apply', 'case', 'rewrite']",0,0,0,4,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_decr_n,"['intros', 'case', 'rewrite', 'simpl', 'ring_simplify', 'elim', 'ring', 'rewrite', 'ring', 'assert', 'rewrite', 'now', 'move', 'rewrite', 'rewrite', 'rewrite', 'replace', 'rewrite', 'rewrite', 'try', 'field', 'split', 'try', 'now', 'now', 'intros', 'rewrite', 'apply']",0,1,0,5,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_decr_n_aux,"['elim', 'rewrite', 'apply', 'intuition', 'rewrite', 'rewrite', 'rewrite', 'repeat', 'apply', 'rewrite', 'intuition', 'apply', 'intuition', 'move', 'apply', 'intuition']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_incr_1,"['assert', 'assert', 'apply', 'apply', 'apply', 'move', 'simpl', 'case', 'rewrite', 'exists', 'case', 'rewrite', 'right', 'rewrite', 'apply', 'exists', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'exists', 'case', 'rewrite', 'apply', 'eapply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'by']",0,0,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_mult,"['move', 'apply', 'move', 'rewrite', 'apply', 'rewrite', 'rewrite', 'ring', 'apply', 'now', 'now', 'apply', 'apply']",0,0,3,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_mult,"['move', 'exists', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_mult,"['move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_odd_even,"['rewrite', 'move', 'apply', 'case', 'rewrite', 'ring', 'case', 'rewrite', 'rewrite', 'elim', 'rewrite', 'rewrite', 'ring', 'rewrite', 'replace', 'ring', 'replace', 'move', 'simpl', 'ring', 'rewrite', 'rewrite', 'elim', 'rewrite', 'rewrite', 'ring', 'rewrite', 'replace', 'ring', 'replace', 'ring', 'replace', 'move', 'simpl', 'ring', 'apply', 'apply', 'intros', 'exists', 'intros', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'case', 'intros', 'rewrite', 'try', 'now', 'rewrite', 'easy', 'simpl', 'now', 'apply', 'apply', 'exists', 'intros', 'case', 'easy', 'intros', 'reflexivity', 'apply', 'intros', 'exists', 'intros', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'case', 'intros', 'rewrite', 'try', 'case', 'simpl', 'now', 'intros', 'simpl', 'now', 'rewrite', 'try', 'case', 'simpl', 'try', 'now', 'simpl', 'now']",3,1,4,4,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_odd_even,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_odd_even,"['move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_const_0,"['move', 'replace', 'apply', 'rewrite', 'apply', 'elim', 'rewrite', 'ring', 'rewrite', 'ring']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_const_0,"['suff', 'case', 'case', 'move', 'contradict', 'apply', 'apply', 'apply', 'ring_simplify', 'apply', 'contradict', 'apply', 'rewrite', 'apply', 'move', 'contradict', 'apply', 'move', 'apply', 'apply', 'apply', 'apply', 'move', 'ring', 'apply']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_opp,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_opp,"['replace', 'rewrite', 'apply', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_opp,"['rewrite', 'apply', 'rewrite', 'rewrite', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_minus,"['move', 'apply', 'exact', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_pseries_minus,"['move', 'apply', 'exact', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_minus,"['move', 'rewrite', 'rewrite', 'exact', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_continuity,"['move', 'case', 'apply', 'move', 'apply', 'move', 'apply', 'elim', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_derive,"['have', 'have', 'apply', 'apply', 'exists', 'case', 'rewrite', 'apply', 'apply', 'replace', 'field', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', '[ | by apply not_0_INR, sym_not_eq, O_S].', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'have', 'apply', 'exists', 'case', 'rewrite', 'apply', 'rewrite', 'apply', 'wlog', 'case', 'apply', 'exact', 'apply', 'apply', 'suff', 'case', 'apply', 'have', 'split', 'apply', 'apply', 'apply', 'apply', 'field_simplify', 'rewrite', 'apply', 'apply', 'apply', 'move', 'apply', 'apply', 'field_simplify', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'move', 'apply', 'rewrite', 'have', 'apply', 'apply', 'apply', 'move', 'apply', 'apply', 'apply', 'apply', 'apply', 'move', 'case', 'apply', 'exists', 'apply', 'replace', 'split', '[apply Rgt_not_eq, Rlt_trans with y', 'apply', 'rewrite', 'split', 'apply', 'apply', 'rewrite', 'ring_simplify', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'ring_simplify', 'rewrite', 'rewrite', 'apply', 'apply', 'ring_simplify', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'right', 'split', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'case', 'simpl', 'set', 'exists', 'replace', 'apply', 'field_simplify', '[rewrite ?Rdiv_1 | apply Rgt_not_eq, Rlt_trans with y', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'elim', '[ring | rewrite -IH', 'field', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'case', 'apply', 'move', 'rewrite', 'apply', 'move', 'elim', 'simpl', 'apply', 'apply', 'rewrite', 'apply', 'elim', 'apply', 'apply', 'case', 'apply', 'apply', 'rewrite', 'apply']",0,2,3,4,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_derive_PSeries,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,Derive_PSeries,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,is_pseries_derive,"['intros', 'assert', 'apply', 'rewrite', 'apply', 'apply', 'rewrite']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,ex_derive_n_PSeries,"['elim', 'simpl', 'simpl', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,Derive_n_PSeries,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,CV_radius_derive_n,"['elim', 'apply', 'move', 'rewrite', 'rewrite', 'field', 'apply', 'rewrite', 'rewrite', 'apply', 'move', 'rewrite', 'rewrite', 'field', 'apply']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,Derive_n_coef,"['elim', 'rewrite', 'rewrite', 'rewrite', 'elim', 'rewrite', 'ring', 'rewrite', 'ring', 'simpl', 'replace', 'rewrite', 'rewrite', 'ring', 'rewrite', 'transitivity', 'apply', 'case', 'exists', 'apply', 'apply', 'rewrite', 'have', 'case', 'by', 'exists', 'apply', 'apply', 'case', 'rewrite', 'move', 'replace']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,PSeries_ext_recip,"['move', 'have', 'rewrite', 'apply', 'replace', 'rewrite', 'field', 'exact', 'field', 'exact']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/PSeries.json,mk_pseries,"['move', 'wlog', 'case', 'apply', 'apply', 'simpl', 'exact', 'move', 'apply', 'by', 'by', 'rewrite', 'move', 'wlog', 'case', 'case', 'apply', 'rewrite', 'replace', 'field', 'apply', 'rewrite', 'suff', 'move', 'rewrite', 'apply', 'intros', 'rewrite', 'simpl', 'rewrite', 'apply', '[unfold Rdiv', 'ring', 'rewrite', 'apply', 'try', 'clear', 'induction', 'simpl', 'apply', 'rewrite', 'rewrite', 'ring', 'rewrite', 'exists', 'rewrite', 'apply', 'move', 'rewrite', 'split', 'apply', 'apply', 'case', 'apply', 'apply', 'have', 'exists', 'rewrite', 'apply', 'rewrite', 'case', 'apply', 'ring_simplify', 'apply', 'ring_simplify', 'apply', 'apply', 'split', 'rewrite', 'apply', 'rewrite', 'apply', 'case', 'apply', 'apply', 'have', 'exists', 'rewrite', 'apply', 'rewrite', 'case', 'apply', 'ring_simplify', 'apply', 'ring_simplify', 'apply', 'apply', 'split', 'move', 'have', 'have', 'case', 'have', 'move', 'apply', 'apply', 'apply', 'apply', 'exact', 'exact', 'apply', 'exact', 'move', 'apply', 'apply', 'move', 'rewrite', 'rewrite', 'field', 'repeat', 'apply', 'exact', 'apply', 'exact', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'replace', 'apply', 'apply', 'by', 'apply', 'case', 'contradict', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'move', 'rewrite', 'ring', 'exact', 'apply', 'apply', 'case', 'exists', 'apply', 'rewrite', 'exact', 'case', 'exists', 'apply', 'case', 'apply', 'move', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'move', 'rewrite', 'rewrite', 'rewrite', 'apply', 'replace', 'ring', 'change', 'ring_simplify', 'change', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'exact', 'rewrite', 'apply', 'split', 'apply', 'apply', 'apply', 'exact', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'intros', 'rewrite', 'rewrite', 'ring']",1,5,5,4,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_ub_Rbar_opp,"['split', 'intros', 'apply', 'now', 'apply', 'now', 'rewrite']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lb_Rbar_opp,"['split', 'intros', 'apply', 'now', 'apply', 'now', 'rewrite']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_ub_Rbar_dec,"['set', 'assert', 'intros', 'exists', 'case', 'apply', 'apply', 'assert', 'intros', 'exists', 'left', 'set', 'destruct', 'left', 'exists', 'destruct', 'apply', 'eapply', 'rewrite', 'case', 'apply', 'right', 'split', 'rewrite', 'eapply', 'apply', 'right', 'case', 'apply', 'rewrite', 'case', 'apply', 'case', 'apply', 'eapply', 'apply']",0,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lb_Rbar_dec,"['destruct', 'left', 'exists', 'apply', 'rewrite', 'right', 'specialize', 'contradict', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_ub_Rbar_subset,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lb_Rbar_subset,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lub_Rbar_opp,"['split', 'split', 'apply', 'intros', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'intros', 'apply', 'apply']",2,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_glb_Rbar_opp,"['split', 'split', 'apply', 'intros', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'intros', 'apply', 'apply']",2,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,ex_lub_Rbar,"['destruct', 'first', 'exists', 'split', 'by', 'case', 'specialize', 'specialize', 'contradict', 'specialize', 'rename', 'assert', 'exists', 'apply', 'clear', 'set', 'assert', 'intros', 'case', 'exists', 'case', 'apply', 'eapply', 'apply', 'assert', 'intros', 'exists', 'left', 'set', 'destruct', 'intros', 'case', 'right', 'left', 'exists', 'move', 'rewrite', 'case', 'split', 'intros', 'apply', 'right', 'assert', 'case', 'case', 'left', 'intros', 'contradict', 'rewrite', 'case', 'apply', 'case', 'first', 'apply', 'rewrite', 'apply', 'contradict', 'apply', 'apply', 'case', 'rewrite', 'apply', 'eapply', 'apply', 'contradict', 'apply', 'apply', 'intros', 'case', 'apply', 'apply', 'left', 'assert', 'intros', 'specialize', 'case', 'clear', 'exists', 'split', 'destruct', 'apply', 'specialize', 'contradict', 'apply', 'rewrite', 'case', 'eapply', 'apply', 'rewrite', 'eapply', 'apply', 'apply', 'right']",2,0,3,3,0,7
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,ex_glb_Rbar,"['case', 'exists', 'apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lub_Rbar_unique,"['move', 'rewrite', 'case', 'apply', 'apply', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_glb_Rbar_unique,"['move', 'rewrite', 'case', 'apply', 'apply', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Lub_Rbar_correct,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Glb_Rbar_correct,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lub_Rbar_subset,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_glb_Rbar_subset,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lub_Rbar_eqset,"['move', 'split', 'apply', '[apply H | apply ub1].', 'move', 'apply', 'apply', '[apply H | apply Hb].']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_glb_Rbar_eqset,"['move', 'split', 'apply', '[apply H | apply ub1].', 'move', 'apply', 'apply', '[apply H | apply Hb].']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Lub_Rbar_eqset,"['move', 'rewrite', 'case', 'apply', 'move', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Glb_Rbar_eqset,"['move', 'rewrite', 'case', 'apply', 'move', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_ub_lb,"['split', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lb_ub,"['split', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_ub_Rbar_correct,"['split', 'apply', 'exists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lb_Rbar_correct,"['split', 'apply', 'exists']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_ub_p_infty,['now'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lb_m_infty,['easy'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_ub_Finite,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lb_Finite,"['intros', 'apply', 'rewrite', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_ub_m_infty,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lb_p_infty,"['intros', 'case', 'auto', 'clear', '[intros x| ]', 'intros', 'case', 'simpl', 'intuition', 'case', 'simpl', 'intuition']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lb_le_ub,"['intros', 'apply', '[apply Hl | apply Hu]', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lb_eq_ub,"['intros', 'apply', '[apply Hu | apply Hl]', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_ub_dec,"['destruct', 'left', 'exists', 'case', 'apply', 'right', 'specialize', 'contradict', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lb_dec,"['destruct', 'left', 'exists', 'apply', 'simpl', 'rewrite', 'auto', 'right', 'intro', 'generalize', 'clear', 'intro', 'contradict', 'apply', 'auto']",0,2,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_ub_subset,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_lb_subset,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lub_glb,"['split', '[intros (ub, lub) | intros (lb, glb)]', 'split', 'apply', 'auto', 'intros', 'generalize', 'apply', 'apply', 'intros', 'simpl', 'repeat', 'apply', 'intros', 'apply', 'rewrite', 'apply', 'rewrite', 'auto']",4,0,4,2,2,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_glb_lub,"['split', '[ intros (lb, glb) | intros (ub, lub)]', 'split', 'apply', 'auto', 'intros', 'generalize', 'apply', 'apply', 'intro', 'simpl', 'repeat', 'apply', 'intros', 'apply', 'rewrite', 'apply', 'rewrite', 'auto']",3,0,4,2,2,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_lub_Rbar_correct,"['split', 'split', '[ | move => b Hb', 'apply', 'apply', 'split', '[ | move => b Hb', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,is_glb_Rbar_correct,"['split', 'split', '[ | move => b Hb', 'apply', 'apply', 'split', '[ | move => b Hb', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_ex_lub,"['destruct', 'exists', 'split', 'case', 'intros', 'apply', 'contradict', 'apply', 'apply', 'destruct', 'exists', 'split', 'case', 'apply', 'intros', 'apply', 'apply']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_ex_glb,"['destruct', 'exists', 'now', 'rewrite']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_opp_glb_lub,"['unfold', 'case', 'simpl', 'intros', 'unfold', 'case', 'simpl', 'intros', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'auto', 'apply', 'auto']",3,2,3,2,1,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_opp_lub_glb,"['unfold', 'case', 'simpl', 'intros', 'unfold', 'case', 'simpl', 'intros', 'apply', 'apply', 'rewrite', 'apply', 'auto', 'intros', 'rewrite', 'auto', 'apply', 'rewrite', 'apply', 'rewrite', 'auto']",3,2,3,3,2,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_lub_unique,"['move', 'rewrite', 'case', 'apply', 'apply', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_glb_unique,"['move', 'rewrite', 'case', 'apply', 'apply', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_glb_le_lub,"['case', 'apply', 'unfold', 'case', 'simpl', 'intros', 'apply', 'auto', 'unfold', 'case', 'simpl', 'intros', 'apply', 'auto']",2,2,2,0,1,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_lub_subset,"['intros', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_glb_subset,"['intros', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_lub_eq,"['intros', 'apply', '[apply (Rbar_is_lub_subset E1 E2) | apply (Rbar_is_lub_subset E2 E1) ]', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_glb_eq,"['intros', 'apply', '[apply (Rbar_is_glb_subset E1 E2) | apply (Rbar_is_glb_subset E2 E1) ]', 'auto', 'intros', 'apply', 'auto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_lub_ext,"['intros', 'split', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_is_glb_ext,"['intros', 'split', 'apply', 'auto', 'intros', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'auto']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lub_subset,"['intros', 'unfold', 'case', 'intros', 'case', 'simpl', 'intros', 'apply', 'auto']",3,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_glb_subset,"['intro', 'unfold', 'case', 'intros', 'case', 'simpl', 'intros', 'apply', 'auto']",2,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_lub_rw,"['intro', 'apply', 'apply', 'intros', 'apply', 'auto']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Rbar_glb_rw,"['intros', 'apply', 'apply', 'intros', 'apply', 'auto']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Empty_correct_1,"['case', 'rewrite', 'case', 'case', 'have', 'last', 'apply', 'apply', 'apply', 'right', 'rewrite', 'apply', 'left', 'apply', 'apply', 'left', 'rewrite', 'apply', 'right', 'rewrite', 'case', 'case', 'have', 'last', 'apply', 'apply', 'apply', 'right', 'rewrite', 'apply', 'left', 'apply', 'apply', 'left', 'rewrite', 'apply', 'right', 'move', 'apply']",0,0,2,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,Empty_dec,"['case', '[ | left].', 'case', '[by right | left].', 'contradict', 'apply', 'contradict', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,not_Empty_dec,"['move', 'case', '[left|right].', 'case', 'contradict', 'apply', 'contradict', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Lub.json,uniqueness_dec,"['move', 'exists', 'case', 'replace', 'apply', 'apply', 'split', 'move', 'right', 'apply', 'move', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_finite_correct,"['rewrite', 'case', 'split', 'exists', 'case', 'case']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_plus_unique,"['unfold', 'case', 'inversion']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_plus_correct,"['unfold', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_unique,"['unfold', 'case', 'case', 'case', 'inversion', 'case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_correct,"['case', 'case', 'apply', 'unfold', 'simpl', 'case', 'case']",0,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_correct',"['unfold', 'case', 'case', 'case', 'try', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_finite_eq,"['split', 'intros', 'apply', 'apply', 'intro', 'assert', 'simpl', 'apply', 'rewrite', 'simpl', 'apply', 'assert', 'simpl', 'apply', 'rewrite', 'simpl', 'apply', 'rewrite', 'reflexivity']",2,2,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_finite_neq,"['split', 'contradict', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_not_eq,"['destruct', 'destruct', 'simpl', 'try', 'intros', 'apply', 'revert', 'apply']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_not_le_lt,"['destruct', 'destruct', 'simpl', 'intuition']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_not_le,"['destruct', 'destruct', 'simpl', 'intuition', 'apply', 'now']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_not_lt_le,"['destruct', 'destruct', 'simpl', 'intuition', 'now']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_not_lt,"['destruct', 'destruct', 'simpl', 'intuition', 'contradict', 'now']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_refl,"['intros', 'try', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_le,"['intros', 'try', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_total_order,"['destruct', 'destruct', 'simpl', 'intuition', 'destruct', 'intuition']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_eq_dec,"['intros', 'destruct', 'right', 'revert', 'destruct', 'destruct', 'simpl', 'intros', 'try', 'contradict', 'apply', 'try', 'auto', 'left', 'apply', 'right', 'revert', 'destruct', 'destruct', 'simpl', 'intros', 'try', 'contradict', 'apply', 'apply', 'auto']",1,1,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_dec,"['destruct', '[ destruct H as [H|H]|].', 'now', 'right', 'rewrite', 'clear', 'destruct', 'auto', 'apply', 'auto', 'right', 'revert', 'destruct', 'destruct', 'intros', 'auto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_le_dec,"['destruct', 'now', 'right', 'rewrite', 'apply', 'right', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_dec,"['destruct', 'left', 'now', 'left', 'rewrite', 'apply', 'right', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_lt_dec,"['destruct', 'left', 'now', 'left', 'rewrite', 'apply', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_lt_or_eq_dec,"['destruct', 'now', 'now', 'intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_trans,"['destruct', 'destruct', 'destruct', 'simpl', 'intuition', 'now']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_le_trans,"['destruct', 'destruct', 'destruct', 'simpl', 'intuition', 'now']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_lt_trans,"['destruct', 'destruct', 'destruct', 'simpl', 'intuition', 'now']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_trans,"['destruct', 'destruct', 'destruct', 'simpl', 'intuition', 'now']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_le_antisym,"['destruct', 'destruct', 'simpl', 'intuition']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_opp_involutive,"['destruct', 'auto', 'simpl', 'rewrite', 'auto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_opp_lt,"['destruct', 'destruct', 'split', 'auto', 'intro', 'simpl', 'try', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_opp_le,"['destruct', 'destruct', 'simpl', 'intuition']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_opp_eq,"['split', 'intros', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_opp_real,"['destruct', 'simpl', 'intuition']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_plus'_comm,"['intros', 'try', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,ex_Rbar_plus_comm,['now'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,ex_Rbar_plus_opp,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_plus_0_r,"['case', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_plus_comm,"['case', 'case', 'intuition', 'simpl', 'apply']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_plus_lt_compat,"['case', 'case', 'case', 'case', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_plus_le_compat,"['case', 'case', 'case', 'case', 'apply', 'intros', 'apply', 'intros', 'apply']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_plus_opp,"['case', 'case', 'apply', 'ring']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_minus_eq_0,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_opp_minus,"['case', 'case', 'rewrite', 'rewrite', 'rewrite']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_inv_opp,"['case', 'rewrite', 'contradict', 'rewrite', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult'_comm,"['case', 'case', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult'_opp_r,"['case', 'case', '(try case: Rle_dec => Hx //=)', '(try case: Rle_lt_or_eq_dec => //= Hx0).', 'rewrite', 'rewrite', 'apply', 'case', 'now', 'case', 'case', 'elim', 'apply', 'rewrite', 'elim', 'apply', 'rewrite', 'apply', 'case', 'case', 'elim', 'rewrite', 'apply', 'elim', 'rewrite', 'apply', 'apply', 'now', 'case', 'elim', 'rewrite', 'now', 'case', 'case', 'elim', 'apply', 'rewrite', 'apply', 'elim', 'apply', 'rewrite', 'apply', 'case', 'case', 'elim', 'rewrite', 'apply', 'elim', 'rewrite', 'apply', 'apply', 'now']",0,0,2,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_comm,"['unfold', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_opp_r,"['unfold', 'rewrite', 'case', 'apply']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_opp_l,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_opp,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_0_l,"['case', 'rewrite', 'case', 'case', 'case', 'case']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_0_r,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_eq_0,"['case', 'case', '(try case: Rle_dec => //= H)', '(try case: Rle_lt_or_eq_dec => //=)', '(try (left', 'apply', '(try (right', 'apply', 'intros', 'apply', 'simpl', 'apply', 'case', 'left', 'right']",2,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,ex_Rbar_mult_sym,"['case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,ex_Rbar_mult_opp_l,"['case', 'case', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,ex_Rbar_mult_opp_r,"['case', 'case', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_sym,"['case', 'case', 'case', 'unfold', 'try', 'try', 'try', 'try', 'rewrite']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_opp_l,"['case', 'case', 'case', 'unfold', 'try', 'try', 'try', 'try', 'apply', 'ring', 'apply', 'rewrite', 'now', 'case', 'apply', 'rewrite', 'move', 'case', 'now', 'case', 'apply', 'rewrite', 'move', 'case', 'now', 'case', 'apply', 'rewrite', 'now', 'case']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_opp_r,"['move', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_p_infty_pos,"['case', 'unfold', 'case', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_p_infty_neg,"['case', 'unfold', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_m_infty_pos,"['case', 'unfold', 'case', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_mult_m_infty_neg,"['case', 'unfold', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_div_p_infty,"['apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,is_Rbar_div_m_infty,"['apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_pos_eq,"['case', 'case', 'case', 'split', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_pos_lt,"['case', 'case', 'case', 'split', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_mult_pos_le,"['case', 'case', 'case', 'split', 'apply', 'now', 'now']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_div_pos_eq,"['case', 'case', 'case', 'split', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_div_pos_lt,"['case', 'case', 'case', 'split', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_div_pos_le,"['case', 'case', 'case', 'split', 'apply', 'now', 'apply', 'now']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_lt_locally,"['case', '(try apply Rminus_lt_0 in Ha)', 'case', '(try apply Rminus_lt_0 in Hb).', 'assert', 'apply', 'exists', 'split', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'split', 'apply', 'replace', 'apply', 'exists', 'split', 'apply', 'apply', 'exists', 'split']",0,0,3,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_min_comm,"['case', 'case', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_min_r,"['case', 'case', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_min_l,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_min_case,"['case', 'case', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_min_case_strong,"['case', 'case', '(try by apply Hx)', '(try by apply Hy).', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_abs_lt_between,"['case', 'case', 'try', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_abs_opp,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_abs_pos,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rbar.json,Rbar_abs_neg,"['case', 'rewrite', 'apply', 'now', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,LPO_min,"['assert', 'intros', 'rewrite', 'apply', 'apply', 'intros', 'set', 'assert', 'intros', 'exists', 'left', 'now', 'assert', 'intros', 'rewrite', 'apply', 'exact', 'rewrite', 'apply', 'exact', 'destruct', 'now', 'destruct', 'exists', 'exists', 'left', 'apply', 'rewrite', 'apply', 'exists', 'exists', 'right', 'now', 'destruct', 'right', 'intros', 'apply', 'apply', 'now', 'apply', 'now', 'left', 'set', 'exists', 'assert', 'unfold', 'rewrite', 'rewrite', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'exact', 'apply', 'rewrite', 'simpl', 'ring', 'assert', 'intros', 'unfold', 'refine', 'now', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'now', 'rewrite', 'apply', 'ring_simplify', 'apply', 'destruct', 'now', 'elimtype', 'refine', 'intros', 'destruct', 'elim', 'now', 'apply', 'apply', 'apply', 'apply', 'intros', 'refine', 'apply', 'clear', 'omega', 'now', 'rewrite', 'ring_simplify', 'rewrite', 'apply', 'rewrite', 'apply', 'exact', 'now', 'apply']",3,1,3,4,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,LPO,"['intros', 'destruct', 'left', 'now', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,LPO_bool,"['intros', 'destruct', 'simpl', 'intros', 'case', 'now', 'now', 'now', 'right', 'intros', 'now']",1,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,LPO_notforall,"['intros', 'destruct', 'destruct', 'exists', 'apply', 'contradict', 'apply']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,LPO_notnotexists,"['intros', 'apply', 'apply', 'contradict', 'intros', 'contradict', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,LPO_ub_dec,"['intros', 'destruct', 'intros', 'destruct', 'intros', 'destruct', 'now', 'now', 'right', 'contradict', 'now', 'left', 'intro', 'now', 'left', 'now', 'right', 'intros', 'destruct', 'now', 'specialize', 'apply', 'intros', 'destruct', 'now', 'now', 'contradict', 'intros', 'rewrite', 'eapply', 'eapply', 'now']",1,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,EM_dec,"['intros', 'set', 'destruct', 'exists', 'intros', 'apply', 'apply', 'exists', 'now', 'destruct', 'left', 'intros', 'elim', 'apply', 'apply', 'intros', 'apply', 'now', 'right', 'intros', 'apply', 'apply', 'right', 'now']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Markov.json,EM_dec',"['intros', 'destruct', 'left', 'now', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,differentiable_pt_lim_ext,"['intros', 'apply', 'rewrite', 'apply', 'apply', 'now']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,differentiable_continuity_pt,"['intros', 'simpl', 'assert', 'apply', '[apply eps|apply Rlt_R0_R2].', 'set', 'elim', 'clear', 'intros', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'set', 'exists', 'intros', 'rewrite', 'apply', 'assert', 'assert', 'ring', 'rewrite', 'clear', 'reflexivity', 'rewrite', 'clear', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'simpl', 'apply', 'apply', 'unfold', 'simpl', 'apply', 'rewrite', 'unfold', 'simpl', 'apply', 'apply', 'apply', 'apply', 'unfold', 'simpl', 'apply', 'apply', 'repeat', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'simpl', '[apply Rabs_pos| apply Rmin_r].', 'apply', 'apply', '[apply Rabs_pos | apply Rmin_l].', 'unfold', 'destruct', 'rewrite', 'apply', 'apply', 'apply', '[apply eps | apply Rmult_lt_0_compat', '[apply Rmult_lt_0_compat', 'apply', 'apply', 'apply', 'field', 'apply', 'field', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'simpl', '[apply Rabs_pos| apply Rmin_r].', 'apply', 'apply', '[apply Rabs_pos | apply Rmin_r].', 'unfold', 'destruct', 'rewrite', 'apply', 'apply', 'apply', '[apply eps | apply Rmult_lt_0_compat', '[apply Rmult_lt_0_compat', 'apply', 'apply', 'apply', 'field', 'apply', 'field', 'apply', 'apply']",1,2,4,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,differentiable_pt_lim_proj1_0,"['intros', 'apply', 'elim', 'clear', 'intros', 'exists', 'simpl', 'intros', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply']",2,1,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,differentiable_pt_lim_proj1_1,"['intros', 'apply', 'split', 'apply', 'rewrite', 'elim', 'clear', 'intros', 'exists', 'simpl', 'simpl', 'intros', 'rewrite', 'replace', 'assert', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'clear', 'apply', 'rewrite', 'apply']",2,1,1,3,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,differentiable_pt_lim_unique,"['move', 'split', 'apply', 'case', 'exists', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'by', 'rewrite', 'apply', 'ring_simplify', 'rewrite', 'apply', 'apply', 'lra', 'rewrite', 'apply', 'by', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'by', 'ring_simplify', 'rewrite', 'apply', 'apply', 'lra', 'rewrite', 'apply', 'by']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,differentiable_pt_lim_comp,"['intros', 'simpl', 'assert', 'apply', 'exists', 'exists', 'apply', 'assert', 'apply', 'exists', 'exists', 'apply', 'assert', 'apply', '[apply eps | apply Rmult_lt_0_compat].', 'apply', 'apply', 'apply', 'set', 'assert', 'apply', '[apply eps | apply Rmult_lt_0_compat].', 'apply', 'apply', 'apply', 'set', 'assert', 'apply', '[apply eps | apply Rmult_lt_0_compat].', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'set', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'assert', 'apply', 'apply', ""[apply d1 | apply d'1 | apply d2 | apply d3]."", 'set', 'exists', 'intros', 'intros', 'apply', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'simpl', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'simpl', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'assert', 'assert', 'ring', 'rewrite', 'clear', 'reflexivity', 'rewrite', 'clear', 'apply', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'simpl', 'apply', 'apply', 'repeat', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'assert', 'assert', 'ring', 'rewrite', 'clear', 'reflexivity', 'rewrite', 'clear', 'apply', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'simpl', 'apply', 'apply', 'repeat', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'simpl', 'apply', 'field', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'repeat', 'assert', 'ring', 'rewrite', 'clear', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'simpl', 'apply', 'rewrite', 'apply', 'apply', 'unfold', 'simpl', 'destruct', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', '[apply eps | apply Rmult_lt_0_compat', 'apply', 'apply', 'apply', 'field', 'apply', 'field', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'simpl', 'apply', 'rewrite', 'apply', 'apply', 'unfold', 'simpl', 'destruct', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', '[apply eps | apply Rmult_lt_0_compat', 'apply', 'apply', 'apply', 'field', 'apply', 'field', 'apply']",2,3,4,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,derivable_pt_lim_comp_2d,"['intros', 'apply', 'pattern', 'replace', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,partial_derive_ext_loc,"['intros', 'unfold', 'apply', 'destruct', 'exists', 'intros', 'apply', 'exists', 'intros', 'now']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,partial_derive_add_zero,"['intros', 'destruct', 'rewrite', 'rewrite', 'unfold', 'simpl', 'rewrite', 'now', 'rewrite', 'unfold', 'simpl', 'apply', 'intros', 'rewrite', 'now']",1,3,1,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_ext_loc,"['intros', 'revert', 'induction', 'intros', 'simpl', 'intros', 'split', 'apply', 'easy', 'simpl', 'intros', 'split', 'apply', 'split', 'apply', 'apply', 'split', 'apply', 'apply', 'split', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply']",5,1,2,0,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_m,"['assert', 'induction', 'simpl', 'intros', 'split', 'try', 'intros', 'repeat', 'try', 'apply', 'apply', 'apply', 'apply', 'intros', 'induction', 'replace', 'exact', 'now', 'case', 'intros', 'apply', 'now', 'apply', 'intros', 'now']",4,2,3,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_deriv_aux1,"['intros', 'case', 'simpl', 'intros', 'split', 'apply', 'clear', 'intros', 'simpl', 'repeat', 'apply']",2,2,0,0,1,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_deriv_aux2,"['intros', 'case', 'simpl', 'intros', 'split', 'apply', 'clear', 'intros', 'simpl', 'repeat', 'apply']",2,2,0,0,1,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_ex_deriv_inf_1,"['intros', 'case', 'clear', 'intros', 'case', 'clear', 'case', 'clear', 'intros', 'contradict', 'apply', 'intros', 'unfold', 'simpl', 'apply', 'intros', 'assert', 'apply', 'auto', 'exact', 'revert', 'rewrite', 'case_eq', 'intros', 'contradict', 'auto', 'intros', 'apply', 'intros', 'unfold', 'simpl', 'reflexivity', 'simpl', 'destruct', 'case_eq', 'intros', 'rewrite', 'clear', 'contradict', 'auto', 'intros', 'rewrite', 'apply', 'intros', 'assert', 'apply', 'auto', 'exact', 'case_eq', 'intros', 'contradict', 'auto', 'intros', 'apply', 'intros', 'unfold', 'simpl', 'reflexivity', 'rewrite', 'simpl', 'destruct', 'case_eq', 'intros', 'rewrite', 'clear', 'contradict', 'auto', 'intros', 'rewrite', 'apply']",3,3,3,2,1,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_ex_deriv_inf_2,"['intros', 'case', 'clear', 'intros', 'case', 'clear', 'case', 'clear', 'intros', 'contradict', 'apply', 'intros', 'unfold', 'simpl', 'apply', 'intros', 'assert', 'apply', 'auto', 'exact', 'revert', 'rewrite', 'case_eq', 'intros', 'contradict', 'auto', 'intros', 'apply', 'intros', 'unfold', 'simpl', 'reflexivity', 'simpl', 'destruct', 'case_eq', 'intros', 'rewrite', 'clear', 'contradict', 'auto', 'intros', 'rewrite', 'apply', 'intros', 'assert', 'apply', 'auto', 'exact', 'case_eq', 'intros', 'contradict', 'auto', 'intros', 'apply', 'intros', 'unfold', 'simpl', 'reflexivity', 'rewrite', 'simpl', 'destruct', 'case_eq', 'intros', 'rewrite', 'clear', 'contradict', 'auto', 'intros', 'rewrite', 'apply']",3,3,3,2,1,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_continuity_inf_1,"['intros', 'assert', 'now', 'apply', 'apply', 'intros', 'unfold', 'simpl', 'reflexivity', 'revert', 'case', 'simpl', 'intros', 'apply', 'intros', 'simpl', 'intros', 'apply']",5,3,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,Derive_partial_derive_aux1,"['intros', 'induction', 'intros', 'unfold', 'now', 'intros', 'apply', 'unfold', 'simpl', 'apply', 'intros', 'apply', 'reflexivity', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'apply', 'unfold', 'simpl', 'apply', 'cut', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'apply', 'intros', 'split', 'apply', 'split', 'apply', 'simpl', 'destruct', 'split', 'apply', 'apply', 'apply', 'simpl', 'destruct', 'destruct', 'clear', 'case', 'simpl', 'apply', 'apply', 'simpl', 'destruct', 'destruct', 'clear', 'case', 'simpl', 'apply', 'unfold', 'simpl', 'apply', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'reflexivity', 'apply', 'apply', 'intros', 'pattern', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'omega']",4,4,4,2,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,Derive_partial_derive_aux2,"['intros', 'induction', 'intros', 'easy', 'intros', 'apply', 'apply', 'rewrite', 'rewrite', 'replace', 'easy', 'now', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'apply', 'intros', 'apply', 'omega', 'apply', 'rewrite', 'now', 'now', 'rewrite', 'apply', 'apply', 'apply', 'intros', 'apply', 'rewrite', 'now', 'now', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'rewrite', 'rewrite', 'replace', 'easy', 'now', 'apply', 'apply', 'intros', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'omega']",3,0,3,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,Derive_partial_derive,"['intros', 'generalize', 'easy']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive_2d.json,ex_diff_n_continuity_inf_2,"['intros', 'assert', 'apply', 'now', 'exact', 'revert', 'case_eq', 'intros', 'contradict', 'omega', 'intros', 'simpl', 'intros', 'revert', 'case', 'intros', 'apply', 'intros', 'apply']",4,1,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,seq2Rlist_bij,['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Rlist2seq_bij,['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,size_compat,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,nth_compat,"['elim', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,rev_rev,"['elim', 'by', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,head_rev,"['elim', 'by', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,last_rev,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,last_unzip1,"['case', 'elim']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sorted_nth,"['case', 'split', 'contradict', 'apply', 'move', 'elim', 'split', 'move', 'contradict', 'apply', 'case', 'simpl', 'apply', 'case', 'apply', 'split', 'apply', 'case', 'apply', 'apply', 'simpl', 'apply']",0,3,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sorted_cat,"['move', 'move', 'apply', 'rewrite', 'rewrite', 'case', 'move', 'case', 'case', 'move', 'case', 'apply', 'intuition', 'have', 'contradict', 'apply', 'case', 'suff', 'rewrite', 'replace', 'rewrite', 'apply', 'case', 'apply', 'case', 'rewrite', 'rewrite', 'apply', 'case', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'have', 'contradict', 'apply', 'case', 'have', 'contradict', 'apply', 'intuition', 'case', 'replace', 'apply', 'rewrite', 'apply', 'elim', 'rewrite', 'unfold', 'rewrite', 'case', 'apply', 'apply', 'intuition', 'apply', 'rewrite', 'intuition']",0,0,3,5,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sorted_head,"['case', 'move', 'apply', 'elim', 'apply', 'rewrite', 'apply', 'case', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sorted_incr,"['elim', 'rewrite', 'apply', 'case', 'apply', 'case', 'apply', 'apply', 'case', 'apply', 'apply', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sorted_last,"['move', 'rewrite', 'case', 'apply', 'apply', 'intuition']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sorted_dec,"['case', 'simpl', 'rewrite', 'right', 'case', 'simpl', 'rewrite', 'right', 'elim', 'right', 'case', 'left', 'exists', 'intuition', 'case', 'apply', 'split', ""[apply Hx'|apply Hx]."", 'left', 'exists', 'intuition', 'right', 'simpl', 'rewrite']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sorted_compat,"['case', 'split', 'contradict', 'apply', 'elim', 'split', 'contradict', 'apply', 'split', 'case', 'rewrite', 'simpl', 'apply', 'apply', 'rewrite', 'apply', 'split', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",0,2,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,seq_step_ge_0,"['clear', 'unfold', 'case', 'apply', 'elim', 'apply', 'apply', 'apply', 'by']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,seq_step_cat,"['case', 'apply', 'case', 'apply', 'move', 'elim', 'rewrite', 'rewrite', 'case', 'unfold', 'simpl', 'rewrite', 'apply', 'apply']",0,2,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,seq_step_rev,"['rewrite', 'rewrite', 'case', 'case', 'rewrite', 'case', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'clear', 'elim', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'rewrite']",0,0,2,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_lx_ly,"['case', 'rewrite', 'elim']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_seq_bij,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_seq_bij_lx,"['case', 'rewrite', 'apply', 'rewrite']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_seq_bij_ly,"['case', 'rewrite', 'apply', 'rewrite']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cons_dec,"['move', 'case', 'apply', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cons_ind,"['move', 'elim', 'apply', 'move', 'move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rcons_dec,"['move', 'move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rcons_ind,"['move', 'move', 'apply', 'SF_t', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cons_rcons,"['case', 'case', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_nil,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_ly_nil,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_cons,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_ly_cons,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_rcons,"['case', 'rewrite', 'elim', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_ly_rcons,"['case', 'rewrite', 'elim', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_surj,['move'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_ly_surj,['move'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_ly_inj,"['move', 'apply', 'apply', 'rewrite', 'replace', 'rewrite', 'rewrite', 'rewrite', 'replace', '[ rewrite Hx Hy (IH s0) //= | move => /=', 'apply', 'replace', 'rewrite', 'replace', 'rewrite']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_cons,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_rcons,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_lx,"['case', 'rewrite', 'elim']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_ly,"['case', 'rewrite', 'elim']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rev_0,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rev_cons,"['apply', 'rewrite', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rev_rcons,"['apply', 'rewrite', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rev_invol,"['apply', 'rewrite', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_rev,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_ly_rev,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_rev,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rev_surj,['move'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rev_inj,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_cat,"['unfold', 'simpl', 'apply', 'elim']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_last_cat,"['rewrite', 'unfold', 'simpl', 'elim']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cons_cat,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_last_lx,"['rewrite', 'apply', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_cons,"['case', 'elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_rcons,"['move', 'apply', 'rewrite', 'replace', 'rewrite', 'rewrite', 'auto']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_lx,"['apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_ly,"['apply', 'rewrite']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_rev,"['apply', 'rewrite', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_sort,"['unfold', 'apply', 'by', 'split', 'apply', 'now']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_map,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,ptd_cons,"['move', 'apply', 'rewrite', 'intuition']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,ptd_sort,"['apply', '[ | apply SF_cons_dec with (s := ptd) => {ptd} [ x1 | [x1 y1] ptd] IH] => Hptd', 'try', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,ptd_sort',"['apply', '[ | apply SF_cons_dec with (s := ptd) => {ptd} [ x1 | [x1 y1] ptd] IH] => Hptd', 'try', 'apply', '[apply (Hptd O) | apply (Hptd 1%nat)]', 'rewrite', 'repeat', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cat_pointed,"['intros', 'move', 'apply', 'rewrite', 'apply', 'rewrite', 'case', 'apply', 'apply', 'apply', 'apply']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_down_step,"['unfold', 'simpl', 'case', 'case', 'move', 'apply', 'rewrite', 'rewrite', 'case', 'case', 'apply', 'apply', 'apply', 'apply', 'try', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'by', 'apply', 'rewrite', 'apply']",0,1,4,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_up_step,"['unfold', 'simpl', 'case', 'case', 'move', 'apply', 'apply', 'case', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,1,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_down_pointed,"['unfold', 'simpl', 'case', 'apply', 'move', 'unfold', 'simpl', 'apply', 'rewrite', 'simpl', 'split', 'by', 'apply', 'case', 'move', 'apply', 'move', 'rewrite', 'destruct', 'apply', 'apply', 'apply', 'move', 'unfold', 'simpl', 'apply', 'rewrite', 'simpl', 'split', 'apply', 'apply', 'apply', 'by', 'apply']",0,3,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_up_pointed,"['unfold', 'simpl', 'case', 'move', 'apply', 'apply', 'destruct', 'apply', 'move', 'apply', 'destruct', 'simpl', 'split', 'apply', 'apply', 'apply', 'apply', 'apply']",0,1,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_down_h,"['unfold', 'simpl', 'case']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_up_h,"['unfold', 'simpl', 'case', 'simpl', 'move', 'apply', 'by', 'case', 'apply']",0,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_down_l,"['unfold', 'simpl', 'case', 'simpl', 'apply', 'by', 'case']",0,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_up_l,"['unfold', 'simpl', 'case', 'move', 'apply', 'apply', 'case', 'apply']",0,1,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_down_cons_0,"['intros', 'apply', 'rewrite', 'case']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_up_cons_0,"['intros', 'apply', 'rewrite', 'case']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_down_cons_1,"['intros', 'apply', 'rewrite', 'case', 'case']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_up_cons_1,"['intros', 'apply', 'rewrite', 'case', 'case']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_down_cons_2,"['intros', 'rewrite', 'case', 'case']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cut_up_cons_2,"['intros', 'rewrite', 'case', 'case', 'move', 'apply', 'case', 'apply']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_fun_incr,"['rewrite', 'move', 'apply', 'case', 'rewrite', 'case', 'case', 'case', 'contradict', 'apply', 'move', 'apply', 'case', 'apply', 'case', 'apply', 'case', 'case', 'case', 'case', 'contradict', 'apply', 'simpl', 'elim', 'repeat', 'apply', 'case', 'apply', 'apply', 'intuition', 'contradict', 'apply', 'simpl', 'elim', 'apply', 'apply', 'intuition', 'have', 'split', '[by apply Rnot_lt_le | by apply Hx].', 'rewrite', 'case', 'case', 'rewrite', 'move', 'apply', 'apply', 'case', 'case', 'contradict', 'apply', 'elim', 'apply', 'apply', '[apply Hs | simpl', 'intuition', 'case', 'case', 'case', 'contradict', 'apply', 'elim', 'apply', 'apply', '[apply Hs | simpl', 'intuition', 'apply', 'apply', 'apply', 'apply', 'simpl', 'case', 'contradict', 'apply', 'move', 'rewrite', 'elim', 'case', 'apply', 'elim', 'apply', 'apply', 'apply', 'apply', 'apply', 'case', 'apply', 'apply', 'apply', 'apply', 'simpl', 'case', 'contradict', 'apply', 'move', 'rewrite', 'rewrite', 'elim', 'elim', 'apply', 'apply', 'apply', 'apply', 'apply', 'case', 'apply', 'apply', 'apply', 'apply']",0,1,2,3,1,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_fun_map,"['case', 'rewrite', 'case', 'case', 'case', 'elim', 'case', 'case', 'apply']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cons_f1,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_cons_f2,"['case', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_f1,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_size_f2,"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_f1,"['elim', 'apply', 'case', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_lx_f2,"['elim', 'apply', 'case', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_ly_f1,"['case', 'elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_ly_f2,"['case', 'elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sorted_f1,"['case', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sorted_f2,"['case', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_rev_f2,"['move', 'apply', 'case', 'rewrite', 'apply', 'rewrite', 'elim', 'rewrite', 'rewrite', 'apply']",0,0,2,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_f1,"['case', 'elim', 'rewrite', 'try', 'rewrite', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_map_f2,"['case', 'elim', 'rewrite', 'try', 'rewrite', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,ptd_f2,"['intros', 'elim', 'intros', 'apply', 'case', 'intros', 'apply', 'case', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,unif_part_sort,"['move', 'apply', 'rewrite', 'rewrite', '[ |apply SSR_leq', 'intuition', 'intuition', 'apply', 'field_simplify', '[| apply Rgt_not_eq', 'intuition', 'rewrite', 'apply', 'intuition', 'rewrite', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,head_unif_part,"['rewrite', 'ring']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,last_unif_part,"['rewrite', 'replace', 'rewrite', 'rewrite', 'field', 'apply', 'by']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,unif_part_nat,"['move', 'have', '[ apply unif_part_sort, Rle_trans with (r2 := x)', 'intuition', 'have', 'rewrite', 'case', 'left', 'exists', 'right', 'rewrite', 'intuition', 'rewrite']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,seq_step_unif_part,"['assert', 'rewrite', 'rewrite', 'rewrite', 'ring', 'apply', 'apply', 'move', 'rewrite', 'rewrite', 'elim', 'destruct', 'destruct', 'destruct', 'intros', 'rewrite', 'rewrite', 'case', 'contradict', 'apply', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'case', 'apply', 'apply', 'now', 'apply', 'apply']",0,0,2,4,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,seq_step_unif_part_ex,"['destruct', 'apply', 'exists', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,unif_part_S,"['apply', 'rewrite', 'case', 'rewrite', 'change', 'rewrite', 'rewrite', 'try', 'rewrite', 'field', 'rewrite', 'split', 'apply']",0,0,1,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_val_ly_bound,"['rewrite', 'case', 'elim', 'rewrite', 'replace', 'rewrite', 'rewrite', 'rewrite', 'apply', 'move', 'apply', 'rewrite']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_fine_unif_part,"['intros', 'assert', 'apply', 'apply', 'apply', 'apply', 'unfold', 'rewrite', 'change', 'split', '[|split', '[|split]].', 'cut', 'induction', 'now', 'intros', 'destruct', 'easy', 'change', 'apply', 'apply', 'rewrite', 'now', 'apply', 'apply', 'apply', 'intros', 'apply', 'now', 'rewrite', 'intros', 'rewrite', 'rewrite', 'unfold', 'ring', 'apply', 'now', 'now', 'unfold', 'rewrite', 'rewrite', 'intros', 'rewrite', 'rewrite', 'apply', 'rewrite', 'change', 'apply', 'rewrite', 'rewrite', 'lra', 'now', 'rewrite', 'apply', 'apply', 'rewrite', 'apply']",2,0,5,5,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_cons,"['rewrite', 'case', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_rcons,"['rewrite', 'case', 'apply', 'apply', 'rewrite', 'rewrite', 'rewrite', 'set', 'induction', 'simpl', 'apply', 'rewrite', 'apply']",0,2,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_zero,"['apply', 'rewrite', 'replace', 'rewrite', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'move', 'rewrite', 'apply']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_map,"['apply', 'by', 'rewrite', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_const,"['apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'ring']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_scal,"['apply', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_opp,"['apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_plus,"['apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_minus,"['unfold', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_le,"['apply', 'apply', 'rewrite', 'apply', 'refine', 'simpl', 'intros', 'apply', 'apply', 'now', 'apply', 'apply', 'apply', 'apply', 'apply', 'exact', 'exact', 'apply', 'apply', 'move', 'apply', 'split', 'apply', 'apply']",2,1,4,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_pair,"['apply', 'by', 'rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,RInt_val_point,"['unfold', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'unfold', 'ring', 'apply']",0,0,3,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,RInt_val_ext,"['wlog', 'case', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'case', 'unfold', 'set', 'assert', 'move', 'apply', 'destruct', 'clear', 'intros', 'lra', 'fold', 'rewrite', 'split', 'apply', 'apply', 'apply', 'apply', 'apply', 'by', 'apply', 'apply', 'apply', 'by', 'rewrite', 'simpl', 'replace', 'apply', 'rewrite', 'apply', 'rewrite', 'assert', 'apply', 'elim', 'simpl', 'clear', 'intros', 'destruct', 'simpl', 'replace', 'apply', 'destruct', 'intuition', 'destruct', 'intuition', 'apply', 'move', 'apply', 'by', 'rewrite', 'apply', 'apply', 'apply', 'now']",0,1,4,1,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,RInt_val_comp_opp,"['rewrite', 'replace', 'elim', 'rewrite', 'apply', 'destruct', 'rewrite', 'apply', 'rewrite', 'try', 'rewrite', 'try', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'field', 'apply', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'field', 'now', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,RInt_val_comp_lin,"['rewrite', 'replace', 'elim', 'apply', 'destruct', 'apply', 'rewrite', 'try', 'rewrite', 'try', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'field', 'apply', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'field', 'now', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_Chasles,"['rename', 'apply', 'rewrite', 'move', 'rewrite', 'case', 'rewrite', 'move', 'rewrite', 'case', 'case', 'move', 'rewrite', 'rewrite', 'apply', 'assert', 'elim', 'case', 'rewrite', 'move', 'apply', 'rewrite', 'case', 'rewrite', 'clear', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'ring']",0,0,2,4,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,seq_cut_up_head',"['elim', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,ad_SF_compat,"['have', 'move', 'rewrite', 'case', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'case', 'intuition', 'apply', 'move', 'apply', 'apply', 'rewrite', 'simpl', 'move', 'apply', 'case', 'case', 'now', 'apply', 'now', 'contradict', 'apply', 'now', 'apply', 'now', 'apply', 'now', 'apply', 'now', 'now', 'apply', 'have', '[ rewrite ?SF_lx_cons /= in Hi |-*', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",0,1,3,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_compat_le,"['exists', 'exists', 'exists', 'apply', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Riemann_sum_compat,"['rewrite', 'case', 'move', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'contradict', 'rewrite', 'move', 'elim', 'apply', 'apply', 'intuition', 'apply']",0,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,ad_SF_val_fun,"['wlog', 'split', 'case', 'apply', 'apply', 'apply', 'apply', 'split', 'case', 'have', '[rewrite SF_lx_f2 /=', '(try by apply lt_O_Sn)', 'field', 'apply', 'intuition', 'pattern', 'replace', 'rewrite', 'try', 'rewrite', 'unfold', 'replace', 'apply', 'apply', 'rewrite', 'replace', 'rewrite', 'field', 'apply', 'now', 'apply']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,sf_SF_val_fun,"['case', 'exists', 'exists', 'exists', 'apply', 'exists', 'exists', 'exists', 'apply', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_val_subdiv,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_val_subdiv_val,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_val_fun_rw,"['have', '[by apply Rle_trans with (1 := proj1 Hx), Hx | ].', 'case', 'rewrite', 'replace', '[ | rewrite size_mkseq in Hi', 'rewrite', '[field', 'apply', 'intuition', 'case', 'apply', 'case', 'apply', 'elim', 'apply', 'case', 'rewrite', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'rewrite', 'rewrite', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'replace', '[ | rewrite ?nth_mkseq ?minus_INR ?S_INR /=', '[field', 'apply', 'intuition', 'suff', 'move', 'have', '[ rewrite size_mkseq', 'intuition', 'move', 'rewrite', 'case', 'intros', 'apply', 'case', 'apply', 'elim', 'rewrite', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'rewrite', 'rewrite', 'rewrite', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'rewrite', 'apply']",1,1,1,4,1,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,ex_Im_fct,"['exists', 'exists', 'split', 'by', 'rewrite', 'case', 'lra']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Sup_fct_bound,"['rewrite', 'case', 'case', 'by', 'apply', 'apply', 'apply', 'rewrite']",0,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Inf_fct_bound,"['rewrite', 'case', 'case', 'by', 'apply', 'apply', 'apply', 'rewrite']",0,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Sup_fct_le,"['move', 'rewrite', 'case', 'move', 'rewrite', 'case', 'contradict', 'apply', 'rewrite', 'case', 'apply', 'exists', 'split', 'by']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Inf_fct_le,"['move', 'rewrite', 'case', 'move', 'rewrite', 'case', 'contradict', 'apply', 'rewrite', 'case', 'apply', 'exists', 'split', 'by']",0,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Sup_fct_maj,"['rewrite', 'case', 'by', 'rewrite', 'case', 'case', 'by', 'case', 'move', 'apply', 'case', 'exists', 'split', 'by', 'rewrite', 'case', 'lra']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,Inf_fct_min,"['rewrite', 'case', 'by', 'rewrite', 'case', 'case', 'by', 'case', 'exists', 'split', 'by', 'rewrite', 'case', 'lra', 'case', 'move', 'apply']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_lx,"['apply', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_ly,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_lx,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_ly,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_bound,"['rewrite', 'rewrite', 'move', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_bound,"['rewrite', 'rewrite', 'move', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_fun_bound,"['rewrite', 'case', 'case', 'rewrite', 'contradict', 'apply']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_fun_bound,"['rewrite', 'case', 'case', 'rewrite', 'contradict', 'apply']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_fun_rw,"['have', '[by apply Rle_trans with (1 := proj1 Hx), Hx | ].', 'rewrite', 'case', 'case', 'simpl', 'case', 'apply', 'case', 'apply', 'elim', 'apply', 'case', 'rewrite', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'rewrite', 'rewrite', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'move', 'suff', 'have', '[ rewrite size_mkseq', 'intuition', 'case', 'apply', 'case', 'apply', 'rewrite', 'elim', 'rewrite', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'rewrite', 'rewrite', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'rewrite', 'apply']",0,2,1,3,1,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_fun_rw,"['have', '[by apply Rle_trans with (1 := proj1 Hx), Hx | ].', 'rewrite', 'case', 'case', 'simpl', 'case', 'apply', 'case', 'apply', 'elim', 'apply', 'case', 'rewrite', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'rewrite', 'rewrite', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'move', 'suff', 'have', '[ rewrite size_mkseq', 'intuition', 'case', 'apply', 'case', 'apply', 'rewrite', 'elim', 'rewrite', 'case', 'contradict', 'apply', 'case', 'contradict', 'apply', 'rewrite', 'rewrite', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'case', 'contradict', 'apply', 'simpl', 'intuition', 'rewrite', 'apply']",0,2,1,3,1,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_r,"['exists', 'case', 'exists', 'exists', 'apply', 'exists', 'exists', 'apply', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_subdiv,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_subdiv_val,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_sup_r_bound,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_r,"['exists', 'case', 'exists', 'exists', 'apply', 'exists', 'exists', 'apply', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_subdiv,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_subdiv_val,"['rewrite', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/SF_seq.json,SF_inf_r_bound,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,CVU_dom_Reals,"['split', 'move', 'have', 'move', 'apply', 'move', 'case', 'exists', 'rewrite', 'apply', 'move', 'case', 'exists', 'rewrite', 'simpl', 'rewrite', 'apply', 'move', 'set', 'case', 'exists', 'move', 'rewrite', 'rewrite']",0,2,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,CVU_CVS_dom,"['move', 'exists', 'apply', 'intros', 'case', 'exists', 'apply']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,CVU_dom_cauchy,"['split', 'case', 'exists', 'rewrite', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'case', 'exists', 'rewrite', 'case', 'case', 'rewrite', 'case', 'case', 'replace', 'rewrite', '[ | by apply Rgt_not_eq, Rlt_R0_R2].', 'rewrite', '[ | by apply Rlt_le, Rlt_R0_R2].', 'rewrite', '[ | by apply Rlt_R0_R2].', 'apply', 'replace', 'apply', 'apply', 'case', 'split', 'case', 'apply', 'replace', 'apply', 'replace', 'replace', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'intuition', 'replace', 'apply', 'apply', 'intuition', 'case', 'split', 'apply', 'replace', 'apply', 'apply', 'intuition', 'replace', 'replace', 'apply', 'apply', 'apply', 'intuition', 'case', 'apply', 'replace', 'apply', 'apply', 'apply', 'replace', 'apply', 'case', 'move', 'contradict', 'apply', 'replace', 'apply', 'apply', 'apply', 'intuition', 'case', 'contradict', 'apply', 'replace', 'replace', 'apply', 'apply', 'case', 'contradict', 'apply', 'replace', 'apply', 'apply', 'case', 'move', 'contradict', 'apply', 'replace', 'replace', 'apply', 'apply', 'apply', 'intuition']",0,0,2,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,CVU_dom_include,"['move', 'case', 'exists', 'apply', 'exact', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,CVU_limits_open,"['move', 'have', 'apply', 'apply', 'case', 'exists', 'case', 'rewrite', 'case', 'rewrite', 'apply', 'apply', 'case', 'case', 'case', 'set', 'have', 'apply', 'apply', '[ | by apply d0].', 'apply', '[ by apply dn | by apply dm].', 'exact', 'have', 'rewrite', 'ring_simplify', 'rewrite', 'generalize', 'lra', 'move', 'replace', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'ring_simplify', 'rewrite', 'generalize', 'lra', 'apply', 'rewrite', 'ring_simplify', 'apply', 'rewrite', 'ring_simplify', 'rewrite', 'generalize', 'lra', 'apply', 'rewrite', 'ring_simplify', 'apply', 'split', 'exact', 'apply', 'move', 'have', 'apply', 'move', 'apply', 'case', 'case', 'set', 'move', 'move', 'move', 'apply', 'apply', 'case', 'case', 'have', 'apply', '[by apply d0 | by apply d1].', 'exists', 'replace', 'rewrite', 'apply', 'rewrite', 'apply', 'exact', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'exact', 'split', 'exists', 'replace', 'apply']",0,0,3,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,CVU_cont_open,"['move', 'case', 'exists', 'apply', 'intros', 'case', 'exists', 'apply', 'split', 'split', 'exact', 'apply', 'exact', 'apply', 'rewrite', 'replace', 'move', 'apply', 'case', 'exists', 'split', 'apply', 'apply', 'exact', 'apply', 'apply', 'replace', 'apply', 'apply', 'move', 'case', 'exists', 'apply', 'split', 'split', 'exact', 'apply', 'exact']",1,0,4,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,Dini,"['set', 'set', 'move', 'have', 'apply', 'apply', 'apply', 'suff', 'move', 'replace', 'suff', 'apply', 'apply', 'apply', 'repeat', 'apply', 'move', 'case', 'move', 'case', 'have', 'case', 'contradict', 'rewrite', 'apply', 'elim', 'move', 'move', 'apply', 'case', 'exists', 'case', 'apply', 'apply', 'case', 'move', 'apply', 'move', 'move', 'move', 'apply', 'case', 'exists', 'case', 'apply', 'intuition', 'apply', 'intuition', 'case', 'exists', 'have', 'case', 'contradict', 'rewrite', 'apply', 'case', 'contradict', 'rewrite', 'apply', 'rewrite', 'case', 'rewrite', 'case', 'clear', 'revert', 'elim', 'exists', 'split', 'apply', 'apply', 'case', 'exists', 'split', 'apply', 'split', 'intuition', 'case', 'intuition', 'move', 'exists', 'intuition', 'case', 'replace', 'ring', 'replace', 'apply', 'apply', 'apply', 'apply', 'intuition', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'field_simplify', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'replace', 'replace', 'apply', 'apply', 'apply', 'intuition', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'intuition', 'rewrite', 'apply', 'intuition', 'apply', 'apply', 'intuition', 'apply', 'intuition', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'field_simplify', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'intuition', 'apply', 'apply']",0,0,3,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Seq_fct.json,CVN_CVU_r,"['case', 'assert', 'apply', 'exists', 'case', 'exists', 'replace', 'apply', 'elim', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'by', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'have', 'apply', 'apply', 'move', 'rewrite', 'ring', 'apply', 'apply', 'replace', 'apply', 'ring', 'apply', 'apply', 'replace', 'apply', 'ring', 'apply', 'rewrite', 'apply', 'elim', 'rewrite', 'rewrite', 'apply', 'move', 'rewrite', 'apply', 'easy', 'assert', 'move', 'move', 'apply', 'move', 'rewrite', 'apply', 'apply', 'set', 'exists', 'set', 'apply', 'case', 'exists', 'have', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'ring_simplify', 'apply', 'apply', 'apply', 'apply', 'move', 'rewrite', 'apply', 'apply', 'apply', 'move', 'split', 'apply', 'apply', 'apply', 'move', 'rewrite', 'apply', 'apply', 'apply', 'apply']",0,0,4,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filter_forall,"['intros', 'apply', 'easy', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filter_const,"['intros', 'destruct', 'exact']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filter_le_refl,['now'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filter_le_trans,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_id,['now'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_comp,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_ext_loc,"['intros', 'specialize', 'generalize', 'unfold', 'apply', 'now']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_ext,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_filter_le_1,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_filter_le_2,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_comp,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_ext_loc,"['intros', 'specialize', 'generalize', 'unfold', 'apply', 'intros', 'exists', 'apply', 'now']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_ext,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_filter_le_1,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_filter_le_2,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_fst,"['intros', 'exists', 'try', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_snd,"['intros', 'exists', 'try', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_pair,"['intros', 'unfold', 'apply', 'intros', 'now', 'apply', 'now', 'now']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_comp_2,"['intros', 'change', 'apply', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_comp_2,"['intros', 'change', 'apply', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filter_le_within,"['intros', 'unfold', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_within_ext,"['intros', 'apply', 'unfold', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,subset_filter_proper,"['intros', 'constructor', 'unfold', 'intros', 'destruct', 'exists', 'now', 'now']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_comm,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_assoc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_zero_r,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_opp_r,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_zero_l,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_opp_l,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,opp_zero,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,minus_zero_r,"['intros', 'unfold', 'rewrite', 'apply']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,minus_eq_zero,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_reg_l,"['intros', 'rewrite', 'rewrite', 'now']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,plus_reg_r,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,opp_opp,"['intros', 'apply', 'rewrite', 'apply']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,opp_plus,"['intros', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,opp_minus,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,minus_trans,"['rewrite', 'apply', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_Chasles,"['intros', 'apply', 'apply', 'apply', 'by', 'by']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_n,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_O,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_Sm,"['intros', 'rewrite', 'rewrite', 'by', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_Sn_m,"['intros', 'rewrite', 'rewrite', 'apply', 'by']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_S,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_Sn,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_zero,"['intros', 'rewrite', 'elim', 'apply', 'case', 'rewrite', 'apply', 'apply']",0,0,1,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_const_zero,"['rewrite', 'elim', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_ext_loc,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_ext,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_ext_loc,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_ext,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_plus,"['intros', 'case', 'elim', 'case', 'rewrite', 'apply', 'rewrite', 'try', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'rewrite']",0,0,2,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_plus,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_switch,"['intros', 'rewrite', 'induction', 'simpl', 'intros', 'rewrite', 'apply', 'rewrite', 'by', 'rewrite', 'rewrite', 'clear', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",1,2,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_sum_n,"['intros', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'by']",1,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mult_assoc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mult_one_r,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mult_one_l,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mult_distr_r,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mult_distr_l,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mult_zero_r,"['intros', 'apply', 'rewrite', 'rewrite', 'now']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mult_zero_l,"['intros', 'apply', 'rewrite', 'rewrite', 'now']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,opp_mult_r,"['intros', 'apply', 'rewrite', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,opp_mult_l,"['intros', 'apply', 'rewrite', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,opp_mult_m1,"['intros', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_mult_r,"['intros', 'case', 'elim', 'apply', 'rewrite', 'destruct', 'rewrite', 'try', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'rewrite']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_mult_l,"['intros', 'case', 'elim', 'apply', 'rewrite', 'destruct', 'rewrite', 'try', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'rewrite']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_mult_r,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_mult_l,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,pow_n_plus,"['intros', 'elim', 'rewrite', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,pow_n_comm_1,"['intros', 'elim', 'rewrite', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,pow_n_comm,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_zero,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_opp_one,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_triangle,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_mult,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_eq_zero,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_opp,"['intros', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_minus,"['intros', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_one,"['rewrite', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,abs_ge_0,"['intros', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'ring']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_center,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_sym,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_triangle,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_le,"['intros', 'destruct', 'assert', 'apply', 'assert', 'cond_pos', 'apply', 'replace', 'apply', 'assumption', 'apply', 'rewrite']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,close_refl,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,close_sym,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,close_trans,"['intros', 'rewrite', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,AbsRing_ball_center,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,AbsRing_ball_sym,"['intros', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,fct_ball_center,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,fct_ball_sym,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,fct_ball_triangle,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_locally,"['intros', 'exists', 'intros', 'exists', 'apply', 'rewrite', 'now']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_singleton,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_ball,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_not',"['intros', 'set', 'destruct', 'exists', 'now', 'exists', 'split', 'apply', 'intros', 'apply', 'intros', 'apply', 'apply', 'apply', 'assert', 'apply', 'intros', 'apply', 'intros', 'apply', 'apply', 'apply', 'split', 'apply', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'simpl', 'intros', 'apply', 'apply', 'intros', 'apply', 'contradict', 'apply', 'apply', 'now']",3,1,3,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_not,"['intros', 'destruct', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_ex_not,"['intros', 'apply', 'destruct', 'intros', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_ex_dec,"['intros', 'destruct', 'apply', 'intros', 'now', 'exists', 'intros', 'destruct', 'exact', 'exfalso', 'now']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,is_filter_lim_filter_le,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,is_filter_lim_close,"['intros', 'specialize', 'specialize', 'generalize', 'destruct', 'rewrite', 'apply', 'apply', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,is_filter_lim_locally_close,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_const,"['intros', 'unfold', 'apply', 'intros', 'apply', 'apply']",3,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_locally_close,"['intros', 'assert', 'apply', 'specialize', 'assert', 'apply', 'specialize', 'unfold', 'generalize', 'apply', 'case', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_locally_close,"['intros', 'assert', 'apply', 'specialize', 'assert', 'apply', 'specialize', 'unfold', 'generalize', 'apply', 'destruct', 'rewrite', 'apply', 'exact', 'apply', 'rewrite', 'exact']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,is_filter_lim_filtermap,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_open,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_ext,"['intros', 'generalize', 'apply', 'intros', 'apply']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_and,"['intros', 'apply', 'now', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_or,"['intros', 'generalize', 'apply', 'intros', 'now', 'generalize', 'apply', 'intros', 'now']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_true,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_false,['now'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_comp,"['intros', 'apply', 'exact', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_not,"['intros', 'apply', 'intros', 'apply', 'intros', 'now']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_ext,"['intros', 'apply', 'contradict', 'apply', 'move', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_and,"['intros', 'split', 'apply', 'contradict', 'apply', 'move', 'now', 'apply', 'contradict', 'apply', 'move', 'now']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_false,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_comp,"['intros', 'apply', 'contradict', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_filterlim,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,complete_cauchy,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,close_lim,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,iota_correct_weak,"['intros', 'set', 'assert', 'apply', 'constructor', 'intros', 'exists', 'now', 'constructor', 'now', 'intros', 'split', 'now', 'now', 'intros', 'apply', 'now', 'intro', 'exists', 'intros', 'now', 'assert', 'apply', 'clear', 'now']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,close_iota,"['intros', 'apply', 'intros', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,cauchy_distance,"['intros', 'split', 'intros', 'case', 'exists', 'split', 'by', 'move', 'rewrite', 'apply', 'apply', 'exact', 'intros', 'case', 'destruct', 'exists', 'move', 'apply', 'by']",0,0,2,2,0,6
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_locally_cauchy,"['intros', 'split', 'intros', 'exists', 'intros', 'refine', 'now', 'clear', 'intros', 'destruct', 'destruct', 'exists', 'unfold', 'generalize', 'apply', 'intros', 'now', 'intros', 'exists', 'split', 'apply', 'now', 'intros', 'rewrite', 'apply', 'apply', 'exact', 'exact']",1,0,3,2,0,9
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlimi_locally_cauchy,"['intros', 'assert', 'apply', 'exact', 'exact', 'split', 'intros', 'exists', 'intros', 'refine', 'now', 'clear', 'intros', 'case', 'assert', 'destruct', 'exists', 'unfold', 'apply', 'intros', 'exists', 'apply', 'exact', 'intros', 'exists', 'split', 'assert', 'now', 'assert', 'apply', 'intros', 'now', 'intros', 'rewrite', 'apply', 'apply', 'now', 'now']",1,0,5,2,0,7
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,complete_cauchy_fct,"['move', 'set', 'have', 'case', 'split', 'move', 'case', 'exists', 'split', 'apply', 'move', 'apply', 'move', 'apply', 'move', 'apply', 'assert', 'move', 'case', 'exists', 'move', 'apply', 'by', 'assert', 'move', 'apply', 'apply', 'exact', 'move', 'generalize', 'case', 'simpl', 'case', 'apply', 'move', 'move', 'move', 'simpl', 'unfold', 'generalize', 'apply', 'case', 'rewrite', 'apply', 'apply', 'apply', 'apply']",0,2,2,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,close_lim_fct,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_switch_1,"['intros', 'case', 'apply', 'move', 'have', 'assert', 'apply', 'move', 'by', 'apply', 'simpl', 'intros', 'apply', 'move', 'assert', 'apply', 'move', 'by', 'apply', 'by', 'move', 'case', 'intros', 'move', 'case', 'move', 'apply', 'rewrite', 'apply', 'apply', 'by', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'by', 'apply']",2,2,4,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_switch_2,"['move', 'case', 'move', 'generalize', 'assert', 'exists', 'apply', 'case', 'exists', 'apply', 'apply', 'move', 'move', 'case', 'generalize', 'case', 'exists', 'split', 'by', 'move', 'move', 'move', 'move', 'case', 'replace', 'apply', 'apply', 'apply', 'apply', 'now', 'move', 'exists']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_switch,"['move', 'destruct', 'exists', 'split', 'exact', 'case', 'now']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_switch_dom,"['set', 'set', 'set', 'set', 'intros', 'refine', 'now', 'intros', 'now', 'intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_assoc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_one,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_distr_l,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_distr_r,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_zero_r,"['intros', 'apply', 'rewrite', 'rewrite', 'now']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_zero_l,"['intros', 'apply', 'rewrite', 'rewrite', 'now']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_opp_l,"['intros', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_opp_r,"['intros', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_opp_one,"['intros', 'rewrite', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_minus_distr_l,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,scal_minus_distr_r,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_scal_l,"['intros', 'case', 'elim', 'apply', 'rewrite', 'destruct', 'rewrite', 'try', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'rewrite']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_scal_l,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_triangle,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_scal,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_compat1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_compat2,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_eq_zero,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_zero,"['apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'exact']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_factor_gt_0,"['rewrite', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_opp,"['intros', 'apply', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_ge_0,"['intros', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'ring']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_le_locally_norm,"['intros', 'assert', 'apply', 'apply', 'apply', 'apply', 'exists', 'intros', 'apply', 'unfold', 'rewrite', 'rewrite', 'apply', 'apply', 'apply']",1,0,3,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_norm_le_locally,"['intros', 'exists', 'intros', 'apply', 'now']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_norm_ball_norm,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_norm_ball,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_ball_norm,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_norm_center,"['eapply', 'rewrite', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_norm_dec,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_norm_sym,"['intros', 'unfold', 'rewrite', 'rewrite', 'apply']",1,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,ball_norm_le,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,is_filter_lim_locally_unique,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_locally_unique,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,AbsRing_norm_compat2,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_plus,"['intros', 'apply', 'intros', 'exists', 'now', 'now', 'exact', 'apply', 'apply', 'intros', 'exists', 'apply', 'apply', 'intros', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'by']",2,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_opp,"['intros', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_mult,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,iota_unique,"['intros', 'apply', 'intros', 'apply', 'intros', 'rewrite', 'apply']",2,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,iota_correct,"['intros', 'rewrite', 'try', 'intros', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,iota_is_filter_lim,"['intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,iota_filterlim_locally,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,iota_filterlimi_locally,"['intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_plus_comm,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_plus_assoc,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_plus_zero_r,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_plus_opp_r,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_ball_center,"['intros', 'split', 'apply']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_ball_sym,"['intros', 'split', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_ball_triangle,"['intros', 'split', 'eapply', 'eassumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_scal_assoc,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_scal_one,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_scal_distr_l,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_scal_distr_r,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sqrt_plus_sqr,"['intros', 'split', 'rewrite', 'apply', 'apply', 'rewrite', 'ring_simplify', 'apply', 'apply', 'intros', 'rewrite', 'rewrite', 'try', 'try', 'apply', 'simpl', '[ rewrite Rplus_comm | ]', 'rewrite', 'apply', 'ring_simplify', 'apply', 'rewrite']",1,1,4,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_norm_triangle,"['intros', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'simpl', 'ring_simplify', 'rewrite', 'rewrite', 'ring_simplify', 'replace', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'ring_simplify', 'replace', 'apply', 'repeat', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,1,3,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_norm_compat1,"['intros', 'generalize', 'rewrite', 'intros', 'split', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_norm_compat2,"['intros', 'apply', 'simpl', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'now', 'apply', 'now', 'apply', 'apply']",1,2,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,prod_norm_eq_zero,"['intros', 'apply', 'rewrite', 'apply', 'destruct', 'apply', 'apply', 'simpl', 'now', 'apply', 'apply']",1,1,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,norm_prod,"['rewrite', 'rewrite', 'apply', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mk_Tn_bij,"['induction', 'simpl', 'now', 'rewrite', 'destruct']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,coeff_Tn_bij,"['revert', 'induction', 'apply', 'destruct', 'by', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,coeff_Tn_ext,"['split', 'move', 'induction', 'apply', 'destruct', 'simpl', 'by', 'apply', 'induction', 'apply', 'move', 'now', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mk_Tn_ext,"['move', 'induction', 'simpl', 'split', 'intros', 'by', 'apply', 'apply', 'apply', 'apply', 'apply', 'destruct', 'apply', 'move', 'apply', 'apply']",0,1,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mk_matrix_bij,"['unfold', 'unfold', 'rewrite', 'apply', 'intros', 'rewrite']",1,1,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,coeff_mat_bij,"['intros', 'unfold', 'rewrite']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,coeff_mat_ext_aux,"['split', 'move', 'repeat', 'unfold', 'rewrite', 'unfold', 'apply', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,coeff_mat_ext,"['split', 'move', 'intro', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,mk_matrix_ext,"['split', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'apply', 'by', 'by']",2,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mplus_comm,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mplus_assoc,"['intros', 'apply', 'rewrite', 'apply']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mplus_zero_r,"['intros', 'apply', 'rewrite', 'apply']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mplus_opp_r,"['intros', 'apply', 'rewrite', 'apply']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mone_seq_diag,"['move', 'induction']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mone_seq_not_diag,"['elim', 'destruct', 'apply', 'contradict', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mmult_assoc,"['intros', 'apply', 'unfold', 'transitivity', 'destruct', 'simpl', 'unfold', 'simpl', 'rewrite', 'apply', 'simpl', 'apply', 'rewrite', 'apply', 'transitivity', 'destruct', 'simpl', 'rewrite', 'unfold', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'apply', 'simpl', 'apply', 'rewrite', 'destruct', 'simpl', 'unfold', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'apply', 'transitivity', 'rewrite', 'apply', 'apply', 'apply', 'unfold', 'rewrite', 'apply', 'by']",1,5,3,4,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mmult_distr_r,"['intros', 'unfold', 'simpl', 'unfold', 'apply', 'rewrite', 'rewrite', 'destruct', 'simpl', 'unfold', 'simpl', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",1,3,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Mmult_distr_l,"['intros', 'unfold', 'simpl', 'unfold', 'apply', 'rewrite', 'rewrite', 'destruct', 'simpl', 'unfold', 'simpl', 'rewrite', 'apply', 'rewrite', 'apply', 'apply']",1,3,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Rabs_m1,"['rewrite', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,R_complete_ax1,"['intros', 'unfold', 'generalize', 'generalize', 'intros', 'set', 'destruct', 'assert', 'apply', 'apply', 'revert', 'apply', 'unfold', 'simpl', 'intros', 'apply', 'apply', 'clear', 'destruct', 'assert', 'split', 'Fourier', 'assert', 'apply', 'apply', 'intros', 'apply', 'apply', 'generalize', 'apply', 'unfold', 'simpl', 'intros', 'apply', 'destruct', 'apply', 'destruct', 'clear', 'simpl', 'Fourier', 'revert', 'apply', 'unfold', 'simpl', 'intros', 'apply', 'apply', 'assert', 'assert', 'clear', 'destruct', 'split', 'Fourier', 'destruct', 'elim', 'intros', 'apply', 'apply', 'generalize', 'apply', 'intros', 'revert', 'apply', 'apply', 'replace', 'apply', 'apply', 'generalize', 'replace', 'apply', 'apply', 'apply', 'apply', 'destruct', 'elim', 'now']",5,2,4,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,R_complete,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,R_complete_ax2,"['intros', 'unfold', 'apply', 'split', 'apply', 'apply']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,R_complete_close,"['intros', 'replace', 'intros', 'apply', 'exact']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_Reals,"['intros', 'induction', 'simpl', 'apply', 'rewrite']",0,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_Reals,"['induction', 'apply', 'rewrite', 'case', 'rewrite', 'rewrite', 'replace', 'rewrite', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_const,"['rewrite', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_const,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,sum_n_m_le,"['intros', 'case', 'elim', 'apply', 'rewrite', 'rewrite', 'apply', 'destruct', 'rewrite', 'try', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply']",0,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,pow_n_pow,"['intros', 'induction', 'simpl', 'easy', 'now']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_norm,"['intros', 'apply', 'apply', 'exists', 'move', 'apply', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_norm_zero,"['intros', 'apply', 'generalize', 'unfold', 'simpl', 'apply', 'rewrite', 'apply']",1,2,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_lt,"['intros', 'apply', 'exists', 'intros', 'replace', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_gt,"['intros', 'apply', 'exists', 'intros', 'replace', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_neq,"['intros', 'apply', 'intros', 'split', 'apply', 'apply', 'apply', 'apply', 'apply']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_le,"['intros', 'apply', 'intros', 'split', 'apply', 'apply', 'apply', 'apply']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_ge,"['intros', 'apply', 'intros', 'split', 'apply', 'apply', 'apply', 'apply']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,closed_eq,"['intros', 'apply', 'intros', 'destruct', 'intuition', 'apply', 'apply']",2,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_interval,"['move', 'case', 'exists', 'now', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_locally,"['intros', 'split', 'intros', 'exists', 'simpl', 'intros', 'now', 'apply', 'intros', 'apply', 'split']",3,1,1,0,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_impl_strong,"['intros', 'apply', 'apply', 'apply', 'apply', 'generalize', 'apply', 'intros', 'apply', 'now']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_singleton,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_impl,"['intros', 'apply', 'exists', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_forall,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_align,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_1d_const_x,"['intros', 'exists', 'intros', 'apply', 'rewrite', 'apply', 'exact']",1,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_1d_const_y,"['intros', 'exists', 'intros', 'apply', 'exact', 'rewrite', 'apply']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_1d_strong,"['intros', 'apply', 'assert', 'apply', 'apply', 'destruct', 'assert', 'now', 'set', 'assert', 'apply', 'apply', 'now', 'set', 'exists', 'exists', 'apply', 'replace', 'apply', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'now', 'now', 'apply', 'rewrite', 'field_simplify', 'apply', 'now', 'replace', 'apply', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'now', 'now', 'apply', 'rewrite', 'field_simplify', 'apply', 'now', 'apply', 'exists', 'replace', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply']",1,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_1d,"['intros', 'apply', 'apply', 'apply', 'specialize', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_2d_ex_dec,"['intros', 'destruct', 'now', 'destruct', 'exists', 'intros', 'apply', 'apply', 'apply', 'exists', 'intros', 'apply', 'simpl', 'now']",1,1,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_Rbar_lt,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_Rbar_gt,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_Rbar_lt',"['intros', 'now', 'easy', 'destruct', 'now', 'now', 'easy']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,open_Rbar_gt',"['intros', 'now', 'destruct', 'now', 'easy', 'now', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Rbar_locally'_le,"['intros', 'exists', 'intros', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,Rbar_locally'_le_finite,"['intros', 'exists', 'intros', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,filterlim_Rbar_loc_seq,"['intros', 'unfold', 'case', 'case', 'apply', 'exists', 'apply', 'simpl', 'rewrite', 'ring_simplify', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'exact', 'apply', 'apply', 'apply', 'apply', 'apply', 'ring_simplify', 'apply', 'case', 'apply', 'exists', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'case', 'apply', 'exists', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply']",1,2,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,continuity_pt_locally,"['intros', 'split', 'intros', 'move', 'rewrite', 'exists', 'destruct', 'rewrite', 'apply', 'apply', 'intros', 'move', 'exists', 'split', 'apply', 'intros', 'exact']",1,0,3,2,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,continuity_pt_locally',"['intros', 'split', 'intros', 'move', 'rewrite', 'exists', 'destruct', 'rewrite', 'apply', 'apply', 'intros', 'move', 'exists', 'split', 'apply', 'intros', 'apply', 'exact', 'apply', 'now']",2,0,2,2,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Hierarchy.json,locally_pt_comp,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,neq_succ_0,"['move', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sub_succ,['done'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sub_succ_l,"['move', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,lt_neq,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sub_succ_r,"['case', 'case', 'rewrite', 'rewrite', 'move', 'rewrite']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sub_add,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,le_pred_le_succ,"['case', 'split', 'exact', 'split', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,floor_ex,"['intros', 'exists', 'split', 'assert', '[ring | rewrite {2}Rw => {Rw}].', 'assert', '[ring | rewrite Rw', 'clear', 'apply', 'assert', '[ring | rewrite {1}Rw', 'clear', 'apply']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,floor1_ex,"['intros', 'destruct', 'destruct', 'exists', 'split', 'apply', 'apply', 'exists', 'rewrite', 'split', 'apply', 'rewrite', 'apply']",0,0,2,1,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,nfloor_ex,"['intros', 'destruct', 'destruct', 'apply', 'contradict', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'destruct', 'exists', 'apply', 'exists', 'rewrite', 'rewrite', 'apply', 'contradict', 'apply', 'apply']",0,0,2,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,nfloor1_ex,"['intros', 'destruct', 'destruct', 'exists', 'split', 'apply', 'apply', 'destruct', 'contradict', 'rewrite', 'simpl', 'apply', 'exists', 'rewrite', 'split', 'apply', 'rewrite', 'apply']",0,2,2,1,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,INRp1_pos,"['intros', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rlt_nat,"['intro', 'destruct', 'rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rle_pow_lin,"['intro', 'induction', 'apply', 'simpl', 'ring', 'rewrite', 'replace', 'apply', 'apply', 'exact', 'replace', 'ring', 'apply', 'pattern', 'rewrite', 'apply', 'exact', 'clear', 'apply', 'pattern', 'rewrite', 'apply', 'exact']",0,1,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,C_n_n,"['intros', 'unfold', 'rewrite', 'simpl', 'field', 'apply']",1,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,C_n_0,"['intros', 'unfold', 'rewrite', 'simpl', 'field', 'apply']",1,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,pow2_INR,"['elim', 'rewrite', 'field']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,pow2_pos,"['apply', 'rewrite', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rinv_le_contravar,"['intros', 'apply', 'apply', 'apply', 'now', 'rewrite', 'apply']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rinv_lt_cancel,"['intro', 'move', 'apply', 'contradict', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_1,"['intros', 'unfold', 'rewrite', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_plus,"['intros', 'field', 'split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_minus,"['intros', 'field', 'split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rplus_lt_reg_l,['first'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rplus_lt_reg_r,"['first', 'apply', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rle_div_l,"['split', 'intros', 'replace', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rle_div_r,"['split', 'intros', 'replace', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rlt_div_l,"['split', 'intros', 'replace', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rlt_div_r,"['split', 'intros', 'replace', 'apply', 'apply', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_lt_0_compat,"['intros', 'apply', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_le_0_compat,"['intros', 'apply', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_lt_1,"['intros', 'pattern', 'rewrite', 'split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_le_1,"['intros', 'pattern', 'rewrite', 'split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rle_mult_Rlt,"['intros', 'apply', 'pattern', 'rewrite', 'apply', 'auto']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmult_le_0_r,"['intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmult_le_0_l,"['intros', 'rewrite', 'apply', 'auto']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,pow2_gt_0,"['destruct', 'contradict', 'apply', 'case', 'apply', 'case', 'contradict', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rminus_eq_0,"['intros', 'ring']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rdiv_minus_distr,"['intros', 'field', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmult_minus_distr_r,"['intros', 'unfold', 'rewrite', 'apply']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rminus_eq_compat_l,"['split', 'intros', 'apply', 'rewrite', 'reflexivity', 'replace', 'replace', 'apply', 'rewrite', 'reflexivity']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Ropp_plus_minus_distr,"['intros', 'unfold', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rle_minus_l,"['split', 'intros', 'replace', 'apply', 'apply', 'replace', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rlt_minus_r,"['split', 'intros', 'replace', 'apply', 'apply', 'replace', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rlt_minus_l,"['split', 'intros', 'replace', 'apply', 'apply', 'replace', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rle_minus_r,"['split', 'intros', 'replace', 'apply', 'apply', 'replace', 'apply', 'apply']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rminus_le_0,"['intros', 'pattern', 'rewrite', 'split', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_rw,"['intro', 'unfold', 'revert', 'induction', 'intros', 'apply', 'intuition', 'rewrite', 'simpl', 'revert', 'destruct', 'intro', 'rewrite', 'simpl', 'ring_simplify', 'clear', 'induction', 'simpl', 'reflexivity', 'rewrite', 'reflexivity', 'rewrite', 'simpl', 'ring_simplify', 'apply', 'rewrite', 'clear', 'induction', 'simpl', 'reflexivity', 'rewrite', 'reflexivity']",2,2,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_rw_0,"['rewrite', 'elim', 'rewrite', 'rewrite']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_n_Sm,"['move', 'rewrite', 'rewrite', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_u_Sk,"['move', 'rewrite', 'simpl', 'elim', 'rewrite', 'repeat', 'rewrite']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_u_add,"['move', 'rewrite', 'rewrite', 'elim', 'rewrite', 'rewrite', 'repeat', 'ring']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_Sn_m,"['move', 'elim', 'apply', 'rewrite', 'try', 'rewrite', 'try', 'replace', 'apply', 'case', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'apply', 'rewrite', 'try', 'case', 'apply', 'apply', 'elim', 'rewrite', 'repeat', 'intuition', 'rewrite', 'ring']",0,2,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_R0_skip,"['suff', 'case', 'move', 'rewrite', 'transitivity', 'replace', 'elim', 'simpl', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'replace', 'elim', 'rewrite', 'apply', 'rewrite', 'move', 'elim', 'apply', 'case', 'rewrite', 'try', 'replace', 'rewrite', 'try', 'rewrite', 'try', 'rewrite', 'try', 'apply', 'rewrite', 'elim', 'rewrite', 'apply', 'rewrite', 'intuition', 'rewrite', 'try', 'rewrite', 'rewrite', 'rewrite', 'try', 'rewrite', 'rewrite', 'replace', 'rewrite', 'intuition']",0,1,2,4,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_f_chasles,"['move', 'rewrite', 'ring', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rplus_max_distr_l,"['intros', 'unfold', 'case', 'intros', 'case', 'intros', 'try', 'elim', 'apply', 'elim', 'apply']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rplus_max_distr_r,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rplus_min_distr_l,"['intros', 'unfold', 'case', 'intros', 'case', 'intros', 'try', 'elim', 'apply', 'elim', 'apply']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rplus_min_distr_r,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmult_max_distr_l,"['intros', 'destruct', 'unfold', 'case', 'intros', 'apply', 'case', 'intuition', 'apply', 'case', 'intuition', 'rewrite', 'clear', 'repeat', 'unfold', 'assert', 'case', 'intuition']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmult_max_distr_r,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmult_min_distr_l,"['intros', 'destruct', 'unfold', 'case', 'intros', 'apply', 'case', 'intuition', 'apply', 'case', 'intuition', 'rewrite', 'clear', 'repeat', 'unfold', 'assert', 'case', 'intuition']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmult_min_distr_r,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmin_assoc,"['intros', 'unfold', 'destruct', 'destruct', 'destruct', 'destruct', 'try', 'contradict', 'apply', 'auto', 'contradict', 'apply', 'apply', 'auto']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmax_assoc,"['intros', 'unfold', 'destruct', 'destruct', 'destruct', 'destruct', 'try', 'contradict', 'apply', 'auto', 'contradict', 'apply', 'apply', 'auto']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmax_le_compat,"['intros', 'unfold', 'destruct', 'destruct', 'apply', 'apply', 'apply', 'apply', 'apply', 'destruct', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmax_opp_Rmin,"['intros', 'destruct', 'rewrite', 'rewrite', 'reflexivity', 'apply', 'apply', 'apply', 'rewrite', 'rewrite', 'reflexivity', 'apply', 'apply', 'apply', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmin_opp_Rmax,"['intros', 'rewrite', 'unfold', 'case', 'intro', 'apply', 'unfold', 'case', 'intuition', 'apply', 'unfold', 'case', 'intuition']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmax_mult,"['intros', 'repeat', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmax_le_Rplus,"['intros', 'destruct', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rplus_le_Rmax,"['intros', 'rewrite', 'destruct', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmin_Rmax_l,"['split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmin_Rmax_r,"['split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rmin_Rmax,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_div,"['intros', 'unfold', 'rewrite', 'rewrite', 'reflexivity', 'apply']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_eq_0,"['intros', 'unfold', 'destruct', 'rewrite', 'apply', 'apply', 'apply']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_le_between,"['split', 'split', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'intros', 'unfold', 'destruct', 'rewrite', 'apply', 'apply', 'apply']",2,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_le_between',"['split', 'intros', 'cut', 'intros', 'split', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'split', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,2,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_lt_between,"['split', 'intros', 'split', 'now', 'intros', 'now']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_lt_between',"['split', 'intros', 'cut', 'intros', 'split', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'split', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,2,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_le_between_min_max,"['intros', 'case', 'intros', 'rewrite', ""[idtac|exact H']."", 'rewrite', ""[idtac|exact H']."", 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'exact', 'apply', 'apply', 'rewrite', '[idtac|left', 'exact', 'rewrite', '[idtac|left', 'exact', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'left', 'apply', 'apply', 'apply']",0,0,2,3,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_le_between_Rmax,"['intros', 'unfold', 'destruct', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_lt_between_Rmax,"['intros', 'unfold', 'destruct', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Rabs_maj2,"['intros', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Req_lt_aux,"['intros', 'apply', 'apply', 'apply', 'apply', 'intros', 'rewrite', 'apply', 'apply', 'apply']",2,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Req_le_aux,"['intros', 'apply', 'apply', 'apply', 'apply', 'intros', 'rewrite', 'apply', 'apply']",2,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,is_pos_div_2,"['unfold', 'apply', '[apply eps | apply Rinv_0_lt_compat, Rlt_0_2].']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_0,"['unfold', 'case', 'elim', 'exact', 'elim']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_opp,"['unfold', 'case', 'case', 'lra']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_eq_1,"['intros', 'unfold', 'case', 'lra']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_eq_m1,"['intros', 'unfold', 'case', 'lra']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_le,"['intros', 'unfold', 'case', 'case', 'lra']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_ge_0,"['intros', 'rewrite', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_le_0,"['intros', 'rewrite', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_neq_0,"['intros', 'unfold', 'case', 'lra']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_mult,"['wlog', 'case', 'case', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'ring', 'apply', 'wlog', 'case', 'case', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'ring', 'apply', 'have', 'apply', 'rewrite', 'rewrite']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sign_min_max,"['unfold', 'case', 'assert', 'rewrite', 'apply', 'rewrite', 'apply', 'assert', 'apply', 'contradict', 'apply', 'apply', 'now', 'rewrite', 'ring']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,sum_INR,"['elim', 'rewrite', 'rewrite', 'ring', 'rewrite', 'field']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,interval_finite_subdiv,"['move', 'suff', 'set', 'case', 'set', 'exists', 'split', 'simpl', 'rewrite', 'ring', 'split', 'replace', 'simpl', 'rewrite', 'rewrite', 'case', 'simpl', 'rewrite', 'rewrite', 'field', 'apply', 'move', 'rewrite', 'split', 'rewrite', 'rewrite', 'ring_simplify', 'apply', 'elim', 'case', 'apply', 'apply', 'apply', 'elim', 'case', 'apply', 'apply', 'rewrite', 'rewrite', 'ring_simplify', 'apply', 'elim', 'case', 'apply', 'apply', 'elim', 'case', 'apply', 'apply', 'apply', 'set', 'exists', 'split', 'simpl', 'rewrite', 'ring', 'split', 'simpl', 'rewrite', 'move', 'rewrite', 'apply', 'split', 'rewrite', 'have', 'apply', 'elim', 'case', 'apply', 'apply', 'apply', 'case', 'case', 'rewrite', 'rewrite', 'ring_simplify', 'apply', 'apply', 'simpl', 'rewrite', 'case', 'rewrite', 'replace', 'rewrite', 'move', 'rewrite', 'case', 'rewrite', 'apply', 'apply', 'apply', 'case', 'case', 'elim', 'case', 'apply', 'intuition', 'rewrite', 'rewrite', 'have', 'apply', 'elim', 'case', 'apply', 'apply', 'apply', 'case', 'case', 'rewrite', 'rewrite', 'ring_simplify', 'apply', 'apply', 'simpl', 'rewrite', 'case', 'rewrite', 'replace', 'rewrite', 'move', 'rewrite', 'case', 'rewrite', 'apply', 'replace', 'apply', 'apply', 'apply', 'elim', 'case', 'apply', 'intuition', 'rewrite', 'apply', 'apply', 'apply']",0,3,2,4,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,interval_finite_subdiv_between,"['case', 'case', 'case', 'move', 'rewrite', 'suff', 'move', 'split', 'apply', 'intuition', 'case', 'apply', 'apply', 'intuition', 'elim', 'apply', 'case', 'clear', 'elim', 'apply', 'apply', 'apply', 'intuition', 'apply', 'case', 'apply', 'apply', 'try', 'move', 'apply', 'apply']",0,0,2,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,SSR_leq,"['set', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,SSR_minus,['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,rcons_ind,"['move', 'move', 'move', 'elim', 'case', 'have', '[| case => s0 [t0 H]].', 'elim', 'exists', 'exists', 'case', 'exists', 'exists', 'rewrite', 'rewrite', 'apply', 'rewrite']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,rcons_dec,"['move', 'case', 'have', '[| case => s0 [t0 H]].', 'elim', 'exists', 'exists', 'case', 'exists', 'exists', 'rewrite', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,size_rcons_pos,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,foldr_rcons,"['move', 'elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,foldl_rcons,"['move', 'elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,head_rcons,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,behead_rcons,"['case', 'contradict', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,behead_rev,"['case', 'elim', 'rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,pairmap_rcons,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,map_pairmap,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,pairmap_map,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,size_unzip1,['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,size_unzip2,['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,zip_cons,['by'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,zip_rcons,"['elim', 'case', 'rewrite', 'apply']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip1_rcons,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip2_rcons,"['elim', 'rewrite']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip1_belast,"['elim', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip2_belast,"['elim', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip1_behead,"['elim', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip2_behead,"['elim', 'case']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip1_fst,['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,unzip2_snd,['elim'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,size_belast',"['case', 'rewrite']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,head_map,['case'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,StepFun_bound,"['case', 'rename', 'rename', 'set', 'set', 'set', 'set', 'set', 'set', 'exists', 'rewrite', 'case', 'move', 'contradict', 'apply', 'move', 'case', 'move', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply', 'move', 'apply', 'case', 'have', 'rewrite', 'rewrite', 'elim', 'simpl', 'case', 'exists', 'intuition', 'exists', 'intuition', 'case', 'exists', 'intuition', 'have', 'move', 'apply', 'apply', 'case', 'exists', 'split', 'simpl', 'apply', 'apply', 'case', 'apply', 'case', 'rewrite', 'apply', 'rewrite', 'case', 'apply', 'move', 'elim', 'move', 'case', 'apply', 'move', 'apply', 'move', 'case', 'apply', 'move', 'apply', 'apply', 'split', 'rewrite', 'apply', 'case', 'apply', 'move', 'elim', 'move', 'apply', 'move', 'case', 'apply', 'move', 'apply', 'rewrite', 'apply', 'elim', 'apply', 'apply']",0,2,3,3,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Riemann_integrable_bound,"['move', 'case', 'case', 'case', 'exists', 'apply', 'have', 'first', 'move', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Riemann_integrable_ext,"['intros', 'intro', 'elim', 'clear', 'intros', 'exists', 'exists', 'split', 'intros', 'rewrite', 'apply', 'apply']",0,0,1,2,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,RiemannInt_ext,"['intros', 'destruct', 'apply', 'apply', 'intros', 'apply', 'split', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'split', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply']",2,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Riemann_integrable_const,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,RiemannInt_const,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Riemann_integrable_plus,"['intros', 'apply', 'intros', 'ring', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,RiemannInt_plus,"['intros', 'rewrite', 'rewrite', 'apply', 'intros', 'ring']",1,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Riemann_integrable_minus,"['intros', 'apply', 'intros', 'ring', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,RiemannInt_minus,"['intros', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'apply', 'intros', 'ring']",1,0,1,5,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Riemann_integrable_opp,"['intros', 'apply', 'intros', 'ring', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,RiemannInt_opp,"['intros', 'rewrite', 'rewrite', 'rewrite', 'assert', 'rewrite', 'ring', 'rewrite', 'clear', 'rewrite', 'apply', 'intros', 'ring']",1,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,Riemann_integrable_scal,"['intros', 'apply', 'intros', 'ring', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,RiemannInt_scal,"['intros', 'rewrite', 'assert', 'rewrite', 'ring', 'rewrite', 'clear', 'rewrite', 'apply', 'intros', 'ring']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,ln_pow,"['intro', 'induction', 'rewrite', 'simpl', 'ring', 'rewrite', 'simpl', 'rewrite', 'try', 'rewrite', 'ring']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,ln_le,"['intros', 'destruct', 'left', 'apply', 'exact', 'exact', 'rewrite', 'exact']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,ln_div,"['intros', 'unfold', 'rewrite', 'rewrite', 'ring', 'exact', 'exact', 'apply', 'exact']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Rcomplements.json,derivable_pt_lim_atan,"['intros', 'apply', 'replace', 'rewrite', 'apply']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,continuous_abs,"['apply', 'exists', 'eapply', 'wlog', 'case', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'eapply', 'apply', 'rewrite', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,filterlim_abs_0,"['intros', 'exists', 'intros', 'apply', 'revert', 'rewrite', 'by', 'apply', 'assert', 'contradict', 'apply', 'case', 'rewrite']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,continuous_Rabs,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,filterlim_Rabs_0,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_Rabs_0,"['intros', 'eapply', 'intros', 'apply', 'generalize', 'rewrite', 'apply', 'intros', 'apply']",2,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,filterlim_Rinv_0_right,"['intros', 'have', 'apply', 'apply', 'apply', 'exists', 'apply', 'apply', 'replace', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'rewrite', 'exact']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_Rinv_0_right,"['intros', 'eapply', 'intros', 'apply', 'generalize', 'rewrite', 'apply', 'apply']",2,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_Rinv_0_left,"['intros', 'eapply', 'intros', 'apply', 'generalize', 'rewrite', 'apply', 'apply']",2,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,filterlim_sqrt_p,"['apply', 'move', 'exists', 'apply', 'rewrite', 'apply', 'split', 'apply', 'apply', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_sqrt_p,"['intros', 'eapply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,filterdiff_sqrt,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,nat_to_ring_O,['rewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,nat_to_ring_Sn,"['case', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,Derive_n_pow_smalli,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,Derive_n_pow_bigi,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,Derive_n_pow,"['case', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,ex_derive_n_pow,"['case', 'exists', 'rewrite', 'case', 'apply', 'apply', 'omega']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,exp_ge_taylor,"['move', 'rewrite', 'case', 'apply', 'apply', 'case', 'move', 'apply', 'apply', 'apply', 'elim', 'rewrite', 'apply', 'elim', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'move', 'rewrite', 'apply', 'ring_simplify', 'apply', 'apply', 'apply']",0,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,exp_Reals,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,ex_lim_exp,"['case', 'apply', 'apply', 'exists', 'apply', 'exists', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,Lim_exp,"['apply', 'case', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_div_expm1_0,"['apply', 'move', 'case', 'exists', 'rewrite', 'rewrite', 'move', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_ln_p,"['apply', 'move', 'exists', 'rewrite', 'apply', 'apply', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_ln_0,"['intros', 'exists', 'apply', 'rewrite', 'apply', 'exact', 'rewrite', 'rewrite', 'exact', 'now']",0,0,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_div_ln1p_0,"['apply', 'move', 'case', 'exists', 'rewrite', 'rewrite', 'move', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,is_lim_sinc_0,"['apply', 'move', 'case', 'exists', 'rewrite', 'rewrite', 'move', 'rewrite']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/ElemFct.json,atan_Reals,"['wlog', 'case', 'apply', 'rewrite', 'replace', 'ring', 'apply', 'rewrite', 'left', 'rewrite', 'rewrite', 'case', 'rewrite', 'try', 'rewrite', 'case', 'case', 'apply', 'rewrite', 'apply', 'apply', 'move', 'apply', 'rewrite', 'apply', 'rewrite', 'rewrite', 'simpl', 'field', 'rewrite', 'apply', 'contradict', 'split', 'apply', 'apply', 'ring_simplify', 'apply', 'left', 'left', 'rewrite']",0,1,3,3,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,linear_zero,"['intros', 'rewrite', 'rewrite', 'exact', 'exact']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,linear_opp,"['intros', 'apply', 'rewrite', 'apply', 'exact']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_linear_ext,"['intros', 'split', 'intros', 'rewrite', 'apply', 'intros', 'rewrite', 'apply', 'case', 'exists', 'split', 'apply', 'intros', 'rewrite', 'apply']",1,0,1,2,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_linear_zero,"['repeat', 'move', 'rewrite', 'move', 'rewrite', 'exists', 'split', 'exact', 'move', 'rewrite', 'apply']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_linear_id,"['repeat', 'exists', 'split', 'exact', 'move', 'rewrite', 'apply']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_linear_opp,"['repeat', 'move', 'now', 'move', 'apply', 'apply', 'exists', 'split', 'exact', 'move', 'rewrite', 'apply']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_linear_scal_l,"['split', 'move', 'apply', 'move', 'apply', 'exists', 'split', 'apply', 'apply', 'exact', 'move', 'rewrite', 'apply', 'now', 'apply', 'apply']",0,0,2,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_linear_scal_r,"['split', 'move', 'apply', 'move', 'apply', 'rewrite', 'rewrite', 'exists', 'split', 'apply', 'apply', 'exact', 'move', 'rewrite', 'apply', 'apply', 'apply']",0,0,3,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_continuous,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_locally,"['intros', 'split', 'exact', 'intros', 'specialize', 'generalize', 'intros', 'now']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_ext_lin,"['intros', 'split', 'split', 'intros', 'rewrite', 'apply', 'intros', 'rewrite', 'apply', 'destruct', 'exists', 'split', 'apply', 'move', 'now', 'move', 'apply', 'rewrite']",1,0,3,2,0,6
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_ext_loc,"['move', 'split', 'move', 'specialize', 'specialize', 'apply', 'move', 'apply', 'apply', 'apply', 'rewrite']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_filterdiff_ext_loc,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_ext_locally,"['move', 'apply', 'move', 'destruct', 'apply', 'replace', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_filterdiff_ext_locally,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_ext,"['move', 'apply', 'now']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_filterdiff_ext,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_const,"['split', 'apply', 'move', 'apply', 'rewrite', 'apply', 'apply', 'apply']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_filterdiff_const,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_linear,"['move', 'split', 'by', 'move', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_filterdiff_linear,"['intro', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_filterdiff_comp,"['intros', 'eexists', 'eapply', 'eassumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_comp',"['intros', 'apply', 'by', 'apply', 'apply', 'apply', 'eexists', 'apply', 'by']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_comp'_2,"['intros', 'apply', 'by', 'by', 'apply', 'apply', 'apply', 'apply', 'exists', 'exists', 'apply', 'apply', 'apply', 'apply', 'by']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_filterdiff_comp'_2,"['intros', 'exists', 'apply', 'try', 'eapply', 'try', 'case']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_id,"['split', 'apply', 'move', 'apply', 'exists', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_opp,"['split', 'apply', 'move', 'apply', 'exists', 'rewrite', 'apply', 'apply', 'apply']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_plus,"['split', 'apply', 'move', 'apply', 'exists', 'set', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_minus,"['split', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'move', 'apply', 'exists', 'simpl', 'simpl', 'set', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'apply']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_scal_l,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_scal_r,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_mult,"['intros', 'generalize', 'simpl']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_opp_fct,"['intro', 'apply', 'by', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_plus_fct,"['intros', 'apply', 'by', 'by', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_iter_plus_fct,"['intros', 'induction', 'simpl', 'apply', 'apply', 'apply', 'left', 'apply', 'intros', 'apply', 'right']",2,2,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_minus_fct,"['intros', 'apply', 'by', 'by', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_scal_fct,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_scal_l_fct,"['move', 'apply', 'by', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_scal_r_fct,"['move', 'apply', 'by', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,filterdiff_mult_fct,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_continuous,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_unique,"['intros', 'apply', 'apply', 'apply', 'apply', 'intros', 'destruct', 'exists', 'rewrite', 'intros', 'now']",2,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_correct,"['intros', 'cut', 'intros', 'rewrite', 'apply', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_Reals_0,"['move', 'apply', 'apply', 'exists']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_Reals_1,"['case', 'exists', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_Reals,"['apply', 'case', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_ext_loc,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_ext_loc,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_ext,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_ext,"['intros', 'exists', 'move', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_ext_loc,"['intros', 'rewrite', 'apply', 'apply', 'apply', 'intros', 'rewrite', 'destruct', 'exists', 'apply', 'rewrite', 'now']",1,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_ext,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_const,"['intros', 'apply', 'apply', 'intros', 'apply', 'apply']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_const,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_id,"['intros', 'apply', 'apply', 'rewrite', 'intros', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_id,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_opp,"['intros', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_opp,"['intros', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'ring']",1,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_plus,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_plus,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_minus,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_minus,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_inv,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_inv,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_scal,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_scal,"['intros', 'unfold', 'have', 'case', 'case', 'rewrite', 'case', 'case', 'case', 'case', 'case', 'rewrite', 'case', 'case', 'case', 'case', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'ring']",1,0,1,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_scal_l,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_scal_l,"['rewrite', 'apply', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_mult,"['move', 'exists', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_mult,"['move', 'apply', 'now', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_pow,"['move', 'rewrite', 'apply', 'apply', 'now', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_pow,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_pow,"['move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_div,"['move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_div,"['move', 'apply', 'now', 'try']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_comp,"['intros', 'exists', 'now']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_comp,"['intros', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,MVT_gen,"['move', 'case', 'exists', 'split', 'split', 'apply', 'replace', 'ring', 'move', 'rewrite', 'case', 'have', 'move', 'exists', 'apply', 'have', 'move', 'exists', 'apply', 'case', 'apply', 'contradict', 'apply', 'apply', 'apply', 'apply', 'move', 'apply', 'move', 'exists', 'split', 'split', 'apply', 'replace', 'move', 'rewrite', 'case', 'rewrite', 'ring', 'replace', 'rewrite', 'ring', 'case', 'transitivity', 'apply', 'apply']",0,0,2,2,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,incr_function,"['move', 'apply', 'case', 'apply', 'apply', 'rewrite', 'case', 'apply', 'rewrite', 'case', 'apply', 'exists', 'apply', 'apply', 'rewrite', 'case', 'apply', 'rewrite', 'case', 'apply', 'apply', 'apply', 'rewrite', 'case', 'apply', 'rewrite', 'case', 'apply']",0,0,3,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,incr_function_le,"['move', 'apply', 'case', 'apply', 'apply', 'rewrite', 'case', 'apply', 'rewrite', 'case', 'apply', 'exists', 'apply', 'apply', 'rewrite', 'case', 'apply', 'rewrite', 'case', 'apply', 'apply', 'apply', 'rewrite', 'case', 'apply', 'rewrite', 'case', 'apply']",0,0,3,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,MVT_cor4,"['intros', 'unfold', 'case', 'intros', 'destruct', 'rewrite', 'now', 'intros', 'apply', 'rewrite', 'apply', 'apply', 'now', 'apply', 'now', 'exists', 'split', 'rewrite', 'ring', 'rewrite', 'apply', 'left', 'now', 'apply', 'now', 'destruct', 'destruct', 'apply', 'ring_simplify', 'now', 'intros', 'apply', 'rewrite', 'apply', 'now', 'apply', 'apply', 'now', 'exists', 'split', 'exact', 'rewrite', 'left', 'now', 'apply', 'apply', 'left', 'now', 'exists', 'replace', 'split', '[ring|idtac].', 'rewrite', 'apply', 'apply', 'ring_simplify', 'rewrite', 'ring']",2,0,2,1,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,bounded_variation,"['intros', 'destruct', 'intros', 'specialize', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'now']",0,0,2,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,norm_le_prod_norm_1,"['eapply', 'rewrite', 'apply', 'apply']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,norm_le_prod_norm_2,"['eapply', 'rewrite', 'apply', 'apply']",0,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,fn_eq_Derive_eq,"['intros', 'pose', 'assert', 'intros', 'apply', 'eexists', 'apply', 'eexists', 'apply', 'assert', 'apply', 'intros', 'case', 'case', 'intros', 'apply', 'apply', 'now', 'intros', 'rewrite', 'apply', 'apply', 'apply', 'intros', 'rewrite', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'now', 'rewrite', 'rewrite', 'ring', 'apply', 'split', 'apply', 'apply', 'split', 'apply', 'unfold', 'exists', 'intros', 'rewrite', 'unfold', 'ring']",2,0,4,4,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,extension_cont_continuous,"['simpl', 'apply', 'generalize', 'generalize', 'generalize', 'apply', 'rewrite', 'case', 'case', 'rewrite']",0,1,1,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,extension_cont_is_derive,"['case', 'split', 'apply', 'move', 'move', 'move', 'generalize', 'rewrite', 'generalize', 'apply', 'rewrite', 'case', 'case', 'rewrite']",0,0,1,1,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,extension_C0_ext,"['move', 'rewrite', 'case', 'case']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,extension_C1_ext,"['move', 'rewrite', 'case', 'case']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_unique,"['case', 'easy', 'simpl', 'intros', 'now']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_correct,"['case', 'by', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_ext_loc,"['intros', 'pattern', 'apply', 'induction', 'exact', 'apply', 'apply', 'intros', 'now']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_ext_loc,"['intros', 'case', 'by', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_ext_loc,"['intros', 'case', 'move', 'apply', 'pattern', 'now', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_ext,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_ext,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_ext,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_comp,"['intros', 'induction', 'now', 'simpl', 'intros', 'now']",1,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_Sn,"['move', 'case', 'split', 'apply', 'rewrite', 'apply', 'now', 'split', 'apply', 'move', 'rewrite', 'by', 'apply', 'move', 'rewrite', 'by']",0,0,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_const,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_opp,"['elim', 'by', 'rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_opp,"['case', 'by', 'apply', 'apply', 'move', 'rewrite']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_opp,"['case', 'rewrite', 'apply', 'apply', 'move', 'rewrite']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_plus,"['elim', 'by', 'rewrite', 'apply', 'set', 'exists', 'rewrite', 'apply', 'case', 'move', 'move', 'set', 'apply', 'exists', 'apply', 'rewrite', 'apply', 'rewrite', 'case', 'move', 'apply', 'ring_simplify', 'apply', 'ring_simplify', 'have', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'rewrite', 'case', 'move', 'apply', 'ring_simplify', 'apply', 'ring_simplify', 'have', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_plus,"['case', 'rewrite', 'apply', 'apply', 'apply', 'generalize', 'apply', 'apply', 'apply', 'intuition', 'apply', 'intuition', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_iter_plus,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_sum_n_m,"['intros', 'apply', 'move', 'apply', 'intros', 'apply', 'apply']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_sum_n_m,"['intros', 'apply', 'move', 'apply', 'intros', 'apply', 'apply']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_sum_n_m,"['intros', 'apply', 'move', 'apply', 'intros', 'apply', 'apply']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_sum_n,"['intros', 'apply', 'move', 'apply', 'intros', 'apply', 'apply']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_sum_n,"['intros', 'apply', 'move', 'apply', 'intros', 'apply', 'apply']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_sum_n,"['intros', 'apply', 'move', 'apply', 'intros', 'apply', 'apply']",2,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_minus,"['move', 'rewrite', 'rewrite', 'by', 'move', 'apply', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_minus,"['move', 'apply', 'by', 'move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_minus,"['move', 'apply', 'by', 'move', 'apply', 'apply', 'apply', 'by', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_scal_l,"['elim', 'by', 'rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_scal_l,"['case', 'by', 'apply', 'move', 'rewrite', 'now']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_scal_r,"['rewrite', 'apply', 'ring']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_scal_r,"['move', 'apply', 'ring']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_scal_r,"['move', 'rewrite', 'apply', 'ring']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_comp_scal,"['case', 'rewrite', 'elim', 'rewrite', 'ring', 'rewrite', 'apply', 'move', 'apply', 'elim', 'apply', 'ring', 'case', 'case', 'exists', 'intuition', 'case', 'have', 'apply', 'apply', 'apply', 'apply', 'apply', 'set', 'exists', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'rewrite', 'ring', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'case', 'apply', 'apply', 'have', 'apply', 'exists', 'set', 'move', 'apply', 'apply', 'rewrite', 'apply', 'simpl', 'split', 'apply', 'rewrite', 'apply', 'ring_simplify', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'ring_simplify', 'apply', 'rewrite', 'apply']",0,1,3,3,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_comp_scal,"['case', 'by', 'case', 'rewrite', 'apply', 'elim', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply', 'case', 'have', 'apply', 'apply', 'apply', 'exists', 'apply', 'have', 'rewrite', 'replace', 'apply', 'apply', 'apply', 'apply', 'move', 'apply', 'case', 'apply', 'apply', 'exists', 'rewrite', 'apply', 'case', 'rewrite', 'rewrite', 'apply', 'ring_simplify', 'rewrite', 'apply', 'ring_simplify', 'apply', 'apply', 'split', 'intuition', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_comp_scal,"['case', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_comp_opp,"['move', 'rewrite', 'rewrite', 'replace', 'replace', 'move', 'replace']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,ex_derive_n_comp_opp,"['move', 'apply', 'move', 'ring_simplify', 'apply', 'replace']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,is_derive_n_comp_opp,"['move', 'apply', 'move', 'ring_simplify', 'apply', 'replace', 'replace']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Derive.json,Derive_n_comp_trans,"['elim', 'by', 'rewrite', 'generalize', 'apply', 'apply', 'replace', 'by']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_spec,"['destruct', 'split', 'intros', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'intros', 'apply', 'now', 'intros', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'intros', 'apply', 'now', 'intros', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'intros', 'apply', 'now']",3,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_Reals_0,"['intros', 'apply', 'destruct', 'exists', 'split', 'apply', 'intros', 'now']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_Reals_1,"['intros', 'apply', 'intros', 'destruct', 'exists', 'intros', 'apply', 'now']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_Reals,"['split', '[apply is_lim_Reals_0|apply is_lim_Reals_1].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_comp',"['intros', 'revert', 'apply', 'intros', 'destruct', 'try', 'specialize', 'unfold', 'generalize', 'apply', 'intros', 'apply', 'contradict', 'now']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_comp_seq,"['intros', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_unique,"['intros', 'unfold', 'rewrite', 'apply', 'exists', 'case', 'apply', 'ring_simplify', 'apply', 'apply']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_correct,"['intros', 'replace', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_finite_lim_correct,"['split', 'case', 'move', 'split', 'exists', 'rewrite', 'case', 'case', 'exists', 'rewrite', 'rewrite', 'rewrite']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_correct',"['intro', 'apply', 'rewrite', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_ext_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_ext_loc,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_ext_loc,"['move', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_ext,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_ext,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_ext,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_comp,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_comp,"['intros', 'exists', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_comp,"['intros', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_id,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_id,"['exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_id,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_const,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_const,"['exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_const,"['apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_opp,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_opp,"['rewrite', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_plus,"['intros', 'eapply', 'try', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_plus,"['move', 'exists', 'eapply', 'try', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_plus,"['move', 'apply', 'eapply', 'try', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_minus,"['move', 'eapply', 'try', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_minus',"['intros', 'eapply', 'try', 'by']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_minus,"['move', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply']",0,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_minus,"['move', 'rewrite', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'apply']",0,0,2,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_inv,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_inv,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_inv,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_mult,"['intros', 'eapply', 'try', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_mult,"['move', 'exists', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_mult,"['move', 'apply', 'now']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_scal_l,"['move', 'case', 'rewrite', 'apply', 'move', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'case']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_scal_l,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_scal_l,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_scal_r,"['move', 'rewrite', 'apply', 'move', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_scal_r,"['case', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_scal_r,"['rewrite', 'apply', 'move', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_div,"['move', 'apply', 'try', 'now']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_div,"['move', 'apply', 'try', 'now', 'now']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_div,"['move', 'apply', 'apply', 'try', 'assumption']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_comp_lin,"['case', 'case', 'apply', 'move', 'rewrite', 'apply', 'exists', 'apply']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_comp_lin,"['move', 'apply', 'apply', 'apply', 'exact']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_continuity,"['intros', 'now']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,ex_lim_continuity,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,Lim_continuity,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,filterlim_Ropp_left,"['move', 'exists', 'apply', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,filterlim_Ropp_right,"['move', 'exists', 'apply', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,2,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,C0_extension_le,"['intros', 'case', 'destruct', 'intros', 'apply', 'split', 'apply', 'eapply', 'apply', 'intuition', 'eapply', 'apply', 'intuition', 'exists', 'repeat', 'intros', 'case', 'case', 'apply', 'split', 'exists', 'split', 'simpl', 'move', 'apply', 'intros', 'case', 'contradict', 'apply', 'apply', 'rewrite', 'apply']",2,0,4,1,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_le_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_le_p_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_le_m_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,is_lim_le_le_loc,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,IVT_gen,"['case', 'rewrite', 'case', 'case', 'exists', 'split', 'split', 'apply', 'apply', 'apply', 'wlog', 'case', 'case', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'case', 'wlog', 'case', 'apply', 'case', 'apply', 'apply', 'rewrite', 'split', 'apply', 'move', 'exists', 'intuition', 'rewrite', 'rewrite', 'case', 'wlog', 'case', 'case', 'case', 'apply', 'intuition', 'exists', 'intuition', 'exists', 'intuition', 'case', 'apply', 'exact', 'apply', 'intros', 'reflexivity', 'exact', 'apply', 'rewrite', 'apply', 'apply', 'rewrite', 'apply', 'intros', 'apply', 'exists']",2,0,3,3,0,4
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,IVT_Rbar_incr,"['intros', 'assert', '{', 'assert', 'apply', 'now', 'clear', 'destruct', 'destruct', 'exists', 'split', 'apply', 'replace', 'apply', 'intros', 'apply', 'intros', 'apply', 'apply', 'apply', 'split', 'exact', 'apply', 'apply', 'apply', 'replace', 'apply', 'now', 'destruct', 'exists', 'repeat', 'intros', 'apply', 'intros', 'apply', 'now', 'now', '}', 'assert', '{', 'assert', 'apply', 'apply', 'now', 'apply', 'now', 'clear', 'destruct', 'destruct', 'exists', 'assert', 'apply', 'replace', 'apply', 'split', 'exact', 'assert', 'apply', 'rewrite', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'now', 'destruct', 'split', 'exact', 'now', 'easy', 'destruct', 'exists', 'assert', 'apply', 'apply', 'replace', 'apply', 'destruct', 'repeat', 'exact', 'now', '}', 'destruct', 'destruct', 'now', 'exact', 'exists', 'destruct', 'destruct', 'assert', 'apply', 'apply', 'now', 'assert', 'apply', 'now', 'exact', 'repeat', 'try', 'specialize', 'apply', 'destruct', 'assert', 'apply', 'apply', 'now', 'now', 'apply', 'now', 'destruct', 'elim', 'apply', 'destruct', 'rewrite', 'replace', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'split', 'exact', 'split', 'exact', 'now', 'apply', 'replace', 'apply', 'exact', 'assert', 'apply', 'now', 'destruct', 'elim', 'apply', 'intros', 'apply', 'intros', 'apply', 'apply', 'apply', 'split', 'exact', 'apply', 'apply', 'replace', 'apply', 'apply', 'replace', 'apply']",2,0,4,1,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,IVT_Rbar_decr,"['move', 'case', 'apply', 'apply', 'move', 'apply', 'apply', 'split', 'apply', 'rewrite', 'apply', 'move', 'exists', 'intuition', 'rewrite']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_filterlim,"['split', 'intros', 'specialize', 'apply', 'apply', 'intros', 'apply', 'intros', 'apply', 'specialize', 'unfold', 'apply', 'now']",2,0,3,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,uniform_continuity_2d_1d',"['intros', 'assert', 'intros', 'destruct', 'exists', 'intros', 'now', 'destruct', 'exists', 'intros', 'now']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_neq_0,"['intros', 'apply', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_pt_id,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_id1,"['intros', 'exists', 'tauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_id2,"['intros', 'exists', 'tauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_const,"['intros', 'exists', 'rewrite', 'intros', 'apply']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_pt_ext_loc,"['intros', 'apply', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_pt_ext,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_ext_loc,"['intros', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_ext,"['intros', 'apply', 'apply', 'apply', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_1d_2d_pt_comp,"['intros', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_opp,"['apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_minus,"['move', 'apply', 'exact', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuity_2d_pt_inv,"['intros', 'apply', 'apply', 'apply', 'apply', 'contradict', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_continuous_on,"['intros', 'assert', 'generalize', 'unfold', 'apply', 'intros', 'now']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_on_subset,"['intros', 'generalize', 'unfold', 'apply', 'intros', 'now']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_on_forall,"['intros', 'generalize', 'unfold', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_ext,"['intros', 'apply', 'now']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_on_ext,"['intros', 'apply', 'rewrite', 'now']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_comp,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_fst,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_snd,"['intros', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_const,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_id,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_minus,"['intros', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_scal,"['intros', 'eapply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_scal_r,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_scal_l,"['intros', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Continuity.json,continuous_mult,"['intros', 'eapply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,apply_ext,"['intros', 'revert', 'induction', 'easy', 'simpl', 'intros', 'rewrite', 'apply', 'intros', 'apply', 'now', 'apply']",3,1,1,2,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,foldr_prop_nth,"['intros', 'revert', 'induction', 'intros', 'now', 'intros', 'now', 'intros', 'now']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,is_const_correct,"['induction', 'simpl', 'rewrite', 'now', 'simpl', 'apply', 'intros', 'revert', 'induction', 'intros', 'now', 'apply', 'intros', 'simpl', 'now', 'simpl', 'apply', 'apply', 'apply', 'easy', 'simpl', 'move', 'rewrite', 'now', 'intros', 'simpl', 'move', 'change', 'move', 'replace', 'move', 'rewrite', 'rewrite', 'now', 'move', 'rewrite', 'rewrite', 'rewrite', 'now', 'now', 'easy', 'simpl', 'move', 'now', 'simpl', 'now', 'simpl', 'move', 'move', 'rewrite', 'apply', 'apply']",3,3,2,3,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,nth_map',"['intros', 'case', 'rewrite', 'now']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,interp_ext,"['intros', 'revert', 'induction', 'now', 'simpl', 'apply', 'intros', 'revert', 'induction', 'easy', 'simpl', 'destruct', 'intros', 'simpl', 'now', 'now', 'simpl', 'unfold', 'assert', 'intros', 'rewrite', 'now', 'rewrite', 'apply', 'apply', 'now', 'simpl', 'apply', 'intros', 'now', 'apply', 'intros', 'rewrite', 'apply', 'rewrite', 'case', 'now', 'apply', 'easy', 'simpl', 'apply', 'now', 'now', 'simpl', 'apply', 'now', 'simpl', 'rewrite', 'apply', 'apply', 'intros', 'easy', 'apply']",2,3,3,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,interp_set_nth,"['intros', 'apply', 'intros', 'rewrite', 'case', 'intros', 'now', 'easy']",2,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,interp_domain_ext,"['intros', 'revert', 'induction', 'try', 'simpl', 'rewrite', 'now', 'intros', 'now', 'rewrite', 'apply', 'apply', 'rewrite', 'now', 'rewrite', 'apply', 'apply', 'rewrite', 'case', 'rewrite', 'now', 'rewrite', 'apply', 'intros', 'apply', 'intros', 'easy', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'intros', 'apply', 'intros', 'easy', 'now', 'intros', 'exists', 'rewrite', 'move', 'apply', 'rewrite', 'apply', 'intros', 'apply', 'intros', 'easy', 'now', 'induction', 'easy', 'simpl', 'intros', 'split', 'apply', 'now', 'rewrite', 'intros', 'apply', 'intros', 'easy', 'apply', 'now', 'apply', 'intros', 'now', 'apply', 'rewrite', 'apply', 'apply', 'now', 'rewrite', 'apply', 'apply', 'apply', 'rewrite', 'case', 'rewrite', 'now', 'rewrite', 'intros', 'exists', 'apply', 'intros', 'easy', 'now']",3,2,4,2,0,5
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,interp_domain_set_nth,"['intros', 'split', 'apply', 'rewrite', 'case', 'intros', 'now', 'easy', 'rewrite', 'case', 'intros', 'now', 'easy']",0,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,uniq_index_not_const,"['intros', 'unfold', 'apply', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,index_not_const_correct,"['intros', 'rewrite', 'rewrite', 'case', 'case', 'easy', 'now', 'intros', 'rewrite', 'revert', 'rewrite', 'now']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,interp_AppExt_set_nth_not_const,"['intros', 'simpl', 'apply', 'generalize', 'induction', 'simpl', 'case', 'rewrite', 'rewrite', 'rewrite', 'apply', 'now', 'rewrite', 'case', 'intros', 'rewrite', 'case', 'now', 'now', 'simpl', 'apply']",1,2,0,4,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,var,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/AutoDerive.json,auto_derive_helper,"['intros', 'generalize', 'destruct', 'intros', 'apply', 'now']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,continuous_RInt_1,"['intros', 'generalize', 'apply', 'simpl', 'intros', 'rewrite', 'eapply', 'apply', 'apply', 'apply', 'rewrite', 'eapply', 'apply']",2,2,2,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,is_derive_RInt',"['intros', 'apply', 'intros', 'rewrite', 'apply', 'apply', 'move', 'apply', 'intros', 'apply']",2,0,3,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,Derive_RInt,"['intros', 'apply', 'move', 'apply', 'exact']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,Derive_RInt',"['intros', 'eapply', 'move', 'apply', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,RInt_comp,"['move', 'have', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,RInt_Chasles_bound_comp_l_loc,"['intros', 'generalize', 'generalize', 'apply', 'apply', 'apply', 'now', 'rewrite', 'apply']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,CV_radius_Int,"['rewrite', 'apply', 'rewrite', 'rewrite', 'field', 'apply']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,ex_RInt_PSeries,"['move', 'exists', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,RInt_PSeries,"['move', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,is_RInt_scal_derive_r,"['intros', 'apply', 'intros', 'rewrite', 'apply', 'exact']",2,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/RInt_analysis.json,is_RInt_scal_derive_l,"['intros', 'apply', 'intros', 'rewrite', 'apply', 'exact']",2,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Compactness.json,completeness_any,"['intros', 'case', 'apply', 'apply', 'apply', 'apply', 'apply', 'now']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Compactness.json,false_not_not,"['intros', 'apply', 'intros', 'now']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Compactness.json,compactness_list,"['induction', 'intros', 'intros', 'apply', 'exists', 'intros', 'exists', 'repeat', 'now', 'simpl', 'intros', 'destruct', 'intros', 'apply', 'exists', 'intros', 'elim', 'apply', 'now', 'set', 'assert', 'split', 'apply', 'simpl', 'specialize', 'contradict', 'contradict', 'destruct', 'exists', 'intros', 'replace', 'destruct', 'exists', 'split', 'clear', 'induction', 'easy', 'simpl', 'destruct', 'left', 'now', 'right', 'now', 'repeat', 'apply', 'exact', 'apply', 'rewrite', 'apply', 'apply', 'assert', 'exists', 'apply', 'assert', 'intros', 'split', 'now', 'contradict', 'contradict', 'destruct', 'exists', 'apply', 'split', 'split', 'apply', 'now', 'apply', 'assert', 'now', 'set', 'assert', 'specialize', 'contradict', 'contradict', 'destruct', 'set', 'assert', 'apply', 'apply', 'apply', 'exists', 'split', 'apply', 'refine', 'intros', 'apply', 'destruct', 'apply', 'apply', 'destruct', 'exists', 'simpl', 'intros', 'destruct', 'destruct', 'exists', 'split', 'apply', 'now', 'exact', 'destruct', 'exists', 'split', 'apply', 'left', 'clear', 'induction', 'easy', 'simpl', 'destruct', 'left', 'now', 'right', 'now', 'do', 'unfold', 'case', 'split', 'now', 'apply', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'ring_simplify', 'apply', 'now', 'apply', 'rewrite', 'rewrite', 'now', 'apply', 'now', 'clearbody', 'clear', 'induction', 'easy', 'simpl', 'destruct', 'rewrite', 'apply', 'unfold', 'simpl', 'apply', 'now', 'apply', 'fold', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'destruct', 'destruct', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'elimtype', 'unfold', 'clear', 'revert', 'case', 'apply', 'apply', 'exact', 'rewrite', 'apply', 'apply']",4,4,5,2,0,9
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Compactness.json,compactness_value,"['intros', 'set', 'assert', 'exists', 'split', 'apply', 'intros', 'exists', 'split', 'exact', 'split', 'clear', 'induction', 'easy', 'destruct', 'split', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'assert', 'exists', 'now', 'set', 'assert', 'revert', 'case', 'intros', 'simpl', 'apply', 'intros', 'apply', 'intros', 'set', 'apply', 'apply', 'apply', 'split', 'unfold', 'clear', 'induction', 'apply', 'simpl', 'apply', 'apply', 'intros', 'destruct', 'exists', 'split', 'apply', 'split', 'apply', 'clear', 'induction', 'easy', 'simpl', 'destruct', 'simpl', 'rewrite', 'apply', 'simpl', 'eapply', 'now', 'exists', 'intros', 'simpl', 'refine', 'intros', 'contradict', 'contradict', 'destruct', 'now', 'intros', 'split', 'now', 'intros', 'destruct', 'exists', 'split', 'apply', 'split', 'apply', 'apply', 'apply', 'fold', 'rewrite', 'rewrite', 'apply', 'apply', 'exact', 'apply']",3,3,2,2,0,6
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Compactness.json,compactness_value_1d,"['intros', 'destruct', 'exists', 'intros', 'specialize', 'do', 'destruct', 'exists', 'repeat', 'apply']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coquelicot/theories/Compactness.json,compactness_value_2d,"['intros', 'destruct', 'exists', 'intros', 'specialize', 'do', 'destruct', 'exists', 'exists', 'simpl', 'repeat', 'apply']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/fermat4/Fermat4.json,fermat4_weak,"['intro', 'elim_hyps', 'rename', 'rename', 'cut', 'intro', 'elim', 'auto', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'generalize', 'intro', 'cut', 'auto', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'cut', 'auto', 'split', '[ rewrite H5', 'apply', 'apply', 'intuition', 'replace', 'try', 'rewrite', 'ring']",1,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/Fermat4.json,fermat4,"['intro', 'elim_hyps', 'rename', 'rename', 'elim', 'intros', 'elim_hyps', 'elim', 'intros', 'elim_hyps', 'rewrite', 'rewrite', 'cut', '[ intro', 'rewrite', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'destruct', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intro', 'try', 'auto', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'cut', '[ clear x y z x0 H3 H5 H6 H2 H9 H8 H4', 'intro', 'try', 'cut', '[ intro', 'apply', 'rewrite', 'elim', 'intros', 'apply', 'replace', 'try', 'rewrite', 'ring', 'auto', 'ring', 'elim', 'intro', '[ apply fermat4_weak', 'exists', 'exists', 'exists', 'intuition', 'elim_hyps', 'rewrite', 'rewrite', 'rewrite', 'cut', 'try', 'solve', 'intro', 'elim', 'clear', 'intros', 'elim_hyps', '[ rewrite <- Zmult_assoc in H10', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'auto', 'elim_hyps', 'cut', 'try', 'apply', 'exists', 'rewrite', 'ring', 'intro', 'cut', 'try', 'tauto', 'intro', 'cut', '[ intro', 'rewrite', 'apply', 'exists', 'exists', 'exists', 'intuition', 'rewrite', 'ring', 'intro', '[ rewrite a in H5', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'rewrite', 'apply', 'assumption', 'cut', 'auto', 'intro', 'cut', 'try', 'rewrite', 'ring', 'intro', 'cut', 'try', 'rewrite', 'ring', 'intro', 'generalize', 'intro', 'generalize', 'auto']",3,0,2,3,1,4
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,is_sqr_sqr,"['intro', 'unfold', 'split', 'try', 'apply', 'elim', 'intro', '[ exists n', 'auto', 'intuition', 'ring']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,is_sqr_mult,"['unfold', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'split', '[ auto with zarith | exists (x * x0)', 'rewrite', 'rewrite', 'intuition', 'ring']",2,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_0,"['intros', 'elim', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_compat,"['intros', 'cut', 'auto', 'clear', 'intro', 'replace', 'try', 'elim', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_le,"['intro', 'elim', 'intro', '[ elim (Z_eq_dec a 0)', 'intro', 'try', 'auto', 'pattern', 'replace', 'try', 'apply', 'auto']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_spos,"['intros', 'elim', 'clear', 'intro', 'unfold', 'rewrite', 'fold', 'simpl', 'cut', '[ intro', 'rewrite', 'apply', 'auto', 'apply', 'auto']",0,0,1,3,1,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_poss,"['intros', 'intro', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_lt,"['intros', 'case', 'intro', '[ pattern a at 1', 'rewrite', 'apply', 'auto', 'intro', 'auto']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sum,"['intros', 'elim', 'intro', 'rewrite', 'simpl', 'generalize', 'intro', 'auto', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'auto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sum2,"['intros', 'generalize', 'simpl', 'intro', 'apply', 'apply', 'apply']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sum3,"['intros', 'apply', 'fold', 'apply', '[ apply Zge_le', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sum4,"['intros', 'elim', 'intro', '[ elim (Z_eq_dec b 0)', 'intro', '[ auto | generalize (sqr_sum a _ b0)', 'tauto', 'rewrite', 'tauto']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sub1,"['intros', 'replace', 'try', 'apply', 'auto']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sub2,"['intros', 'replace', 'try', 'apply', 'auto']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sub3,"['intros', 'replace', 'try', 'cut', 'auto', 'intro', 'rewrite', 'generalize', 'clear', 'intro', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_2,"['intro', 'generalize', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_gt,"['intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intro', 'generalize', 'intro', 'assert', 'auto', 'generalize', 'auto', 'rewrite', 'rewrite', 'apply', 'auto']",2,0,1,2,1,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_ge,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zle_square_simpl,"['intros', 'elim', 'intro', '[ generalize (Zlt_square_simpl _ m H H2) | generalize (Zeq_minus _ _ H2)', 'clear', 'intro', 'replace', 'try', 'elim', 'clear', 'intro', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,neq_1,"['intros', 'case', 'intro', 'case', 'intro', 'try', 'elimtype', '[ rewrite e in H1', 'simpl', 'rewrite', 'simpl', 'rewrite', 'cut', 'auto', 'intro', 'elim', 'auto', 'intro', 'generalize', 'auto', 'simpl', 'generalize', 'intro', 'generalize', 'intro', 'cut', 'try', 'intro', 'elim', 'clear', 'intros', 'generalize', 'auto', 'simpl', 'replace', 'try', 'symmetry', 'elim', 'intro', 'rewrite', 'elim', 'auto']",2,2,0,1,1,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zmult_eq_reg_l,"['intros', 'apply', 'generalize', 'intro', 'repeat', 'generalize', 'intro', 'apply', 'assumption']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zmult_neq_0,"['intros', 'elim', 'intro', '[ rewrite a0 in H', 'simpl', 'auto', 'intro', 'try', 'rewrite', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,ndistp_eq,"['red', 'intros', 'do', 'clear', 'intros', 'match', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_sum5,"['intros', 'case', 'intro', '[ rewrite e', 'replace', '[idtac|ring]', 'apply', 'case', 'intro', '[ elimtype False', 'rewrite', 'rewrite', 'generalize', 'auto', 'assumption', 'intro', '[ rewrite e', 'replace', 'try', 'apply', 'apply', 'assumption', 'apply', 'assumption']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zeven_def1,"['intros', 'generalize', 'intro', 'exists', 'assumption']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zeven_def2,"['intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'simpl', 'auto']",1,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_def1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_def2,"['intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'simpl', 'auto', 'elim', 'simpl', 'auto']",1,1,0,1,0,4
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_0,"['intros', 'intro', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_opp1,"['intros', 'elim', 'clear', 'intros', 'apply', 'exists', 'rewrite', 'rewrite', 'ring']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_opp2,"['intros', 'elim', 'clear', 'intros', 'apply', 'rewrite', 'exists', 'ring']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_sum1,"['intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'apply', 'rewrite', 'rewrite', 'exists', 'ring']",1,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_sum2,"['intros', 'generalize', 'clear', 'intro', 'unfold', 'apply', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_sum3,"['intros', 'elim', 'clear', 'intros', 'cut', 'auto', 'clear', 'intro', 'rewrite', 'apply', 'exists', 'ring']",0,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_mult,"['intros', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'elim', 'elim', 'intros', 'split', 'split', 'left', 'auto', 'elim', 'elim', 'intros', 'split', 'split', 'right', 'auto', 'elim', 'elim', 'intros', 'split', 'split', 'right', 'auto', 'elim', 'elim', 'intros', 'split', 'split', 'left', 'auto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zeven_sqr1,"['intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'apply', 'exists', 'ring']",1,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zeven_sqr2,"['induction', 'auto', 'induction', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_sqr1,"['intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'apply', 'exists', 'ring']",1,0,0,2,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zodd_sqr2,"['induction', 'auto', 'induction', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,distp_neq,"['intros', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', '[ elim (Zeven_def1 _ H)', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'auto']",0,0,0,3,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,distp_sqr1,"['intros', 'unfold', 'do', 'clear', 'intros', '[ generalize (Zeven_sqr1 _ H)', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,distp_sqr2,"['intros', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', '[ left | right ]', 'repeat', 'clear', 'clear', 'tauto']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,distp_odd,"['unfold', 'intros', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', '[ elim (Zeven_def1 _ H)', 'clear', 'intros', 'elim', 'clear', 'intros', 'clear', 'intros', 'elim', 'clear', 'intros', 'split', 'apply', '(exists (x + x0)', 'rewrite', 'rewrite', 'solve', 'rewrite', 'rewrite', 'solve', 'rewrite', 'rewrite', 'ring']",2,0,0,1,0,4
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,not_divide1,"['intros', 'red', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'pattern', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'generalize', 'tauto']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,not_divide2,"['intros', 'red', 'intro', 'elim', 'clear', 'intros', 'replace', 'try', 'replace', 'try', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'auto']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,rel_prime_1,"['intro', 'unfold', 'apply', 'auto']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prime_2,"['apply', 'auto', 'intros', 'case', 'intro', 'try', 'progress', 'rewrite', 'apply']",0,0,1,1,1,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,rel_prime_sym,"['unfold', 'intros', 'apply', 'assumption']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,rel_prime_dec,"['intros', 'unfold', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'intro', '[ rewrite a in H', 'left', 'assumption', 'red', 'intro', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intro', 'auto']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,not_rel_prime1,"['unfold', 'intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'exists', 'split', '[ assumption | split', '[ elim (Z_eq_dec x0 1)', 'intro', '[ rewrite a in H0', 'auto', 'intro', '[ rewrite a in H0', 'generalize', 'simpl', 'clear', 'intro', 'generalize', 'auto']",2,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,not_rel_prime2,"['intros', 'elim', 'auto', 'unfold', 'intro', 'elimtype', 'elim', 'clear', 'intros', 'generalize', 'clear', 'intro', 'elim', 'auto']",2,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,gcd_rel_prime,"['intros', 'elim', 'intro', '[ rewrite a in H', 'elim', 'clear', 'intros', 'destruct', 'revert', 'ring_simplify', 'ring_simplify', 'intros', 'exists', 'exists', 'rewrite', 'intuition', 'apply', 'clear', 'intros', 'destruct', 'exists', 'exists', 'rewrite', 'rewrite', 'intuition', 'elim', 'intro', '[ auto | elimtype False', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'intro', 'generalize', 'intro', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'clear', 'rewrite', 'clear', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'elim', 'clear', 'do', 'apply', 'auto']",2,0,1,3,0,5
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_mult2,"['intros', 'elim', 'intro', 'try', 'elim', 'intro', 'try', 'elimtype', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'auto']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_mult3,"['intros', 'elim', 'intro', 'try', 'elimtype', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'clear', 'intro', 'generalize', 'auto']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,gcd2_rel_prime,"['intros', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'replace', 'try', 'cut', 'auto', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'rewrite', 'rewrite', 'rewrite', 'apply', 'assumption']",1,0,0,4,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_neq,"['intros', 'case', 'auto', 'intro', 'elimtype', 'generalize', 'intro', 'generalize', 'pattern', 'rewrite', 'intro', 'generalize', 'auto']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prop2,"['intros', 'apply', 'apply', 'apply', 'apply', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,is_sqr_compat,"['intros', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'elim', 'intro', '[ generalize (prop2 _ _ a0)', 'clear', 'intro', 'rewrite', 'elim', 'intro', '[ rewrite H4 in H1', 'rewrite', 'rewrite', 'unfold', 'intuition', 'exists', 'intuition', 'generalize', 'intro', 'rewrite', 'auto', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'elim', 'intro', 'try', 'rewrite', 'simpl', 'auto', 'replace', 'try', 'replace', 'try', 'generalize', 'clear', 'intro', 'cut', 'try', 'rewrite', 'elim', 'auto', 'clear', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'elim', 'intro', '[ rewrite H9 in H1', 'rewrite', 'rewrite', 'elim', 'intro', '[ unfold is_sqr', 'intuition', 'exists', 'intuition', '[ apply Zge_le', 'apply', 'intuition', 'ring', 'generalize', 'intro', 'rewrite', 'auto']",1,2,0,5,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_trans,"['intros', 'rewrite', 'clear', 'rewrite', 'apply', 'assumption']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_sum,"['intros', 'cut', 'auto', 'clear', 'intro', 'rewrite', 'exists', 'rewrite', 'ring']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_mult_l,"['intros', 'replace', 'try', 'generalize', 'clear', 'intro', 'apply', 'assumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_0,"['intros', 'elim', 'clear', 'intros', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_2,"['intros', 'cut', 'auto', 'intro', 'generalize', 'clear', 'simpl', 'generalize', 'generalize', 'generalize', 'elim', 'simpl', 'intros', 'progress', 'auto']",1,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_2b,"['intros', 'elim', 'intro', '[ elim H1', 'clear', 'intros', 'rewrite', 'auto', 'auto', 'intro', 'generalize', 'clear', 'simpl', 'generalize', 'generalize', 'generalize', 'elim', 'simpl', 'intros', 'progress', 'intro', 'progress', 'generalize', 'auto']",1,1,0,2,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_4,"['intros', 'cut', '[ intro', 'elim', 'intro', 'try', 'rewrite', 'simpl', 'rewrite', 'do', 'clear', 'intro', 'rewrite', 'apply', 'cut', 'try', 'solve', 'intro', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'rewrite', 'replace', 'try', 'cut', 'try', 'try', 'apply', 'apply', 'intro', 'rewrite', 'elim', 'intro', 'try', 'intro', '[ rewrite a0', 'exists', 'generalize', 'intro', 'solve', 'cut', 'try', 'intuition', 'elim', 'intro', '[ exists (-b) | exists b ]', 'intuition', 'rewrite', 'ring', 'intro', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'rewrite', 'replace', 'try', 'elim', 'intro', '[ exists x0 | exists (-x0) ]', 'rewrite', 'ring', '[ replace (a * a * (a * a) * q) with (q * (a * a * a * a))', 'try', 'rewrite', 'rewrite', 'apply', 'apply', 'split', '[ rewrite Zmult_assoc', 'rewrite', 'ring', 'apply']",2,2,2,4,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,divide_sqr,"['intros', 'rewrite', 'replace', 'try', 'apply']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,gcd2_relp_odd,"['intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'intros', 'generalize', 'ring_simplify', 'intro', 'generalize', 'intro', 'generalize', 'ring_simplify', 'clear', 'intro', 'generalize', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'rewrite', 'cut', 'auto', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'elim', 'intros', 'generalize', 'intro', 'elim', 'intro', 'try', 'rewrite', 'progress', 'rewrite', 'simpl', 'rewrite', 'assumption']",2,2,0,2,0,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,rel_prime_opp,"['unfold', 'intros', 'do', 'rewrite', 'assumption']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,rel_prime_oppr,"['intros', 'unfold', 'apply', 'apply', 'apply', 'assumption']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,rel_prime_2,"['intros', 'elim', 'auto', 'intro', 'elimtype', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intro', 'rewrite', 'clear', 'elim', 'clear', 'intros', 'rewrite', 'clear', 'auto']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_mult1,"['intros', 'rewrite', 'rewrite', 'rewrite', 'clear', 'elim', 'clear', 'intros', 'elim', 'auto', 'intro', 'rewrite', 'clear', 'auto']",0,0,0,3,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_parity,"['intros', 'unfold', 'elim', 'intro', 'elim', 'intro', 'intuition', 'elimtype', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'auto']",2,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_sum,"['intros', 'elim', 'intro', 'try', 'elimtype', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'elim', 'auto']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prop1,"['unfold', 'intros', 'elim', 'clear', 'intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'intro', '[ rewrite a in H2', 'assumption', 'elim', 'clear', 'intros', 'generalize', 'ring_simplify', 'intro', 'generalize', 'ring_simplify', 'intro', 'elim', 'intro', '[ elim (Z_eq_dec x 0)', 'intro', '[ rewrite a0 in a', 'clear', 'elim', 'clear', 'intros', 'auto', 'clear', 'intro', 'rewrite', 'rewrite', 'clear', 'destruct', 'rewrite', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'auto', 'intro', '[ generalize (divide_trans _ _ _ a H2)', 'clear', 'intro', 'destruct', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'auto', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'cut', 'auto', 'intro', 'generalize', 'auto']",3,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prop2b,"['intros', 'elim', 'intros', 'auto', 'elimtype', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'apply', 'assumption']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prop2c,"['intros', 'elim', 'intros', 'auto', 'elimtype', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'apply', 'assumption']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prop3,"['intros', 'elim', 'intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,R_prime_wf,"['apply', 'unfold', 'intros', 'apply', 'intuition']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,ind_prime,"['intros', 'generalize', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prime_dec_gen,"['intros', 'pattern', 'match', 'case', 'intro', 'try', 'red', 'intro', 'elim', 'clear', 'intros', 'progress', 'apply', 'intros', 'case', 'intro', '[ case (Z_eq_dec x 2)', 'intro', '[ left', 'rewrite', 'rewrite', 'generalize', 'intro', 'apply', 'try', 'intros', 'case', 'intro', 'try', 'assumption', 'case', 'intro', 'try', 'assumption', 'apply', 'auto', 'try', 'auto', 'intros', 'case', 'intro', 'try', 'assumption', 'apply', 'auto', 'red', 'intro', 'elim', 'clear', 'intros', 'cut', 'auto', 'intro', 'generalize', 'auto']",2,0,2,1,1,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prime_dec,"['intros', 'case', 'intro', '[ left', 'rewrite', 'apply', 'intro', 'try', 'red', 'intro', 'elim', 'clear', 'intros', 'progress', 'apply', 'auto', 'intros', 'elimtype', 'auto']",1,0,1,1,1,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,not_prime_gen,"['induction', 'intros', 'destruct', 'exists', 'exists', 'intuition', 'apply', 'auto', 'case', 'intro', 'case', 'intro', 'absurd', 'try', 'apply', 'auto', 'rewrite', 'rewrite', 'generalize', 'intros', 'case', 'intro', 'try', 'assumption', 'case', 'intro', 'try', 'assumption', 'apply', 'auto', 'assert', 'intuition', 'assert', 'assert', 'assert', 'case', 'intro', 'try', 'assumption', 'apply', 'auto', 'elim', 'intros', 'elim', 'clear', 'intros', 'exists', 'exists', 'intuition', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'destruct', 'assert', 'rewrite', 'elim', 'auto', 'case', 'intro', 'exists', 'exists', 'intuition', 'rewrite', 'assert', 'assert', 'generalize', 'intro', 'case', 'auto', 'intro', 'elimtype', 'rewrite', 'rewrite', 'destruct', 'rewrite', 'cut', 'auto', 'intro', 'generalize', 'intro', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'auto', 'exists', 'exists', 'intuition', 'try', 'ring', 'rewrite', 'replace', 'assert', 'assert', 'generalize', 'intro', 'case', 'auto', 'intro', 'elimtype', 'rewrite', 'rewrite', 'rewrite', 'destruct', 'replace', 'rewrite', 'assert', 'generalize', 'intro', 'rewrite', 'rewrite', 'rewrite', 'generalize', 'auto']",2,0,2,2,1,9
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,not_prime,"['intros', 'case', 'intro', '[ elimtype False', 'rewrite', 'generalize', 'auto', 'auto', 'intros', 'elimtype', 'auto']",0,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,R_fact_wf,"['apply', 'unfold', 'intros', 'apply', 'intuition', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'replace', 'try', 'rewrite', 'apply', 'auto']",3,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,ind_fact,"['intros', 'generalize', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Zfact,"['intro', 'pattern', 'match', 'apply', 'intros', 'case', 'intro', '[ exists x', 'intuition', 'intros', 'do', 'clear', 'intros', 'elim', 'clear', 'intros', 'cut', 'try', 'try', 'unfold', 'intuition', 'exists', 'intuition', 'intro', 'do', 'clear', 'intros', 'exists', 'intuition', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'apply']",1,0,1,3,0,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,R_p4_wf,"['apply', 'unfold', 'intros', 'apply', 'intuition', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'cut', 'try', 'auto', 'intro', 'generalize', 'simpl', 'progress', 'intro', 'cut', 'auto', 'intro', 'rewrite', 'elim', 'intros', 'rewrite', 'pattern', 'replace', 'try', 'apply', 'auto']",3,0,3,2,0,3
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,ind_p4,"['intros', 'generalize', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_prime1,"['intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'elim', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'assumption']",0,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_prime2,"['intros', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'elim', 'intros', 'replace', 'try', 'replace', 'try', 'cut', 'auto', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'elim', 'try', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'generalize', 'tauto']",0,0,0,2,0,4
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prop4,"['split', 'generalize', 'generalize', 'generalize', 'generalize', '[ pattern p | pattern q ]', 'match', 'apply', 'intros', 'match', 'intro', '[ idtac | elim (Z_eq_dec x 0)', 'intro', '[ rewrite a', 'unfold', 'intuition', 'exists', 'intuition', 'intro', '[ rewrite a', 'unfold', 'intuition', 'exists', 'intuition', 'auto', 'generalize', 'intro', 'elim', 'intros', 'elim', 'clear', 'intros', '(generalize (Zdivide_mult_l _ _ q H9)', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'elim', 'elim', 'intros', 'try', 'elim', 'intros', 'cut', 'auto', 'intro', 'cut', 'auto', 'intro', 'generalize', 'progress', 'auto', 'elim', 'intros', 'cut', 'try', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'rewrite', 'unfold', 'intuition', 'rewrite', 'exists', 'split', 'try', 'elim', 'intros', 'apply', 'auto', 'elim', 'intros', 'cut', 'try', 'auto', 'intro', 'generalize', 'clear', 'intro', 'cut', 'auto', 'intro', 'rewrite', 'generalize', 'progress', 'intro', '(apply H3', 'try', '[ unfold R_p4', 'intuition', 'exists', 'intuition', 'rewrite', 'ring', '(apply (relp_mult3 q0 (x0 * x0)) || (apply rel_prime_sym', 'apply', 'apply', 'assumption', '(replace (q0 * (x0 * x0) * q) with (x0 * x0 * (q0 * q)) in H7', 'try', 'apply', 'progress', 'try', 'apply', 'auto']",3,0,4,3,0,4
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,prop4b,"['intros', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'replace', 'try', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'cut', 'auto', 'intro', 'cut', 'try', 'assumption', 'intro', 'generalize', 'clear', 'intro', 'elim', 'clear', 'intros', 'generalize', 'tauto']",2,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_pq1,"['intros', 'cut', '[ clear H1', 'intro', 'cut', '[ clear H2', 'intro', 'apply', 'apply', 'try', 'assumption', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'apply', 'assumption']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_pq2,"['intros', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'cut', '[ intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'apply', 'rewrite', 'assumption', 'clear', 'intro', 'elim', 'auto']",2,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,not_IZR_0,"['intros', 'red', 'intro', 'rewrite', 'simpl', 'auto']",0,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,sqr_inv,"['intros', 'cut', 'intro', 'rewrite', 'unfold', 'split_Rmult', '[ discrR', 'apply', 'assumption', 'split_Rmult', 'discrR', 'assumption', 'field', 'discrR', 'assumption']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Rdiv_ge_0,"['intros', 'unfold', 'elim', 'clear', 'intro', '[ left', 'unfold', 'unfold', 'unfold', 'generalize', 'clear', 'intro', 'replace', '[ apply Rmult_lt_compat_r', 'auto', 'rewrite', 'field', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,Rcross_prod,"['intros', 'generalize', 'clear', 'intro', 'replace', '[ replace (b * d * (c / d))%R with (b * c)%R in H1', '[ assumption | field', 'assumption', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,frac_eq,"['unfold', 'intros', 'cut', '[ intro', 'cut', '[ intro', 'generalize', 'clear', 'intro', 'rewrite', 'cut', '[ clear H1', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'apply', 'assumption', 'rewrite', 'ring', 'assumption', 'split_Rmult', 'apply', 'assumption']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,frac_rat,"['unfold', 'intros', 'generalize', 'clear', 'intro', 'elim', 'intros', 'try', 'clear', 'intros', '[ right', 'cut', 'auto', 'intro', 'generalize', 'clear', 'intro', 'simpl', 'replace', 'try', 'rewrite', 'cut', 'try', 'field', 'try', 'apply', 'auto', 'intro', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'rewrite', 'replace', 'try', 'apply', 'auto', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'intuition', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'simpl', 'replace', 'try', 'rewrite', 'generalize', 'clear', 'intro', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'replace', 'try', 'apply', 'auto', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'intuition']",4,0,2,2,0,2
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,frac_simp,"['intros', 'unfold', 'repeat', 'field', 'split', 'apply', 'assumption']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,frac_opp,"['intros', 'replace', 'try', 'try', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/ArithCompl.json,relp_rat,"['intros', 'elim', 'clear', 'induction', 'intro', 'elim', 'clear', 'intros', 'elim', 'intro', '[ rewrite H2 in H0', 'rewrite', 'elim', 'intro', '[ exists (a, b)', 'tauto', 'intuition', '[ apply rel_prime_opp | rewrite (frac_opp a b H) ]', 'assumption', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intro', '[ exists (x0, x1)', 'intuition', 'intuition', '[ apply rel_prime_opp | rewrite (frac_opp x0 x1 H7) ]', 'assumption']",1,0,0,2,0,3
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,pytha_ucirc1,"['intros', 'unfold', 'unfold', 'field_simplify_eq', 'unfold', 'elim', 'intros', 'repeat', 'rewrite', 'simpl', 'ring_simplify', 'trivial', 'discrR', 'auto']",2,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,pytha_ucirc2,"['unfold', 'unfold', 'unfold', 'intros', 'split', 'unfold', 'auto', 'apply', 'apply', 'pattern', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'repeat', 'field', 'discrR', 'auto', 'discrR', 'auto', 'discrR', 'auto', 'rewrite', 'split_Rmult', 'discrR', 'auto', 'apply', 'split_Rmult', 'discrR', 'auto']",2,1,1,1,2,1
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,ordp,"['intros', 'unfold', 'elim', 'elim', 'intros', 'simpl', 'elim', 'elim', 'intuition']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,interCDr_sol,"['unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'elim', 'intros', 'rewrite', 'cut', 'intro', 'cut', 'intro', 'cut', 'intro', 'generalize', 'unfold', 'unfold', 'unfold', 'simpl', 'cut', 'intro', 'rewrite', 'replace', 'rewrite', 'induction', '[right|left].', 'split', '[rewrite H6', 'field', 'assumption', 'rewrite', 'field', 'assumption', 'split', '[rewrite H6', 'field', 'assumption', 'rewrite', 'field', 'assumption', 'unfold', 'left', 'prove_sup', 'ring', 'unfold', 'unfold', 'unfold', 'simpl', 'ring_simplify', 'unfold', 'left', 'prove_sup', 'apply', 'unfold', 'rewrite', 'apply', 'fold', 'elim', 'intro', '[rewrite H3', 'rewrite', 'unfold', 'right', 'auto', 'left', 'apply', 'assumption', 'pattern', 'rewrite', 'unfold', 'ring']",1,3,1,5,0,2
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,rat_coo1,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'unfold', 'simpl', 'intro', 'elim', 'intros', 'rewrite', 'rewrite', 'split', 'exists', 'split', '[ auto with zarith | simpl', 'field', 'discrR', 'exists', 'split', '[ auto with zarith | simpl', 'field', 'discrR', 'split', 'exists', 'split', 'auto', 'rewrite', 'rewrite', 'rewrite', 'repeat', 'field', 'split', 'discrR', 'auto', 'exists', 'split', 'apply', 'rewrite', 'split_Rmult', 'discrR', 'auto', 'rewrite', 'repeat', 'rewrite', 'repeat', 'simpl', 'field', 'split', 'discrR', 'auto']",3,2,1,2,2,5
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,rat_coo2,"['unfold', 'unfold', 'intros', 'elim', 'intro', 'exists', 'split', 'exists', 'split', '[ auto with zarith | field', 'discrR', 'elim', 'intros', 'split', 'assumption', 'rewrite', 'rewrite', 'ring_simplify', 'cut', '[ intro', 'apply', 'unfold', 'apply', 'rewrite', 'ring', 'exists', 'cut', '[ intro', 'split', 'fold', 'apply', 'assumption', 'elim', 'intros', 'elim', 'intros', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'cut', '[ intro | apply not_IZR_0', 'cut', '[ intro', 'rewrite', 'rewrite', 'split_Rmult', '[ rewrite <- H8', 'assumption', 'assumption', 'discrR', 'assumption', 'exists', 'split', 'apply', 'rewrite', 'rewrite', 'split_Rmult', 'discrR', 'assumption', 'repeat', 'rewrite', 'field', 'discrR', 'try', 'repeat', 'discrR', 'try', 'fold', 'rewrite', 'assumption', 'split', '[ elim H', 'intros', 'assumption', 'assumption']",2,1,3,3,0,6
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,rat_pos_coo1,"['intros', 'unfold', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'unfold', 'simpl', 'intro', 'elim', 'intros', 'elim', 'simpl', 'intros', 'rewrite', 'elimtype', 'generalize', 'fold', 'apply', 'prove_sup', 'cut', '[ intro | apply Rinv_0_lt_compat', 'rewrite', 'apply', '[ prove_sup | fold (Rsqr x0)', 'elim', 'intro', '[ rewrite H7', 'rewrite', 'unfold', 'right', 'auto', 'left', 'apply', 'assumption', 'unfold', 'simpl', 'intro', 'elim', 'intros', 'elim', 'simpl', 'rewrite', 'rewrite', 'intros', 'exists', 'split', 'assumption', 'split', 'generalize', 'intro', 'rewrite', 'rewrite', 'cut', '[ intro', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'generalize', 'intro', 'apply', 'assumption', 'prove_sup', 'assumption', 'split', 'generalize', 'intro', 'unfold', 'rewrite', 'rewrite', 'generalize', 'intro', 'generalize', 'intro', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'fold', 'fold', 'apply', 'unfold', 'left', 'prove_sup', 'auto', 'assumption']",3,3,1,6,0,7
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,rat_pos_coo2,"['intros', 'elim', 'simpl', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intro', 'elim', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'unfold', 'simpl', 'unfold', 'exists', 'exists', 'rewrite', 'rewrite', 'rewrite', 'cut', 'auto', 'intro', 'split', 'field', 'split', 'discrR', 'auto', 'split', 'field', 'split', 'discrR', 'auto', 'tauto']",4,3,0,1,0,4
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,nrat_pos_coo1,"['unfold', 'simpl', 'intros', 'elim_hyps', 'exists', 'exists', 'intuition', 'exists', 'exists', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'replace', 'split', '[idtac|split]', 'try', 'neq_0', 'apply', 'auto', 'do', 'auto', 'generalize', 'auto']",1,2,1,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,nrat_pos_coo2,"['unfold', 'simpl', 'intros', 'elim_hyps', 'elim', 'intro', 'exists', 'exists', 'intuition', 'unfold', 'elim_hyps', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'elim_hyps', 'exists', 'exists', 'split', '[ right', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'atomic_IZR', 'simpl', 'split', 'field', 'split', 'neq_0', 'apply', 'auto', 'rewrite', 'rewrite', 'rewrite', 'do', 'auto', 'apply', 'apply', 'ring_simplify', 'ring_simplify', 'generalize', 'clear', 'ring_simplify', 'intro', 'generalize', 'clear', 'ring_simplify', 'intro', 'rewrite', 'rewrite', 'auto', 'elim', 'intro', 'elim', 'intro', 'Zparity_hyps', 'rewrite', 'rewrite', '[ left', 'split', '[ apply Zeven_def2', 'exists', 'exists', 'split', '[ apply Zodd_def2', 'exists', 'exists', 'split', '[ apply Zodd_def2', 'exists', 'exists', 'split', '[ apply Zeven_def2', 'exists', 'exists', 'ring']",1,2,2,3,2,3
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,relp_frac,"['unfold', 'intros', 'cut', 'intro', 'cut', '[ intro', 'cut', 'try', 'generalize', 'intro', 'destruct', 'exists', 'intuition', 'rewrite', 'auto', 'generalize', 'clear', 'intro', 'replace', '[ replace (IZR b * IZR d * (IZR c / IZR d))%R with ((IZR c) * (IZR b))%R in H1', '[ repeat rewrite <- mult_IZR in H1', 'generalize', 'auto', 'discrR', 'assumption', 'discrR', 'assumption']",3,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,pytha_thm1,"['do', 'elim', '[ idtac | unfold is_pytha, pytha_set, pos_triple, cond_pq, cond_pqb ]', 'intros', 'generalize', 'intro', 'cut', '[ clear H0', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'unfold', 'unfold', 'simpl', 'elim_hyps', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', '(cut (x * x + x0 * x0 <> 0)', '[ intro | auto with zarith ]', '(cut ((IZR x0 * IZR x0 - IZR x * IZR x) / (IZR x * IZR x + IZR x0 * IZR x0) = frac (x0 * x0 - x * x) (x * x + x0 * x0))%R', '[ intro | head_IZR', 'auto', '(cut (2 * IZR x * IZR x0 / (IZR x * IZR x + IZR x0 * IZR x0) = frac (2 * x * x0) (x * x + x0 * x0))%R', '[ intro | head_IZR', 'auto', 'rewrite', 'clear', 'rewrite', 'clear', 'generalize', 'intro', 'elim_hyps', 'rewrite', 'rewrite', 'exists', 'exists', 'exists', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'rewrite', 'rewrite', 'intuition', '(left', 'split', 'ring', '[ intro', 'rewrite', 'cut', 'try', 'generalize', 'auto', 'assumption', 'rewrite', 'clear', 'rewrite', 'clear', 'generalize', 'intro', 'elim_hyps', 'rewrite', 'rewrite', 'exists', 'exists', 'exists', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'rewrite', 'rewrite', 'rewrite', 'intuition', '(right', 'split', 'ring', '[ intro', 'rewrite', 'cut', 'try', 'generalize', 'auto', 'assumption', 'unfold', 'simpl', 'intuition', 'unfold', 'unfold', 'elim_hyps', 'generalize', 'intro', 'generalize', 'intro', 'simpl', 'fold', '[ exists (a, c)', 'intuition', 'intuition', 'generalize', 'clear', 'intro', 'simpl', 'generalize', 'clear', 'intro', 'simpl', 'auto', 'elim_hyps', 'cut', '[ intro', 'exists', 'exists', 'exists', 'rewrite', 'simpl', 'intuition', '(left', 'rewrite', 'simpl', 'progress', 'auto']",2,4,0,2,2,2
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,pytha_thm2,"['unfold', 'intros', 'elim_hyps', 'rewrite', 'rewrite', 'rewrite', 'split', 'ring', 'apply', 'generalize', 'clear', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'intro', 'repeat', 'auto']",3,0,0,1,1,1
/mnt/cisk/zmq/dataset/data/fermat4/Pythagorean.json,pytha_thm3,"['intros', 'elim', 'clear', 'intros', 'unfold', 'elim_hyps', 'unfold', 'exists', 'exists', 'exists', 'try', 'elimtype', 'rewrite', 'generalize', 'intro', 'generalize', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fermat4/Diophantus20.json,multiple4_2,"['intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim_hyps', 'split', 'intuition', 'cut', 'auto', 'intro', 'cut', 'auto', 'intro', 'apply', 'auto', 'rewrite', 'rewrite', 'generalize', 'auto', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto', 'rewrite', 'rewrite', 'generalize', 'auto', 'apply', 'auto', 'apply', 'apply', 'auto']",0,0,2,1,2,2
/mnt/cisk/zmq/dataset/data/fermat4/Diophantus20.json,for_exists_ab,"['intros', 'elim', 'intro', 'elim', 'intros', 'elim_hyps', '(cut (is_sqr (a * b))', '[ intro Hab', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'split', 'intuition', ""[ rewrite <- H11' in H7"", 'generalize', 'intro', 'auto', 'generalize', 'intro', 'auto', 'try', 'replace', '[ apply is_sqr_sqr | apply (Zmult_eq_reg_l 2)', 'try', 'replace', '[ replace (u * u - v * v) with ((u - v) * (u + v))', '[ rewrite H6', 'rewrite', 'ring', '[ rewrite H', 'rewrite', 'ring']",1,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/fermat4/Diophantus20.json,for_mba_pytha1,"['intros', 'cut', 'intro', 'cut', 'intro', 'cut', 'intro', 'rewrite', 'rewrite', 'symmetry', 'apply', 'replace', '[ rewrite H3', 'ring', 'discriminate', 'apply', 'replace', '[ rewrite H2', 'rewrite', 'ring', 'discriminate', 'apply', 'replace', '[ rewrite H2', 'rewrite', 'ring', 'discriminate', 'replace', '[ rewrite H', 'rewrite', 'ring']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/fermat4/Diophantus20.json,for_mba_pytha2,"['intros', 'cut', 'intro', 'cut', 'intro', 'cut', 'intro', 'rewrite', 'rewrite', 'symmetry', 'apply', 'replace', '[ rewrite H3', 'ring', 'discriminate', 'apply', 'replace', '[ rewrite H2', 'rewrite', 'ring', 'discriminate', 'apply', 'replace', '[ rewrite H2', 'rewrite', 'ring', 'discriminate', 'replace', '[ rewrite H', 'rewrite', 'ring']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/fermat4/Diophantus20.json,diophantus20_equiv,"['intros', 'generalize', 'intro', 'cut', 'intro', 'apply', 'try', 'apply', 'intuition', 'try', 'apply', 'auto', 'cut', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', '[assumption | ring ].', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'rewrite', 'rewrite', 'replace', 'intro', 'elim', 'rewrite', 'rewrite', 'intros', 'symmetry', 'symmetry', 'cut', 'try', 'rewrite', 'assumption', 'intro', 'generalize', 'clear', 'intro', 'generalize', 'rewrite', 'rewrite', 'intro', 'rewrite', 'rewrite', 'cut', 'cut', 'intros', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'intros', 'clear', 'elim', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'generalize', 'rewrite', 'rewrite', 'intros', 'intros', 'generalize', 'generalize', 'intros', 'generalize', 'intro', 'cut', 'intro', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'cut', '[ intro H19', 'cut', '[ intro Hodd', 'generalize', 'clear', 'intro', 'elim', 'clear', 'unfold', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intro', 'intro', 'elim', 'clear', 'intros', 'clear', 'intro', 'elim', 'clear', 'intros', 'cut', 'auto', 'intro', 'rewrite', 'apply', 'assumption', 'intuition', '(apply Zle_ge', 'apply', 'assumption', 'assumption', 'cut', 'intro', 'generalize', 'clear', 'rewrite', 'ring_simplify', 'intros', 'cut', 'auto', 'cut', 'auto', 'intros', 'elim', 'intros', 'generalize', 'intro', 'elim', 'auto', 'intros', 'elim', 'rename', 'intros', 'clear', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'rename', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'cut', 'intro', 'split', 'split', 'repeat', 'auto', 'try', 'replace', 'try', 'cut', 'try', 'intro', 'generalize', 'intro', 'apply', 'auto', 'rewrite', 'apply', 'assumption', 'rewrite', 'rewrite', 'assumption', 'try', 'replace', 'try', 'apply', 'assumption', 'rewrite', 'rewrite', 'rewrite', 'apply', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'replace', 'try', 'replace', 'try', 'cut', 'try', 'cut', 'progress', 'intro', 'rewrite', 'replace', 'apply', 'symmetry', 'apply', 'auto', 'ring', 'apply', 'auto', 'apply', 'replace', 'try', 'generalize', 'replace', 'try', 'clear', 'intro', 'rewrite', 'generalize', 'intro', 'apply', 'split', 'apply', 'assumption', 'split', 'split', 'auto', 'apply', 'auto', 'generalize', 'intro', 'generalize', 'clear', 'intro', 'cut', 'auto', 'rewrite', 'ring', 'apply', 'elim', 'clear', 'intro', 'elim', 'clear', 'intros', 'cut', 'intro', 'cut', 'intro', 'rewrite', 'rewrite', 'auto', 'apply', 'replace', '[ rewrite H18', 'rewrite', 'ring', 'discriminate', 'apply', 'replace', '[ rewrite H18', 'rewrite', 'ring', 'discriminate', 'cut', 'intro', 'cut', 'intro', 'rewrite', 'rewrite', 'apply', 'auto', 'apply', 'replace', '[ rewrite H18', 'rewrite', 'ring', 'discriminate', 'apply', 'replace', '[ rewrite H18', 'rewrite', 'ring', 'discriminate', 'apply', 'try', 'rewrite', 'rewrite', 'generalize', 'generalize', 'intros', 'elim', 'intros', 'generalize', 'intro', 'generalize', 'intro', 'cut', 'auto', 'intro', 'cut', 'auto', 'intro', 'auto', 'intros', 'apply', 'auto', 'auto', 'auto', 'ring']",4,0,3,4,5,4
/mnt/cisk/zmq/dataset/data/fermat4/Diophantus20.json,diophantus20_refined,"['intros', 'cut', 'intro', 'cut', 'intro', 'elim', 'intros', 'elim', 'clear', 'intros', 'unfold', 'elim', 'clear', 'intros', 'do', 'clear', 'intros', 'unfold', 'unfold', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'apply', 'cut', 'auto', 'intro', 'rewrite', 'elim', 'auto', 'cut', 'auto', 'intro', 'rewrite', 'elim', 'auto', 'rewrite', 'rewrite', 'apply', 'auto', 'apply', 'rewrite', 'rewrite', 'assumption', 'apply', 'rewrite', 'rewrite', 'assumption', 'unfold', 'split', 'rewrite', 'rewrite', 'replace', 'assumption', 'ring', 'split', 'rewrite', 'rewrite', 'split', 'rewrite', 'ring', 'assumption', 'auto', 'auto']",2,1,2,3,2,4
/mnt/cisk/zmq/dataset/data/fermat4/Diophantus20.json,diophantus20,"['intro', 'elim_hyps', 'cut', 'try', 'solve', 'intro', 'elim', 'clear', 'unfold', 'intros', 'elim_hyps', '(cut (x3 > 0)', '[ intro', 'apply', 'try', 'generalize', 'intro', '(cut (x5 > 0)', '[ intro', 'apply', 'auto', 'repeat', 'auto', 'split', '[ repeat progress (apply Zmult_le_0_compat', 'auto', 'intuition', 'rewrite', 'rewrite', 'match', '[ auto with zarith | ring ] ] | apply Zlt_gt', 'apply', 'try', 'progress', 'rewrite', 'auto', 'auto', 'intro', 'match', 'repeat', 'auto', 'intros']",3,0,1,2,2,2
/mnt/cisk/zmq/dataset/data/fermat4/Descent.json,R_noet_wf,"['apply', 'auto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/Descent.json,noetherian,"['intros', 'generalize', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fermat4/Descent.json,infinite_descent_nat,"['intros', 'apply', 'red', 'intros', 'elim', 'intros', 'apply', 'tauto']",1,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/fermat4/Descent.json,infinite_descent,"['intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'rewrite', 'rewrite', 'clear', 'generalize', 'intro', 'cut', 'auto', 'apply', 'clear', 'intros', 'elim', 'clear', 'intros', 'elim', 'clear', 'intros', 'intuition', 'elim', 'intros', 'elim', 'intros', 'exists', 'simpl', 'rewrite', 'rewrite', 'intuition']",1,1,0,2,1,3
/mnt/cisk/zmq/dataset/data/demos/Demo_AutoRewrite.json,ResAck0,['autorewrite'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,Ex_Wallen,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,Ex_Klenne,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,Intu,['intuition'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,NoMember,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,tauto,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,tauto1,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,tauto2,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,a,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,a2,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,a4,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,e2,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,e4,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y0,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y1,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y2,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y3,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y5,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y6,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y7,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y8,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y9,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Demo_tauto.json,y10,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,si_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,si_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,inf_egal_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,inf_egal_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,inf_egal_eq3,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,sorted_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,sorted_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,sorted_eq3,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,nocc_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,nocc_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,diff_true_false,['discriminate'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,si_intro,"['simple', 'intros', 'rewrite', 'apply', 'trivial', 'intros', 'rewrite', 'apply', 'trivial']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,inf_false_true,"['simple', 'intros', 'apply', 'apply', 'assumption', 'simple', 'intro', 'trivial', 'intros', 'rewrite', 'apply', 'assumption']",2,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,sorted_cdr,"['simple', 'intro', 'unfold', 'trivial', 'intro', 'intro', 'intro', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,sorted_inf,"['intro', 'intro', 'intro', 'rewrite', 'tauto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,ins_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,ins_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,tri_ins_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,tri_ins_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,sorted_ins_Cons,"['simple', 'intros', 'rewrite', 'rewrite', 'split', 'apply', 'assumption', 'trivial', 'intros', 'rewrite', 'apply', 'intro', 'rewrite', 'split', 'apply', 'assumption', 'rewrite', 'split', 'apply', 'apply', 'assumption', 'intro', 'rewrite', 'split', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'assumption']",2,0,1,4,0,1
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,sorted_ins,"['simple', 'trivial', 'intros', 'rewrite', 'apply', 'intros', 'rewrite', 'split', 'assumption', 'assumption', 'intro', 'apply', 'assumption', 'assumption']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,nocc_Cons_Cons,"['intros', 'rewrite', 'apply', 'intro', 'rewrite', 'apply', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'intro', 'rewrite', 'apply', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply']",1,0,0,4,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,nocc_Cons,"['intros', 'unfold', 'apply', 'intro', 'rewrite', 'simpl', 'apply', 'assumption', 'intro', 'rewrite', 'simpl', 'assumption']",2,2,1,1,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,nocc_ins,"['simple', 'trivial', 'intros', 'rewrite', 'apply', 'trivial', 'intro', 'rewrite', 'apply', 'apply']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,nocc_tri_ins,"['simple', 'trivial', 'intros', 'rewrite', 'rewrite', 'apply', 'apply']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,bubble_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,bubble_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,bubble_eq3,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,fusion_eq1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,fusion_eq2,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/demos/Sorting.json,fusion_eq3,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/fixPoint.json,subStarIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubTerm.json,codeSubTermCorrect,"['set', 'intros', 'elim', 'intros', 'simpl', 'replace', 'unfold', 'unfold', 'unfold', 'simpl', 'repeat', 'simpl', 'induction', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'rewrite', 'simpl', 'reflexivity', 'auto', 'reflexivity', 'simpl', 'transitivity', 'rewrite', 'replace', 'generalize', 'clear', 'intros', 'unfold', 'unfold', 'fold', 'unfold', 'unfold', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'unfold', 'repeat', 'unfold', 'repeat', 'assert', 'apply', 'apply', 'simpl', 'rewrite', 'clear', 'simpl', 'reflexivity', 'reflexivity', 'reflexivity', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'repeat', 'reflexivity', 'simpl', 'transitivity', 'rewrite', 'rewrite', 'replace', 'generalize', 'clear', 'intros', 'unfold', 'unfold', 'fold', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'unfold', 'repeat', 'unfold', 'repeat', 'unfold', 'repeat', 'assert', 'apply', 'apply', 'apply', 'simpl', 'rewrite', 'clear', 'assert', 'apply', 'apply', 'apply', 'simpl', 'rewrite', 'clear', 'simpl', 'reflexivity', 'reflexivity', 'reflexivity']",2,6,2,3,2,2
/mnt/cisk/zmq/dataset/data/goedel/codeSubTerm.json,codeSubTermsCorrect,"['set', 'intros', 'induction', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'repeat', 'reflexivity', 'simpl', 'transitivity', 'rewrite', 'rewrite', 'replace', 'generalize', 'clear', 'intros', 'unfold', 'unfold', 'fold', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'unfold', 'repeat', 'unfold', 'repeat', 'unfold', 'repeat', 'assert', 'apply', 'apply', 'apply', 'simpl', 'rewrite', 'clear', 'assert', 'apply', 'apply', 'apply', 'simpl', 'rewrite', 'clear', 'simpl', 'reflexivity', 'reflexivity', 'reflexivity']",1,6,2,3,2,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubTerm.json,codeSubTermTermsIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'simpl', 'auto', 'apply', 'apply']",1,1,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubTerm.json,codeSubTermIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubTerm.json,codeSubTermsIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/ListExt.json,In_list_remove1,"['intros', 'induction', 'elim', 'simpl', 'induction', 'right', 'auto', 'induction', 'simpl', 'auto', 'right', 'auto']",0,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/ListExt.json,In_list_remove2,"['intros', 'induction', 'elim', 'simpl', 'induction', 'auto', 'induction', 'rewrite', 'auto', 'auto']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/ListExt.json,In_list_remove3,"['intros', 'induction', 'elim', 'simpl', 'induction', 'induction', 'elim', 'transitivity', 'auto', 'left', 'auto', 'induction', 'auto', 'right', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/ListExt.json,no_dup1,"['intros', 'induction', 'elim', 'simpl', 'induction', 'induction', 'rewrite', 'auto', 'left', 'auto', 'induction', 'auto', 'right', 'auto']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/ListExt.json,no_dup2,"['intros', 'induction', 'elim', 'simpl', 'induction', 'right', 'auto', 'induction', 'left', 'auto', 'right', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/ListExt.json,no_dup3,"['intro', 'induction', 'intros', 'discriminate', 'unfold', 'intros', 'simpl', 'induction', 'elim', 'auto', 'elim', 'inversion', 'rewrite', 'auto']",4,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/extEqualNat.json,extEqual,"['intros', 'induction', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/extEqualNat.json,extEqualRefl,"['intros', 'induction', 'simpl', 'reflexivity', 'simpl', 'intro', 'apply']",1,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/extEqualNat.json,extEqualSym,"['intros', 'induction', 'simpl', 'symmetry', 'apply', 'simpl', 'intros', 'apply', 'simpl', 'apply']",2,4,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,eqRefl,"['intros', 'replace', 'apply', 'apply', 'unfold', 'intros', 'induction', 'apply', 'apply', 'exists', 'exists', 'contradiction', 'rewrite', 'simpl', 'reflexivity']",2,1,2,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,eqSym,"['intros', 'apply', 'auto', 'set', 'apply', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'apply', 'apply', 'apply', 'unfold', 'intros', 'induction', 'simpl', 'apply', 'apply', 'apply', 'apply', 'exists', 'exists', 'contradiction']",3,3,3,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,eqTrans,"['intros', 'apply', 'auto', 'apply', 'auto', 'clear', 'set', 'apply', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'apply', 'apply', 'apply', 'unfold', 'intros', 'induction', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'exists', 'contradiction']",3,3,3,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,termsMap,"['induction', 'exact', 'induction', 'induction', 'induction', 'induction', 'exact', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,subAllnVars1,"['intros', 'induction', 'simpl', 'symmetry', 'apply', 'assert', 'intros', 'clear', 'induction', 'elim', 'simpl', 'induction', 'simpl', 'induction', 'rewrite', 'rewrite', 'simpl', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'simpl', 'induction', 'induction', 'induction', 'induction', 'simpl', 'simpl', 'induction', 'simpl', 'simpl', 'induction', 'simpl', 'rewrite', 'replace', 'rewrite', 'reflexivity', 'apply', 'intros', 'induction', 'elim', 'apply', 'auto', 'rewrite', 'auto', 'induction', 'elim', 'apply', 'auto', 'rewrite', 'apply', 'auto', 'elim', 'auto']",1,5,5,3,1,2
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,addPairwiseEquals,"['intros', 'set', 'induction', 'simpl', 'auto', 'simpl', 'simpl', 'induction', 'induction', 'induction', 'induction', 'simpl', 'simpl', 'induction', 'simpl', 'intros', 'apply', 'auto', 'intros', 'rewrite', 'unfold', 'induction', 'rewrite', 'elim', 'induction', 'elim', 'rewrite', 'apply', 'reflexivity', 'rewrite', 'simpl', 'repeat', 'auto', 'apply', 'apply', 'rewrite', 'repeat', 'unfold', 'induction', 'induction', 'elim', 'rewrite', 'auto', 'apply', 'induction', 'apply', 'elim', 'auto', 'elim', 'auto', 'simpl', 'apply', 'apply', 'simpl', 'apply', 'apply']",2,6,3,4,5,1
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,equalRelation,"['intros', 'set', 'set', 'rewrite', 'fold', 'rewrite', 'fold', 'replace', '[ idtac | reflexivity ].', 'cut', 'unfold', 'fold', 'replace', 'generalize', 'intros', 'apply', 'auto', 'unfold', 'auto', 'auto', 'induction', 'simpl', 'reflexivity', 'replace', 'apply', 'apply', 'unfold', 'intros', 'induction', 'clear', 'induction', 'simpl', 'exists', 'exists', 'contradiction', 'simpl', 'apply', 'apply', 'rewrite', 'simpl', 'apply', 'apply', 'apply', 'apply', 'intros', 'clear', 'induction', 'unfold', 'induction', 'simpl', 'reflexivity', 'simpl', 'induction', 'induction', 'induction', 'induction', 'simpl', 'rewrite', 'induction', 'rewrite', 'elim', 'simpl', 'apply', 'apply', 'induction', 'rewrite', 'elim', 'simpl', 'apply', 'apply', 'do', 'repeat', 'apply', 'reflexivity']",5,4,5,0,1,3
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,equalFunction,"['intros', 'set', 'set', 'rewrite', 'fold', 'rewrite', 'fold', 'replace', '[ idtac | reflexivity ].', 'cut', 'unfold', 'fold', 'replace', 'generalize', 'intros', 'apply', 'auto', 'unfold', 'auto', 'auto', 'induction', 'simpl', 'reflexivity', 'replace', 'apply', 'apply', 'unfold', 'intros', 'induction', 'clear', 'induction', 'simpl', 'exists', 'exists', 'contradiction', 'simpl', 'apply', 'apply', 'rewrite', 'simpl', 'apply', 'apply', 'apply', 'apply', 'intros', 'clear', 'induction', 'unfold', 'induction', 'simpl', 'reflexivity', 'simpl', 'induction', 'induction', 'induction', 'induction', 'simpl', 'rewrite', 'induction', 'rewrite', 'elim', 'simpl', 'apply', 'apply', 'induction', 'rewrite', 'elim', 'simpl', 'apply', 'apply', 'do', 'repeat', 'apply', 'reflexivity']",5,4,5,0,1,3
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,subWithEqualsTerm,"['intros', 'elim', 'simpl', 'intros', 'induction', 'auto', 'apply', 'apply', 'apply', 'auto', 'induction', 'induction', 'induction', 'induction', 'simpl', 'simpl', 'simpl', 'inversion', 'inversion', 'split', 'auto', 'rewrite', 'rewrite', 'auto']",1,2,2,2,3,3
/mnt/cisk/zmq/dataset/data/goedel/folLogic3.json,subWithEqualsTerms,"['intros', 'induction', 'simpl', 'auto', 'induction', 'induction', 'induction', 'induction', 'simpl', 'simpl', 'simpl', 'inversion', 'inversion', 'split', 'apply', 'auto', 'rewrite', 'rewrite', 'auto']",0,2,1,2,1,2
/mnt/cisk/zmq/dataset/data/goedel/PAtheory.json,paPlusSym,"['assert', 'apply', 'rewrite', 'induction', 'discriminate', 'induction', 'elim', 'apply', 'repeat', 'simpl', 'apply', 'apply', 'apply', 'repeat', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'induction', 'discriminate', 'induction', 'simpl', 'induction', 'elim', 'auto', 'contradiction', 'rewrite', 'simpl', 'apply', 'unfold', 'intros', 'induction', 'induction', 'induction', 'elim', 'exists', 'auto', 'induction', 'simpl', 'decompose', 'discriminate', 'discriminate', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'apply', 'rewrite', 'simpl', 'apply', 'fold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'simpl', 'apply', 'fold', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'apply', 'intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",3,4,5,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/PAtheory.json,NN72PA,"['simpl', 'apply', 'apply', 'rewrite', 'simpl', 'set', 'fold', 'fold', 'fold', 'fold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply']",0,2,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProof.json,nVars,"['intros', 'induction', 'split', 'exact', 'exact', 'induction', 'split', 'constructor', 'exact', 'exact', 'constructor', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/folProof.json,AxmEq4,"['intros', 'assert', 'intros', 'induction', 'exact', 'exact', 'apply', 'induction', 'apply', 'apply', 'Defined']",0,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/folProof.json,AxmEq5,"['intros', 'assert', 'intros', 'induction', 'exact', 'exact', 'apply', 'induction', 'apply', 'apply', 'Defined']",0,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/NN2PA.json,NN2PA,"['intros', 'apply', 'apply', 'intros', 'unfold', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'apply', 'repeat', 'constructor', 'induction', 'apply', 'repeat', 'constructor', 'induction', 'apply', 'repeat', 'constructor', 'induction', 'apply', 'repeat', 'constructor', 'induction', 'apply', 'repeat', 'constructor', 'induction', 'apply', 'repeat', 'constructor', 'induction', 'apply', 'induction', 'apply', 'induction', 'apply', 'apply']",3,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,closedNN1,"['unfold', 'unfold', 'intros', 'repeat', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,closedNN,"['unfold', 'intros', 'unfold', 'induction', 'elim', 'tauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn1,"['intros', 'replace', 'apply', 'apply', 'repeat', 'constructor', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn2,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn3,"['intros', 'replace', 'apply', 'apply', 'repeat', 'constructor', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn4,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn5,"['intros', 'replace', 'apply', 'apply', 'repeat', 'constructor', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn6,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn7,"['intros', 'replace', 'apply', 'apply', 'repeat', 'constructor', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn8,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/NN.json,nn9,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/prLogic.json,codeForallIsPR,"['apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/prLogic.json,codeNotIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/prLogic.json,codeImpIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folLogic2.json,subSubTerm,"['intros', 'elim', 'simpl', 'intros', 'induction', 'induction', 'elim', 'transitivity', 'auto', 'simpl', 'induction', 'reflexivity', 'elim', 'auto', 'simpl', 'induction', 'rewrite', 'reflexivity', 'auto', 'simpl', 'induction', 'elim', 'auto', 'reflexivity', 'rewrite', 'reflexivity', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,1,3
/mnt/cisk/zmq/dataset/data/goedel/folLogic2.json,subSubTerms,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'auto', 'auto']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/wConsistent.json,wCon2Con,"['intros', 'unfold', 'unfold', 'assert', 'apply', 'apply', 'apply', 'assert', 'intros', 'simpl', 'repeat', 'auto', 'induction', 'exists', 'auto']",2,1,2,0,3,0
/mnt/cisk/zmq/dataset/data/goedel/wConsistent.json,notCon2wNotCon,"['intros', 'unfold', 'exists', 'exists', 'split', 'intros', 'elim', 'split', 'apply', 'intros', 'apply']",3,0,1,0,0,5
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,LNT_dec,"['unfold', 'split', 'decide']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,freeVarPlus,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,freeVarTimes,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,freeVarSucc,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,freeVarZero,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,forallI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,forallE,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,existI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,existE,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,existSys,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNT.json,closedNatToTerm,"['intros', 'induction', 'auto', 'simpl', 'rewrite', 'auto']",0,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/goedel1.json,FirstIncompletenessA,"['intros', 'unfold', 'destruct', 'unfold', 'intros', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'rewrite', 'apply', 'apply', 'assumption']",4,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/goedel1.json,Goedel'sIncompleteness1st,"['intros', 'exists', 'pose', 'pose', 'pose', 'assert', 'intro', 'destruct', 'apply', 'apply', 'tauto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,LNN_dec,"['unfold', 'split', 'decide']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,freeVarPlus,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,freeVarTimes,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,freeVarSucc,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,freeVarZero,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,freeVarLT,"['intros', 'rewrite', 'reflexivity']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,Axm,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,sysExtend,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,sysWeaken,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,impI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,impE,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,contradiction,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,nnE,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,noMiddle,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,nnI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,cp1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,cp2,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,orI1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,orI2,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,orE,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,orSys,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,andI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,andE1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,andE2,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,iffI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,iffE1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,iffE2,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,forallI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,forallE,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,forallSimp,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,existI,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,existE,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,existSimp,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,existSys,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,absurd1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,nImp,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,nOr,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,nAnd,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,nForall,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,nExist,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,impRefl,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,impTrans,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,orSym,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,andSym,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,iffRefl,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,iffSym,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,iffTrans,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,eqRefl,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,eqSym,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,eqTrans,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,eqPlus,"['intros', 'unfold', 'apply', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'repeat', 'simpl', 'inversion', 'simpl', 'inversion', 'apply', 'simpl', 'inversion', 'rewrite', 'simpl', 'inversion', 'simpl', 'inversion', 'rewrite', 'inversion', 'apply']",1,3,1,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,eqTimes,"['intros', 'unfold', 'apply', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'repeat', 'simpl', 'inversion', 'simpl', 'inversion', 'apply', 'simpl', 'inversion', 'rewrite', 'simpl', 'inversion', 'simpl', 'inversion', 'rewrite', 'inversion', 'apply']",1,3,1,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,eqSucc,"['intros', 'unfold', 'apply', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'repeat', 'simpl', 'inversion', 'simpl', 'inversion', 'apply']",1,2,1,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,eqLT,"['intros', 'unfold', 'apply', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'repeat', 'simpl', 'inversion', 'simpl', 'inversion', 'apply', 'simpl', 'inversion', 'rewrite', 'simpl', 'inversion', 'simpl', 'inversion', 'rewrite', 'inversion', 'apply']",1,3,1,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/LNN.json,closedNatToTerm,"['intros', 'induction', 'auto', 'simpl', 'rewrite', 'auto']",0,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,evalProjFuncInd,"['intro', 'induction', 'intros', 'elim', 'intros', 'simpl', 'induction', 'reflexivity', 'rewrite', 'reflexivity']",2,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,extEqualVectorGeneral,"['induction', 'intros', 'destruct', 'exact', 'exact', 'intros', 'destruct', 'exact', 'exact', 'Defined']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,extEqualVector,"['refine', 'intros', 'apply', 'apply', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,extEqualVectorRefl,"['intros', 'induction', 'now', 'split', 'apply', 'auto']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,extEqualOneParamList,"['intro', 'refine', 'simpl', 'intros', 'auto', 'destruct', 'split', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,extEqualCompose,"['induction', 'refine', 'simpl', 'intros', 'assumption', 'destruct', 'now', '[|subst a]).', 'rewrite', 'apply', 'destruct', 'apply', 'split', 'apply', 'now', 'auto']",1,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,extEqualCompose2,"['intro', 'induction', 'simpl', 'intros', 'rewrite', 'apply', 'apply', 'simpl', 'intros', 'auto']",1,3,1,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,extEqualPrimRec,"['intros', 'simpl', 'intros', 'induction', 'simpl', 'auto', 'simpl', 'cut', 'cut', 'generalize', 'fold', 'clear', 'induction', 'simpl', 'intros', 'rewrite', 'apply', 'simpl', 'intros', 'apply', 'simpl', 'intros', 'apply', 'apply', 'simpl', 'intros', 'simpl', 'apply', 'auto']",3,5,2,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,succIsPR,"['exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,const0_NIsPR,"['simple', 'exists', 'simpl', 'reflexivity', 'intros', 'induction', 'exists', 'simpl', 'simpl', 'rewrite', 'reflexivity']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,const1_NIsPR,"['intros', 'assert', 'apply', 'induction', 'exists', 'simpl', 'simpl', 'auto']",0,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,idIsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi1_2IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi2_2IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi1_3IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi2_3IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi3_3IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi1_4IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi2_4IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi3_4IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,pi4_4IsPR,"['assert', 'auto', 'exists', 'simpl', 'auto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter01IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'auto']",1,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter10IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'auto']",1,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter100IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'auto']",1,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter010IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'auto']",1,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter001IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'auto']",1,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter011IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",1,2,1,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter110IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",1,2,1,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter101IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",1,2,1,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter0011IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",1,2,1,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter1000IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'auto']",1,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter1011IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'assert', 'apply', 'assert', 'apply', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'rewrite', 'auto']",1,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,filter1100IsPR,"['intros', 'induction', 'simpl', 'assert', 'apply', 'assert', 'apply', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'replace', 'rewrite', 'auto', 'auto']",1,2,1,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose1_1IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose1_2IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose1_3IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose2_1IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose2_2IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose2_3IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose2_4IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose3_1IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose3_2IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose3_3IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose4_2IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose4_3IsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",1,2,0,3,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,swapIsPR,"['intros', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,indIsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'simple', 'simpl', 'rewrite', 'auto', 'intros', 'simpl', 'rewrite', 'rewrite', 'auto']",1,2,0,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,ind1ParamIsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'induction', 'simpl', 'apply', 'simpl', 'rewrite', 'rewrite', 'auto']",1,5,0,2,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,ind2ParamIsPR,"['intros', 'induction', 'simpl', 'induction', 'simpl', 'exists', 'simpl', 'simple', 'intros', 'simpl', 'rewrite', 'auto', 'intros', 'simpl', 'rewrite', 'rewrite', 'auto']",2,2,0,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,plusIndIsPR,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,plusIsPR,"['assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'induction', 'auto', 'simpl', 'rewrite', 'auto']",1,3,1,2,1,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,multIndIsPR,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,multIsPR,"['assert', 'assert', 'apply', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'induction', 'auto', 'simpl', 'rewrite', 'apply']",1,3,2,2,1,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,predIsPR,"['assert', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'induction', 'auto', 'auto']",1,2,1,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,minusIndIsPR,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,minusIsPR,"['assert', 'apply', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'induction', 'simpl', 'apply', 'simpl', 'rewrite', 'generalize', 'intro', 'induction', 'intros', 'auto', 'intros', 'simpl', 'induction', 'simpl', 'apply', 'apply']",4,5,2,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,notZeroIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,ltBool,"['intros', 'destruct', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,ltBoolTrue,"['intros', 'unfold', 'induction', 'discriminate', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,ltBoolFalse,"['intros', 'unfold', 'induction', 'unfold', 'intros', 'elim', 'auto', 'discriminate']",3,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,ltIsPR,"['unfold', 'assert', 'apply', 'apply', 'apply', 'apply', 'induction', 'simpl', 'exists', 'simpl', 'intros', 'rewrite', 'unfold', 'induction', 'cut', 'generalize', 'clear', 'induction', 'intros', 'reflexivity', 'intros', 'induction', 'elim', 'simpl', 'apply', 'apply', 'auto', 'auto', 'cut', 'generalize', 'clear', 'induction', 'intros', 'elim', 'intros', 'induction', 'simpl', 'reflexivity', 'simpl', 'apply', 'apply', 'auto', 'auto']",2,3,3,2,0,5
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,gtIsPR,"['intros', 'unfold', 'simpl', 'apply', 'apply']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,replaceCompose2,"['intros', 'apply', 'unfold', 'simpl', 'auto', 'auto']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,orRel,"['intros', 'induction', 'apply', 'simpl', 'intros', 'apply', 'apply', 'apply', 'Defined']",2,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,orRelPR,"['intros', 'induction', 'induction', 'assert', 'apply', 'apply', 'apply', 'induction', 'exists', 'simpl', 'apply', 'apply', 'auto', 'clear', 'induction', 'simpl', 'induction', 'reflexivity', 'induction', 'reflexivity', 'reflexivity', 'simpl', 'fold', 'intros', 'apply']",1,2,3,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,andRel,"['intros', 'induction', 'exact', 'simpl', 'intros', 'apply', 'apply', 'apply', 'Defined']",2,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,andRelPR,"['intros', 'induction', 'induction', 'assert', 'apply', 'induction', 'exists', 'simpl', 'apply', 'apply', 'auto', 'clear', 'induction', 'simpl', 'induction', 'induction', 'reflexivity', 'reflexivity', 'reflexivity', 'simpl', 'fold', 'intros', 'apply']",1,2,3,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,notRel,"['intros', 'induction', 'exact', 'simpl', 'intros', 'apply', 'apply', 'Defined']",2,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,notRelPR,"['intros', 'induction', 'assert', 'apply', 'apply', 'apply', 'apply', 'induction', 'exists', 'simpl', 'apply', 'apply', 'unfold', 'simpl', 'auto', 'auto', 'clear', 'induction', 'simpl', 'induction', 'reflexivity', 'reflexivity', 'simpl', 'intros', 'fold', 'apply']",1,5,3,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,boddIsPR,"['assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'induction', 'exists', 'simpl', 'intros', 'induction', 'simpl', 'auto', 'simpl', 'rewrite', 'simpl', 'rewrite', 'clear', 'induction', 'reflexivity', 'reflexivity']",1,5,2,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,beq_nat_not_refl,"['double', 'intros', 'elim', 'auto', 'auto', 'auto', 'intros', 'simpl', 'auto']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,neqIsPR,"['intros', 'assert', 'apply', 'apply', 'apply', 'induction', 'exists', 'simpl', 'simpl', 'intros', 'rewrite', 'clear', 'unfold', 'induction', 'rewrite', 'rewrite', 'simpl', 'induction', 'simpl', 'reflexivity', 'elim', 'rewrite', 'simpl', 'induction', 'induction', 'induction', 'elim', 'auto', 'elim', 'auto', 'reflexivity', 'reflexivity', 'auto']",1,3,2,2,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,eqIsPR,"['intros', 'assert', 'apply', 'apply', 'simpl', 'induction', 'exists', 'simpl', 'simpl', 'intros', 'rewrite', 'clear', 'induction', 'auto', 'auto']",1,2,2,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,leBool,"['intros', 'destruct', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,leIsPR,"['assert', 'apply', 'apply', 'apply', 'induction', 'exists', 'simpl', 'simpl', 'intros', 'rewrite', 'clear', 'unfold', 'unfold', 'induction', 'induction', 'simpl', 'replace', 'rewrite', 'reflexivity', 'induction', 'auto', 'induction', 'elim', 'auto', 'elim', 'auto', 'rewrite', 'simpl', 'reflexivity', 'unfold', 'intros', 'rewrite', 'elim', 'simpl', 'induction', 'reflexivity', 'elim', 'apply', 'auto']",3,4,3,1,1,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,projectionListPR,"['intros', 'induction', 'exact', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'Defined']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,projectionListInd,"['intros', 'unfold', 'induction', 'simpl', 'reflexivity', 'simpl', 'rewrite', 'rewrite', 'reflexivity']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,projectionListApplyParam,"['unfold', 'unfold', 'simple', 'simpl', 'auto', 'intros', 'simpl', 'induction', 'elim', 'apply', 'rewrite', 'auto', 'split', 'rewrite', 'apply', 'apply']",1,3,2,2,1,0
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,projectionListId,"['intros', 'induction', 'simpl', 'reflexivity', 'simpl', 'intros', 'fold', 'induction', 'apply', 'apply', 'apply', 'clear', 'generalize', 'generalize', 'clear', 'assert', 'intros', 'induction', 'simpl', 'reflexivity', 'simpl', 'intros', 'fold', 'apply', 'apply', 'apply', 'unfold', 'simpl', 'split', 'apply', 'apply', 'apply', 'elim', 'auto']",1,3,2,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,ignoreParamsIsPR,"['assert', 'unfold', 'intro', 'induction', 'intros', 'destruct', 'simpl', 'elim', 'apply', 'simpl', 'reflexivity', 'elim', 'induction', 'assert', 'apply', 'auto', 'generalize', 'rewrite', 'clear', 'intros', 'simpl', 'intros', 'assert', 'simpl', 'injection', 'auto', 'replace', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'generalize', 'generalize', 'simpl', 'generalize', 'rewrite', 'intros', 'elim', 'apply', 'elim', 'apply', 'simpl', 'reflexivity', 'auto', 'generalize', 'generalize', 'rewrite', 'clear', 'replace', 'simpl', 'intros', 'elim', 'apply', 'simpl', 'clear', 'apply', 'apply', 'intros', 'unfold', 'induction', 'exists', 'apply', 'assert', 'rewrite', 'rewrite', 'apply', 'assert', 'apply', 'replace', 'simpl', 'apply', 'apply', 'apply', 'generalize', 'generalize', 'intros', 'apply', 'apply', 'auto', 'generalize', 'replace', 'intros', 'elim', 'apply', 'simpl', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",8,3,6,2,0,5
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,reduce1stCompose,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'fold', 'intros', 'apply']",1,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,reduce2ndCompose,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'fold', 'intros', 'apply']",1,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,evalPrimRecParam,"['intros', 'induction', 'simpl', 'apply', 'simpl', 'apply', 'auto', 'apply']",0,3,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,compose2IsPR,"['intros', 'induction', 'induction', 'exists', 'simpl', 'apply', 'apply', 'unfold', 'simpl', 'split', 'auto', 'apply', 'auto', 'clear', 'induction', 'simpl', 'auto', 'simpl', 'fold', 'induction', 'intros', 'apply', 'apply', 'apply', 'unfold', 'simpl', 'repeat', 'apply', 'apply', 'apply', 'apply', 'apply', 'clear', 'generalize', 'fold', 'fold', 'generalize', 'intros', 'apply', 'apply', 'elim', 'auto']",3,4,3,0,4,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,switchPR,"['simpl', 'intros', 'destruct', 'apply', 'apply', 'Defined']",1,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,switchIsPR,"['intros', 'assert', 'apply', 'apply', 'apply', 'induction', 'exists', 'apply', 'apply', 'unfold', 'simpl', 'intros', 'induction', 'reflexivity']",1,2,3,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,boundedSearch1,"['unfold', 'intros', 'generalize', 'intros', 'clear', 'induction', 'simpl', 'elim', 'simpl', 'induction', 'rewrite', 'induction', 'rewrite', 'induction', 'elim', 'rewrite', 'auto', 'auto', 'apply', 'induction', 'auto', 'assert', 'apply', 'auto', 'induction', 'auto', 'elim', 'auto', 'apply', 'auto']",4,1,2,1,1,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,boundedSearch2,"['unfold', 'intros', 'assert', 'clear', 'intros', 'induction', 'simpl', 'auto', 'simpl', 'assert', 'induction', 'auto', 'induction', 'induction', 'rewrite', 'rewrite', 'auto', 'rewrite', 'auto', 'induction', 'elim', 'auto', 'auto', 'apply']",2,2,0,2,3,2
/mnt/cisk/zmq/dataset/data/goedel/primRec.json,boundSearchIsPR,"['intros', 'unfold', 'assert', 'apply', 'unfold', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'induction', 'exists', 'apply', 'auto', 'simpl', 'intros', 'induction', 'reflexivity', 'apply', 'apply', 'induction', 'exists', 'apply', 'auto', 'simpl', 'intros', 'induction', 'simpl', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'rewrite', 'simpl', 'reflexivity', 'auto', 'apply', 'assert', 'apply', 'apply', 'apply', 'auto', 'clear', 'induction', 'exists', 'apply', 'auto', 'clear', 'simpl', 'intros', 'generalize', 'intros', 'clear', 'induction', 'simpl', 'auto', 'simpl', 'rewrite', 'induction', 'simpl', 'induction', 'auto', 'auto', 'simpl', 'reflexivity']",4,5,4,1,2,1
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarTermCorrect,"['intros', 'elim', 'intros', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'repeat', 'simpl', 'reflexivity', 'unfold', 'fold', 'rewrite', 'clear', 'unfold', 'fold', 'generalize', 'intros', 'unfold', 'unfold', 'set', 'unfold', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'unfold', 'repeat', 'rewrite', 'simpl', 'repeat', 'unfold', 'unfold', 'fold', 'reflexivity', 'apply', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'repeat', 'reflexivity', 'unfold', 'fold', 'fold', 'rewrite', 'rewrite', 'rewrite', 'clear', 'unfold', 'fold', 'fold', 'generalize', 'clear', 'intros', 'unfold', 'unfold', 'unfold', 'set', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'simpl', 'repeat', 'reflexivity', 'simpl', 'rewrite', 'apply', 'apply', 'simpl', 'rewrite', 'apply', 'apply']",3,6,1,4,2,2
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarTermsCorrect,"['intros', 'induction', 'simpl', 'unfold', 'unfold', 'unfold', 'unfold', 'simpl', 'repeat', 'reflexivity', 'unfold', 'fold', 'fold', 'rewrite', 'rewrite', 'rewrite', 'clear', 'unfold', 'fold', 'fold', 'generalize', 'clear', 'intros', 'unfold', 'unfold', 'unfold', 'set', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'simpl', 'repeat', 'reflexivity', 'simpl', 'rewrite', 'apply', 'apply', 'simpl', 'rewrite', 'apply', 'apply']",1,7,1,4,1,1
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarTermTermsIsPR,"['intros', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'simpl', 'auto', 'apply', 'apply']",1,1,2,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarTermIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarTermsIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarFormulaIsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'assert', 'apply', 'auto', 'apply', 'assert', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,4,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarListFormulaCorrect,"['intros', 'unfold', 'set', 'induction', 'unfold', 'rewrite', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'unfold', 'rewrite', 'simpl', 'repeat', 'rewrite', 'rewrite', 'apply', 'simpl', 'apply', 'apply']",1,5,1,4,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeFreeVar.json,codeFreeVarListFormulaIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfAXMIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfMPIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfGENIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfIMP1IsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfIMP2IsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfCPIsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfFA1IsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'unfold', 'apply', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'try', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,4,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfFA2IsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'apply', 'assumption', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfFA3IsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfEQnIsPR,"['unfold', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfEQ1IsPR,"['unfold', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfEQ2IsPR,"['unfold', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfEQ3IsPR,"['unfold', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,codeAxmEqHelpIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'assert', 'intros', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,codeNVars1IsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,codeNVars2IsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,codeNVarsCorrect,"['intros', 'split', 'induction', 'simpl', 'reflexivity', 'simpl', 'rewrite', 'induction', 'simpl', 'reflexivity', 'induction', 'simpl', 'reflexivity', 'simpl', 'rewrite', 'induction', 'simpl', 'reflexivity']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,codeOrIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,codeAndIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,codeIffIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfEQ4IsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfEQ5IsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfIsPR,"['unfold', 'apply', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/checkPrf.json,checkPrfCorrect1,"['intros', 'unfold', 'rewrite', 'simpl', 'lazy', 'set', 'induction', 'unfold', 'rewrite', 'unfold', 'simpl', 'rewrite', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'simpl', 'rewrite', 'reflexivity', 'set', 'unfold', 'repeat', 'simpl', 'unfold', 'unfold', 'repeat', 'simpl', 'repeat', 'rewrite', 'rewrite', 'replace', '[ idtac | reflexivity ].', 'rewrite', 'rewrite', 'simpl', 'replace', 'rewrite', 'reflexivity', 'generalize', 'intro', 'clear', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'eapply', '[ idtac | apply cPairLe2 ].', 'eapply', '[ idtac | apply cPairLt2 ].', 'unfold', 'apply', 'eapply', '[ idtac | apply cPairLe2 ].', 'eapply', '[ idtac | apply cPairLt2 ].', 'unfold', 'apply', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'repeat', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'induction', 'elim', 'assumption', 'replace', 'simpl', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'eapply', '[ idtac | apply cPairLe2 ].', 'eapply', '[ idtac | apply cPairLt2 ].', 'apply', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'unfold', 'rewrite', 'reflexivity', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'unfold', 'rewrite', 'reflexivity', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'unfold', 'rewrite', 'reflexivity', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'reflexivity', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'rewrite', 'induction', 'elim', 'assumption', 'unfold', 'rewrite', 'reflexivity', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'unfold', 'rewrite', 'reflexivity', 'set', 'unfold', 'cut', '[ intro H', 'rewrite', 'clear', 'simpl', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'simpl', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'set', 'unfold', 'cut', 'generalize', 'intros', 'rewrite', 'simpl', 'unfold', 'replace', '[ idtac | reflexivity ].', 'generalize', 'intros', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'repeat', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'set', 'unfold', 'cut', 'generalize', 'intros', 'rewrite', 'simpl', 'unfold', 'replace', '[ idtac | reflexivity ].', 'generalize', 'intros', 'rewrite', 'rewrite', 'rewrite', 'unfold', 'repeat', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'replace', 'unfold', 'repeat', 'reflexivity', 'unfold', 'clear', 'simpl', 'induction', 'rewrite', 'rewrite', 'clear', 'induction', 'simpl', 'replace', 'generalize', 'intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity', 'unfold', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'replace', 'unfold', 'repeat', 'reflexivity', 'unfold', 'clear', 'simpl', 'induction', 'rewrite', 'rewrite', 'clear', 'induction', 'simpl', 'replace', 'generalize', 'intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'reflexivity']",2,6,2,4,2,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,reduceAddExistsOneWay,"['intros', 'apply', 'induction', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'simpl', 'apply', 'apply', 'unfold', 'simpl', 'intro', 'elim', 'reflexivity', 'apply', 'auto']",2,2,3,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,reduceAddExists,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'apply', 'apply', 'auto']",0,3,2,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,subAddExistsNice,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'rewrite', 'induction', 'rewrite', 'simpl', 'induction', 'elim', 'elim', 'apply', 'induction', 'induction', 'elim', 'elim', 'apply', 'rewrite', 'reflexivity', 'induction', 'left', 'apply', 'auto', 'auto', 'intros', 'induction', 'left', 'apply', 'auto', 'auto']",0,4,2,0,2,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,reduceAddForalls,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'apply', 'apply', 'auto']",0,3,2,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,subAddForallsNice,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'rewrite', 'induction', 'rewrite', 'simpl', 'induction', 'elim', 'elim', 'apply', 'induction', 'induction', 'elim', 'elim', 'apply', 'rewrite', 'reflexivity', 'induction', 'left', 'apply', 'auto', 'auto', 'intros', 'induction', 'left', 'apply', 'auto', 'auto']",0,4,2,0,2,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,succRepresentable,"['intros', 'unfold', 'split', 'intros', 'simpl', 'decompose', 'rewrite', 'auto', 'rewrite', 'auto', 'simpl', 'intros', 'unfold', 'rewrite', 'simpl', 'apply']",3,3,0,2,2,2
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,zeroRepresentable,"['intros', 'unfold', 'split', 'intros', 'simpl', 'decompose', 'rewrite', 'auto', 'simpl', 'apply']",2,1,0,1,1,2
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,projRepresentable,"['intros', 'unfold', 'split', 'intros', 'simpl', 'decompose', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'auto', 'induction', 'elim', 'simpl', 'intros', 'induction', 'rewrite', 'clear', 'induction', 'simpl', 'unfold', 'rewrite', 'simpl', 'apply', 'simpl', 'intros', 'unfold', 'repeat', 'simpl', 'induction', 'simpl', 'replace', 'auto', 'rewrite', 'simpl', 'induction', 'rewrite', 'reflexivity', 'apply', 'elim', 'auto', 'elim', 'auto', 'generalize', 'intros', 'apply', 'apply', 'apply', 'simpl', 'unfold', 'intros', 'decompose', 'discriminate', 'inversion', 'elim', 'rewrite', 'auto', 'auto']",7,6,3,3,2,4
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,subFormulaMinimize,"['intros', 'unfold', 'rewrite', 'rewrite', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'rewrite', 'unfold', 'rewrite', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'rewrite', 'repeat', '[ apply closedNN | idtac ] ].', 'apply', 'auto', 'simpl', 'unfold', 'intros', 'induction', 'auto', 'auto']",3,2,1,3,2,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,freeVarPrimRecSigmaFormulaHelp1,"['intros', 'unfold', 'assert', 'intros', 'assert', 'apply', 'induction', 'destruct', '[ auto | idtac ].', 'destruct', '[ auto | idtac ].', 'destruct', '[ auto | idtac ].', 'elim', 'auto', 'repeat', 'apply', 'repeat', '[ eapply In_list_remove1', 'apply', '[ eapply In_list_remove2', 'apply', '[ eapply In_list_remove1', 'apply', '[ eapply In_list_remove2', 'apply', '[ eapply In_list_remove1', 'apply', '[ eapply In_list_remove2', 'apply', '[ apply H | clear H ] | H:(In v (freeVarFormula LNN (impH ?X1 ?X2))) |- _ => assert (In v (freeVarFormula LNN X1 ++ freeVarFormula LNN X2))', '[ apply H | clear H ] | H:(In v (_ ++ _)) |- _ => induction (in_app_or _ _ _ H)', 'clear', 'clear', 'clear', 'try', 'match', 'decompose', 'clear', 'auto', 'try', 'auto', 'simpl', 'try']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,freeVarPrimRecPiFormulaHelp1,"['intros', 'unfold', 'assert', 'intros', 'assert', 'apply', 'induction', 'destruct', '[ auto | idtac ].', 'destruct', '[ auto | idtac ].', 'destruct', '[ auto | idtac ].', 'elim', 'auto', 'repeat', 'apply', 'repeat', '[ eapply In_list_remove1', 'apply', '[ eapply In_list_remove2', 'apply', '[ eapply In_list_remove1', 'apply', '[ eapply In_list_remove2', 'apply', '[ eapply In_list_remove1', 'apply', '[ eapply In_list_remove2', 'apply', '[ apply H | clear H ] | H:(In v (freeVarFormula LNN (impH ?X1 ?X2))) |- _ => assert (In v (freeVarFormula LNN X1 ++ freeVarFormula LNN X2))', '[ apply H | clear H ] | H:(In v (_ ++ _)) |- _ => induction (in_app_or _ _ _ H)', 'clear', 'clear', 'clear', 'try', 'match', 'decompose', 'clear', 'auto', 'try', 'auto', 'simpl', 'try']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,notBoundedForall,"['intros', 'induction', 'elim', 'intros', 'elim', 'induction', 'assert', 'unfold', 'intros', 'elim', 'intros', 'induction', 'auto', 'rewrite', 'auto', 'decompose', 'exists', 'split', 'apply', 'auto', 'auto', 'exists', 'split', 'apply', 'auto']",2,0,1,1,1,5
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,succ_plus_discr,"['intros', 'induction', 'discriminate', 'intro', 'apply', 'apply', 'rewrite', 'rewrite', 'reflexivity']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,n_SSn,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,n_SSSn,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,n_SSSSn,"['intro', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,In_betaFormula_subst_1_2,"['intros', 'apply', 'rewrite', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,In_betaFormula_subst_1,"['intros', 'apply', 'rewrite', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,In_betaFormula,"['intros', 'apply', 'rewrite', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,In_betaFormula_subst_2,"['intros', 'rewrite', 'decompose', 'tauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,primRecRepresentable1,"['intros', 'elim', 'apply', 'apply', 'intros', 'simpl', 'apply', 'simpl', 'intros', 'decompose', 'assert', 'apply', 'auto', 'induction', 'split', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'simpl', 'intros', 'apply', 'auto', 'simpl', 'intros', 'repeat', 'constructor', 'simpl', 'intros', 'decompose', 'clear', 'repeat', 'auto', 'induction', 'auto', 'apply', 'induction', 'auto']",5,3,4,0,3,1
/mnt/cisk/zmq/dataset/data/goedel/PRrepresentable.json,primRecRepresentable,"['intros', 'assert', 'apply', 'induction', 'split', 'auto', 'induction', 'eapply', 'apply', 'assumption']",0,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeLengthIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeAppCorrect,"['intros', 'unfold', 'set', 'induction', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'unfold', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'set', 'simpl', 'repeat', 'replace', 'reflexivity', 'assert', 'apply', 'unfold', 'apply', 'apply', 'simpl', 'rewrite', 'auto']",1,5,4,3,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeAppIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeListRemoveCorrect,"['intros', 'unfold', 'set', 'induction', 'simpl', 'unfold', 'simpl', 'reflexivity', 'unfold', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'set', 'set', 'simpl', 'repeat', 'assert', 'apply', 'simpl', 'unfold', 'rewrite', 'simpl', 'apply', 'apply', 'simpl', 'induction', 'rewrite', 'rewrite', 'simpl', 'unfold', 'rewrite', 'rewrite', 'auto', 'rewrite', 'simpl', 'replace', 'reflexivity', 'unfold', 'rewrite', 'simpl', 'rewrite', 'auto', 'auto']",1,8,2,4,2,0
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeListRemoveIsPR,"['intros', 'unfold', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'simpl', 'auto', 'apply']",1,1,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeInCorrect,"['intros', 'induction', 'simpl', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'unfold', 'unfold', 'unfold', 'rewrite', 'unfold', 'set', 'set', 'set', 'simpl', 'repeat', 'induction', 'rewrite', 'rewrite', 'simpl', 'reflexivity', 'rewrite', 'simpl', 'assert', 'apply', 'unfold', 'unfold', 'simpl', 'rewrite', 'apply', 'apply', 'simpl', 'rewrite', 'unfold', 'move', 'fold', 'unfold', 'simpl', 'rewrite', 'rewrite', 'clear', 'induction', 'induction', 'reflexivity', 'elim', 'simpl', 'auto', 'induction', 'induction', 'elim', 'auto', 'elim', 'auto', 'reflexivity', 'auto']",0,8,3,4,1,2
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeInIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeNoDupCorrect,"['intros', 'unfold', 'set', 'induction', 'simpl', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'unfold', 'repeat', 'unfold', 'repeat', 'rewrite', 'rewrite', 'induction', 'reflexivity', 'reflexivity', 'simpl', 'apply', 'apply']",1,6,1,3,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeList.json,codeNoDupIsPR,"['unfold', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PAconsistent.json,PAconsistent,"['apply', 'generalize', 'intros', 'do', 'try', 'auto', 'rewrite', 'clear', 'unfold', 'unfold', 'unfold', 'simpl', 'intros', 'apply', 'clear', 'generalize', 'clear', 'induction', 'intros', 'simpl', 'intros', 'induction', 'apply', 'replace', 'apply', 'rewrite', 'assumption', 'reflexivity', 'apply', 'clear', 'intros', 'apply', 'intros', 'clear', 'apply', 'clear', 'rewrite', 'assert', 'apply', 'auto', 'clear', 'apply', 'intros', 'unfold', 'induction', 'replace', 'reflexivity', 'apply', 'intros', 'induction', 'rewrite', 'induction', 'reflexivity', 'elim', 'reflexivity', 'induction', 'reflexivity', 'assumption', 'simpl', 'auto', 'simpl', 'intros', 'apply', 'intros', 'apply', 'intros', 'clear', 'compute', 'discriminate']",7,4,4,0,2,2
/mnt/cisk/zmq/dataset/data/goedel/folLogic.json,forallI,"['intros', 'induction', 'induction', 'exists', 'assert', 'unfold', 'intros', 'elim', 'induction', 'exists', 'split', 'tauto', 'apply', 'tauto', 'exists', 'auto']",2,0,0,0,3,3
/mnt/cisk/zmq/dataset/data/goedel/folLogic.json,forallE,"['intros', 'apply', 'exists', 'exists', 'contradiction', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folLogic.json,existI,"['intros', 'unfold', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'right', 'constructor', 'apply', 'assumption']",1,0,3,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/folLogic.json,existE,"['intros', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'exists', 'contradiction', 'apply', 'apply', 'auto', 'apply', 'assumption', 'apply', 'exists', 'exists', 'contradiction', 'apply', 'right', 'constructor', 'assumption']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/expressible.json,closedT,"['unfold', 'intros', 'unfold', 'induction', 'elim', 'tauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/expressible.json,RepresentableHalf1Alternate,"['intros', 'induction', 'intros', 'simpl', 'simpl', 'apply', 'auto', 'auto', 'simpl', 'simpl', 'intros', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'auto', 'apply']",4,2,3,1,2,2
/mnt/cisk/zmq/dataset/data/goedel/expressible.json,RepresentableHalf2Alternate,"['intros', 'induction', 'intros', 'simpl', 'simpl', 'apply', 'auto', 'auto', 'simpl', 'simpl', 'intros', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'auto', 'apply']",4,2,3,1,2,2
/mnt/cisk/zmq/dataset/data/goedel/expressible.json,RepresentableHalfHelp,"['intro', 'induction', 'simpl', 'intros', 'apply', 'auto', 'apply', 'auto']",2,2,1,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/expressible.json,RepresentableAlternate,"['intros', 'induction', 'intros', 'simpl', 'simpl', 'apply', 'apply', 'auto', 'auto', 'simpl', 'simpl', 'intros', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'auto', 'apply']",4,2,3,1,2,2
/mnt/cisk/zmq/dataset/data/goedel/expressible.json,expressibleAlternate,"['intros', 'induction', 'intros', 'induction', 'simpl', 'simpl', 'apply', 'apply', 'apply', 'auto', 'simpl', 'simpl', 'apply', 'apply', 'apply', 'auto', 'auto', 'simpl', 'simpl', 'intros', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'auto', 'apply']",3,3,3,1,2,2
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTripleIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTriplePi1IsPR,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTriplePi2IsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTriplePi3IsPR,"['unfold', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTripleProj1,"['unfold', 'intros', 'apply']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTripleProj2,"['unfold', 'intros', 'rewrite', 'apply']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTripleProj3,"['unfold', 'intros', 'rewrite', 'apply']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,cTripleProj,"['unfold', 'intros', 'repeat', 'reflexivity']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,codeNewVarCorrect,"['intros', 'unfold', 'unfold', 'set', 'induction', 'simpl', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'unfold', 'unfold', 'unfold', 'unfold', 'rewrite', 'unfold', 'unfold', 'rewrite', 'simpl', 'repeat', 'rewrite', 'repeat', 'reflexivity', 'simpl', 'repeat', 'apply', 'apply']",1,6,1,2,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,codeNewVarIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,makeTraceForall,"['intros', 'set', 'set', 'induction', 'exact', 'assert', 'apply', 'induction', 'set', 'assert', 'apply', 'symmetry', 'apply', 'apply', 'exact', 'exact', 'Defined']",0,0,4,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,makeTraceImpNice,"['intros', 'unfold', 'rewrite', 'rewrite', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,makeTraceNotNice,"['intros', 'unfold', 'rewrite', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,makeTraceForallNice,"['intros', 'unfold', 'repeat', 'reflexivity']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,makeTrace1,"['intros', 'induction', 'unfold', 'simpl', 'try', 'reflexivity', 'unfold', 'induction', 'simpl', 'rewrite', 'reflexivity', 'induction', 'simpl', 'rewrite', 'reflexivity']",0,3,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,makeTrace2,"['intros', 'induction', 'unfold', 'simpl', 'try', 'reflexivity', 'unfold', 'induction', 'simpl', 'rewrite', 'reflexivity', 'induction', 'simpl', 'rewrite', 'reflexivity']",0,3,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,switch5IsPR,"['intros', 'assert', 'apply', 'assumption', 'apply', 'assert', 'apply', 'assumption', 'apply', 'assert', 'apply', 'assumption', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'assumption', 'assumption', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'assumption', 'apply']",0,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,checkTraceIsPR,"['unfold', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'assert', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'assert', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption']",0,0,4,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceTermTermsTermIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'simpl', 'auto', 'apply', 'apply']",1,1,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceTermTermIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceTermsTermIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,maxLemma,"['intros', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,maxLemma2,"['intros', 'induction', 'apply', 'simpl', 'apply', 'apply', 'assumption']",0,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,maxLemma3,"['intros', 'induction', 'apply', 'simpl', 'apply', 'assumption', 'apply']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,maxApp,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'induction', 'rewrite', 'left', 'symmetry', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'induction', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",0,2,3,3,2,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceTermTermSub,"['intro', 'unfold', 'unfold', 'unfold', 'set', 'assert', 'intros', 'apply', 'assumption', 'simpl', 'elim', 'simpl', 'intros', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'induction', 'unfold', '(replace (codeTerm (fol.var L n)) with (cPair 0 n)', '[ idtac | reflexivity ]).', 'replace', '[ idtac | reflexivity ].', 'unfold', 'repeat', 'simpl', 'reflexivity', 'reflexivity', 'replace', '[ idtac | reflexivity ].', 'unfold', 'repeat', 'replace', '[ idtac | reflexivity ].', 'repeat', 'repeat', 'simpl', 'repeat', 'replace', 'reflexivity', 'symmetry', 'apply', 'repeat', 'apply', 'repeat', 'apply', 'reflexivity', 'unfold', 'unfold', 'unfold', 'unfold', 'fold', 'fold', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'unfold', 'repeat', 'repeat', 'replace', '[ idtac | reflexivity ].', 'replace', '[ idtac | reflexivity ].', 'simpl', 'repeat', 'replace', 'replace', 'reflexivity', 'apply', 'repeat', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply']",3,4,2,1,2,2
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceTermsTermSub,"['intros', 'unfold', 'unfold', 'unfold', 'set', 'assert', 'intros', 'apply', 'assumption', 'simpl', 'induction', 'simpl', 'intros', 'reflexivity', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'unfold', 'repeat', 'repeat', 'replace', '[ idtac | reflexivity ].', 'replace', '[ idtac | reflexivity ].', 'simpl', 'repeat', 'replace', 'replace', 'reflexivity', 'apply', 'repeat', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply', 'replace', '[ idtac | reflexivity ].', 'simpl', 'rewrite', 'apply', 'apply']",3,5,1,1,2,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceFormulaTermIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceFormulaTermMonotone,"['assert', 'unfold', 'set', 'assert', 'intros', 'apply', 'assumption', 'simpl', 'simple', 'intros', 'elim', 'intros', 'induction', 'apply', 'assumption', 'assumption', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'unfold', 'destruct', 'simpl', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assert', 'apply', 'destruct', 'simpl', 'apply', 'apply', 'apply', 'apply', 'assumption', 'assert', 'apply', 'apply', 'rewrite', 'apply', 'assert', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'assumption', 'assert', 'apply', 'apply', 'apply', 'rewrite', 'apply', 'assumption', 'destruct', 'repeat', 'try', 'repeat', 'try', 'simpl', 'apply', 'apply', 'apply', 'apply', 'rewrite', 'assumption', 'assumption', 'apply', 'rewrite', 'assumption', 'assumption', 'destruct', 'repeat', 'try', 'simpl', 'apply', 'apply', 'apply', 'rewrite', 'assumption', 'assumption', 'destruct', 'repeat', 'try', 'simpl', 'apply', 'apply', 'apply', 'assumption', 'apply', 'rewrite', 'assumption', 'assumption', 'simpl', 'apply', 'apply', 'apply', 'assumption', 'intros', 'apply', 'auto']",2,3,4,1,2,3
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,ReplaceFormulaTermSub,"['intro', 'unfold', 'set', 'assert', 'intros', 'apply', 'assumption', 'simpl', 'elim', 'clear', 'intros', 'simpl', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'unfold', 'repeat', 'simpl', 'repeat', 'reflexivity', 'simpl', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'unfold', 'repeat', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'simpl', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'apply', 'apply', 'rewrite', 'induction', 'reflexivity', 'induction', 'simpl', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'apply', 'apply', 'symmetry', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'simpl', 'unfold', 'unfold', 'repeat', 'unfold', 'unfold', 'simpl', 'repeat', 'simpl', 'unfold', 'repeat', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",2,7,3,1,2,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,pow3IsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,pow3Monotone,"['intros', 'induction', 'simpl', 'rewrite', 'simpl', 'apply', 'simpl', 'induction', 'apply', 'apply', 'apply', 'assumption', 'apply', 'rewrite', 'simpl', 'apply']",0,5,2,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,mapListLemma,"['intros', 'induction', 'simpl', 'auto', 'simpl', 'induction', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption']",0,2,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,boundComputationIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSubFormula.json,codeSubFormulaIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'try', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,5,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSysPrf.json,freeVarCodeSysPrf,"['intros', 'unfold', 'set', 'unfold', 'repeat', 'apply', 'symmetry', 'apply', '[ apply H | clear H ] | H:(In ?X3 (freeVarFormula LNN (fol.forallH LNN ?X1 ?X2))) |- _ => assert (In X3 (list_remove nat eq_nat_dec X1 (freeVarFormula LNN X2)))', '[ apply H | clear H ] | H:(In ?X3 (list_remove nat eq_nat_dec ?X1 (freeVarFormula LNN ?X2))) |- _ => assert (In X3 (freeVarFormula LNN X2))', '[ eapply In_list_remove1', 'apply', '[ eapply In_list_remove2', 'apply', '[ apply H | clear H ] | H:(In ?X3 (freeVarFormula LNN (fol.orH LNN ?X1 ?X2))) |- _ => assert (In X3 (freeVarFormula LNN X1 ++ freeVarFormula LNN X2))', '[ apply H | clear H ] | H:(In ?X3 (freeVarFormula LNN (fol.impH LNN ?X1 ?X2))) |- _ => assert (In X3 (freeVarFormula LNN X1 ++ freeVarFormula LNN X2))', '[ apply H | clear H ] | H:(In ?X3 (freeVarFormula LNN (fol.notH LNN ?X1))) |- _ => assert (In X3 (freeVarFormula LNN X1))', '[ apply H | clear H ] | H:(In _ (_ ++ _)) |- _ => induction (in_app_or _ _ _ H)', 'clear', 'clear', 'decompose', 'clear', 'decompose', 'clear', 'assert', 'apply', 'induction', 'clear', 'induction', 'apply', 'apply', 'elim', 'assumption', 'rewrite', 'auto', 'assert', 'apply', 'induction', 'induction', 'apply', 'apply', 'elim', 'assumption', 'elim', 'apply', 'assumption']",1,0,3,1,1,0
/mnt/cisk/zmq/dataset/data/goedel/codeSysPrf.json,codeSysPfCorrect,"['intros', 'induction', 'induction', 'unfold', 'rewrite', 'induction', 'discriminate', 'induction', 'elim', 'apply', 'apply', 'assumption']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/codeSysPrf.json,freeVarCodeSysPrfN,"['intros', 'unfold', 'SimplFreeVar', 'apply', 'apply', 'assert', 'apply', 'induction', 'clear', 'apply', 'assumption', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeSysPrf.json,codeSysPrfNCorrect2,"['intros', 'unfold', 'rewrite', 'induction', 'discriminate', 'induction', 'elim', 'clear', 'rewrite', 'induction', 'discriminate', 'induction', 'elim', 'clear', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'intros', 'induction', 'induction', 'induction', 'apply', 'exists', 'auto', 'induction', 'SimplFreeVar', 'elim', 'apply', 'apply', 'apply', 'repeat', 'apply', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'discriminate', 'apply', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'apply', 'discriminate', 'unfold', 'intros', 'SimplFreeVar', 'discriminate', 'unfold', 'intros', 'SimplFreeVar', 'set', 'assert', 'unfold', 'apply', 'induction', 'unfold', 'apply', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'eapply', 'apply', 'apply', 'right', 'constructor', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'discriminate', 'apply', 'apply', 'discriminate', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'elim', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'assumption']",3,0,4,3,1,1
/mnt/cisk/zmq/dataset/data/goedel/codeSysPrf.json,codeSysPrfNCorrect3,"['intros', 'unfold', 'rewrite', 'induction', 'discriminate', 'induction', 'elim', 'clear', 'rewrite', 'induction', 'discriminate', 'induction', 'elim', 'clear', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'unfold', 'intros', 'induction', 'induction', 'induction', 'apply', 'exists', 'auto', 'induction', 'fold', 'SimplFreeVar', 'elim', 'apply', 'apply', 'apply', 'repeat', 'apply', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'discriminate', 'apply', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'apply', 'discriminate', 'unfold', 'intros', 'SimplFreeVar', 'discriminate', 'unfold', 'intros', 'SimplFreeVar', 'set', 'assert', 'unfold', 'apply', 'induction', 'unfold', 'apply', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'apply', 'eapply', 'apply', 'apply', 'right', 'constructor', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'discriminate', 'apply', 'apply', 'discriminate', 'apply', 'apply', 'repeat', '[ apply closedNN | idtac ]).', 'apply', 'unfold', 'intros', 'SimplFreeVar', 'elim', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'fold', 'apply', 'assumption']",3,0,4,3,1,1
/mnt/cisk/zmq/dataset/data/goedel/model.json,freeVarInterpTerm,"['intros', 'elim', 'simpl', 'intros', 'apply', 'auto', 'apply', 'intros', 'apply', 'apply', 'auto', 'rewrite', 'apply', 'intros', 'apply', 'unfold', 'apply', 'right', 'apply', 'intros', 'apply', 'unfold', 'apply', 'left', 'apply']",3,1,5,1,2,2
/mnt/cisk/zmq/dataset/data/goedel/model.json,freeVarInterpRel,"['intros', 'induction', 'simpl', 'auto', 'rewrite', 'apply', 'intros', 'apply', 'unfold', 'apply', 'right', 'apply', 'intros', 'apply', 'unfold', 'apply', 'left', 'apply']",2,2,3,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/model.json,freeVarInterpFormula,"['intros', 'generalize', 'clear', 'induction', 'simpl', 'intros', 'repeat', 'auto', 'intros', 'apply', 'simpl', 'auto', 'intros', 'apply', 'simpl', 'auto', 'intros', 'apply', 'apply', 'apply', 'assert', 'apply', 'intros', 'symmetry', 'apply', 'simpl', 'auto', 'assert', 'apply', 'intros', 'apply', 'simpl', 'auto', 'tauto', 'intros', 'apply', 'apply', 'intros', 'symmetry', 'auto', 'assumption', 'intros', 'apply', 'intros', 'unfold', 'induction', 'reflexivity', 'apply', 'apply', 'auto', 'auto']",7,4,5,0,2,0
/mnt/cisk/zmq/dataset/data/goedel/model.json,subInterpTerm,"['intros', 'elim', 'simpl', 'intros', 'unfold', 'induction', 'reflexivity', 'rewrite', 'reflexivity', 'reflexivity', 'rewrite', 'apply']",2,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/model.json,subInterpRel,"['intros', 'induction', 'simpl', 'tauto', 'simpl', 'rewrite', 'apply']",0,2,0,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/model.json,subInterpFormula1,"['intros', 'induction', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/model.json,subInterpFormula2,"['intros', 'induction', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/model.json,freeVarNNHelp,"['intros', 'induction', 'try', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'simpl', 'assumption', 'simpl', 'rewrite', 'reflexivity']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/model.json,ModelConsistent,"['intros', 'unfold', 'exists', 'unfold', 'intros', 'assert', 'apply', 'assumption', 'auto', 'simpl', 'auto']",3,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/fol.json,nilTermsHelp,"['intros', 'induction', 'apply', 'discriminate', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/fol.json,nilTerms,"['assert', 'intros', 'induction', 'reflexivity', 'discriminate', 'replace', 'apply', 'auto']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/fol.json,consTermsHelp,"['intros', 'case', 'exact', 'intros', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/fol.json,consTerms,"['assert', 'intros', 'induction', 'simpl', 'intros', 'exists', 'elim', 'apply', 'simpl', 'reflexivity', 'simpl', 'intros', 'exists', 'elim', 'apply', 'simpl', 'reflexivity', 'intros', 'assert', 'apply', 'simpl', 'apply']",1,4,1,0,0,3
/mnt/cisk/zmq/dataset/data/goedel/fol.json,term_dec,"['induction', 'assert', 'intros', 'eapply', 'intros', 'apply', 'apply', 'simpl', 'split', 'intros', 'rewrite', 'auto', 'intros', 'inversion', 'eapply', 'assumption', 'assumption', 'auto', 'intro', 'elim', 'intros', 'induction', 'induction', 'rewrite', 'left', 'auto', 'right', 'unfold', 'intros', 'inversion', 'auto', 'right', 'discriminate', 'intros', 'induction', 'right', 'discriminate', 'induction', 'assert', 'rewrite', 'reflexivity', 'set', 'assert', 'auto', 'induction', 'left', 'induction', 'symmetry', 'apply', 'symmetry', 'apply', 'right', 'unfold', 'intros', 'induction', 'elim', 'symmetry', 'apply', 'symmetry', 'assumption', 'right', 'unfold', 'intro', 'inversion', 'auto', 'intros', 'left', 'apply', 'intros', 'induction', 'induction', 'simpl', 'induction', 'induction', 'left', 'rewrite', 'rewrite', 'assumption', 'right', 'unfold', 'intro', 'elim', 'rewrite', 'inversion', 'reflexivity', 'right', 'unfold', 'intro', 'elim', 'rewrite', 'inversion', 'eapply', 'apply', 'assumption']",4,2,3,3,1,6
/mnt/cisk/zmq/dataset/data/goedel/fol.json,terms_dec,"['intros', 'induction', 'left', 'apply', 'induction', 'induction', 'simpl', 'induction', 'induction', 'left', 'rewrite', 'rewrite', 'assumption', 'right', 'unfold', 'intro', 'elim', 'rewrite', 'inversion', 'reflexivity', 'right', 'unfold', 'intro', 'elim', 'rewrite', 'inversion', 'eapply', 'apply', 'assumption']",1,1,1,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/fol.json,formula_dec,"['induction', 'simple', 'simple', '(right', 'discriminate', 'induction', 'induction', 'left', 'rewrite', 'rewrite', 'reflexivity', 'right', 'unfold', 'intros', 'elim', 'inversion', 'reflexivity', 'right', 'unfold', 'intros', 'elim', 'inversion', 'reflexivity', 'induction', 'assert', 'intros', 'eapply', 'intros', 'elim', 'apply', 'simpl', 'split', 'intros', 'rewrite', 'reflexivity', 'intros', 'inversion', 'eapply', 'assumption', 'assumption', 'auto', 'assert', 'rewrite', 'reflexivity', 'induction', 'left', 'induction', 'auto', 'right', 'induction', 'tauto', 'right', 'unfold', 'intros', 'inversion', 'auto', 'induction', 'induction', 'left', 'rewrite', 'rewrite', 'reflexivity', 'right', 'unfold', 'intros', 'inversion', 'auto', 'right', 'unfold', 'intros', 'inversion', 'auto', 'induction', 'left', 'rewrite', 'reflexivity', 'right', 'unfold', 'intros', 'inversion', 'auto', 'induction', 'induction', 'left', 'rewrite', 'rewrite', 'reflexivity', 'right', 'unfold', 'intros', 'inversion', 'auto', 'right', 'unfold', 'intros', 'inversion', 'auto']",3,2,1,2,0,4
/mnt/cisk/zmq/dataset/data/goedel/fol.json,depthImp1,"['unfold', 'simpl', 'intros', 'apply', 'apply']",2,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,depthImp2,"['unfold', 'simpl', 'intros', 'apply', 'apply']",2,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,depthNot,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,depthForall,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,eqDepth,"['unfold', 'intros', 'rewrite', 'assumption']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,Formula_depth_rec_rec,"['intros', 'induction', 'intros', 'apply', 'intros', 'unfold', 'rewrite', 'elim', 'intros', 'apply', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'Defined']",4,0,2,1,0,4
/mnt/cisk/zmq/dataset/data/goedel/fol.json,Formula_depth_rec_indep,"['intros', 'unfold', 'set', 'assert', 'simple', 'simpl', 'intros', 'induction', 'simpl', 'apply', 'intros', 'induction', 'intros', 'simpl', 'apply', 'intros', 'induction', 'simple', 'intros', 'simpl', 'apply', 'intros', 'induction', 'intros', 'simpl', 'apply', 'intros', 'apply', 'intros', 'replace', 'simpl', 'apply', 'intros', 'apply', 'apply']",7,3,2,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/fol.json,Formula_depth_rec2rec_nice,"['intros', 'induction', 'auto', 'auto', 'simpl', 'apply', 'intros', 'apply', 'intros', 'apply', 'simpl', 'apply', 'intros', 'apply', 'simpl', 'apply', 'apply']",2,2,2,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/fol.json,Formula_depth_rec2_imp,"['intros', 'unfold', 'rewrite', 'simpl', 'reflexivity', 'intros', 'apply', 'auto']",2,1,1,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,Formula_depth_rec2_not,"['intros', 'unfold', 'rewrite', 'simpl', 'reflexivity', 'apply', 'auto']",1,1,1,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,Formula_depth_rec2_forall,"['intros', 'unfold', 'rewrite', 'simpl', 'apply', 'intros', 'reflexivity', 'apply', 'auto']",2,2,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/fol.json,Formula_depth_ind2,"['intros', 'apply', 'simple', 'auto', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'apply']",2,1,2,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceImp,"['assert', 'intros', 'repeat', 'apply', 'repeat', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'repeat', 'apply', 'apply', 'apply', 'right', 'constructor', 'intros', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto']",2,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceNot,"['assert', 'intros', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'assumption', 'apply', 'apply', 'assumption']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceForall,"['intros', 'apply', 'apply', 'auto', 'apply', 'apply', 'apply', 'auto', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceOr,"['assert', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'right', 'constructor', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'right', 'constructor', 'intros', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,iffExist,"['intros', 'unfold', 'apply', 'apply', 'auto', 'apply', 'apply']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceExist,"['intros', 'unfold', 'apply', 'apply', 'auto', 'apply', 'apply']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceIff,"['assert', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'intros', 'apply', 'apply', 'auto', 'apply', 'apply', 'auto']",2,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceIfThenElse,"['intros', 'unfold', 'apply', 'apply', 'auto', 'apply', 'auto']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceSub,"['assert', 'intros', 'rewrite', 'apply', 'apply', 'assumption', 'apply', 'apply', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,0,3,2,1,0
/mnt/cisk/zmq/dataset/data/goedel/folReplace.json,reduceCloseList,"['intro', 'induction', 'simpl', 'intros', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto']",2,2,2,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,freeVarTermApply,"['intros', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,freeVarListFormulaApp,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'auto']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,In_freeVarListFormula,"['intros', 'induction', 'elim', 'induction', 'simpl', 'apply', 'left', 'rewrite', 'auto', 'simpl', 'apply', 'auto']",0,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,In_freeVarListFormulaE,"['intros', 'induction', 'elim', 'induction', 'exists', 'simpl', 'auto', 'induction', 'exists', 'simpl', 'tauto']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,notInFreeVarSys,"['intros', 'unfold', 'unfold', 'intros', 'induction', 'induction']",3,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subTermVar1,"['intros', 'unfold', 'unfold', 'induction', 'simpl', 'reflexivity', 'elim', 'reflexivity']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subTermVar2,"['intros', 'unfold', 'unfold', 'induction', 'elim', 'assumption', 'reflexivity']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subTermFunction,"['intros', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,newVar2,"['intro', 'induction', 'intros', 'elim', 'intros', 'induction', 'rewrite', 'unfold', 'simpl', 'induction', 'apply', 'apply', 'apply', 'unfold', 'unfold', 'simpl', 'assert', 'induction', 'auto', 'right', 'exists', 'auto', 'induction', 'rewrite', 'rewrite', 'elim', 'apply', 'auto', 'induction', 'rewrite', 'rewrite', 'apply', 'apply', 'auto', 'apply', 'apply']",1,2,3,3,2,5
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,newVar1,"['unfold', 'intros', 'elim', 'apply', 'auto']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,substituteFormulaImpNice,"['intros', 'unfold', 'rewrite', 'rewrite', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,substituteFormulaNotNice,"['intros', 'unfold', 'rewrite', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,substituteFormulaForallNice,"['intros', 'unfold', 'induction', 'induction', 'simpl', 'reflexivity', 'induction', 'simpl', 'rewrite', 'induction', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,substituteFormulaHelp,"['intros', 'apply', 'intros', 'induction', 'exists', 'auto', 'intros', 'induction', 'exists', 'auto', 'exact', 'exact', 'exact', 'exact', 'Defined']",2,0,2,0,2,1
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaEqual,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaRelation,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaImp,"['intros', 'unfold', 'unfold', 'rewrite', 'unfold', 'induction', 'induction', 'simpl', 'reflexivity', 'apply', 'apply', 'apply']",1,2,1,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaNot,"['intros', 'unfold', 'unfold', 'rewrite', 'unfold', 'induction', 'simpl', 'reflexivity', 'apply', 'apply', 'apply']",1,2,1,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaForall,"['intros', 'unfold', 'unfold', 'rewrite', 'simpl', 'induction', 'simpl', 'reflexivity', 'induction', 'simpl', 'fold', 'unfold', 'unfold', 'simpl', 'induction', 'unfold', 'unfold', 'simpl', 'induction', 'simpl', 'reflexivity', 'unfold', 'unfold', 'simpl', 'induction', 'simpl', 'reflexivity', 'apply', 'apply', 'apply']",1,4,1,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaOr,"['intros', 'unfold', 'rewrite', 'rewrite', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaAnd,"['intros', 'unfold', 'rewrite', 'rewrite', 'repeat', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaExist,"['intros', 'unfold', 'rewrite', 'rewrite', 'induction', 'reflexivity', 'induction', 'repeat', 'reflexivity', 'rewrite', 'reflexivity']",1,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaIff,"['intros', 'unfold', 'rewrite', 'repeat', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaIfThenElse,"['intros', 'unfold', 'rewrite', 'repeat', 'rewrite', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaDepth,"['intros', 'unfold', 'induction', 'simpl', 'auto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subTermId,"['intros', 'elim', 'simpl', 'intros', 'induction', 'rewrite', 'reflexivity', 'reflexivity', 'intros', 'simpl', 'rewrite', 'reflexivity', 'simpl', 'reflexivity', 'intros', 'simpl', 'rewrite', 'rewrite', 'reflexivity']",2,2,0,1,0,3
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subTermsId,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'rewrite', 'reflexivity']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/folProp.json,subFormulaId,"['intros', 'induction', 'rewrite', 'repeat', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'induction', 'reflexivity', 'induction', 'elim', 'simpl', 'induction', 'auto', 'contradiction', 'rewrite', 'reflexivity']",0,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,freeVarSubTerm1,"['intro', 'elim', 'intros', 'simpl', 'induction', 'elim', 'simpl', 'induction', 'transitivity', 'auto', 'contradiction', 'assumption', 'intros', 'simpl', 'unfold', 'apply', 'auto', 'intros', 'auto', 'intros', 'unfold', 'induction', 'unfold', 'simpl', 'apply', 'auto', 'unfold', 'simpl', 'apply', 'auto']",2,3,2,0,2,3
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,freeVarSubTerms1,"['intros', 'induction', 'auto', 'unfold', 'fold', 'fold', 'unfold', 'simpl', 'fold', 'fold', 'apply', 'induction', 'left', 'apply', 'auto', 'auto', 'auto']",0,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,freeVarSubTerm2,"['intro', 'elim', 'intros', 'simpl', 'induction', 'assumption', 'elim', 'induction', 'auto', 'contradiction', 'intros', 'simpl', 'unfold', 'fold', 'apply', 'auto', 'auto', 'intros', 'simpl', 'unfold', 'fold', 'fold', 'unfold', 'fold', 'fold', 'apply', 'induction', 'left', 'apply', 'auto', 'right', 'apply', 'auto']",1,1,1,0,1,2
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,freeVarSubTerms2,"['intros', 'induction', 'auto', 'simpl', 'unfold', 'fold', 'fold', 'unfold', 'fold', 'fold', 'apply', 'induction', 'left', 'apply', 'auto', 'right', 'apply', 'auto']",0,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,subTermNil,"['intros', 'elim', 'intros', 'simpl', 'rewrite', 'reflexivity', 'unfold', 'intros', 'elim', 'auto', 'intros', 'simpl', 'rewrite', 'reflexivity', 'apply', 'auto', 'intros', 'simpl', 'unfold', 'rewrite', 'rewrite', 'reflexivity', 'unfold', 'intros', 'elim', 'apply', 'auto', 'unfold', 'intros', 'elim', 'apply', 'auto']",3,2,1,2,2,2
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,subTermExch,"['intros', 'elim', 'intros', 'simpl', 'induction', 'induction', 'elim', 'transitivity', 'auto', 'rewrite', 'rewrite', 'rewrite', 'auto', 'induction', 'rewrite', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'reflexivity', 'assumption', 'assumption', 'intros', 'simpl', 'rewrite', 'auto', 'reflexivity', 'intros', 'simpl', 'rewrite', 'auto', 'rewrite', 'auto']",1,1,0,2,1,2
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,subTermsNil,"['intros', 'induction', 'auto', 'simpl', 'unfold', 'rewrite', 'rewrite', 'reflexivity', 'unfold', 'intros', 'elim', 'apply', 'auto', 'unfold', 'intros', 'elim', 'apply', 'auto']",2,1,1,2,2,2
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,subTermsExch,"['intros', 'induction', 'auto', 'simpl', 'rewrite', 'rewrite', 'auto']",0,1,0,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/subProp.json,subFormulaNTEHelp,"['intros', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/code.json,codeImpCorrect,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/code.json,codeNotCorrect,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/code.json,codeForallCorrect,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/code.json,codeOrCorrect,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/code.json,codeAndCorrect,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/code.json,codeIffCorrect,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeNatToTerm.json,codeNatToTermCorrectLNN,"['intro', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeNatToTerm.json,codeNatToTermCorrectLNT,"['intro', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/codeNatToTerm.json,codeNatToTermIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/goedel2.json,GS,"['unfold', 'destruct', 'destruct', 'unfold', 'apply', 'assumption', 'rewrite', 'apply']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/goedel2.json,HBL1,"['intros', 'unfold', 'apply', 'replace', 'apply', 'apply', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity', 'assert', 'intros', 'destruct', 'assert', 'apply', 'apply', 'assumption', 'destruct', 'destruct', 'exists', 'split', 'exists', 'intros', 'apply', 'apply', 'assumption', 'intros', 'elim', 'destruct', 'exists', 'split', 'tauto', 'apply', 'tauto', 'exists', 'split', 'exists', 'intros', 'simpl', 'destruct', 'rewrite', 'apply', 'contradiction', 'intros', 'destruct', 'simpl', 'destruct', 'destruct', 'rewrite', 'apply', 'assumption', 'contradiction', 'destruct', 'destruct', 'destruct', 'exists', 'destruct', 'assumption']",3,1,3,1,2,5
/mnt/cisk/zmq/dataset/data/goedel/goedel2.json,FirstIncompletenessA,"['intros', 'unfold', 'destruct', 'unfold', 'intros', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'rewrite', 'apply', 'change', 'apply', 'assumption']",4,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,lengthTerms,"['intros', 'induction', 'reflexivity', 'replace', '[ idtac | reflexivity ].', 'unfold', 'unfold', 'set', 'rewrite', 'unfold', 'unfold', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'apply', 'assumption', 'generalize', 'simpl', 'intros', 'apply', 'apply', 'apply', 'rewrite', 'apply']",2,4,2,4,0,1
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,wellFormedTermCorrect1,"['intros', 'set', 'elim', 'simpl', 'intros', 'unfold', 'unfold', 'unfold', 'fold', 'unfold', 'rewrite', 'unfold', 'simpl', 'unfold', 'repeat', 'simpl', 'reflexivity', 'replace', '[ idtac | reflexivity ].', 'unfold', 'unfold', 'fold', 'unfold', 'rewrite', 'unfold', 'simpl', 'unfold', 'repeat', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'simpl', 'apply', 'rewrite', 'apply', 'unfold', 'unfold', 'fold', 'unfold', 'rewrite', 'unfold', 'simpl', 'rewrite', 'unfold', 'rewrite', 'reflexivity', 'unfold', 'unfold', 'fold', 'unfold', 'rewrite', 'unfold', 'simpl', 'unfold', 'rewrite', 'rewrite', 'replace', '[ idtac | reflexivity ].', 'repeat', 'simpl', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'unfold', 'rewrite', 'reflexivity', 'simpl', 'rewrite', 'apply', 'apply', 'simpl', 'rewrite', 'apply', 'apply']",2,8,3,4,1,1
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,wellFormedTermsCorrect1,"['intros', 'set', 'induction', 'unfold', 'unfold', 'fold', 'unfold', 'rewrite', 'unfold', 'simpl', 'rewrite', 'unfold', 'rewrite', 'reflexivity', 'unfold', 'unfold', 'fold', 'unfold', 'rewrite', 'unfold', 'simpl', 'unfold', 'rewrite', 'rewrite', 'replace', '[ idtac | reflexivity ].', 'repeat', 'simpl', 'rewrite', 'rewrite', 'replace', 'rewrite', 'unfold', 'unfold', 'rewrite', 'reflexivity', 'reflexivity', 'simpl', 'rewrite', 'apply', 'apply', 'simpl', 'rewrite', 'apply', 'apply']",0,5,1,4,0,0
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,wellFormedTermTermsIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,wellFormedTermIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,wellFormedTermsIsPR,"['unfold', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,wellFormedFormulaCorrect1,"['intros', 'set', 'unfold', 'fold', 'induction', 'intros', 'unfold', 'rewrite', 'unfold', 'simpl', 'unfold', 'repeat', 'simpl', 'repeat', 'reflexivity', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'eapply', '[ idtac | apply cPairLt2 ].', 'apply', 'eapply', '[ idtac | apply cPairLt2 ].', 'apply', 'rewrite', 'simpl', 'assumption', 'apply', 'rewrite', 'simpl', 'assumption', 'eapply', '[ idtac | apply cPairLt2 ].', 'apply']",2,4,1,3,2,1
/mnt/cisk/zmq/dataset/data/goedel/wellFormed.json,wellFormedFormulaIsPR,"['unfold', 'apply', 'assert', 'apply', 'apply', 'assert', 'apply', 'assumption', 'apply', 'assert', 'apply', 'assumption', 'apply', 'assert', 'apply', 'assumption', 'apply', 'assert', 'intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'try', 'apply', 'try', 'apply', 'try', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,4,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/rosser.json,Incompleteness,"['intros', 'repeat', 'apply', 'auto', 'tauto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,translateLT,"['simpl', 'induction', 'induction', 'induction', 'induction', 'set', 'set', 'apply', 'intro', 'induction', 'exact', 'induction', 'exact', 'exact', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_natToTerm,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,translateLT1,"['intros', 'unfold', 'induction', 'induction', 'simpl', 'induction', 'induction', 'simpl', 'simpl', 'inversion', 'assert', 'refine', 'rewrite', 'simpl', 'inversion', 'clear', 'reflexivity']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_or,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_and,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_iff,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_exist,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_freeVarTerm,"['intros', 'elim', 'intros', 'reflexivity', 'intros', 'simpl', 'repeat', 'apply', 'reflexivity', 'intros', 'simpl', 'transitivity', 'rewrite', 'rewrite', 'reflexivity', 'reflexivity']",1,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_freeVarTerms,"['intros', 'induction', 'reflexivity', 'intros', 'simpl', 'transitivity', 'rewrite', 'rewrite', 'reflexivity', 'reflexivity']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_freeVarFormula1,"['intros', 'induction', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_freeVarFormula2,"['intros', 'induction', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_subTerm,"['intros', 'elim', 'intros', 'simpl', 'induction', 'auto', 'simpl', 'intros', 'rewrite', 'reflexivity', 'reflexivity', 'simpl', 'intros', 'rewrite', 'rewrite', 'reflexivity']",2,1,0,2,1,2
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNN2LNT_subTerms,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'rewrite', 'reflexivity']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNT2LNN_natToTerm,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'reflexivity']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNT2LNT_term,"['intros', 'elim', 'simpl', 'intros', 'reflexivity', 'rewrite', 'reflexivity', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNT2LNT_formula,"['intros', 'induction', 'simpl', 'repeat', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity']",0,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNT2LNN_subTerm,"['intros', 'elim', 'simpl', 'intros', 'induction', 'reflexivity', 'reflexivity', 'rewrite', 'reflexivity', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,0,3
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNT2LNN_freeVarTerm,"['intros', 'elim', 'simpl', 'intros', 'reflexivity', 'transitivity', 'reflexivity', 'rewrite', 'reflexivity', 'reflexivity', 'transitivity', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,LNT2LNN_freeVarFormula,"['intros', 'induction', 'simpl', 'repeat', 'reflexivity', 'induction', 'rewrite', 'rewrite', 'reflexivity', 'assumption', 'rewrite', 'reflexivity']",0,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,translatePrf,"['intros', 'induction', 'destruct', 'auto', 'exists', 'destruct', 'split', 'apply', 'intros', 'simpl', 'rewrite', 'apply', 'apply', 'assert', 'intros', 'apply', 'apply', 'auto', 'assert', 'intros', 'apply', 'apply', 'auto', 'destruct', 'destruct', 'clear', 'rename', 'rename', 'exists', 'simpl', 'split', 'exists', 'intros', 'induction', 'auto', 'intros', 'rewrite', 'rewrite', 'apply', 'destruct', 'auto', 'destruct', 'exists', 'assert', 'firstorder', 'split', 'exists', 'assumption', 'assumption', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'assert', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'exists', 'exists', 'contradiction', 'destruct', 'exists', 'split', 'destruct', 'exists', 'intros', 'elim', 'intros', 'destruct', 'destruct', 'assumption', 'assert', 'auto', 'elim', 'exists', 'assert', 'unfold', 'intros', 'elim', 'apply', 'auto', 'split', 'exists', 'contradiction', 'contradiction', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'assert', 'induction', 'simpl', 'repeat', 'unfold', 'apply', 'apply', 'repeat', 'simpl', 'unfold', 'simpl', 'apply', 'apply', 'eapply', 'apply', 'simpl', 'unfold', 'intros', 'decompose', 'discriminate', 'discriminate', 'apply', 'unfold', 'intros', 'induction', 'induction', 'induction', '[ induction H1 as [x H1| x H1] | induction H1 ].', 'elim', 'induction', 'simpl', 'decompose', 'discriminate', 'discriminate', 'simpl', 'decompose', 'discriminate', 'discriminate', 'repeat', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'left', 'left', 'right', 'constructor', 'apply', 'apply', 'right', 'constructor', 'apply', 'left', 'right', 'constructor', 'apply', 'apply', 'apply', 'fold', 'fold', 'apply', 'apply', 'left', 'left', 'right', 'constructor', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'left', 'right', 'constructor', 'destruct', 'exists', 'destruct', 'split', 'exists', 'intros', 'elim', 'intros', 'destruct', 'assumption', 'assert', 'auto', 'elim', 'replace', 'exists', 'split', 'exists', 'contradiction', 'contradiction', 'induction', 'reflexivity']",5,6,5,3,2,8
/mnt/cisk/zmq/dataset/data/goedel/LNN2LNT.json,translateProof,"['intros', 'destruct', 'assert', 'intros', 'destruct', 'exists', 'split', 'apply', 'intros', 'destruct', 'clear', 'induction', 'elim', 'destruct', 'elim', 'apply', 'auto', 'assumption', 'apply', 'firstorder', 'apply', 'destruct', 'destruct', 'exists', 'tauto']",1,0,2,0,0,5
/mnt/cisk/zmq/dataset/data/goedel/NNtheory.json,natNE,"['assert', 'intro', 'induction', 'intros', 'destruct', 'elim', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'destruct', 'elim', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'intros', 'induction', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'auto']",1,1,2,0,2,4
/mnt/cisk/zmq/dataset/data/goedel/NNtheory.json,natLE,"['intros', 'induction', 'apply', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'unfold', 'intros', 'apply', 'rewrite', 'apply']",3,2,4,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/NNtheory.json,natPlus,"['intros', 'induction', 'rewrite', 'simpl', 'apply', 'rewrite', 'simpl', 'apply', 'apply', 'apply', 'rewrite', 'apply']",0,2,2,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/NNtheory.json,nnPlusNotNeeded,"['intros', 'induction', 'simpl', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'replace', 'apply', 'auto', 'unfold', 'rewrite', 'reflexivity', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'intros', 'replace', 'apply', 'apply', 'assumption', 'unfold', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'apply', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'rewrite', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'replace', 'apply', 'apply', 'unfold', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'apply']",1,4,5,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeLNTFunctionInj,"['intros', 'destruct', 'destruct', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeLNTRelationInj,"['intros', 'destruct', 'destruct', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeLNNRelationInj,"['intros', 'destruct', 'destruct', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNNRIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNNRIsCorrect1,"['intros', 'induction', 'simpl', 'reflexivity']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNNRIsCorrect2,"['intros', 'destruct', 'exists', 'reflexivity', 'elim', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNTRIsPR,"['unfold', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNTRIsCorrect1,['simple'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNTRIsCorrect2,"['intros', 'elim', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNTFIsPR,"['set', 'assert', 'intro', 'induction', 'intros', 'simpl', 'apply', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",2,2,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNTFIsCorrect1,"['intros', 'induction', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNNFIsCorrect1,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNTFIsCorrect2,"['intros', 'destruct', 'exists', 'reflexivity', 'destruct', 'exists', 'reflexivity', 'destruct', 'exists', 'reflexivity', 'destruct', 'exists', 'reflexivity', 'elim', 'reflexivity']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/Languages.json,codeArityLNNFIsCorrect2,['apply'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,sumToN1,"['intros', 'induction', 'auto', 'simpl', 'apply', 'apply']",0,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,sumToN2,"['intro', 'induction', 'intros', 'simpl', 'rewrite', 'simpl', 'auto', 'induction', 'apply', 'apply', 'apply', 'auto', 'simpl', 'apply', 'apply', 'rewrite', 'auto']",2,4,3,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,sumToNIsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairIsPR,"['intros', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairProjectionsHelp,"['intros', 'unfold', 'induction', 'rewrite', 'induction', 'auto', 'elim', 'apply', 'rewrite', 'induction', 'elim', 'apply', 'apply', 'auto', 'auto', 'auto', 'set', 'induction', 'auto', 'elim', 'apply', 'fold', 'induction', 'elim', 'apply', 'apply', 'auto', 'assert', 'apply', 'apply', 'auto', 'apply', 'auto', 'auto', 'auto']",1,0,4,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairProjections,"['assert', 'intros', 'induction', 'simpl', 'elim', 'induction', 'assert', 'apply', 'auto', 'unfold', 'replace', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'auto', 'unfold', 'rewrite', 'auto', 'unfold', 'rewrite', 'simpl', 'apply', 'rewrite', 'rewrite', 'apply', 'auto', 'auto', 'apply', 'auto', 'intros', 'apply', 'apply', 'apply', 'apply']",1,3,4,4,3,2
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,searchXYIsPR,"['unfold', 'apply', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,3,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairPi1IsPR,"['unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairPi2IsPR,"['unfold', 'apply', 'apply', 'apply', 'apply']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairProjections1,"['intros', 'unfold', 'unfold', 'replace', 'rewrite', 'apply', 'symmetry', 'apply', 'simpl', 'apply', 'apply', 'apply', 'apply']",1,3,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairProjections2,"['intros', 'unfold', 'rewrite', 'unfold', 'replace', 'apply', 'symmetry', 'apply', 'simpl', 'apply', 'apply', 'apply', 'apply']",1,2,2,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairLe1,"['intros', 'unfold', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairLe1A,"['intros', 'apply', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairLe2A,"['intros', 'apply', 'apply', 'rewrite', 'apply']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairLe3,"['intros', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",1,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,cPairLt1,"['intros', 'unfold', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'unfold', 'apply', 'apply']",1,2,2,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,codeNth,"['intros', 'assert', 'induction', 'exact', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,drop,"['induction', 'exact', 'intros', 'apply', 'destruct', 'exact', 'exact', 'Defined']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,codeNthCorrect,"['unfold', 'set', 'assert', 'destruct', 'simpl', 'apply', 'simpl', 'apply', 'assert', 'simple', 'simpl', 'reflexivity', 'simpl', 'intros', 'rewrite', 'rewrite', 'unfold', 'clear', 'generalize', 'clear', 'induction', 'simpl', 'intros', 'reflexivity', 'destruct', 'apply', 'apply', 'intros', 'replace', 'rewrite', 'destruct', 'simpl', 'apply', 'simpl', 'apply', 'generalize', 'clear', 'induction', 'destruct', 'reflexivity', 'destruct', 'simpl', 'destruct', 'apply', 'simpl', 'auto']",2,5,2,3,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,codeNthIsPR,"['intros', 'unfold', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,evalStrongRecIsPR,"['intros', 'unfold', 'fold', 'set', 'assert', 'unfold', 'assert', 'apply', 'apply', 'apply', 'assert', 'apply', 'apply', 'apply', 'induction', 'induction', 'induction', 'exists', 'apply', 'apply', 'apply', 'simpl', 'apply', 'apply', 'unfold', 'repeat', 'auto', 'apply', 'auto', 'assert', 'apply', 'auto', 'apply', 'clear', 'assert', 'apply', 'apply', 'apply', 'induction', 'induction', 'exists', 'simpl', 'fold', 'intros', 'apply', 'unfold', 'simpl', 'repeat', 'apply', 'auto']",2,3,4,0,4,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,computeEvalStrongRecHelp,"['intros', 'unfold', 'simpl', 'fold', 'induction', 'elim', 'apply', 'rewrite', 'auto', 'induction', 'replace', 'reflexivity', 'unfold', 'simpl', 'fold', 'induction', 'elim', 'auto', 'induction', 'reflexivity', 'elim', 'auto', 'elim', 'auto']",1,1,1,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,listValues,"['intros', 'induction', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,evalStrongRecHelp1,"['assert', 'intros', 'induction', 'simpl', 'unfold', 'simpl', 'reflexivity', 'unfold', 'simpl', 'unfold', 'simpl', 'rewrite', 'unfold', 'simpl', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'rewrite', 'rewrite', 'induction', 'elim', 'induction', 'rewrite', 'simpl', 'rewrite', 'reflexivity', 'apply', 'auto', 'apply', 'auto', 'inversion', 'rewrite', 'clear', 'simpl', 'reflexivity']",0,5,1,3,1,1
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,evalStrongRecHelp2,"['intro', 'fold', 'induction', 'simpl', 'apply', 'simpl', 'intros', 'fold', 'set', 'assert', 'apply', 'auto', 'unfold', 'clear', 'apply', 'apply', 'apply', 'unfold', 'simpl', 'repeat', 'apply', 'apply', 'apply', 'unfold', 'simpl', 'fold', 'apply', 'unfold', 'simpl', 'repeat', 'apply', 'apply', 'apply']",1,5,4,0,2,0
/mnt/cisk/zmq/dataset/data/goedel/cPair.json,callIsPR,"['intros', 'apply', 'apply', 'apply', 'apply', 'apply', 'assumption', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subAllTerm_ext,"['intro', 'elim', 'simpl', 'intros', 'apply', 'auto', 'rewrite', 'auto', 'intros', 'apply', 'auto', 'auto', 'rewrite', 'rewrite', 'auto', 'intros', 'apply', 'unfold', 'fold', 'apply', 'auto', 'intros', 'apply', 'unfold', 'fold', 'apply', 'auto']",2,1,2,2,2,2
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subAllTerms_ext,"['intros', 'induction', 'auto', 'simpl', 'rewrite', 'rewrite', 'auto', 'intros', 'apply', 'unfold', 'fold', 'apply', 'auto', 'intros', 'apply', 'unfold', 'fold', 'apply', 'auto']",1,1,2,2,2,1
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,freeVarMap_ext,"['intros', 'induction', 'auto', 'simpl', 'rewrite', 'rewrite', 'auto', 'auto', 'intros', 'apply', 'auto']",1,1,1,2,2,1
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,freeVarMap1,"['intros', 'induction', 'elim', 'induction', 'simpl', 'rewrite', 'auto', 'simpl', 'auto']",0,3,0,1,1,1
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subAllFormula_ext,"['intro', 'induction', 'simpl', 'intros', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'rewrite', 'reflexivity', 'apply', 'rewrite', 'rewrite', 'reflexivity', 'intros', 'apply', 'apply', 'auto', 'intros', 'apply', 'apply', 'auto', 'rewrite', 'reflexivity', 'apply', 'rewrite', 'set', 'set', 'rewrite', 'reflexivity', 'intros', 'unfold', 'clear', 'induction', 'reflexivity', 'apply', 'apply', 'auto', 'intros', 'apply', 'auto']",3,2,3,2,2,0
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,freeVarSubAllTerm1,"['intros', 'elim', 'intros', 'simpl', 'exists', 'simpl', 'auto', 'intros', 'simpl', 'auto', 'intros', 'contradiction', 'intros', 'simpl', 'unfold', 'fold', 'fold', 'induction', 'induction', 'exists', 'split', 'unfold', 'fold', 'fold', 'apply', 'tauto', 'tauto', 'induction', 'exists', 'split', 'unfold', 'fold', 'fold', 'apply', 'tauto', 'tauto']",1,2,0,0,3,3
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,freeVarSubAllTerms1,"['intros', 'induction', 'intros', 'contradiction', 'intros', 'simpl', 'unfold', 'fold', 'fold', 'induction', 'induction', 'exists', 'split', 'unfold', 'fold', 'fold', 'apply', 'tauto', 'tauto', 'induction', 'exists', 'split', 'unfold', 'fold', 'fold', 'apply', 'tauto', 'tauto']",2,1,0,0,2,3
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,freeVarSubAllTerm2,"['intros', 'elim', 'intros', 'simpl', 'simpl', 'induction', 'rewrite', 'auto', 'elim', 'auto', 'auto', 'simpl', 'unfold', 'fold', 'fold', 'apply', 'unfold', 'fold', 'fold', 'induction', 'auto', 'auto']",1,1,1,1,1,2
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subSubAllTerm,"['intros', 'elim', 'intros', 'simpl', 'auto', 'simpl', 'rewrite', 'auto', 'auto', 'simpl', 'rewrite', 'rewrite', 'auto']",1,2,0,2,1,2
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subSubAllTerms,"['intros', 'induction', 'auto', 'simpl', 'rewrite', 'rewrite', 'auto']",0,1,0,2,1,1
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subAllTermId,"['intros', 'elim', 'simpl', 'intros', 'reflexivity', 'rewrite', 'reflexivity', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subAllTermsId,"['intros', 'induction', 'reflexivity', 'simpl', 'rewrite', 'rewrite', 'reflexivity']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subAllSubAllTerm,"['intro', 'elim', 'simpl', 'intros', 'reflexivity', 'rewrite', 'reflexivity', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",1,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,subAllSubAllTerms,"['intros', 'induction', 'simpl', 'reflexivity', 'rewrite', 'rewrite', 'reflexivity']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/subAll.json,reduceSubAll,"['assert', 'intros', 'replace', 'set', 'replace', 'apply', 'induction', 'simpl', 'apply', 'auto', 'simpl', 'apply', 'auto', 'auto', 'apply', 'intros', 'induction', 'elim', 'unfold', 'apply', 'auto', 'auto', 'reflexivity', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'apply', 'auto']",2,2,4,0,2,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,multO,"['intros', 'induction', 'auto', 'rewrite', 'right', 'symmetry', 'apply', 'assumption']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,coPrimeSym,"['unfold', 'intros', 'apply', 'assumption']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,coPrimeMult,"['intros', 'unfold', 'induction', 'induction', 'induction', 'rewrite', 'unfold', 'induction', 'assert', 'apply', 'split', 'simpl', 'exists', 'rewrite', 'simpl', 'reflexivity', 'exists', 'rewrite', 'simpl', 'reflexivity', 'elim', 'exists', 'rewrite', 'auto', 'clear', 'assert', 'apply', 'induction', 'induction', 'induction', 'assert', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'repeat', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'rewrite', 'assert', 'unfold', 'exists', 'assumption', 'clear', 'rewrite', 'rewrite', 'apply', 'assumption']",1,1,1,4,0,0
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,minus_le,"['intros', 'induction', 'rewrite', 'apply', 'induction', 'apply', 'apply', 'assumption', 'apply', 'rewrite', 'apply', 'apply', 'assumption']",0,0,2,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,minus1,"['intros', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'reflexivity']",0,1,0,4,0,0
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,chRem3,"['double', 'reflexivity', 'intros', 'discriminate', 'intros', 'discriminate', 'intros', 'repeat', 'apply', 'apply', 'apply', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,modulo,"['intros', 'apply', 'intros', 'induction', 'assert', 'unfold', 'apply', 'assumption', 'assumption', 'induction', 'induction', 'simpl', 'exists', 'simpl', 'induction', 'split', 'rewrite', 'rewrite', 'apply', 'assumption', 'assumption', 'exists', 'simpl', 'split', 'reflexivity', 'assumption']",2,1,2,2,0,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,chRem1,"['intros', 'assert', 'intros', 'set', 'induction', 'induction', 'exists', 'induction', 'split', 'apply', 'rewrite', 'replace', 'replace', 'rewrite', 'rewrite', 'fold', 'apply', 'rewrite', 'rewrite', 'apply', 'apply', 'auto', 'auto', 'assumption', 'induction', 'apply', 'assumption', 'assert', 'induction', 'elim', 'rewrite', 'rewrite', 'rewrite', 'fold', 'rewrite', 'replace', 'apply', 'rewrite', 'rewrite', 'unfold', 'apply', 'apply', 'apply', 'assumption', 'replace', 'apply', 'unfold', 'apply', 'auto', 'auto', 'induction', 'induction', 'induction', 'exists', 'split', 'simpl', 'apply', 'cbv', 'cbv', 'rewrite', 'rewrite', 'rewrite', 'apply', 'rewrite', 'unfold', 'apply', 'reflexivity', 'rewrite', 'apply', 'reflexivity']",0,1,5,3,0,3
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,gcd_lincomb_nat_dec,"['unfold', 'intro', 'apply', 'intros', 'intros', 'elim', 'intro', 'elim', 'intros', 'clear', 'simpl', 'case', 'intros', 'induction', 'rewrite', 'exists', 'replace', 'replace', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'apply', 'apply', 'rewrite', 'rewrite', 'apply', 'assumption', 'apply', 'assumption', 'apply', 'assumption', 'auto', 'auto', 'intro', 'intros', 'induction', 'elim', 'intro', 'elim', 'intros', 'clear', 'replace', 'replace', 'intros', 'exists', 'replace', 'replace', 'rewrite', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'apply', 'auto', 'auto', 'auto', 'auto', 'apply', 'apply', 'apply', 'assumption', 'rewrite', 'rewrite', 'apply', 'assumption']",2,2,4,4,1,5
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,chineseRemainderTheorem,"['intros', 'induction', 'apply', 'assumption', 'assumption', 'assert', 'apply', 'assumption', 'assert', 'apply', 'assumption', 'induction', 'induction', 'induction', 'exists', 'split', 'rewrite', 'assumption', 'split', 'assumption', 'assumption']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,prod,"['intros', 'induction', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,coPrime1,"['intros', 'split', 'split', 'exists', 'auto', 'exists', 'rewrite', 'reflexivity', 'intros', 'induction', 'apply', 'apply']",0,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,coPrimeMult3,"['intros', 'assert', 'apply', 'assumption', 'apply', 'assert', 'apply', 'assumption', 'apply', 'induction', 'induction', 'induction', 'induction', 'split', 'split', 'exists', 'rewrite', 'reflexivity', 'exists', 'rewrite', 'reflexivity', 'intros', 'induction', 'set', 'set', 'set', 'assert', 'replace', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'repeat', 'rewrite', 'rewrite', 'repeat', 'rewrite', 'rewrite', 'repeat', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'auto', 'assert', 'replace', 'replace', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'unfold', 'rewrite', 'rewrite', 'assumption', 'apply', 'apply', 'rewrite', 'assumption', 'apply', 'auto', 'apply', 'apply', 'assumption']",0,0,5,3,1,2
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,multBig1,"['intros', 'induction', 'unfold', 'elim', 'unfold', 'apply', 'rewrite', 'apply', 'rewrite', 'apply', 'apply', 'apply']",0,0,3,1,0,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,prodBig1,"['intro', 'induction', 'intros', 'simpl', 'apply', 'intros', 'simpl', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'apply', 'assumption']",4,1,2,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,sameProd,"['intro', 'induction', 'intros', 'auto', 'intros', 'simpl', 'replace', 'replace', 'reflexivity', 'apply', 'intros', 'symmetry', 'apply', 'apply', 'assumption', 'symmetry', 'apply', 'apply']",3,0,3,0,1,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,coPrimeProd,"['intro', 'induction', 'intros', 'simpl', 'apply', 'intros', 'assert', 'intros', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'assumption', 'simpl', 'apply', 'apply', 'apply', 'apply', 'apply', 'intros', 'apply', 'do', 'assumption', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'auto', 'set', 'assert', 'apply', 'intros', 'unfold', 'induction', 'induction', 'elim', 'rewrite', 'assumption', 'apply', 'apply', 'apply', 'assumption', 'unfold', 'intros', 'rewrite', 'elim', 'induction', 'apply', 'apply', 'assumption', 'apply', 'unfold', 'intros', 'rewrite', 'elim', 'apply', 'apply', 'assumption', 'apply', 'assumption', 'assumption', 'intros', 'unfold', 'induction', 'apply', 'apply', 'apply', 'apply', 'assumption', 'auto', 'replace', 'replace', 'assumption', 'apply', 'intros', 'unfold', 'induction', 'rewrite', 'elim', 'reflexivity', 'unfold', 'induction', 'reflexivity', 'elim', 'reflexivity']",7,1,5,1,0,3
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,divProd,"['intro', 'induction', 'intros', 'elim', 'intros', 'induction', 'simpl', 'rewrite', 'apply', 'apply', 'assumption', 'simpl', 'apply', 'rewrite', 'apply', 'apply', 'assumption']",1,3,2,1,0,4
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,minusS,"['intros', 'replace', 'replace', 'rewrite', 'reflexivity', 'auto', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,gtBeta,"['unfold', 'intros', 'apply']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,maxBeta,"['intros', 'induction', 'exact', 'exact', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/goedel/chRem.json,divProd2,"['simple', 'intros', 'assert', 'apply', 'assumption', 'rewrite', 'apply', 'intros', 'induction', 'simpl', 'rewrite', 'apply', 'apply', 'apply', 'assumption', 'rewrite', 'apply', 'assumption']",2,2,3,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/rosserPA.json,extendsNN,"['unfold', 'intros', 'unfold', 'left', 'assumption']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/rosserPA.json,freeVarRepT',"['intros', 'apply', 'rewrite', 'apply', 'assumption']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/goedel/rosserPA.json,Tprf2T'prf,"['intros', 'unfold', 'apply', 'unfold', 'intros', 'right', 'assumption', 'induction', 'induction', 'exists', 'induction', 'simpl', 'exists', 'intros', 'unfold', 'unfold', 'induction', 'rewrite', 'rewrite', 'apply', 'auto', 'induction', 'assert', 'auto', 'assert', 'auto', 'induction', 'induction', 'clear', 'assert', 'generalize', 'intros', 'induction', 'simpl', 'reflexivity', 'rewrite', 'reflexivity', 'rewrite', 'exists', 'intros', 'induction', 'auto', 'induction', 'assert', 'clear', 'unfold', 'intros', 'apply', 'clear', 'induction', 'auto', 'simpl', 'simpl', 'apply', 'induction', 'left', 'rewrite', 'apply', 'assumption', 'auto', 'exists', 'auto', 'exists', 'tauto', 'exists', 'tauto', 'exists', 'tauto', 'rewrite', 'exists', 'tauto', 'rewrite', 'exists', 'tauto', 'exists', 'tauto', 'exists', 'tauto', 'exists', 'tauto', 'exists', 'tauto', 'induction', 'induction', 'simpl', 'exists', 'tauto', 'exists', 'tauto', 'exists', 'tauto', 'exists', 'tauto']",5,3,3,2,3,1
/mnt/cisk/zmq/dataset/data/goedel/rosserPA.json,expressT'1,"['intros', 'rewrite', 'rewrite', 'apply', 'apply', 'assumption']",0,0,1,3,0,0
/mnt/cisk/zmq/dataset/data/goedel/rosserPA.json,expressT'2,"['intros', 'rewrite', 'rewrite', 'replace', 'apply', 'apply', 'assumption', 'reflexivity']",0,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/goedel/rosserPA.json,decideAxioms,"['intros', 'induction', 'left', 'intros', 'elim', 'induction', 'induction', 'left', 'intros', 'induction', 'rewrite', 'assumption', 'auto', 'right', 'exists', 'split', 'auto', 'assumption', 'right', 'induction', 'exists', 'induction', 'auto']",0,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/goedel/rosserPA.json,T'prf2Tprf,"['assert', 'intros', 'induction', 'apply', 'simpl', 'induction', 'apply', 'exists', 'auto', 'auto', 'intros', 'induction', 'induction', 'unfold', 'assert', 'induction', 'simpl', 'assert', 'auto', 'repeat', 'exists', 'split', 'auto', 'exists', 'intros', 'apply', 'induction', 'rewrite', 'repeat', 'constructor', 'elim', 'exists', 'split', 'auto', 'exists', 'intros', 'apply', 'induction', 'rewrite', 'repeat', 'constructor', 'elim', 'exists', 'split', 'auto', 'exists', 'intros', 'apply', 'induction', 'rewrite', 'repeat', 'constructor', 'elim', 'exists', 'split', 'auto', 'exists', 'intros', 'apply', 'induction', 'rewrite', 'repeat', 'constructor', 'elim', 'exists', 'split', 'auto', 'exists', 'intros', 'apply', 'induction', 'rewrite', 'repeat', 'constructor', 'elim', 'exists', 'split', 'auto', 'exists', 'intros', 'apply', 'induction', 'rewrite', 'repeat', 'constructor', 'elim', 'assert', 'apply', 'induction', 'induction', 'exists', 'split', 'intros', 'apply', 'exists', 'intros', 'apply', 'fold', 'auto', 'assert', 'apply', 'induction', 'induction', 'exists', 'split', 'intros', 'apply', 'exists', 'intros', 'apply', 'fold', 'auto', 'assert', 'apply', 'induction', 'induction', 'exists', 'split', 'intros', 'apply', 'exists', 'intros', 'apply', 'fold', 'auto', 'exists', 'split', 'simpl', 'repeat', 'apply', 'exists', 'intros', 'induction', 'unfold', 'unfold', 'rewrite', 'apply', 'elim', 'assert', 'auto', 'assert', 'auto', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'clear', 'exists', 'split', 'repeat', 'intros', 'induction', 'auto', 'simpl', 'exists', 'intros', 'induction', 'auto', 'assert', 'auto', 'induction', 'clear', 'induction', 'induction', 'exists', 'split', 'assumption', 'assert', 'auto', 'exists', 'assumption', 'exists', 'split', 'auto', 'exists', 'simpl', 'tauto', 'exists', 'split', 'auto', 'exists', 'simpl', 'tauto', 'exists', 'split', 'auto', 'exists', 'simpl', 'tauto', 'exists', 'split', 'auto', 'assert', 'apply', 'apply', 'apply', 'apply', 'right', 'constructor', 'apply', 'apply', 'induction', 'induction', 'induction', 'exists', 'simpl', 'tauto', 'assert', 'auto', 'induction', 'exists', 'split', 'auto', 'assert', 'unfold', 'intros', 'apply', 'apply', 'assumption', 'exists', 'simpl', 'tauto', 'exists', 'split', 'auto', 'exists', 'simpl', 'tauto', 'exists', 'split', 'auto', 'exists', 'simpl', 'tauto', 'exists', 'split', 'auto', 'exists', 'simpl', 'tauto', 'exists', 'split', 'auto', 'exists', 'simpl', 'tauto', 'assert', 'apply', 'unfold', 'intros', 'induction', 'intros', 'induction', 'exists', 'exists', 'simpl', 'tauto', 'induction', 'induction', 'exists', 'split', 'intros', 'induction', 'induction', 'assert', 'auto', 'induction', 'exists', 'intros', 'assert', 'auto', 'induction', 'assert', 'apply', 'unfold', 'intros', 'induction', 'intros', 'induction', 'exists', 'exists', 'simpl', 'tauto', 'induction', 'induction', 'exists', 'split', 'intros', 'induction', 'induction', 'assert', 'auto', 'induction', 'exists', 'intros', 'assert', 'auto', 'induction', 'induction', 'induction', 'exists', 'assumption']",4,3,3,2,5,6
/mnt/cisk/zmq/dataset/data/goedel/PA.json,PAdec,"['intros', 'unfold', 'induction', 'rewrite', 'left', 'right', 'constructor', 'induction', 'rewrite', 'left', 'left', 'right', 'constructor', 'induction', 'rewrite', 'left', 'do', 'right', 'constructor', 'induction', 'rewrite', 'left', 'do', 'right', 'constructor', 'induction', 'rewrite', 'left', 'do', 'right', 'constructor', 'induction', 'rewrite', 'left', 'do', 'right', 'constructor', 'cut', 'intros', 'induction', 'left', 'do', 'assumption', 'right', 'unfold', 'intros', 'repeat', 'clear', 'assert', 'intros', 'destruct', 'try', 'unfold', 'intros', 'decompose', 'discriminate', 'destruct', 'try', 'unfold', 'intros', 'decompose', 'discriminate', 'destruct', 'try', 'unfold', 'intros', 'decompose', 'discriminate', 'destruct', 'try', 'unfold', 'intros', 'decompose', 'discriminate', 'do', 'do', 'induction', 'rewrite', 'clear', 'destruct', 'try', 'unfold', 'intros', 'decompose', 'discriminate', 'induction', 'rewrite', 'clear', 'induction', 'rewrite', 'clear', 'induction', 'rewrite', 'left', 'exists', 'exists', 'reflexivity', 'right', 'unfold', 'intros', 'apply', 'decompose', 'inversion', 'auto', 'right', 'unfold', 'intros', 'apply', 'decompose', 'inversion', 'auto', 'right', 'unfold', 'intros', 'apply', 'decompose', 'inversion', 'auto', 'right', 'unfold', 'intros', 'apply', 'decompose', 'inversion', 'auto', 'induction', 'induction', 'left', 'unfold', 'decompose', 'exists', 'exists', 'rewrite', 'assumption', 'right', 'unfold', 'intros', 'apply', 'unfold', 'decompose', 'exists', 'exists', 'rewrite', 'unfold', 'induction', 'simpl', 'reflexivity', 'simpl', 'assumption', 'right', 'unfold', 'intros', 'apply', 'unfold', 'decompose', 'rewrite', 'replace', 'reflexivity', 'unfold', 'induction', 'simpl', 'reflexivity', 'simpl', 'auto']",5,2,1,1,0,2
/mnt/cisk/zmq/dataset/data/goedel/PA.json,closedPA1,"['unfold', 'unfold', 'intros', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'induction', 'unfold', 'rewrite', 'apply', 'induction', 'auto', 'induction', 'auto', 'induction', 'auto', 'induction', 'auto', 'induction', 'auto', 'induction', 'auto']",2,1,0,2,0,1
/mnt/cisk/zmq/dataset/data/goedel/PA.json,closedPA,"['unfold', 'intros', 'unfold', 'induction', 'elim', 'tauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PA.json,pa1,"['intros', 'replace', 'apply', 'apply', 'repeat', 'constructor', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PA.json,pa2,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PA.json,pa3,"['intros', 'replace', 'apply', 'apply', 'repeat', 'constructor', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PA.json,pa4,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PA.json,pa5,"['intros', 'replace', 'apply', 'apply', 'repeat', 'constructor', 'reflexivity']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/goedel/PA.json,pa6,"['intros', 'set', 'replace', 'apply', 'simpl', 'apply', 'repeat', 'constructor', 'simpl', 'induction', 'elim', 'auto', 'induction', 'elim', 'auto', 'reflexivity']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftLogCorrect.json,vard_raft_log_linearizable,"['intros', 'apply', 'find_apply_lem_hyp', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializedCorrect.json,input_correct_filterMap_trace_non_empty_out,"['intros', 'apply', 'rewrite', 'apply', 'auto']",1,0,2,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializedCorrect.json,get_input_tr_filterMap_trace_non_empty_out,"['induction', 'simpl', 'auto', 'destruct', 'simpl', 'rewrite', 'auto', 'destruct', 'auto']",0,3,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializedCorrect.json,get_output_tr_filterMap_trace_non_empty_out,"['induction', 'simpl', 'auto', 'destruct', 'simpl', 'rewrite', 'auto', 'destruct', 'auto', 'rewrite', 'auto']",0,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializedCorrect.json,exported_filterMap_trace_non_empty_out,"['intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializedCorrect.json,import_exported_filterMap_trace_non_empty_out,"['induction', 'simpl', 'auto', 'destruct', 'simpl', 'rewrite', 'auto', 'rewrite', 'destruct', 'auto']",0,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializedCorrect.json,equivalent_filterMap_trace_non_empty_out,"['intros', 'rewrite', 'rewrite', 'rewrite', 'auto']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializedCorrect.json,vard_raft_serialized_linearizable,"['intros', 'apply', 'break_exists_name', 'break_and', 'find_apply_lem_hyp', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_and', 'exists', 'split', 'eapply', 'eauto', 'split', 'auto', 'eapply', 'eauto', 'eapply', 'eauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializers.json,input_serialize_deserialize_id,"['intros', 'unfold', 'destruct', 'repeat', 'simpl']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializers.json,entry_serialize_deserialize_id,"['intros', 'unfold', 'cheerios_crush', 'destruct', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializers.json,msg_serialize_deserialize_id,"['intros', 'unfold', 'destruct', 'cheerios_crush', 'simpl', '(unfold RequestVote_deserialize || unfold RequestVoteReply_deserialize || unfold AppendEntries_deserialize || unfold AppendEntriesReply_deserialize)', 'cheerios_crush']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializers.json,serverType_serialize_deserialize_id,"['intros', 'unfold', 'destruct', 'repeat', 'simpl']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializers.json,output_serialize_deserialize_id,"['intros', 'unfold', 'destruct', 'repeat', 'simpl']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializers.json,raft_data_serialize_deserialize_id,"['intros', 'unfold', 'cheerios_crush', 'destruct', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftSerializers.json,raft_input_serialize_deserialize_id,"['intros', 'unfold', 'destruct', 'repeat', 'simpl', 'rewrite', 'repeat', 'simpl', 'unfold', 'destruct', 'repeat', 'simpl']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/systems/VarDRaftCorrect.json,vard_raft_linearizable,['exact'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,uniqueIndices_elim_eq,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_cons,"['intros', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_subseq,"['induction', 'intros', 'simpl', 'break_match', 'intuition', 'break_match', 'intuition', 'subst', 'apply', 'eauto', 'intros', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxTerm_is_max,"['induction', 'intros', 'simpl', 'intuition', 'simpl', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_is_max,"['induction', 'intros', 'simpl', 'intuition', 'simpl', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,S_maxIndex_not_in,"['intros', 'intro', 'find_apply_lem_hyp', 'auto', 'subst', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_non_empty,"['destruct', 'intros', 'simpl', 'eauto', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_subseq,"['induction', 'intros', 'simpl', 'auto', 'repeat', 'intuition', 'find_inversion', 'eauto', 'right', 'find_reverse_rewrite', 'auto']",2,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_sorted,"['intros', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_in,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_not_in,"['induction', 'intros', 'intro', 'intuition', 'simpl', 'break_match', 'try', 'intuition', 'subst', 'rewrite', 'discriminate', 'find_copy_apply_hyp_hyp', 'intuition', 'break_if', 'do_bool', 'eauto', 'omega']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_in,"['induction', 'intros', 'discriminate', 'simpl', 'break_match', 'find_inversion', 'auto', 'break_if', 'eauto', 'discriminate']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_index,"['induction', 'intros', 'discriminate', 'simpl', 'break_match', 'find_inversion', 'apply', 'auto', 'break_if', 'eauto', 'discriminate']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,NoDup_removeAfterIndex,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_le_In,"['induction', 'intros', 'intuition', 'simpl', 'break_if', 'simpl', 'intuition', 'subst', 'do_bool', 'omega']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_In_le,"['induction', 'intros', 'simpl', 'intuition', 'simpl', 'break_if', 'simpl', 'do_bool', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_covariant,"['induction', 'intros', 'simpl', 'intuition', 'simpl', 'break_match', 'simpl', 'intuition', 'subst', 'do_bool', 'match', 'intuition', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'match', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_le,"['induction', 'intros', 'reflexivity', 'simpl', 'find_copy_apply_hyp_hyp', 'repeat', 'simpl', 'intuition', 'try', 'do_bool', 'omega']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_2_subseq,"['induction', 'intros', 'simpl', 'auto', 'repeat', 'simpl', 'intuition', 'try', 'eauto', 'do_bool', 'assert', 'rewrite', 'auto', 'omega', 'do_bool', 'assert', 'rewrite', 'auto', 'omega']",2,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_comm,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_2_eq_min,"['intros', 'pose', 'intuition', 'find_rewrite', 'rewrite', 'eauto', 'omega', 'find_rewrite', 'rewrite', 'auto', 'omega']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_None,"['induction', 'intros', 'simpl', 'intuition', 'break_match', 'try', 'subst', 'do_bool', 'congruence', 'do_bool', 'break_if', 'eauto', 'do_bool', 'find_apply_hyp_hyp', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_removeAfterIndex_agree,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'congruence']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,subseq_uniqueIndices,"['unfold', 'induction', 'intros', 'simpl', 'break_match', 'intuition', 'simpl', 'break_match', 'intuition', 'simpl', 'constructor', 'subst', 'simpl', 'invc', 'constructor', 'auto', 'intro', 'apply', 'eapply', 'eauto', 'apply', 'auto', 'subst', 'invc', 'eauto']",2,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,subseq_findGtIndex,"['induction', 'intros', 'simpl', 'auto', 'simpl', 'repeat', 'auto', 'find_inversion', 'eauto', 'congruence']",2,1,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_in,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_sufficient,"['induction', 'intros', 'simpl', 'intuition', 'simpl', 'break_if', 'intuition', 'subst', 'in_crush', 'subst', 'do_bool', 'omega', 'do_bool', 'find_apply_hyp_hyp', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_subset,"['destruct', 'intros', 'simpl', 'omega', 'destruct', 'simpl', 'match', 'intuition', 'match', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_exists_in,"['destruct', 'intros', 'simpl', 'omega', 'simpl', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_app,"['induction', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_removeAfterIndex_le,"['intros', 'apply', 'eauto', 'intros', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_removeAfterIndex,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'break_if', 'do_bool', 'try', 'reflexivity', 'break_if', 'simpl', 'do_bool', 'match', 'intuition', 'omega', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,maxIndex_gt_0_nonempty,"['intros', 'destruct', 'simpl', 'omega', 'congruence']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeIncorrect_new_contiguous,"['intros', 'intros', 'red', 'intros', 'intuition', 'destruct', 'unfold', 'intuition', 'match', 'apply', 'auto', 'forward', 'intuition', 'break_exists', 'exists', 'intuition', 'apply', 'right', 'subst', 'eapply', 'eauto', 'pose', 'intuition', 'find_rewrite', 'unfold', 'intuition', 'match', 'auto', 'forward', 'intuition', 'break_exists', 'exists', 'intuition', 'subst', 'simpl', 'clean', 'exfalso', 'pose', 'intuition', 'unfold', 'do_in_app', 'intuition', 'firstorder', 'firstorder']",0,1,1,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,incoming_entries_in_log,"['intros', 'exists', 'intuition']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_necessary,"['induction', 'intros', 'simpl', 'intuition', 'break_if', 'simpl', 'intuition', 'right', 'eapply', 'eauto', 'break_if', 'simpl', 'intuition', 'do_bool', 'subst', 'omega', 'simpl', 'intuition', 'eapply', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_contiguous,"['intros', 'intros', 'specialize', 'conclude', 'break_exists', 'exists', 'intuition', 'apply', 'auto', 'omega']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_max,"['intros', 'destruct', 'simpl', 'auto', 'break_if', 'simpl', 'intuition']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_uniq_equal,"['intros', 'pose', 'pose', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,entries_match_entries_match',"['unfold', 'intros', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,entries_match_refl,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,entries_match_sym,"['intros', 'unfold', 'intros', 'intuition', 'apply', 'auto', 'repeat', 'auto', 'apply', 'auto', 'repeat', 'auto']",3,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,advanceCurrentTerm_same_log,"['unfold', 'intros', 'break_if', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,tryToBecomeLeader_same_log,"['unfold', 'intros', 'find_inversion', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleRequestVote_same_log,"['unfold', 'intros', 'repeat', 'try', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleRequestVoteReply_same_log,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,advanceCurrentTerm_same_lastApplied,"['unfold', 'intros', 'break_if', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleTimeout_lastApplied,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleClientRequest_lastApplied,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,tryToBecomeLeader_same_lastApplied,"['unfold', 'intros', 'find_inversion', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleRequestVote_same_lastApplied,"['unfold', 'intros', 'repeat', 'try', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleRequestVoteReply_same_lastApplied,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_elim,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,index_in_bounds,"['intros', 'split', 'omega', 'etransitivity', 'eauto', 'apply', 'auto']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,rachet,"['intros', 'assert', 'eapply', 'eauto', 'subst', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_intro,"['induction', 'intros', 'simpl', 'intuition', 'simpl', 'intuition', 'break_if', 'subst', 'do_bool', 'auto', 'congruence', 'f_equal', 'eauto', 'break_if', 'eauto', 'do_bool', 'find_apply_hyp_hyp', 'omega', 'eapply', 'auto', 'unfold', 'simpl', 'solve_by_inversion']",2,1,1,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_uniqueIndices,"['intros', 'induction', 'simpl', 'auto', 'unfold', 'simpl', 'constructor', 'unfold', 'simpl', 'intuition', 'constructor', 'eauto', 'intuition', 'do_in_map', 'find_apply_hyp_hyp', 'omega']",0,3,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findAtIndex_intro',"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,doLeader_same_log,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleAppendEntriesReply_same_log,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleAppendEntriesReply_same_lastApplied,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleAppendEntries_same_lastApplied,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,wonElection_length,"['intros', 'unfold', 'do_bool', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,wonElection_no_dup_in,"['intros', 'find_eapply_lem_hyp', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,wonElection_exists_voter,"['unfold', 'intros', 'destruct', 'try', 'simpl', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmax_fun_ext,"['intros', 'induction', 'simpl', 'intuition', 'find_rewrite', 'break_match', 'intuition', 'repeat', 'auto']",0,1,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmax_None,"['intros', 'destruct', 'simpl', 'intuition', 'repeat', 'congruence']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmax_elim,"['induction', 'intros', 'simpl', '[congruence|].', 'repeat', 'find_inversion', 'do_bool', 'match', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega', 'do_bool', 'match', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega', 'intuition', 'subst', 'auto', 'find_apply_lem_hyp', 'subst', 'solve_by_inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmax_in,"['intros', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmax_one_different,"['intros', 'induction', 'simpl', 'intuition', 'conclude', 'conclude', 'intuition', 'find_rewrite', 'break_match', 'intuition', 'repeat', 'intuition', 'do_bool', 'right', 'find_apply_lem_hyp', 'intuition', 'destruct', 'destruct', 'repeat', 'intuition', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'do_bool', 'right', 'find_apply_lem_hyp', 'intuition', 'destruct', 'destruct', 'repeat', 'intuition', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'find_rewrite', 'repeat', 'subst', 'intuition', 'do_bool', 'repeat', 'intuition', 'destruct', 'destruct', 'repeat', 'intuition', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'pose', 'pose', 'intuition', 'repeat', 'specialize', 'intuition', 'omega']",0,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmin_fun_ext,"['intros', 'induction', 'simpl', 'intuition', 'find_rewrite', 'break_match', 'intuition', 'repeat', 'auto']",0,1,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmin_None,"['intros', 'destruct', 'simpl', 'intuition', 'repeat', 'congruence']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmin_elim,"['induction', 'intros', 'simpl', '[congruence|].', 'repeat', 'find_inversion', 'do_bool', 'match', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega', 'do_bool', 'match', 'intuition', 'subst', 'auto', 'find_apply_hyp_hyp', 'omega', 'intuition', 'subst', 'auto', 'find_apply_lem_hyp', 'subst', 'solve_by_inversion']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmin_in,"['intros', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,argmin_one_different,"['intros', 'induction', 'simpl', 'intuition', 'conclude', 'conclude', 'intuition', 'find_rewrite', 'break_match', 'intuition', 'repeat', 'intuition', 'do_bool', 'right', 'find_apply_lem_hyp', 'intuition', 'destruct', 'destruct', 'repeat', 'intuition', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'do_bool', 'right', 'find_apply_lem_hyp', 'intuition', 'destruct', 'destruct', 'repeat', 'intuition', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'find_rewrite', 'repeat', 'subst', 'intuition', 'do_bool', 'repeat', 'intuition', 'destruct', 'destruct', 'repeat', 'intuition', 'specialize', 'specialize', 'intuition', 'repeat', 'omega', 'pose', 'pose', 'intuition', 'repeat', 'specialize', 'intuition', 'omega']",0,1,0,0,2,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,applied_entries_update,"['intros', 'unfold', 'repeat', 'intuition', 'try', 'exfalso', 'pose', 'find_rewrite', 'intuition', 'match', 'forward', '[intros', 'rewrite_update', 'intuition', 'concludes', 'forward', '[intros', 'update_destruct', 'subst', 'rewrite_update', 'intuition', 'concludes', 'intuition', 'repeat', 'find_inversion', 'update_destruct', 'subst', 'rewrite_update', 'intuition', 'left', 'intuition', 'eexists', 'intuition', 'repeat', 'intuition', 'match', 'rewrite_update', 'eauto', 'repeat', 'find_inversion', 'rewrite_update', 'intuition']",1,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,applied_entries_safe_update,"['intros', 'unfold', 'repeat', 'repeat', 'intuition', 'match', 'intros', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'repeat', 'try', 'match', 'subst', 'clean', 'f_equal', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,applied_entries_log_lastApplied_same,"['intros', 'unfold', 'rewrite', 'intuition', 'break_match', 'auto', 'repeat', 'auto']",1,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,applied_entries_log_lastApplied_update_same,"['intros', 'apply', 'intros', 'update_destruct', 'subst', 'rewrite_update', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,applied_entries_cases,"['intros', 'unfold', 'break_match', 'simpl', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_partition,"['intros', 'induction', 'simpl', 'intuition', 'break_exists', 'break_if', '[exists nil', 'eauto', 'do_bool', 'match', 'simpl', 'f_equal', 'auto']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,entries_match_scratch,"['intros', 'unfold', 'intuition', 'match', 'eauto', 'match', 'do', 'intuition', 'match', 'conclude', '[eauto| eapply le_trans', 'eauto', 'apply', 'eauto', 'break_exists', 'intuition', 'match', 'eauto', 'match', 'eauto', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,entries_match_append,"['intros', 'unfold', 'intros', 'split', 'intros', 'in_crush_start', 'match', 'eauto', 'exfalso', 'find_apply_lem_hyp', 'intuition', 'find_apply_hyp_hyp', 'omega', 'find_apply_lem_hyp', 'intuition', 'match', 'do', 'intuition', 'break_exists', 'intuition', 'find_copy_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'use_entries_match', 'repeat', 'use_entries_match', 'in_crush_start', 'match', 'do', 'intuition', 'break_exists', 'intuition', 'destruct', 'apply', 'right', 'apply', 'auto', 'find_apply_lem_hyp', 'intuition', 'subst', 'use_entries_match', 'apply', 'left', 'match', 'intuition', 'conclude_using', 'eauto', 'apply', 'eauto', 'break_exists', 'intuition', 'match', 'eauto', 'apply', 'right', 'find_copy_apply_lem_hyp', 'eauto', 'apply', '[omega|].', 'find_apply_lem_hyp', 'use_entries_match']",3,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,doLeader_appliedEntries,"['intros', 'apply', 'intros', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'eapply', 'eauto', 'intros', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'unfold', 'repeat', 'find_inversion', 'auto']",2,0,1,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,applyEntries_spec,"['induction', 'intros', 'simpl', 'intuition', 'find_inversion', 'destruct', 'repeat', 'eauto', 'unfold', 'repeat', 'repeat', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'eauto']",2,0,0,0,4,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,applyEntries_spec_ind,"['intros', 'find_apply_lem_hyp', 'break_exists', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleClientRequest_commitIndex,"['unfold', 'intros', 'repeat', 'find_inversion', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleTimeout_commitIndex,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleAppendEntriesReply_same_commitIndex,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleRequestVote_same_commitIndex,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,handleRequestVoteReply_same_commitIndex,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,doGenericServer_commitIndex,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'eapply', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,div2_correct',"['intro', 'functional', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,div2_correct,"['intros', 'functional', 'intros', 'try', 'specialize', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,wonElection_one_in_common,"['intros', 'unfold', 'do_bool', 'cut', '[intros', 'break_exists', 'exists', 'intuition', 'eapply', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,execute_log'_app,"['induction', 'intros', 'auto', 'simpl', 'repeat', 'rewrite', 'break_let', 'find_inversion', 'auto']",1,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,fst_execute_log',"['induction', 'intros', 'simpl', 'rewrite', 'auto', 'simpl', 'break_let', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'auto']",2,2,0,2,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,snd_execute_log',"['induction', 'intros', 'auto', 'simpl', 'break_let', 'rewrite', 'rewrite', 'auto']",1,0,0,2,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,execute_log_correct,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_nil,"['unfold', 'intuition', 'simpl', 'omega', 'contradiction']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_index_singleton,"['intros', 'unfold', 'intuition', 'specialize', 'specialize', 'assert', 'concludes', 'assert', 'concludes', 'break_exists', 'break_and', 'inversion', 'subst', 'auto', 'inversion']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_index_adjacent,"['intros', 'unfold', 'intuition', 'assert', 'simpl', 'intuition', 'specialize', 'concludes', 'intuition', 'specialize', 'concludes', 'break_exists', 'simpl', 'intuition', 'subst', 'auto', 'omega', 'simpl', 'intuition', 'specialize', 'concludes', 'omega']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,cons_contiguous_sorted,"['induction', 'intros', 'apply', 'eapply', 'eauto', 'unfold', 'break_and', 'intuition', 'simpl', 'specialize', 'assert', 'concludes', 'break_exists', 'intuition', 'simpl', 'intuition', 'subst', 'omega', 'exists', 'intuition', 'exists', 'intuition']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_app,"['induction', 'intros', 'auto', 'simpl', 'find_apply_lem_hyp', 'auto', 'simpl', 'intuition']",1,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,prefix_contiguous,"['induction', 'intros', 'contradiction', 'destruct', 'try', 'find_copy_apply_lem_hyp', 'auto', 'simpl', 'intuition', 'left', 'subst', 'reflexivity', 'right', 'subst', 'destruct', 'find_apply_lem_hyp', 'specialize', 'concludes', 'omega', 'eapply', 'try', 'eauto', 'eapply', 'eauto', 'simpl', 'intuition']",1,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_contiguous,"['induction', 'intros', 'simpl', 'intuition', 'break_if', 'auto', 'do_bool', 'eapply', 'eauto', 'eapply', 'eauto', 'simpl', 'intuition']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_NoDup,"['induction', 'intros', 'simpl', 'auto', 'constructor', 'constructor', 'intuition', 'match', 'intuition']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_Permutation_eq,"['induction', 'intros', 'symmetry', 'apply', 'assumption', 'destruct', 'apply', 'apply', 'assumption', 'simpl', 'intuition', 'find_copy_eapply_lem_hyp', 'intuition', 'find_copy_apply_lem_hyp', 'find_copy_eapply_lem_hyp', 'intuition', 'simpl', 'intuition', 'try', 'f_equal', 'eauto', 'repeat', 'intuition', 'omega']",1,0,2,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_same_sufficient,"['intros', 'apply', 'try', 'assumption', 'apply', 'try', 'apply', 'assumption', 'split', 'intros', 'apply', 'eauto']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_same_sufficient',"['intros', 'eapply', 'eauto', 'intros', 'unfold', 'intuition', 'specialize', 'intuition', 'find_copy_apply_hyp_hyp', 'repeat', 'break_exists', 'intuition', 'symmetry', 'copy_apply', 'try', 'eapply', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,thing2,"['induction', 'try', 'intros', 'destruct', 'simpl', 'contradiction', 'simpl', 'intuition', 'subst', 'f_equal', 'break_if', 'do_bool', 'unfold', 'intuition', 'simpl', 'specialize', 'specialize', 'assert', 'left', 'reflexivity', 'concludes', 'assert', 'left', 'reflexivity', 'concludes', 'omega', 'destruct', '{', 'do_bool', 'simpl', 'find_apply_lem_hyp', 'destruct', 'reflexivity', 'simpl', 'intuition', 'specialize', 'assert', 'left', 'reflexivity', 'concludes', 'intuition', 'find_rewrite', 'break_if', 'reflexivity', 'do_bool', 'omega', '}', '{', 'apply', 'try', 'auto', 'find_apply_lem_hyp', 'firstorder', 'eauto', 'find_apply_lem_hyp', 'unfold', 'inversion', 'split', 'intros', 'do_bool', 'simpl', 'destruct', 'destruct', 'destruct', 'simpl', 'intuition', 'subst_max', 'specialize', 'specialize', 'conclude_using', 'break_and', 'assert', 'concludes', 'break_exists', 'break_and', 'subst', 'exists', 'split', 'auto', 'break_or_hyp', 'auto', 'omega', 'apply', 'right', 'auto', 'eauto', 'apply', 'auto', '}']",0,0,1,0,3,5
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,thing,"['intros', 'rewrite', 'auto', 'apply', 'auto', 'unfold', 'intros', 'eapply', 'eauto', 'unfold', 'intros', 'eapply', 'eauto']",2,0,1,2,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_nil,"['intros', 'induction', 'simpl', 'intuition', 'break_if', 'do_bool', 'intuition', 'specialize', 'intuition', 'omega']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_removeAfterIndex_commute,"['intros', 'induction', 'simpl', 'auto', 'repeat', 'simpl', 'intuition', 'do_bool', 'try', 'symmetry', 'apply', 'intros', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'intuition']",1,2,2,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_app_1,"['induction', 'intros', 'simpl', 'intuition', 'destruct', 'simpl', 'intuition', 'break_if', 'do_bool', 'auto', 'omega', 'break_if', 'do_bool', 'auto', 'f_equal', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_app_2,"['induction', 'intros', 'simpl', 'intuition', 'break_if', 'do_bool', 'auto', 'f_equal', 'eauto', 'exfalso', 'destruct', 'simpl', 'intuition', 'specialize', 'conclude_using', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,thing3,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'destruct', 'simpl', 'intuition', 'exfalso', 'specialize', 'intuition', 'exfalso', 'specialize', 'conclude_using', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_non_empty,"['intros', 'induction', 'simpl', 'intuition', 'break_if', 'do_bool', 'simpl', 'intuition', 'congruence']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_Prefix_in_eq,"['induction', 'intros', 'simpl', 'intuition', 'destruct', 'simpl', 'auto', 'specialize', 'intuition', 'break_match', 'intuition', 'subst', 'simpl', 'intuition', 'f_equal', 'eapply', 'eauto', 'intros', 'specialize', 'intuition', 'subst', 'specialize', 'intuition', 'omega']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_eq,"['induction', 'intros', 'simpl', 'intuition', 'break_if', 'intuition', 'do_bool', 'specialize', 'intuition', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_in_app,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'break_if', 'do_bool', 'eauto', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_in_app_l',"['induction', 'intros', 'simpl', 'intuition', 'subst', 'break_if', 'do_bool', 'eauto', 'specialize', 'intuition', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,removeAfterIndex_maxIndex_sorted,"['intros', 'induction', 'simpl', 'intuition', 'break_if', 'auto', 'do_bool', 'omega']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_singleton_sufficient,"['red', 'intuition', 'exists', 'intuition', 'simpl', 'inv', '[reflexivity | omega].', 'simpl', 'intuition', 'subst', 'omega']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_adjacent_sufficient,"['intros', 'unfold', 'intuition', 'invc', 'eexists', 'intuition', 'find_rewrite', 'find_apply_lem_hyp', 'subst', 'assert', 'simpl', 'omega', 'find_apply_hyp_hyp', 'break_exists', 'simpl', 'intuition', 'subst', 'eexists', 'intuition', 'simpl', 'intuition', 'subst', 'auto', 'specialize', 'concludes', 'omega']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,rev_exists,"['intros', 'break_exists', 'exists', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,app_in_2,"['intros', 'subst', 'intuition']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,app_contiguous_maxIndex_le_eq,"['intros', 'subst', 'destruct', 'eauto', 'simpl', 'break_match', 'intuition', 'subst', 'simpl', 'unfold', 'intuition', 'specialize', 'conclude_using', 'omega']",0,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_app_1,"['intros', 'induction', 'simpl', 'intuition', 'eapply', 'intuition']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,Prefix_maxIndex,"['induction', 'intros', 'simpl', 'intuition', 'break_match', 'intuition', 'repeat', 'simpl', 'auto', 'intuition', 'eapply_prop_hyp', 'eauto', 'match', 'simpl', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition', 'simpl', 'match', 'intuition']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,app_maxIndex_In_l,"['induction', 'intros', 'simpl', 'intuition', 'destruct', 'simpl', 'intuition', 'subst', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'do_in_app', 'intuition', 'right', 'eapply', 'eauto', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_app_prefix_contiguous,"['intros', 'destruct', 'intuition', 'subst', 'rewrite', 'auto', 'match', 'simpl', 'break_match', 'intuition', 'subst', 'simpl', 'eauto']",0,1,0,1,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_term_index_lt,"['intros', 'induction', 'simpl', 'intuition', 'repeat', 'auto', 'find_apply_hyp_hyp', 'intuition']",0,1,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_app_prefix_2,"['destruct', 'intros', 'simpl', 'rewrite', 'eapply_prop', 'omega', 'intros', 'find_eapply_lem_hyp', 'eauto', 'left', 'intuition', 'congruence']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_0_app,"['induction', 'intros', 'simpl', 'intuition', 'rewrite', 'match', 'intuition', 'subst', 'simpl', 'intuition', 'destruct', 'simpl', 'unfold', 'intuition', 'match', 'conclude_using', 'intuition', 'find_apply_lem_hyp', 'eauto', 'simpl', 'intuition']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,deduplicate_log'_In_if,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'auto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_removeAfterIndex_i_lt_i',"['induction', 'intros', 'intuition', 'simpl', 'repeat', 'simpl', 'repeat', 'repeat', 'intuition', 'try', 'simpl', 'f_equal', 'rewrite', 'eauto', 'apply', 'intros', 'find_apply_hyp_hyp', 'intuition']",2,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,findGtIndex_removeAfterIndex_i'_le_i,"['induction', 'intros', 'intuition', 'simpl', 'repeat', 'simpl', 'repeat', 'repeat', 'intuition', 'omega']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_cons_elim,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_app_gt,"['induction', 'intros', 'contradiction', 'simpl', 'intuition', 'subst', 'assert', 'apply', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'eauto']",1,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,sorted_app_In_reduce,"['intros', 'find_copy_eapply_lem_hyp', 'simpl', 'eauto', 'assert', 'apply', 'intuition', 'find_apply_hyp_hyp', 'find_apply_lem_hyp', 'intuition', 'simpl', 'intuition', 'subst', 'omega']",0,0,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,not_empty_false,"['destruct', '[auto|discriminate].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,moreUpToDate_refl,"['intros', 'unfold', 'apply', 'right', 'do_bool', 'intuition', 'do_bool', 'intuition']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonTheorems.json,contiguous_findAtIndex,"['unfold', 'intros', 'intuition', 'match', 'intuition', 'break_exists_exists', 'intuition', 'eapply', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/CommonDefinitions.json,key_eq_dec,"['decide', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_request_vote,"['unfold', 'intros', 'repeat', 'repeat', 'intuition', 'simpl', 'intuition', 'tuple_inversion', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_request_vote_reply,"['unfold', 'intros', 'repeat', 'repeat', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_same_append_entries,"['intros', 'unfold', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_timeout_votedFor,"['unfold', 'intros', 'repeat', 'simpl', 'intuition', 'repeat', 'intuition']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,handleTimeout_same_term_votedFor_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'omega']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_request_vote_reply_eq,"['unfold', 'intros', 'repeat', 'repeat', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_request_vote_intro,"['unfold', 'intros', 'repeat', 'repeat', 'do_bool', 'intuition', 'simpl', 'intuition', 'do_bool', 'try', 'intuition', 'omega']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_request_vote_intro_old,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_timeout_votes_intro_new,"['unfold', 'intros', 'repeat', 'simpl', 'intuition', 'repeat', 'intuition', 'congruence']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_timeout,"['unfold', 'intros', 'repeat', 'simpl', 'intuition', 'repeat', 'intuition']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votes_update_elections_data_client_request,"['intros', 'unfold', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votesWithLog_same_client_request,"['intros', 'unfold', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votesWithLog_update_elections_data_client_request,"['unfold', 'intros', 'repeat', 'repeat', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votesWithLog_update_elections_data_timeout,"['unfold', 'intros', 'repeat', 'simpl', 'intuition', 'repeat', 'intuition']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votesWithLog_same_append_entries,"['intros', 'unfold', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votesWithLog_update_elections_data_append_entries,"['unfold', 'intros', 'repeat', 'repeat', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votesWithLog_update_elections_data_request_vote,"['unfold', 'intros', 'repeat', 'repeat', 'intuition', 'simpl', 'intuition', 'tuple_inversion', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,votesWithLog_update_elections_data_request_vote_reply,"['unfold', 'intros', 'repeat', 'repeat', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_request_vote_reply_votesWithLog,"['intros', 'unfold', 'break_match', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_appendEntries_leaderLogs,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,leaderLogs_update_elections_data_requestVote,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,leaderLogs_update_elections_data_RVR,"['unfold', 'intros', 'repeat', 'repeat', 'intuition', 'simpl', 'intuition', 'find_inversion', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_requestVoteReply_old,"['unfold', 'intros', 'repeat', 'repeat', 'intuition', 'simpl', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_client_request_log_allEntries,"['intros', 'unfold', 'unfold', 'repeat', 'repeat', 'auto', 'discriminate', 'do_bool', 'find_rewrite', 'omega', 'do_bool', 'find_rewrite', 'omega', 'simpl', 'right', 'intuition', 'exists', 'find_inversion', 'simpl', 'intuition', 'simpl', 'do_bool', 'omega']",1,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,handleAppendEntriesReply_entries,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition', 'eauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_appendEntries_allEntries_term,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'find_apply_lem_hyp', 'intuition', 'subst', 'do_in_app', 'intuition', 'do_in_map', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_appendEntries_allEntries_term',"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'unfold', 'repeat', 'simpl', 'repeat', 'do_bool', 'simpl', 'auto', 'try', 'intuition', 'do_in_map', 'repeat', 'subst', 'simpl', 'auto', 'find_eapply_lem_hyp', 'eauto']",1,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_appendEntries_log_allEntries,"['intros', 'unfold', 'repeat', 'repeat', 'auto', 'simpl', 'right', 'intuition', 'right', 'left', 'do_bool', 'intuition', 'eauto', 'find_apply_lem_hyp', 'congruence', 'rewrite', 'right', 'intuition', 'left', 'intuition', 'do_bool', 'eauto', 'right', 'intuition', 'right', 'right', 'do_bool', 'intuition', 'eauto', 'find_apply_lem_hyp', 'congruence', 'find_apply_lem_hyp', 'intuition', 'do_bool', 'eauto', 'rewrite', 'do_bool', 'rewrite', 'auto', 'intuition']",1,0,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_appendEntries_allEntries_detailed,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'find_apply_lem_hyp', 'intuition', 'find_inversion', 'do_in_app', 'intuition', 'do_in_map', 'find_inversion', 'find_copy_apply_hyp_hyp', 'intuition']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_clientRequest_allEntries_old',"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_client_request_cronies,"['intros', 'unfold', 'repeat', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_appendEntries_cronies,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_clientRequest_cronies_new,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_timeout_cronies,"['intros', 'unfold', 'repeat', 'simpl', 'auto', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_requestVote_cronies,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_appendEntries_preserves_allEntries,"['unfold', 'intros', 'break_let', 'break_match', 'auto', 'break_if', 'auto', 'simpl', 'intuition']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_timeout_votesWithLog_votesReceived,"['unfold', 'intros', 'repeat', 'simpl', 'intuition', 'repeat', 'intuition', 'simpl', 'repeat', 'intuition', 'try']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_timeout_votedFor,"['intros', 'unfold', 'repeat', 'unfold', 'repeat', 'repeat', 'simpl', 'auto', 'try', 'find_inversion', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementSpecLemmas.json,update_elections_data_request_vote_votedFor,"['intros', 'unfold', 'repeat', 'unfold', 'repeat', 'repeat', 'simpl', 'auto', 'try', 'find_inversion', 'auto', 'do_bool', 'intuition', 'try', 'do_bool', 'subst', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,ghost_log_eq_dec,"['decide', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_client_request'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_timeout'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_append_entries'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_append_entries_reply'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_request_vote'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_request_vote_reply'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_do_leader'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_do_generic_server'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_reboot'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftMsgRefinementInterface.json,msg_refined_raft_net_invariant_subset'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_eq_dec,['decide'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_eq_dec,['decide'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledge_all_ops_was_in,"['induction', 'intros', 'simpl', 'intuition', 'congruence']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledge_all_ops_func_defn,"['intros', 'unfold', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledge_all_ops_func_correct,"['induction', 'intros', 'simpl', 'repeat', 'subst', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledge_all_ops_func_target_ext,"['induction', 'simpl', 'repeat', 'subst', 'intuition', 'repeat', 'eauto', 'solve', 'eauto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equivalent_refl,"['induction', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_in_l_r,"['induction', 'intros', 'simpl', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_in_r_l,"['induction', 'intros', 'simpl', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_Permutation,"['induction', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_app_head,"['induction', 'intros', 'simpl', 'auto']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_snoc,"['induction', 'simpl', 'eauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_app_tail,"['induction', 'intros', 'simpl', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_eg1,"['intros', 'constructor', 'econstructor', 'auto', 'red', 'intuition', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_eg2,"['intros', 'eapply', 'IRI', 'IRO', 'IRO', 'repeat', 'unfold', 'intuition', 'eapply', 'IRI', 'IRO', 'IRO', 'apply', 'auto', 'red', 'intuition', 'constructor', 'apply', 'auto', 'red', 'intuition']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_eg3,"['intros', 'eapply', 'IRI', 'IRO', 'IRO', 'constructor', 'apply', 'red', 'intuition', 'constructor', 'constructor', 'apply', 'red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_eg4,"['intros', 'constructor', 'eapply', 'IRO', 'IRO', 'repeat', 'unfold', 'intuition', 'eapply', 'auto', 'red', 'intuition']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledge_all_ops_func_IRU_In,"['induction', 'intros', 'simpl', 'repeat', 'subst', 'simpl', 'intuition', 'congruence']",2,1,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_input_keys_defn,"['unfold', 'intros', 'simpl', 'repeat', 'congruence']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_IR_input_keys_defn,"['unfold', 'intros', 'simpl', 'repeat', 'congruence']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_output_keys_defn,"['unfold', 'intros', 'simpl', 'repeat', 'congruence']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_trace_ind',"['intros', 'destruct', 'simpl', 'repeat', 'auto', 'subst', 'match', 'apply', 'auto', 'match', 'apply', 'auto']",0,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_trace_ind,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_trace_IRI_in,"['intros', 'induction', 'intros', 'simpl', 'intuition', 'try', 'subst', 'find_apply_hyp_hyp', 'intuition', 'subst', 'find_apply_hyp_hyp', 'intuition']",2,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledge_all_ops_func_target_nil,"['induction', 'intros', 'simpl', 'auto', 'repeat', 'subst', 'unfold', '(exfalso + idtac)', 'solve']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,before_head_op,"['intros', 'destruct', 'eauto', 'eapply_prop_hyp', 'eauto', 'simpl', 'intuition']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_move_II,"['red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_move_OO,"['red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equivalent_all_Is_I,"['induction', 'intros', 'simpl', 'intuition', 'apply', 'auto', 'specialize', 'concludes', 'break_exists', 'subst', 'auto']",2,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equiv_Permutation,"['induction', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equiv_ack_op_lr,"['unfold', 'intros', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equiv_ack_op_rl,"['unfold', 'intros', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledged_op_defn,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_move_U_l,"['red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_move_IU_neq,"['red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_move_IO_neq,"['red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,not_good_op_move_IO,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,not_good_op_move_OI,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_op_move_good_move_IO,"['unfold', 'intuition', 'repeat', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_op_move_cases,"['unfold', 'intros', 'destruct', 'exists', 'intuition', 'right', 'right', 'intuition', 'subst', 'eauto', 'exfalso', 'eauto']",2,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledged_op_I_cons_reduce,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledged_op_I_cons_expand,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_AAOF_I,"['intros', 'simpl', 'repeat', 'auto', 'exfalso', 'eauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IR_equiv_AAOF_II_neq,"['intros', 'rewrite', 'break_if', 'rewrite', 'break_if', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'rewrite', 'break_if', 'eauto', 'auto', 'break_if', 'rewrite', 'break_if', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'eauto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', '{', 'break_if', 'eapply', '[apply IR_equiv_cons', 'apply', 'auto', 'eapply', '[apply IR_equiv_move', 'auto', 'constructor', 'eapply', '[apply IR_equiv_cons', 'apply', 'auto', 'auto', 'auto', '}', 'break_if', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'break_if', 'auto']",0,0,1,3,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equiv_AAOF_IR_equiv,"['induction', 'intros', 'auto', 'simpl', 'repeat', 'subst', 'auto', 'exfalso', 'eauto', 'find_copy_apply_lem_hyp', 'break_exists', 'intuition', 'subst', 'destruct', 'subst', 'auto', 'auto', 'simpl', 'eauto', 'simpl', 'repeat', 'intuition', 'try', 'eauto', 'exfalso', 'eauto', 'exfalso', 'eauto', 'exfalso', 'eauto', 'eapply', '[apply IR_equiv_cons', 'apply', 'auto', 'eapply', '[apply IR_equiv_move', 'auto', 'apply', 'congruence', 'auto', 'exfalso', 'match', 'eapply', '[apply Permutation_sym', 'eapply', 'eauto', 'auto', 'eauto']",1,0,1,0,4,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equivalent_refl,"['induction', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_op_move_II,"['red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equivalent_all_Is_I,"['induction', 'intros', 'simpl', 'intuition', 'apply', 'auto', 'specialize', 'concludes', 'break_exists', 'subst', 'auto']",2,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_op_move_neq_IO,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,good_op_move_OO,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equivalent_all_Is_O,"['induction', 'intros', 'simpl', 'intuition', 'apply', 'eauto', 'destruct', 'eauto', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equiv_app_tail,"['induction', 'intros', 'simpl', 'intuition', 'auto', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equivalent_all_Is_I_middle,"['intros', 'rewrite', 'replace', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_input_keys_app,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_output_keys_app,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_input_keys_complete,"['unfold', 'intros', 'eapply', 'eauto', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_input_keys_sound,"['induction', 'intros', 'auto', 'simpl', 'rewrite', 'break_match', 'simpl', 'subst', 'intuition', 'intuition']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_output_keys_sound,"['induction', 'intros', 'auto', 'simpl', 'rewrite', 'break_match', 'simpl', 'subst', 'auto', 'intuition']",1,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_input_keys_on_Os_nil,"['induction', 'intros', 'simpl', 'intuition', 'rewrite', 'pose', 'concludes', 'break_exists', 'subst', 'auto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_input_keys_preserves_NoDup,"['intros', 'unfold', 'apply', 'auto', 'intros', 'repeat', 'try', 'subst', 'congruence']",2,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_output_keys_preserves_NoDup,"['intros', 'unfold', 'apply', 'auto', 'intros', 'repeat', 'try', 'subst', 'congruence']",2,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_op_output_keys_complete,"['unfold', 'intros', 'eapply', 'eauto', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_IR_output_keys_complete_U,"['unfold', 'intros', 'eapply', 'eauto', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_IR_output_keys_complete_O,"['unfold', 'intros', 'eapply', 'eauto', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,get_IR_input_keys_complete,"['unfold', 'intros', 'eapply', 'eauto', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,op_equivalent_all_Is_O_middle,"['intros', 'rewrite', 'replace', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,NoDup_get_op_output_keys_In_O,"['intros', 'rewrite', 'rewrite', 'do_in_app', 'intuition', 'eapply', 'eauto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,NoDup_get_op_output_keys_In_2_3,"['intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'repeat', 'intuition']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,NoDup_get_op_input_keys_In_2_3,"['intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'match', 'repeat', 'intuition', 'eauto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,no_Ik_in_first2,"['intros', 'rewrite', 'rewrite', 'match', 'rewrite', 'intro', 'subst', 'repeat', 'intuition']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IRO_O_preserved_IU,"['intros', 'apply', 'intuition', 'congruence']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IRO_O_preserved,"['intros', 'eapply', 'eauto', 'try', 'intro', 'find_inversion', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IRU_I_preserved_IU,"['intros', 'apply', 'intuition', 'find_inversion', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,IRU_I_preserved,"['intros', 'eapply', 'eauto', 'try', 'intro', 'find_inversion', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,NoDup_get_op_input_keys_In_I,"['intros', 'rewrite', 'rewrite', 'do_in_app', 'intuition', 'eapply', 'eauto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,subseq_get_op_input_keys,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,subseq_get_op_output_keys,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,acknowledge_all_ops_func_target_ext_strong,"['induction', 'intros', 'auto', 'simpl', 'repeat', 'subst', 'simpl', 'intuition', 'exfalso', 'eauto', 'exfalso', 'eauto']",1,1,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Linearizability.json,equivalent_intro,"['intros', 'red', 'intuition', 'exists', 'intuition', 'apply', 'apply', 'auto', 'intros', 'find_apply_lem_hyp', 'auto', 'intuition']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/TraceUtil.json,key_in_output_list_dec,"['unfold', 'destruct', 'find_apply_lem_hyp', 'break_and', 'unfold', 'break_match', 'try', 'subst', 'do_bool', 'break_and', 'break_if', 'try', 'do_bool', 'subst', 'left', 'eauto', 'right', 'intro', 'break_exists', 'eapply', 'eauto', 'unfold', 'find_apply_lem_hyp', 'intuition', 'try', 'do_bool', 'congruence']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/TraceUtil.json,key_in_output_trace_dec,"['unfold', 'intros', 'destruct', 'find_apply_lem_hyp', 'break_and', 'repeat', 'try', 'find_apply_lem_hyp', 'break_and', 'unfold', 'break_match', 'try', 'do_bool', 'break_and', 'do_bool', 'break_if', 'try', 'subst', 'left', 'exists', 'find_reverse_rewrite', 'rewrite', 'intuition', 'right', 'intro', 'break_exists', 'break_and', 'find_eapply_lem_hyp', 'eauto', 'simpl', 'break_match', 'try', 'unfold', 'break_exists', 'find_eapply_lem_hyp', 'eauto', 'simpl', 'find_apply_lem_hyp', 'intuition', 'try', '(do_bool', 'congruence']",2,0,0,1,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/TraceUtil.json,in_output_list_dec,"['unfold', 'destruct', 'find_apply_lem_hyp', 'break_and', 'unfold', 'break_match', 'try', 'subst', 'do_bool', 'break_and', 'break_if', 'try', 'break_if', 'try', 'repeat', 'intuition', 'subst', 'intuition', 'right', 'intro', 'break_exists', 'eapply', 'eauto', 'unfold', 'find_apply_lem_hyp', 'repeat', 'intuition', 'try', 'try']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/DecompositionWithPostState.json,raft_invariant_handle_message',"['intros', 'unfold', 'break_match', 'repeat', 'repeat', ""[eapply_prop raft_net_invariant_request_vote'| eapply_prop raft_net_invariant_request_vote_reply'| eapply_prop raft_net_invariant_append_entries'| eapply_prop raft_net_invariant_append_entries_reply']"", 'eauto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/DecompositionWithPostState.json,raft_invariant_handle_input',"['intros', 'unfold', 'break_match', 'repeat', 'repeat', ""[eapply_prop raft_net_invariant_timeout'| eapply_prop raft_net_invariant_client_request']"", 'eauto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementCommonTheorems.json,candidateEntries_wonElection,"['intros', 'unfold', 'break_exists', 'break_and', 'repeat', 'intro', 'assert', '{', 'match', '[|clear H', 'eauto', 'break_exists', 'break_and', 'eapply_prop', 'try', 'eauto', 'eapply_prop', 'repeat', 'eapply_prop', 'auto', '}', 'subst', 'concludes', 'contradiction']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementCommonTheorems.json,wonElection_candidateEntries_rvr,"['unfold', 'intros', 'break_and', 'match', 'unfold', 'break_exists', 'break_and', 'match', '[|clear H', 'eauto', 'break_exists', 'break_and', 'simpl', 'intuition', 'subst', 'apply_prop_hyp', 'assert', 'eauto', 'subst', 'concludes', 'contradiction', 'apply_prop_hyp', 'concludes', 'apply_prop_hyp', 'apply_prop_hyp', 'unfold', 'unfold', 'simpl', 'repeat', 'assert', 'eauto', 'subst', 'repeat', 'contradiction']",2,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementCommonTheorems.json,candidateEntries_ext,"['unfold', 'intuition', 'break_exists_exists', 'intuition', 'repeat', 'auto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementCommonTheorems.json,won_election_cronies,"['intros', 'unfold', 'intuition', 'eapply', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementCommonTheorems.json,handleRequestVoteReply_preserves_candidate_entries,"['unfold', 'intros', 'break_exists', 'break_and', 'exists', 'split', 'rewrite', 'simpl', 'rewrite', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'try', 'repeat', 'simpl', 'auto', 'break_if', 'simpl', 'repeat', 'auto', 'match', 'find_apply_lem_hyp', 'intuition', 'repeat', 'intuition', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'match', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'destruct', 'intuition', 'find_apply_lem_hyp', 'auto', 'eapply', 'eauto']",2,3,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementCommonTheorems.json,doLeader_preserves_candidateEntries,"['intros', 'eapply', 'eauto', 'intros', 'repeat', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'repeat', 'simpl', 'auto', 'find_apply_lem_hyp', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RefinementCommonTheorems.json,pDst_deghost_packet,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_votedFor,"['intros', 'unfold', 'repeat', 'tuple_inversion', 'simpl', 'intuition', 'try', 'try', 'do_bool', 'omega']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_cases,"['unfold', 'intros', 'repeat', 'repeat', 'intuition', 'simpl', 'discriminate', 'unfold', 'break_if', 'simpl', 'do_bool', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_term_votedFor_cases,"['intros', 'unfold', 'repeat', 'subst', 'do_bool', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_same_term_votedFor_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'do_bool', 'auto', 'try']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_same_term_votedFor_preserved,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'do_bool', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doGenericServer_currentTerm,"['unfold', 'intros', 'repeat', 'repeat', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_currentTerm,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_currentTerm,"['intros', 'unfold', 'repeat', 'tuple_inversion', 'do_bool', 'simpl', 'auto', 'omega']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_currentTerm,"['intros', 'unfold', 'repeat', 'find_inversion', 'do_bool', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,tryToBecomeLeader_currentTerm,"['unfold', 'intros', 'find_inversion', 'simpl', 'auto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_currentTerm,"['unfold', 'intros', 'break_match', 'eauto', 'find_inversion', 'simpl', 'auto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,haveNewEntries_not_empty,"['intros', 'unfold', 'do_bool', 'intuition', 'repeat', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_log,"['intros', 'unfold', 'break_if', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_log,"['intros', 'unfold', 'break_if', '[find_inversion', 'subst', 'eauto', 'break_if', '[do_bool', 'break_if', 'find_inversion', 'subst', 'try', 'intuition', 'simpl', 'eauto', 'break_if', 'break_match', '[|find_inversion', 'subst', 'eauto', 'break_if', '[find_inversion', 'subst', 'eauto', 'find_inversion', 'subst', 'simpl', 'right', 'right', 'find_apply_lem_hyp', 'intuition', 'do_bool', 'eauto', 'find_apply_lem_hyp', 'congruence', 'repeat', 'find_inversion', 'subst', 'eauto', 'simpl', 'eauto']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_log_ind,"['intros', 'find_apply_lem_hyp', 'intuition', 'subst', 'try', 'auto', 'break_exists', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,haveNewEntries_true,"['intros', 'unfold', 'repeat', 'do_bool', 'intuition', 'try', 'do_bool', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_commitIndex,"['intros', 'unfold', 'break_if', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,some_none,['congruence'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_term,"['intros', 'unfold', 'break_if', 'do_bool', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_log_detailed,"['intros', 'unfold', 'break_if', '[find_inversion', 'subst', 'eauto', 'break_if', '[do_bool', 'break_if', 'find_inversion', 'subst', 'try', 'simpl', 'intuition', 'simpl', 'intuition', 'break_match', '[|find_inversion', 'subst', 'eauto', 'break_if', '[find_inversion', 'subst', 'eauto', 'break_if', '[|find_inversion', 'subst', 'eauto', 'find_inversion', 'subst', 'simpl', 'right', 'right', 'find_apply_lem_hyp', 'intuition', 'do_bool', 'find_apply_lem_hyp', 'intuition', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_currentTerm_leaderId,"['intros', 'unfold', 'break_if', 'simpl', 'do_bool', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_currentTerm,"['intros', 'unfold', 'break_if', 'simpl', 'do_bool', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_currentTerm_monotonic,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto', 'simpl', 'apply']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_currentTerm_votedFor,"['intros', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'right', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_currentTerm',"['intros', 'unfold', 'repeat', 'subst', 'do_bool', 'intuition', 'apply']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_currentTerm,"['intros', 'unfold', 'repeat', 'tuple_inversion', 'do_bool', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_currentTerm_leaderId,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto', 'right', 'intuition', 'right', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_currentTerm_leaderId,"['intros', 'unfold', 'repeat', 'try', 'simpl', 'auto', 'do_bool', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_currentTerm_leaderId,"['intros', 'unfold', 'subst', 'repeat', 'try', 'simpl', 'auto', 'do_bool', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_log,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'intuition', 'simpl', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_log_ind,"['intros', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'break_exists', 'intuition', 'repeat', 'eauto']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_log,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_log_same,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition', 'try', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_spec',"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition', 'try', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_not_is_append_entries,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'simpl', 'eauto', 'repeat', 'subst', 'simpl', 'intuition', 'break_exists', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_type_term,"['intros', 'unfold', 'repeat', 'find_inversion', 'do_bool', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_type_term,"['intros', 'unfold', 'repeat', 'tuple_inversion', 'do_bool', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_type_term,"['intros', 'unfold', 'repeat', 'tuple_inversion', 'do_bool', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_type,"['intros', 'unfold', 'repeat', 'subst', 'do_bool', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_currentTerm,"['intros', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_type_strong,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doGenericServer_type,"['unfold', 'intros', 'repeat', 'repeat', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_log,"['unfold', 'intros', 'repeat', 'find_inversion', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_log,"['unfold', 'intros', 'repeat', 'find_inversion', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_log,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_log_rewrite,"['intros', 'erewrite', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_not_append_entries,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition', 'break_exists', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_clientCache,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_clientCache,"['intros', 'unfold', 'repeat', 'try', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_clientCache,"['unfold', 'intros', 'break_if', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_clientCache,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_clientCache,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,tryToBecomeLeader_clientCache,"['unfold', 'intros', 'find_inversion', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_clientCache,"['unfold', 'intros', 'repeat', 'try', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_clientCache,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_clientCache,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_stateMachine,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_stateMachine,"['intros', 'unfold', 'repeat', 'try', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_stateMachine,"['unfold', 'intros', 'break_if', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_stateMachine,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_stateMachine,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,tryToBecomeLeader_stateMachine,"['unfold', 'intros', 'find_inversion', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_stateMachine,"['unfold', 'intros', 'repeat', 'try', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_stateMachine,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_stateMachine,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_matchIndex_preserved,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto', 'intros', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_matchIndex_leader_preserved,"['intros', 'unfold', 'repeat', 'try', 'simpl', 'auto', '[|intros', 'congruence', 'intros', 'intuition', 'unfold', 'repeat', 'rewrite', 'repeat', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,advanceCurrentTerm_matchIndex_preserved,"['unfold', 'intros', 'break_if', 'simpl', 'auto', 'congruence']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_matchIndex_preserved,"['intros', 'unfold', 'break_match', 'simpl', 'find_inversion', 'subst', 'simpl', 'auto', 'congruence']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_matchIndex_maxIndex,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'simpl', 'auto', 'unfold', 'break_match', 'rewrite', 'try', 'find_inversion', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_matchIndex,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,tryToBecomeLeader_matchIndex_preserved,"['unfold', 'intros', 'find_inversion', 'simpl', 'intros', 'auto', 'congruence']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_matchIndex_preserved,"['unfold', 'intros', 'repeat', 'try', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doGenericServer_matchIndex_preserved,"['intros', 'unfold', 'repeat', 'find_inversion', 'use_applyEntries_spec', 'simpl', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_matchIndex,"['unfold', 'intros', 'repeat', 'simpl', 'auto', 'simpl', 'try', 'unfold', 'simpl', 'repeat', 'simpl', 'try', 'find_inversion', 'auto']",3,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_matchIndex_preserved,"['intros', 'unfold', 'simpl', 'intros', 'repeat', 'find_inversion', 'auto', 'congruence']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_lastApplied,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_no_append_entries,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto', 'intuition', 'break_exists', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_no_append_entries,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto', 'intuition', 'break_exists', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_packets,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto', 'intuition', 'break_exists', 'do_in_map', 'subst', 'simpl', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_messages,"['intros', 'unfold', 'break_match', 'try', 'simpl', 'intuition', 'break_if', 'try', 'simpl', 'intuition', 'find_inversion', 'simpl', 'do_in_map', 'subst', 'simpl', 'find_inversion', 'intuition', 'match', 'break_match', 'simpl', 'right', 'eauto', 'destruct', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_message_entries,"['intros', 'unfold', 'break_match', 'try', 'simpl', 'intuition', 'break_if', 'try', 'simpl', 'intuition', 'find_inversion', 'simpl', 'do_in_map', 'subst', 'simpl', 'find_inversion', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_log_term_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_votesReceived,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_log_term_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_votesReceived,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_log_term_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_votesReceived,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_log_term_type,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'congruence']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_votesReceived,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'do_bool', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_log_term_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_candidate,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_candidate,"['unfold', 'intros', 'repeat', 'find_inversion', 'simpl', 'congruence']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doLeader_term_votedFor,"['unfold', 'intros', 'repeat', 'find_inversion', 'simpl', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,doGenericServer_log_type_term_votesReceived,"['intros', 'unfold', 'repeat', 'find_inversion', 'use_applyEntries_spec', 'simpl', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleClientRequest_term_votedFor,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntries_term_votedFor,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleAppendEntriesReply_term_votedFor,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_term_votedFor,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'congruence']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_reply_true,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleTimeout_messages,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_inversion', 'auto']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVoteReply_currentTerm,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'try', 'do_bool', 'omega']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/SpecLemmas.json,handleRequestVote_reply_true',"['unfold', 'intros', 'repeat', 'find_inversion', 'simpl', 'auto', 'try', 'do_bool', 'try', 'eauto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,op_eq_dec,"['decide', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_intro,"['unfold', 'intros', 'destruct', 'simpl', 'break_if', 'repeat', 'intuition']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_intro',"['intros', 'subst', 'apply']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_different_id_false,"['unfold', 'intros', 'destruct', 'simpl', 'do_bool', 'right', 'do_bool', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_different_client_false,"['unfold', 'intros', 'destruct', 'simpl', 'do_bool', 'left', 'break_if', 'congruence']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,deduplicate_log'_In,"['induction', 'simpl', 'intuition', 'intros', 'repeat', 'intuition', 'subst', 'simpl', 'intuition', 'do_bool', 'destruct', 'assert', '{', 'repeat', 'auto', '}', '{', 'find_apply_lem_hyp', 'break_or_hyp', 'specialize', 'match', 'forward', '{', 'intuition', 'repeat', 'rewrite', 'find_injection', 'auto', '}', 'concludes', 'forward', '{', 'intuition', '}', 'concludes', 'break_exists_exists', 'intuition', 'eauto', '}', 'specialize', 'match', 'forward', '{', 'intuition', 'repeat', 'rewrite', 'auto', '}', 'concludes', 'forward', '{', 'intuition', '}', 'concludes', 'break_exists_exists', 'intuition', 'do_bool', 'assert', 'omega', 'do_bool', 'apply', 'auto', 'intros', 'destruct', 'assert', '{', 'intro', 'repeat', 'assert', 'omega', '}', 'intuition', 'intuition', 'destruct', 'assert', '{', 'repeat', 'auto', '}', '{', 'find_apply_lem_hyp', 'break_or_hyp', 'specialize', 'match', 'forward', '{', 'intuition', 'repeat', 'rewrite', 'find_injection', 'auto', '}', 'concludes', 'forward', '{', 'intuition', '}', 'concludes', 'break_exists_exists', 'intuition', 'eauto', '}', 'specialize', 'match', 'forward', '{', 'intuition', 'repeat', 'rewrite', 'auto', '}', 'concludes', 'forward', '{', 'intuition', '}', 'concludes', 'break_exists_exists', 'intuition']",1,2,1,1,4,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,deduplicate_log_In,"['unfold', 'intros', 'eapply', 'simpl', 'intuition', 'try']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,deduplicate_log_In_if,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,log_to_IR_good_trace,"['intros', 'induction', 'simpl', 'auto', 'repeat', 'simpl', 'constructor', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,in_import_in_trace_O,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'subst', 'intuition', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'simpl', 'intuition', 'try', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'do_in_app', 'intuition', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'break_match', 'try', 'find_inversion', 'repeat', 'intuition', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,in_import_in_trace_I,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'subst', 'find_apply_hyp_hyp', 'break_exists', 'eauto', 'simpl', 'intuition', 'find_inversion', 'simpl', 'eauto', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'break_exists', 'eauto', 'do_in_app', 'intuition', 'find_apply_lem_hyp', 'find_eapply_lem_hyp', 'break_exists', 'break_and', 'break_match', 'discriminate', 'find_eapply_lem_hyp', 'find_apply_hyp_hyp', 'break_exists', 'eauto']",2,0,0,0,4,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,in_applied_entries_in_IR,"['intros', 'induction', 'simpl', 'intuition', 'subst', 'break_exists', 'repeat', 'intuition', 'simpl', 'subst', 'congruence', 'repeat', 'in_crush']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,In_get_output',"['intros', 'induction', 'simpl', 'intuition', 'subst', 'break_if', 'simpl', 'intuition', 'break_match', 'simpl', 'intuition', 'break_if', 'simpl', 'intuition']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,import_get_output,"['intros', 'induction', 'simpl', 'intuition', 'repeat', 'intuition', 'subst', 'simpl', 'intuition', 'try', 'try', 'intuition', 'find_apply_lem_hyp', 'auto', 'find_apply_lem_hyp', 'auto', 'find_apply_lem_hyp', 'break_exists', 'break_match', 'intuition', 'try', 'subst', 'find_inversion', 'find_apply_lem_hyp', 'break_exists', 'congruence', 'find_apply_lem_hyp', 'auto']",0,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,get_output'_In,"['induction', 'intros', 'simpl', 'intuition', 'discriminate', 'repeat', 'subst', 'eauto', 'find_inversion', 'break_and', 'subst', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,get_output_import_O,"['induction', 'intros', 'simpl', 'discriminate', 'repeat', 'subst', 'simpl', 'intuition', 'right', 'apply', 'try', 'eauto', 'find_inversion', 'apply', 'left', 'find_apply_lem_hyp', 'apply', 'eapply', 'eauto', 'simpl', 'now', 'apply', 'right', 'apply', 'intro', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'break_match', 'try', 'find_inversion', 'find_apply_lem_hyp', 'break_exists', 'congruence', 'eauto']",3,1,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,trace_I_in_import,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'rewrite', 'intuition', 'break_match', 'simpl', 'eauto', 'subst', 'destruct', 'subst', 'auto', 'right', 'apply', 'congruence', 'eauto', 'apply', 'right', 'apply', 'intro', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'break_match', 'try', 'eauto']",3,0,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,get_IR_input_of_log_to_IR,"['induction', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'rewrite', 'auto']",0,3,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,get_IR_output_of_log_to_IR,"['induction', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'repeat', 'auto']",0,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,NoDup_input_import,"['induction', 'intros', 'constructor', 'simpl', 'repeat', 'subst', 'auto', 'rewrite', 'constructor', 'auto', 'intro', 'find_apply_lem_hyp', 'eapply', 'eauto', 'eapply', 'eauto', 'eapply', 'auto', 'rewrite', 'rewrite', 'simpl', 'eapply', 'eauto', 'eapply', 'apply', 'apply', 'intros', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'break_match', 'try', 'subst', 'find_inversion', 'eauto']",2,1,3,1,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,NoDup_output_import,"['induction', 'intros', 'constructor', 'simpl', 'repeat', 'subst', 'auto', 'rewrite', 'eapply', 'eauto', 'apply', 'apply', 'rewrite', 'apply', 'apply', 'apply', 'eapply', 'eauto', 'eapply', 'apply', 'apply', 'intros', 'intro', 'repeat', 'eapply', 'eauto']",2,0,3,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,before_import_output_before_input,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'unfold', 'simpl', 'intuition', 'right', 'intuition', 'do_bool', 'destruct', 'simpl', 'match', 'destruct', 'subst', 'intuition', 'right', 'do_bool', 'intuition', 'left', 'break_if', 'congruence', 'left', 'break_if', 'congruence', 'apply', 'eauto', 'break_if', 'intuition', 'right', 'intuition', 'find_apply_lem_hyp', '[find_apply_lem_hyp before_remove_all|]', 'intuition', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'break_match', 'congruence', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'break_match', 'try', 'subst', 'find_inversion', 'simpl', 'match', 'eexists', 'eauto']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_true_key_of,"['intros', 'unfold', 'break_match', 'subst', 'simpl', 'break_if', 'try', 'repeat', 'intuition', 'subst', 'reflexivity']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,key_of_has_key_true,"['intros', 'unfold', 'break_match', 'subst', 'simpl', 'find_inversion', 'break_if', 'try', 'repeat', 'intuition']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_false_key_of,"['intros', 'unfold', 'break_match', 'subst', 'simpl', 'break_if', 'try', 'repeat', 'intuition', 'congruence']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,key_of_has_key_false,"['intros', 'unfold', 'break_match', 'subst', 'simpl', 'repeat', 'intuition', 'match', 'destruct', 'subst', 'intuition', 'right', 'do_bool', 'congruence', 'left', 'break_if', 'congruence', 'left', 'break_if', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_true_same_client,"['unfold', 'intros', 'destruct', 'simpl', 'do_bool', 'break_and', 'do_bool', 'break_if', 'congruence']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_true_same_id,"['unfold', 'intros', 'destruct', 'simpl', 'do_bool', 'intuition', 'do_bool', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_true_elim,['intuition'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,has_key_false_elim,"['unfold', 'intros', 'destruct', 'simpl', 'do_bool', 'intuition', 'auto', 'break_if', 'try', 'auto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,before_func_deduplicate',"['induction', 'simpl', 'intros', 'intuition', 'intuition', 'repeat', 'simpl', 'auto', 'do_bool', 'find_apply_lem_hyp', 'break_and', 'repeat', 'assert', 'omega', 'repeat', 'simpl', '{', 'destruct', 'auto', 'right', 'intuition', 'apply', 'auto', 'do_bool', 'intros', 'destruct', 'repeat', 'rewrite', 'find_inversion', 'repeat', 'find_apply_lem_hyp', 'intuition', 'try', 'assert', 'assert', 'omega', 'rewrite', 'auto', '}', 'do_bool', 'apply', 'auto', 'intros', '{', 'destruct', 'auto', 'find_apply_lem_hyp', 'break_and', 'repeat', 'assert', 'omega', '}', '{', 'destruct', 'auto', 'right', 'intuition', 'apply', 'auto', 'do_bool', 'intros', 'destruct', 'repeat', 'rewrite', 'find_inversion', 'repeat', 'find_apply_lem_hyp', 'intuition', 'try', 'assert', 'assert', 'omega', 'rewrite', 'auto', '}']",1,3,1,1,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,before_func_deduplicate,"['intros', 'apply', 'auto', 'simpl', 'intros', 'discriminate']",2,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,entries_ordered_before_log_to_IR,"['intros', 'unfold', 'remember', 'find_apply_lem_hyp', '{', 'remember', 'clear', 'clear', 'clear', 'rename', 'induction', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'break_if', 'try', 'repeat', 'intuition', 'destruct', 'simpl', 'subst', 'right', 'intuition', 'find_inversion', 'simpl', 'intuition', 'exfalso', 'destruct', 'subst', 'simpl', 'find_apply_lem_hyp', 'break_exists', 'congruence', 'repeat', 'subst', 'simpl', 'repeat', 'intuition', 'try', 'try', 'right', 'destruct', 'simpl', 'intuition', 'try', 'destruct', 'subst', 'intuition', 'right', 'intuition', 'congruence', 'right', 'destruct', 'simpl', 'intuition', 'try', 'destruct', 'subst', 'intuition', 'right', 'intuition', 'congruence', 'right', 'intuition', '[find_inversion', 'simpl', 'intuition', 'right', 'intuition', 'congruence', 'right', 'intuition', '[find_inversion', 'simpl', 'intuition', 'right', 'intuition', 'congruence', '}', '{', 'intros', 'subst', 'eapply', 'intros', 'unfold', 'destruct', 'auto', 'find_copy_apply_hyp_hyp', 'exfalso', 'eapply', 'try', 'unfold', 'intros', 'destruct', 'do_bool', 'intuition', 'do_bool', 'subst', 'omega', 'red', 'find_apply_lem_hyp', 'break_exists_exists', 'intuition', '}']",4,2,1,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,input_before_output_import,"['intros', 'induction', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'break_if', 'repeat', 'intuition', 'try', 'destruct', 'subst', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'destruct', 'match', 'subst', 'intuition', 'right', 'intuition', 'try', 'apply', 'intuition', 'break_if', 'try', 'apply', '[apply before_remove_all_if|]', 'auto', 'intuition', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'break_match', 'intuition', 'congruence', 'intuition', 'match', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'break_match', 'try', 'find_inversion', 'unfold', 'simpl', 'eexists', 'eauto']",0,3,1,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,I_before_O,"['intros', 'find_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,get_IR_input_keys_log_to_IR,"['intros', 'induction', 'simpl', 'intuition', 'repeat', 'subst', 'compute', 'simpl', 'f_equal', 'auto']",0,1,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,get_IR_output_keys_log_to_IR,"['intros', 'induction', 'simpl', 'intuition', 'repeat', 'subst', 'compute', 'simpl', 'f_equal', 'auto']",0,1,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,deduplicate_log'_ks,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'simpl', 'do_bool', 'intuition', 'subst', 'eauto', 'repeat', 'repeat', 'intuition', 'destruct', 'repeat', 'find_injection', 'eapply', 'try', 'repeat', 'eauto', 'eapply', 'try', 'rewrite', 'auto', 'congruence', 'destruct', 'repeat', 'congruence', 'eapply', 'try', 'rewrite', 'auto']",2,0,0,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,NoDup_deduplicate_log',"['induction', 'intros', 'simpl', 'constructor', 'simpl', 'repeat', 'eauto', 'simpl', 'constructor', 'eauto', 'intuition', 'do_in_map', 'find_inversion', 'eapply', 'try', 'repeat', 'rewrite', 'auto', 'simpl', 'constructor', 'eauto', 'intuition', 'do_in_map', 'find_inversion', 'eapply', 'try', 'repeat', 'rewrite', 'auto']",2,0,0,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,NoDup_deduplicate_log,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,NoDup_input_log,"['intros', 'rewrite', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,NoDup_output_log,"['intros', 'rewrite', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,exported_snoc_IO,"['induction', 'intros', 'simpl', 'auto']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,exported_snoc_IU,"['induction', 'intros', 'simpl', 'auto']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,log_to_IR_app,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'auto']",2,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,exported_execute_log,"['intros', 'unfold', 'change', 'eapply', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,in_input_trace_get_input,"['unfold', 'induction', 'intros', 'break_exists', 'simpl', 'intuition', 'subst', 'repeat', 'intuition', 'subst', 'eauto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,get_output_in_output_trace,"['intros', 'induction', 'simpl', 'try', 'repeat', 'subst', 'repeat', 'simpl', 'intuition', 'subst', 'try', 'break_exists_exists', 'intuition', 'find_inversion', 'find_apply_lem_hyp', 'repeat', 'eauto', 'in_crush']",0,1,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,applied_entries_applied_implies_input_state,"['intros', 'red', 'exists', 'intuition', 'red', 'auto', 'unfold', 'break_match', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'eauto', 'simpl', 'intuition']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftLinearizableProofs.json,raft_linearizable',"['intros', 'exists', 'exists', 'exists', 'intuition', 'eapply', 'eauto', 'intros', 'find_copy_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'break_exists', 'intuition', 'destruct', 'simpl', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'repeat', 'eapply', 'eauto', 'apply', 'auto', '{', 'eapply', 'intros', 'unfold', 'subst', 'destruct', 'auto', 'find_copy_apply_hyp_hyp', 'exfalso', 'eapply', 'try', 'unfold', 'intros', 'destruct', 'do_bool', 'intuition', 'do_bool', 'subst', 'omega', 'red', 'find_apply_lem_hyp', 'break_exists_exists', 'intuition', 'red', 'simpl', 'subst', 'auto', '}', 'intros', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'eapply', 'eauto', 'intros', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'destruct', 'find_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'break_exists', 'eauto', 'simpl', 'subst', 'auto', 'intros', 'assert', 'intuition', 'subst', 'find_copy_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'auto', 'congruence', 'eauto', 'intros', 'eauto', 'intros', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'intro', 'find_apply_lem_hyp', 'break_exists', 'congruence', 'apply', 'apply', 'apply', 'apply', 'apply', 'intros', 'find_apply_lem_hyp', 'apply', 'auto', 'eapply', 'eauto', 'auto', 'intros', 'find_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'break_exists', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'subst', 'repeat', 'find_apply_lem_hyp', 'find_inversion', 'unfold', 'find_rewrite_lem', 'simpl', 'repeat', 'find_inversion', 'find_inversion', 'rewrite', 'simpl', 'find_injection', 'find_injection', 'unfold', 'find_inversion', 'repeat', 'find_inversion', 'auto']",4,1,3,0,6,3
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_client_request'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_timeout'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_append_entries'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_append_entries_reply'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_request_vote'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_request_vote_reply'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_do_leader'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_do_generic_server'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/RaftRefinementInterface.json,refined_raft_net_invariant_reboot'_weak,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,serverType_eq_dec,"['decide', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,term_eq_dec,"['apply', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,entry_eq_dec,"['decide', 'eauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,msg_eq_dec,"['decide', 'eauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,step_failure_star_raft_intermediate_reachable',"['intros', 'find_apply_lem_hyp', 'remember', 'induction', 'subst', 'simpl', 'constructor', 'destruct', 'destruct', 'simpl', 'econstructor', 'eauto']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,step_failure_star_raft_intermediate_reachable,"['intros', 'replace', '[|simpl', 'auto', 'eapply', 'eauto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,step_failure_star_raft_intermediate_reachable_extend,"['intros', 'prep_induction', 'induction', 'intros', 'subst', 'find_inversion', 'auto', 'destruct', 'simpl', 'eapply', '[|eauto].', 'eauto']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,raft_invariant_handle_message,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', '[eapply_prop raft_net_invariant_request_vote| eapply_prop raft_net_invariant_request_vote_reply| eapply_prop raft_net_invariant_append_entries| eapply_prop raft_net_invariant_append_entries_reply]', 'eauto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,raft_invariant_handle_input,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', '[eapply_prop raft_net_invariant_timeout| eapply_prop raft_net_invariant_client_request]', 'eauto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,reboot_init_handlers,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft/Raft.json,reboot_idem,['reflexivity'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_init,"['unfold', 'simpl', 'contradiction']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_client_request,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_timeout,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eauto', 'subst', 'find_apply_lem_hyp', 'find_rewrite', 'apply', 'auto']",0,1,1,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_append_entries,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_append_entries_reply,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_request_vote,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eauto', 'subst', 'find_apply_lem_hyp', 'find_rewrite', 'apply', 'auto']",0,1,1,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_request_vote_reply,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'rewrite_update', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_state_same_packet_subset,"['unfold', 'simpl', 'intuition', 'find_reverse_higher_order_rewrite', 'eauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_vwl_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_init,"['unfold', 'simpl', 'contradiction']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_client_request,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_rewrite_lem', 'eauto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_timeout,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_rewrite_lem', 'eauto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_append_entries,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_rewrite_lem', 'eauto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_append_entries_reply,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_request_vote,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_rewrite_lem', 'eauto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_request_vote_reply,"['unfold', 'simpl', 'intuition', 'repeat', 'update_destruct', 'rewrite_update', 'eauto', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'intuition', 'eauto', 'subst', 'find_rewrite', 'apply', 'auto']",0,1,1,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_state_same_packet_subset,"['unfold', 'simpl', 'intuition', 'find_reverse_higher_order_rewrite', 'eauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,terms_and_indices_from_one_ll_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneProof.json,taifoi,"['constructor', 'split', 'auto', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,in_input_trace_or_app,"['unfold', 'intuition', 'break_exists_exists', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,applied_implies_input_update_split,"['unfold', 'intros', 'break_exists_exists', 'intuition', 'break_exists', 'simpl', 'destruct', 'rewrite_update', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,aiis_intro_state,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,aiis_intro_packet,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,doGenericServer_log,"['intros', 'unfold', 'repeat', 'find_inversion', 'use_applyEntries_spec', 'simpl', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleTimeout_log,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleClientRequest_no_messages,"['unfold', 'intros', 'break_match', 'find_inversion', 'simpl', 'intuition']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,mEntries_some_is_applied_entries,"['unfold', 'intros', 'break_match', 'try', 'find_inversion', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,doGenericServer_packets,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,doLeader_messages,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_inversion', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleInputs_aais,"['intros', 'destruct', 'simpl', 'find_erewrite_lem', 'exfalso', 'eauto', 'destruct', 'exfalso', 'eauto', 'simpl', 'break_or_hyp', 'subst', 'unfold', 'unfold', 'break_and', 'subst', 'simpl', 'eauto', 'exfalso', 'eauto']",0,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,mEntries_intro,"['unfold', 'intros', 'subst', 'auto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleMessage_aais,"['intros', 'destruct', 'simpl', 'repeat', 'repeat', 'find_erewrite_lem', 'eauto', 'find_erewrite_lem', 'eauto', 'find_apply_lem_hyp', 'intuition', 'find_rewrite', 'eauto', 'subst', 'eauto', 'do_in_app', 'intuition', 'eauto', 'find_apply_lem_hyp', 'eauto', 'find_erewrite_lem', 'eauto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleRequestVote_doesn't_send_AE,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'intro', 'break_exists', 'discriminate']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleAppendEntriesReply_doesn't_send_AE,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleAppendEntries_doesn't_send_AE,"['unfold', 'intros', 'repeat', 'find_inversion', 'intro', 'break_exists', 'discriminate']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,handleMessage_sends_log,"['intros', 'destruct', 'simpl', 'repeat', 'repeat', 'simpl', 'intuition', 'subst', 'simpl', 'exfalso', 'eapply', 'eauto', 'exfalso', 'eapply', 'eauto', 'exfalso', 'eapply', 'eauto']",0,1,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,applied_implies_input_in_input_trace,"['intros', 'match', 'unfold', 'repeat', 'subst', 'find_inversion', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'break_exists', 'find_erewrite_lem', 'find_erewrite_lem', 'exfalso', 'eauto', 'exfalso', 'eauto', 'intuition', 'do_in_app', 'intuition', 'do_in_map', 'subst', 'simpl', '{', 'repeat', 'intuition', 'exfalso', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'exfalso', 'eauto', 'exfalso', 'eauto', '}', 'exfalso', 'eauto', 'unfold', 'repeat', 'subst', 'find_inversion', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'break_exists', 'find_erewrite_lem', 'find_erewrite_lem', 'eauto', 'exfalso', 'eauto', 'intuition', 'do_in_app', 'intuition', 'do_in_map', 'subst', 'simpl', '{', 'repeat', 'intuition', 'destruct', 'simpl', 'exfalso', 'eapply', 'eauto', 'eauto', 'exfalso', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'eauto', 'exfalso', 'eauto', '}', 'exfalso', 'eauto', 'unfold', 'break_exists', 'intuition', 'break_exists', 'simpl', 'exfalso', 'eauto', 'break_and', 'simpl', 'exfalso', 'eauto', 'unfold', 'break_exists', 'intuition', 'break_exists', 'simpl', 'exfalso', 'eauto', 'intuition', 'subst', 'exfalso', 'eauto', 'exfalso', 'apply', 'eapply', 'eauto', 'congruence', 'congruence', 'unfold', 'break_exists', 'intuition', 'break_exists', 'simpl', 'update_destruct_max_simplify', 'exfalso', 'eauto', 'intuition', 'exfalso', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,name_dec,"['intros', 'destruct', 'find_apply_lem_hyp', 'intuition', 'break_if', 'try', 'eauto', 'right', 'intro', 'break_exists', 'eapply', 'auto', 'break_if', 'congruence', 'Defined']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,correct_entry_dec,"['unfold', 'destruct', 'intuition', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,exists_dec,"['intros', 'destruct', 'find_apply_lem_hyp', 'intuition', 'break_if', 'try', 'eauto', 'right', 'intro', 'break_exists', 'intuition', 'eapply', 'eauto', 'break_if', 'congruence', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,aiis_host_dec,"['unfold', 'simpl', 'apply', 'intros', 'apply', 'apply', 'Defined']",2,2,2,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,aiis_packet_dec,"['unfold', 'apply', 'intros', 'destruct', 'try', 'intro', 'break_exists', 'intuition', 'discriminate', 'simpl', 'destruct', 'eauto', 'right', 'intro', 'break_exists', 'break_and', 'find_inversion', 'auto', 'Defined']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,applied_implies_input_state_dec,"['unfold', 'destruct', 'unfold', 'left', 'repeat', 'intuition', 'eauto', 'destruct', 'unfold', 'left', 'repeat', 'intuition', 'eauto', 'unfold', 'right', 'intro', 'repeat', 'intuition', 'eauto', 'Defined']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,applied_implies_input,"['intros', 'pose', 'unfold', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedImpliesInputProof.json,aiii,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,lift_entries_match,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'simpl', 'repeat', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,lift_UniqueIndices,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,lift_uniqueIndices_log,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'simpl', 'break_match', 'eauto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,state_machine_safety_host'_invariant,"['unfold', 'intros', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'break_exists', 'intuition', 'repeat', 'let', 'unfold', 'match', 'break_exists', 'intuition', 'assert', 'match', 'eauto', 'break_exists', 'intuition', 'repeat', 'do', 'auto', 'intuition', 'try', 'intuition', 'find_false', 'eauto', 'match', '[intros', 'intuition', 'eapply', 'eauto', 'intuition', 'match', 'specialize', 'intuition']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,entries_contiguous,"['intros', 'find_apply_lem_hyp', 'unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,network_host_entries,"['intros', 'pose', 'intuition', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'subst', 'destruct', 'simpl', 'subst', 'eapply_prop_hyp', 'simpl', 'eauto', 'intuition', 'match', 'intuition', 'repeat', 'simpl', 'repeat', 'simpl', 'intuition', 'match', 'conclude', 'intuition', 'eapply', 'eauto']",0,0,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,sorted_app_in_gt,"['intros', 'induction', 'simpl', 'intuition', 'subst_max', 'specialize', 'assert', 'concludes', 'intuition']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,Prefix_In,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'break_match', 'intuition', 'subst', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,in_not_nil,"['destruct', 'simpl', 'intuition']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyPrimeProof.json,sms'i,"['split', 'intuition', 'split', 'auto', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_init,"['unfold', 'intros', 'subst', 'simpl', 'intuition']",2,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_update_elections_data_client_request,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_client_request,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'rewrite', 'eauto', 'eauto']",2,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_update_elections_data_timeout,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_timeout,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'try', 'eauto']",2,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_update_elections_data_AE,"['unfold', 'intros', 'repeat', 'subst', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_append_entries,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'rewrite', 'eauto', 'eauto']",2,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_append_entries_reply,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'eauto']",2,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_request_vote,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'unfold', 'repeat', 'simpl', 'intuition', 'repeat', 'eauto', 'eauto']",2,1,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_update_elections_data_request_vote_reply,"['unfold', 'intros', 'repeat', 'simpl', 'eauto', 'repeat', 'match', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_request_vote_reply,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'eauto', 'match', 'eauto', 'simpl', 'intuition', 'find_inversion', 'eauto']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_do_leader,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'match', 'rewrite', 'simpl', 'eauto', 'eauto']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_do_generic_server,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'match', 'rewrite', 'simpl', 'eauto', 'eauto']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_state_same_packet_subset,"['unfold', 'intros', 'subst', 'simpl', 'find_reverse_higher_order_rewrite', 'eauto']",2,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_reboot,"['unfold', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'match', 'rewrite', 'simpl', 'eauto', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,leaderLogs_sorted_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSortedProof.json,llsi,"['split', 'eauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,update_elections_data_requestVoteReply_leaderLogs',"['unfold', 'intros', 'repeat', 'auto', 'simpl', 'intuition', 'find_inversion', 'right', 'unfold', 'repeat', 'simpl', 'intuition', 'try', 'break_if', 'try', 'do_bool', 'eauto']",3,0,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'intuition', 'subst', 'eauto', 'exfalso', 'match', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'repeat', 'simpl', 'omega', 'find_apply_lem_hyp', 'auto', 'break_exists', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'conclude_using', 'subst', 'find_eapply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'auto', 'break_exists', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'conclude_using', 'subst', 'find_eapply_lem_hyp', 'eauto', 'match', 'eauto', 'find_eapply_lem_hyp', 'repeat', 'eauto', 'intuition']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_append_entries,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'intuition', 'subst', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'intuition', 'subst', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_request_vote,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'intuition', 'subst', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_client_request,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'intuition', 'subst', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_timeout,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'intuition', 'subst', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'subst', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,leaderLogs_preserved_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsPreservedProof.json,llpi,"['split', 'eauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,map_snd,"['intros', 'apply', 'eexists', 'intuition', 'eauto', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'repeat', 'eauto', 'solve_by_inversion', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'repeat', 'eauto', 'solve_by_inversion', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'repeat', 'eauto', 'tuple_inversion', 'repeat', 'find_false', 'eapply', 'eauto']",3,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,update_elections_data_appendEntries_log_allEntries_leader,"['intros', 'unfold', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'auto', 'congruence']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'congruence']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_request_vote,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'try', 'eauto', 'intuition', 'repeat', 'eauto', 'try']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'match', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'try', 'intuition', 'repeat', 'eauto', 'try', 'match', 'eauto', 'match', 'intuition', 'repeat', 'try', 'eauto', 'intuition', 'find_copy_apply_lem_hyp', 'auto', 'match', 'intuition', 'repeat', 'try', 'subst', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'simpl', 'unfold', 'congruence', 'match', 'eauto', 'match', 'intuition', 'repeat', 'try', 'eauto', 'intuition', 'find_copy_apply_lem_hyp', 'auto', 'match', 'intuition', 'repeat', 'try', 'subst', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'simpl', 'unfold', 'congruence']",3,3,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'try', 'intuition', 'repeat', 'eauto', 'try']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'try']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'do_in_map', 'subst', 'destruct', 'simpl', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'try', 'intuition', 'repeat', 'eauto', 'try']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'simpl', 'destruct_update', 'simpl', 'eauto', 'congruence']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,allEntries_leader_sublog_init,"['red', 'unfold', 'intros', 'simpl', 'congruence']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderSublogProof.json,aelsi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogTermSanityProof.json,votesWithLog_term_sanity_cases,"['unfold', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', '[|eauto].', 'simpl', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_apply_hyp_hyp', 'omega', 'break_and', 'subst', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogTermSanityProof.json,votesWithLog_term_sanity_invariant,"['intros', 'apply', 'auto', 'start', 'contradiction', 'start_cases', 'solve_votesWithLog', 'solve_currentTerm', 'start_cases', 'solve_votesWithLog', 'solve_currentTerm', 'start_cases', 'solve_votesWithLog', 'solve_currentTerm', 'start_cases', 'intros', 'subst', 'auto', 'solve_currentTerm', 'start_cases', 'solve_votesWithLog', 'solve_currentTerm', 'start_cases', 'solve_votesWithLog', 'solve_currentTerm', 'start_cases', 'intros', 'find_rewrite', 'simpl', 'auto', 'find_rewrite', 'simpl', 'solve_currentTerm', 'start_cases', 'intros', 'find_rewrite', 'simpl', 'auto', 'find_rewrite', 'simpl', 'solve_currentTerm', 'start', 'find_reverse_higher_order_rewrite', 'eauto', 'start_update', 'unfold', 'simpl', 'specialize', 'find_rewrite', 'simpl', 'eauto']",1,3,1,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogTermSanityProof.json,vwltsi,"['split', 'apply', 'Defined']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_init,"['unfold', 'intuition', 'simpl', 'intuition']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleClientRequest_packets,"['intros', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_nw_packets_unchanged,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_gt_prevIndex_packets_unchanged,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_ge_prevTerm_packets_unchanged,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleClientRequest_logs_sorted,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'omega', 'unfold', 'intuition', 'simpl', 'find_apply_hyp_hyp', 'omega']",2,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_client_request,"['unfold', 'unfold', 'intuition', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'break_match', 'eauto', 'subst', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'eauto']",1,4,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_nw_only_new_packets_matter,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_nw_no_append_entries,"['intros', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'exfalso', 'match', 'repeat', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_nw_not_append_entries,"['intros', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'unfold', 'eauto', 'subst', 'exfalso', 'match', 'repeat', 'eauto']",4,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_gt_prevIndex_only_new_packets_matter,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_gt_prevIndex_no_append_entries,"['intros', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'exfalso', 'match', 'repeat', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_gt_prevIndex_not_append_entries,"['intros', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'unfold', 'eauto', 'subst', 'exfalso', 'match', 'repeat', 'eauto']",4,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_ge_prevTerm_only_new_packets_matter,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_ge_prevTerm_no_append_entries,"['intros', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'exfalso', 'match', 'repeat', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,packets_ge_prevTerm_not_append_entries,"['intros', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'unfold', 'eauto', 'subst', 'exfalso', 'match', 'repeat', 'eauto']",4,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleTimeout_not_is_append_entries,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'simpl', 'eauto', 'repeat', 'subst', 'simpl', 'intuition', 'break_exists', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_timeout,"['unfold', 'unfold', 'intuition', 'unfold', 'simpl', 'intros', 'find_apply_lem_hyp', 'find_higher_order_rewrite', 'break_match', 'repeat', 'eauto', 'eapply', 'eauto', 'intros', 'eauto', 'eapply', 'eauto', 'intros', 'eauto', 'eapply', 'eauto', 'intros', 'eauto']",1,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,sorted_append,"['induction', 'intros', 'simpl', 'auto', 'intuition', 'do_in_app', 'intuition', 'find_apply_hyp_hyp', 'intuition']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,sorted_index_term,"['induction', 'intros', 'simpl', 'intuition', 'subst_max', 'intuition', 'subst', 'find_apply_hyp_hyp', 'intuition', 'subst', 'find_apply_hyp_hyp', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleAppendEntries_logs_sorted,"['intros', 'unfold', 'intuition', 'find_apply_lem_hyp', 'intuition', 'find_rewrite', 'eauto', 'subst', 'unfold', 'simpl', 'find_eapply_hyp_goal', 'eauto', 'find_rewrite', 'apply', 'eauto', 'intros', 'find_apply_lem_hyp', 'eauto', 'unfold', 'eapply', '[|eauto].', 'find_eapply_hyp_goal', '[in_crush|eauto|eauto].', 'simpl', 'eauto', 'intros', 'find_copy_apply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'subst', 'match', 'eauto', 'match', '[omega|] end.', 'eapply', 'eauto', 'unfold', 'find_eapply_hyp_goal', '[in_crush|eauto|eauto]', 'simpl', 'eauto']",1,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleAppendEntriesReply_log,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleAppendEntriesReply_packets,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_append_entries_reply,"['unfold', 'unfold', 'intuition', 'simpl', 'unfold', 'simpl', 'intros', 'find_apply_lem_hyp', 'repeat', 'break_match', 'try', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'eapply', 'eauto', 'intros', 'find_apply_hyp_hyp', 'find_rewrite', 'in_crush', 'find_apply_lem_hyp', 'subst', 'simpl', 'eapply', 'eauto', 'intros', 'find_apply_hyp_hyp', 'find_rewrite', 'in_crush', 'find_apply_lem_hyp', 'subst', 'simpl', 'eapply', 'eauto', 'intros', 'find_apply_hyp_hyp', 'find_rewrite', 'in_crush']",1,5,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleRequestVote_packets,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'intuition', 'break_exists', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,handleRequestVoteReply_log,"['intros', 'unfold', 'repeat', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_request_vote_reply,"['unfold', 'unfold', 'intuition', 'simpl', 'unfold', 'simpl', 'intros', 'find_apply_lem_hyp', 'repeat', 'break_match', 'try', 'eauto', 'eauto', 'eauto', 'eauto']",1,4,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,doLeader_log,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,doLeader_messages,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'intuition', 'unfold', 'do_in_map', 'simpl', 'subst', 'simpl', 'find_inversion', 'apply', 'unfold', 'do_in_map', 'simpl', 'subst', 'simpl', 'find_inversion', 'find_apply_lem_hyp', 'intuition', 'unfold', 'do_in_map', 'simpl', 'subst', 'simpl', 'find_inversion', 'break_match', 'intuition', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'simpl', 'intuition', 'repeat', 'eapply', 'eauto', 'omega']",1,1,1,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_do_leader,"['unfold', 'unfold', 'intuition', 'simpl', 'unfold', 'simpl', 'intros', 'find_apply_lem_hyp', 'repeat', 'break_match', 'subst', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'intuition', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', '[idtac|idtac|idtac|eauto]', 'intuition', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', '[idtac|idtac|idtac|eauto]', 'intuition']",4,5,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,doGenericServer_packets,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_do_generic_server,"['unfold', 'unfold', 'intuition', 'simpl', 'subst', 'unfold', 'simpl', 'intros', 'find_apply_lem_hyp', 'repeat', 'break_match', 'try', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'eauto']",1,4,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_state_same_packet_subset,"['unfold', 'intuition', 'simpl', 'unfold', 'intros', 'find_reverse_higher_order_rewrite', 'eauto', 'eapply', 'eauto', 'eapply', 'eauto', 'eapply', 'eauto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_reboot,"['unfold', 'intuition', 'simpl', 'unfold', 'intros', 'repeat', 'simpl', 'break_match', 'subst', 'eauto', 'subst', 'eapply', 'eauto', 'find_rewrite', 'intuition', 'subst', 'eapply', 'eauto', 'find_rewrite', 'intuition', 'subst', 'eapply', 'eauto', 'find_rewrite', 'intuition']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,logs_sorted_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/SortedProof.json,si,"['split', 'eauto', 'eauto', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,entries_match_cons_gt_maxTerm,"['unfold', 'intuition', 'simpl', 'intuition', 'subst', 'subst', 'try', '[| solve[auto]]', 'omega', '[| solve[auto]]', 'omega', 'match', 'eauto', 'right', 'match', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,entries_match_cons_sublog,"['unfold', 'intuition', 'simpl', 'intuition', 'subst', 'subst', 'try', 'try', 'match', '[| solve[auto]]', 'omega', 'match', 'eauto', 'right', 'match', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,entries_match_nil,"['red', 'simpl', 'intuition']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_nw_packet_set,"['unfold', 'intros', 'eapply_prop_hyp', '[|eauto 10].', 'match', 'eauto', 'repeat', 'eauto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_host_state_same,"['unfold', 'intuition', 'repeat', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,handleClientRequest_no_send,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_timeout,"['unfold', 'intuition', 'eapply', 'eauto', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'repeat', 'rewrite_update', 'auto', 'try', 'try', 'eauto', 'eapply', 'intuition', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'exfalso', 'eapply', 'eauto', 'simpl', 'repeat', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'auto']",1,4,0,3,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,lifted_log_matching_host,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'repeat', 'auto', 'match', 'rewrite', 'auto', 'match', 'rewrite', 'eauto']",0,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,lifted_log_matching_nw,"['intros', 'find_apply_lem_hyp', 'unfold', 'break_and', 'match', 'conclude', 'simpl', 'eapply', 'eexists', 'eauto', 'conclude', 'eauto', 'intuition', 'rewrite', 'eapply', 'eauto', 'rewrite', 'auto', 'rewrite', 'eapply', 'eauto', 'rewrite', 'auto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_append_entries,"['unfold', 'intuition', 'unfold', 'intros', '{', 'intros', 'simpl', 'repeat', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'find_rewrite_lem', 'find_erewrite_lem', 'update_destruct_simplify', 'rewrite_update', 'try', 'eauto', 'destruct', 'eauto', 'subst', 'eapply', 'eauto', 'apply', 'eapply', 'eauto', 'eapply_prop', 'eauto', 'use_log_matching_nw', 'use_log_matching_nw', 'match', '[|solve[auto]] end.', 'unfold', 'intros', 'find_apply_hyp_hyp', 'intuition', 'eapply', 'eauto', 'eauto', 'eapply', 'eauto', 'eauto', 'use_log_matching_nw', 'use_log_matching_nw', 'eapply', 'eauto', '}', 'unfold', 'intros', 'simpl', 'repeat', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'find_rewrite_lem', 'find_erewrite_lem', 'find_apply_hyp_hyp', 'break_or_hyp', 'intuition', 'match', 'eauto', 'simpl', 'find_copy_apply_lem_hyp', 'exfalso', 'eauto']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_append_entries_reply,"['unfold', 'intuition', 'eapply', 'eauto', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'rewrite_update', 'auto', 'erewrite', 'auto', 'eapply', 'eauto', 'simpl', 'intros', 'find_apply_hyp_hyp', 'repeat', 'intuition', '[eauto with *|].', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition', 'intros', 'repeat', 'update_destruct_simplify', 'rewrite_update', 'auto', 'find_rewrite', 'auto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_request_vote,"['unfold', 'intuition', 'eapply', 'eauto', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'rewrite_update', 'auto', 'now', 'erewrite', 'eauto', 'eapply', 'eauto', 'simpl', 'intros', 'find_apply_hyp_hyp', 'repeat', 'intuition', '[eauto with *|].', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition', 'intros', 'repeat', 'update_destruct_simplify', 'rewrite_update', 'auto', 'now']",2,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_request_vote_reply,"['unfold', 'intuition', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'find_rewrite_lem', 'simpl', 'update_destruct_simplify', 'rewrite_update', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'subst', 'rewrite', 'apply', 'auto', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'update_destruct_simplify', 'rewrite_update', 'find_eapply_lem_hyp', 'eauto', 'break_or_hyp', 'repeat', 'eauto', 'break_and', 'subst', 'rewrite', 'find_rewrite_lem', 'pose', 'repeat', 'match', 'eauto', 'repeat', 'eauto']",3,2,1,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,doLeader_messages,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_do_generic_server,"['unfold', 'intuition', 'eapply', 'eauto', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'rewrite_update', 'auto', 'find_rewrite', 'auto', 'erewrite', 'find_rewrite', 'auto', 'eapply', 'eauto', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'rewrite_update', 'auto', 'find_rewrite', 'auto']",1,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_state_same_packet_subset,"['unfold', 'intuition', 'eapply', 'eauto', 'intros', 'find_higher_order_rewrite', 'auto', 'eapply', 'eauto', 'intros', 'find_higher_order_rewrite', 'auto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_reboot,"['unfold', 'intuition', 'eapply', 'eauto', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'rewrite_update', 'auto', 'find_rewrite', 'auto', 'eapply', 'eauto', 'try', 'intuition', 'find_higher_order_rewrite', 'update_destruct_simplify', 'rewrite_update', 'try', 'auto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,leaderLogs_entries_match_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogMatchingProof.json,lllmi,"['split', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,client_id_in_true_in_applied_entries,"['intros', 'unfold', 'induction', 'simpl', 'try', 'break_if', 'break_if', 'do_bool', 'intuition', 'try', 'do_bool', 'eauto', 'break_exists_exists', 'intuition']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,client_id_in_false_not_in_applied_entries,"['intros', 'unfold', 'induction', 'simpl', 'try', 'intuition', 'break_exists', 'intuition', 'break_if', 'try', 'do_bool', 'break_exists', 'break_if', 'try', 'intuition', 'do_bool', 'subst', 'eauto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,doGenericServer_applied_entries,"['intros', 'unfold', 'break_let', 'find_inversion', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'use_applyEntries_spec', 'subst', 'simpl', 'unfold', 'simpl', 'break_if', '[|rewrite applied_entries_safe_update', 'simpl', 'eauto', 'exists', 'simpl', 'intuition', 'do_bool', 'match', 'simpl', 'assert', 'concludes', 'intuition', '[find_rewrite', 'exists', 'simpl', 'intuition', 'pose', 'intuition', 'repeat', 'eauto', '[eexists', 'intuition', 'eauto', 'find_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'eexists', 'intuition', 'eauto', 'match', 'repeat', 'find_apply_lem_hyp', 'intuition', 'match', 'conclude', 'rewrite_update', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'match', 'find_apply_lem_hyp', 'break_exists_exists', 'repeat', 'rewrite', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'eauto', 'match', 'find_apply_lem_hyp', 'break_exists_exists', 'repeat', 'find_rewrite', 'erewrite', 'eauto', 'intuition', 'f_equal', 'f_equal', 'find_copy_apply_lem_hyp', 'eapply', 'eauto', 'intros', 'eapply_prop_hyp', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'eauto']",1,3,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,handleMessage_log,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', 'find_apply_lem_hyp', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'unfold', 'eexists', 'intuition', 'eauto', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'try', 'unfold', 'eexists', 'intuition', 'eauto', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'try', 'eexists', 'intuition', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'unfold', 'eexists', 'intuition', 'eauto', 'subst', 'unfold', 'eexists', 'intuition', 'eauto', 'right', 'repeat', 'eauto', 'reflexivity', 'repeat', 'do_in_app', 'intuition', 'unfold', 'eexists', 'intuition', 'eauto', 'right', 'repeat', 'eauto', 'reflexivity', 'find_apply_lem_hyp', 'unfold', 'eexists', 'intuition', 'eauto', 'find_apply_lem_hyp', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'unfold', 'eexists', 'intuition', 'eauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,handleInput_log,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', 'left', 'find_apply_lem_hyp', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'unfold', 'eexists', 'intuition', 'eauto', 'find_apply_lem_hyp', 'intuition', 'left', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'unfold', 'eexists', 'intuition', 'eauto', 'break_exists', 'intuition', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'try', 'unfold', 'eexists', 'intuition', 'eauto', 'simpl', 'intuition', 'subst', 'intuition', 'left', 'unfold', 'eexists', 'intuition', 'eauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,in_applied_entries_step_applied_implies_input_state',"['intros', 'match', 'intuition', 'left', 'unfold', 'repeat', 'subst', 'unfold', 'break_exists_exists', 'intuition', 'find_inversion', 'match', 'replace', 'let', 'auto', 'unfold', 'simpl', 'rewrite', 'clear', 'find_copy_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'simpl', 'eauto', 'simpl', 'find_copy_apply_lem_hyp', 'repeat', 'eauto', 'try', 'simpl', 'intuition', 'find_copy_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'break_exists', 'intuition', 'unfold', 'simpl', 'repeat', 'do_in_app', 'intuition', 'contradict', 'eexists', 'intuition', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'break_exists', 'intuition', 'eapply', 'eauto', '[destruct p', 'simpl', 'repeat', 'intuition', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'find_apply_lem_hyp', 'repeat', 'auto', 'unfold', 'repeat', 'subst', 'unfold', 'break_exists_exists', 'intuition', 'find_inversion', 'match', 'replace', 'let', 'auto', 'unfold', 'simpl', 'rewrite', 'clear', 'find_copy_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'simpl', 'eauto', 'simpl', 'find_copy_apply_lem_hyp', 'repeat', 'eauto', 'try', 'simpl', 'intuition', 'find_copy_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'break_exists', 'intuition', 'unfold', 'simpl', 'repeat', 'match', 'do_in_app', 'intuition', 'find_false', 'eexists', 'intuition', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'break_exists', 'intuition', 'find_apply_lem_hyp', 'match', 'eauto', '[|update_destruct', 'subst', 'eauto', 'rewrite_update', 'repeat', 'eauto', 'intuition', 'subst', 'repeat', 'eauto', 'find_false', 'unfold', 'break_exists_exists', 'intuition', 'match', 'auto', 'intros', 'simpl', 'update_destruct_max_simplify', 'auto']",1,2,0,0,11,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,in_applied_entries_step_applied_implies_input_state,"['intros', 'destruct', 'destruct', 'simpl', 'find_apply_lem_hyp', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,in_input_not_in_output_input_before_output,"['intros', 'induction', 'simpl', 'intuition', 'unfold', 'break_exists', 'simpl', 'intuition', 'unfold', 'break_exists', 'simpl', 'intuition', 'subst', 'unfold', 'simpl', 'left', 'do_bool', 'break_if', 'intuition', 'do_bool', 'auto', 'unfold', 'simpl', 'right', 'intuition', 'unfold', 'apply', 'intuition', 'find_false', 'unfold', 'break_match', 'subst', 'repeat', 'try', 'exists', 'intuition', 'conclude_using', 'conclude_using', 'find_false', 'unfold', 'break_exists_exists', 'intuition', 'eauto']",0,2,1,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,input_before_output_not_key_in_output_trace_snoc_key,"['intros', 'induction', 'simpl', 'unfold', 'simpl', 'left', 'break_if', 'repeat', 'intuition', 'unfold', 'simpl', 'right', 'intuition', 'unfold', 'apply', 'intuition', 'find_false', 'unfold', 'break_match', 'subst', 'repeat', 'try', 'exists', 'intuition', 'conclude_using', 'find_false', 'unfold', 'break_exists_exists', 'intuition', 'eauto']",0,3,1,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,output_implies_input_before_output,"['intros', 'pose', 'concludes', 'find_eapply_lem_hyp', 'eauto', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InputBeforeOutputProof.json,iboi,"['split', 'intros', 'eapply', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToLeaderProof.json,lift_no_append_entries_to_self,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToLeaderProof.json,no_append_entries_to_leader_invariant',"['unfold', 'intros', 'subst', 'find_copy_eapply_lem_hyp', 'eauto', 'find_false', 'find_eapply_lem_hyp', 'eauto', 'break_exists', 'find_eapply_lem_hyp', 'eauto', 'break_exists', 'eapply', 'eauto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToLeaderProof.json,noaetli,"['split', 'intros', 'apply', 'auto', 'intros', 'find_apply_lem_hyp', 'unfold', 'intros', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'subst', 'simpl', 'repeat', 'simpl', 'subst', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eauto']",3,1,1,0,2,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_trace_dec,"['unfold', 'intros', 'destruct', 'find_apply_lem_hyp', 'break_and', 'repeat', 'try', 'find_apply_lem_hyp', 'break_and', 'unfold', 'break_match', 'try', 'break_if', 'try', 'do_bool', 'break_and', 'do_bool', 'subst', 'left', 'exists', 'clean', 'break_and', 'do_bool', 'break_if', 'try', 'subst', 'intuition', 'find_reverse_rewrite', 'rewrite', 'auto', 'right', 'intro', 'break_exists', 'break_and', 'eapply', 'eauto', 'simpl', 'break_match', 'try', 'unfold', 'break_exists', 'find_eapply_lem_hyp', 'eauto', 'simpl', 'find_apply_lem_hyp', 'break_if', 'repeat', 'do_bool', 'break_if', 'congruence']",2,0,0,2,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_changed,"['intros', 'unfold', 'break_exists_exists', 'intuition', 'do_in_app', 'intuition', 'exfalso', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_list_split,"['intros', 'unfold', 'break_exists', 'do_in_app', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_list_empty,['intuition'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,doLeader_key_in_output_list,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,handleInput_key_in_output_list,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition', 'unfold', 'break_exists', 'simpl', 'intuition', 'congruence']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,deduplicate_log'_app,"['induction', 'intros', 'simpl', 'intuition', 'eauto', 'repeat', 'simpl', 'eauto', 'repeat', 'break_exists', 'eexists', 'f_equal', 'eauto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_trace_not_nil,"['unfold', 'simpl', 'intros', 'break_exists', 'intuition']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_trace_singleton_inv,"['unfold', 'intuition', 'break_exists', 'simpl', 'intuition', 'find_inversion', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_list_app_or,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_trace_inp_inv,"['unfold', 'intuition', 'break_exists_exists', 'simpl', 'intuition', 'find_inversion']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_list_not_leader_singleton,"['unfold', 'simpl', 'intuition', 'discriminate']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,handleInput_in_output_list,"['unfold', 'intuition', 'repeat', 'repeat', 'eauto', 'exfalso', 'eapply', 'eauto', 'exfalso', 'eapply', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_list_cons_or,"['unfold', 'simpl', 'intuition', 'find_inversion', 'auto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,assoc_Some_In,"['induction', 'simpl', 'intros', 'repeat', 'discriminate', 'find_inversion', 'auto', 'intuition']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,getLastId_Some_In,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,middle_app_assoc,"['induction', 'intros', 'simpl', 'auto']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,deduplicate_log'_snoc_drop_keys,"['induction', 'simpl', 'intuition', 'repeat', 'repeat', 'do_bool', 'omega', 'auto', 'discriminate', 'f_equal', 'destruct', 'repeat', 'find_injection', 'eapply', 'auto', 'now', 'eapply', 'eauto', 'rewrite', 'auto', 'eauto', 'f_equal', 'destruct', 'repeat', 'discriminate', 'eapply', 'eauto', 'rewrite', 'auto']",0,1,1,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,deduplicate_log'_snoc_drop_es,"['induction', 'simpl', 'intuition', 'repeat', 'eauto', 'repeat', 'f_equal', 'subst', 'eapply', 'eauto', 'now', 'subst', 'do_bool', 'eapply', 'eauto', 'auto', 'f_equal', 'subst', 'eapply', 'eauto', 'now']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,deduplicate_log_snoc_drop,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,deduplicate_log_snoc_split,"['intros', 'eapply', 'eauto', 'intros', 'simpl', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,execute_log_app,"['unfold', 'intros', 'rewrite', 'auto']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,applyEntry_stateMachine_correct,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'rewrite', 'simpl', 'repeat', 'simpl', 'congruence']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,deduplicate_log_cases,"['intros', 'destruct', 'left', 'find_apply_lem_hyp', 'break_if', 'repeat', 'do_bool', 'try', 'intuition', 'right', 'match', '[|intuition', 'eauto', 'intros', 'find_eapply_lem_hyp', 'eauto', 'simpl', 'break_if', 'repeat', 'intuition', 'try']",0,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,assoc_None,"['intros', 'induction', 'simpl', 'intuition', 'subst', 'break_if', 'congruence', 'break_match', 'subst', 'break_if', 'try', 'auto']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,getLastId_None,"['intros', 'unfold', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,cacheApplyEntry_output_correct,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'intuition', 'do_bool', 'subst', 'eauto', 'eapply', 'eauto', 'do_bool', 'assert', 'intros', 'assert', 'omega', 'eapply', 'eauto', 'intros', 'find_apply_hyp_hyp', 'break_exists', 'break_and', 'repeat', 'discriminate']",3,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,cacheApplyEntry_stateMachine_correct,"['intros', 'unfold', 'repeat', 'repeat', 'find_apply_hyp_hyp', 'break_exists', 'break_and', 'erewrite', 'eauto', 'do_bool', 'omega', 'find_apply_hyp_hyp', 'break_exists', 'break_and', 'erewrite', 'eauto', 'do_bool', 'omega', 'find_copy_apply_hyp_hyp', 'break_exists', 'break_and', 'pose', 'intuition', 'break_exists', 'intuition', 'repeat', 'do_bool', 'assert', 'omega', 'eapply', 'eauto', 'pose', 'intuition', 'break_exists', 'intuition', 'repeat', 'eapply_prop_hyp', 'break_exists', 'break_and', 'repeat', 'discriminate', 'eapply', 'eauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,deduplicate_log_In_if,"['unfold', 'intros', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,applyEntry_clientCache,"['unfold', 'intros', 'repeat', 'repeat', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,getLastId_ext,"['unfold', 'intros', 'congruence']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,cacheAppliedEntry_clientCache_preserved,"['intros', 'unfold', 'repeat', 'try', 'simpl', 'repeat', 'eauto', 'do_bool', 'unfold', 'repeat', 'find_inversion', 'unfold', 'simpl', 'destruct', 'subst', 'rewrite', 'find_rewrite', 'find_inversion', 'eauto', 'rewrite', 'auto', 'repeat', 'eauto', 'unfold', 'repeat', 'find_inversion', 'unfold', 'simpl', 'destruct', 'subst', 'repeat', 'congruence', 'rewrite', 'auto', 'repeat', 'eauto']",1,1,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,cacheAppliedEntry_clientCache_nondecreasing,"['intros', 'eapply', 'eauto', 'break_exists', 'intuition', 'repeat', 'find_inversion', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,cacheApplyEntry_spec,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,applyEntries_spec,"['induction', 'intros', 'simpl', 'find_inversion', 'auto', 'repeat', 'find_inversion', 'find_apply_hyp_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,output_correct_prefix,"['intros', 'find_apply_lem_hyp', 'break_exists', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,doGenericServer_output_correct,"['intros', 'find_copy_apply_lem_hyp', 'pose', 'match', 'nwState', 'concludes', 'simpl', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'intuition', 'unfold', 'break_let', 'find_inversion', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eapply', 'eauto', 'rewrite', 'eapply', 'eauto', 'break_if', 'do_bool', 'erewrite', 'eauto', 'match', 'conclude_using', 'intuition', 'simpl', 'unfold', 'simpl', 'find_rewrite', 'auto', 'unfold', 'break_exists', 'intuition', 'repeat', 'eapply', 'eauto', 'intros', 'find_copy_apply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'apply', 'eauto', 'try', 'find_copy_apply_lem_hyp', 'unfold', 'simpl', 'match', 'eapply_prop_hyp', 'eauto', 'intuition', 'do_bool', 'erewrite', 'eauto', 'match', 'conclude_using', 'intuition', 'simpl', 'unfold', 'simpl', 'find_rewrite', 'auto', 'unfold', 'break_exists', 'intuition', 'repeat', 'eapply', 'eauto', 'intros', 'find_copy_apply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'apply', 'eauto', 'try', 'find_copy_apply_lem_hyp', 'unfold', 'simpl', 'match', 'eapply_prop_hyp', 'eauto', 'intuition', 'unfold', 'simpl', 'intros', 'subst', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'break_exists', 'intuition', 'repeat', 'match', 'auto', 'intros', 'find_apply_lem_hyp', 'eauto']",1,3,0,2,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,in_output_trace_step_output_correct,"['intros', 'match', 'unfold', 'repeat', 'repeat', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'exfalso', 'eapply', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'find_copy_eapply_lem_hyp', 'simpl', 'rewrite_update', 'eauto', 'intermediate_networks', 'find_copy_apply_lem_hyp', 'eapply', 'eauto', 'unfold', 'repeat', 'repeat', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'exfalso', 'eapply', 'eauto', 'find_apply_lem_hyp', 'intuition', 'exfalso', 'eapply', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'find_copy_eapply_lem_hyp', 'simpl', 'rewrite_update', 'eauto', 'intermediate_networks', 'find_copy_apply_lem_hyp', 'eapply', 'eauto', 'exfalso', 'eauto', 'exfalso', 'eauto', 'exfalso', 'eauto', 'exfalso', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,output_correct,"['intros', 'pose', 'repeat', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputCorrectProof.json,oci,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_init,"['unfold', 'intros', 'discriminate']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_preserved,"['unfold', 'intuition', 'repeat', 'auto', 'unfold', 'specialize', 'break_match', 'eauto', 'omega']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,handleClientRequest_nextIndex_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'try', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_client_request,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,handleTimeout_nextIndex_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'try', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_timeout,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,handleAppendEntries_nextIndex_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'try', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_append_entries,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,handleAppendEntriesReply_nextIndex,"['unfold', 'intros', 'repeat', 'repeat', 'do_bool', 'simpl', 'intuition', 'congruence']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_append_entries_reply,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'erewrite', 'find_copy_apply_lem_hyp', 'auto', 'intuition', 'repeat', 'auto', 'destruct', 'subst', 'rewrite', 'unfold', 'apply', 'auto', '{', 'destruct', 'simpl', 'omega', 'pose', 'unfold', 'eapply_prop_hyp', 'simpl', 'eauto', 'apply', 'auto', 'apply', 'auto', '}', 'rewrite', 'auto', 'destruct', 'subst', 'rewrite', 'unfold', 'apply', 'auto', 'rewrite', 'auto', 'auto']",2,2,2,2,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,handleRequestVote_nextIndex_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_request_vote,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,handleRequestVoteReply_matchIndex,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_request_vote_reply,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'find_copy_apply_lem_hyp', 'unfold', 'erewrite', 'intuition', 'repeat', 'auto', 'unfold', 'simpl', 'auto', 'auto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,doLeader_nextIndex_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'auto', 'try']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_do_leader,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,doGenericServer_nextIndex_preserved,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_do_generic_server,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_state_same_packet_subset,"['unfold', 'simpl', 'intros', 'repeat', 'auto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_reboot,"['unfold', 'simpl', 'intros', 'subst', 'repeat', 'update_destruct_simplify', 'unfold', 'simpl', 'omega', 'auto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nextIndex_safety_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NextIndexSafetyProof.json,nisi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_client_request,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'repeat', 'destruct', 'subst', 'rewrite', 'auto', 'rewrite', 'eauto', 'auto']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_preserved,"['unfold', 'intros', 'intuition', 'repeat', 'auto']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_timeout,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'find_apply_lem_hyp', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_append_entries,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'find_apply_lem_hyp', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,handleAppendEntriesReply_matchIndex,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'do_bool', 'auto', 'congruence']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_append_entries_reply,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'erewrite', 'find_copy_apply_lem_hyp', 'auto', 'intuition', 'repeat', 'auto', 'repeat', 'destruct', 'subst', 'rewrite', 'apply', 'auto', '{', 'destruct', 'simpl', 'omega', 'pose', 'unfold', 'eapply_prop_hyp', 'simpl', 'eauto', 'apply', 'auto', 'apply', 'auto', '}', 'rewrite', 'auto', 'auto']",2,2,1,2,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_request_vote,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'find_apply_lem_hyp', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,handleRequestVoteReply_matchIndex,"['unfold', 'intros', 'repeat', 'repeat', 'auto', 'simpl', 'try']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_request_vote_reply,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'pose', 'erewrite', 'intuition', 'repeat', 'auto', 'repeat', 'destruct', 'subst', 'rewrite', 'auto', 'rewrite', 'unfold', 'simpl', 'omega', 'auto']",2,2,0,2,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_do_leader,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'find_apply_lem_hyp', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_do_generic_server,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'find_apply_lem_hyp', 'eauto', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_state_same_packet_subset,"['unfold', 'simpl', 'intros', 'repeat', 'auto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_reboot,"['unfold', 'simpl', 'intros', 'subst', 'repeat', 'update_destruct_simplify', 'unfold', 'simpl', 'omega', 'auto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,match_index_sanity_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexSanityProof.json,matchisi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_do_leader,"['unfold', 'intros', 'unfold', 't']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_client_request,"['unfold', 'intros', 'unfold', 't']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_timeout,"['unfold', 'intros', 'unfold', 't']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_append_entries,"['unfold', 'intros', 'unfold', 't']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_append_entries_reply,"['unfold', 'intros', 'unfold', 't']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_request_vote,"['unfold', 'intros', 'unfold', 't', 'exfalso', 'find_apply_hyp_hyp', 'congruence']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_request_vote_reply,"['unfold', 'intros', 'unfold', 't']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_do_generic_server,"['unfold', 'intros', 'unfold', 't', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_state_same_packet_subset,"['unfold', 'intros', 'repeat', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_reboot,"['unfold', 'intros', 'repeat', 'simpl', 'subst', 'unfold', 'break_if', 'simpl', 'eauto', 'discriminate']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_init,"['unfold', 'simpl', 'intros', 'discriminate']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,candidates_vote_for_selves_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidatesVoteForSelvesProof.json,cvfsi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,candidates_vote_for_selves_l_invariant,"['intros', 'eapply', '[exact candidates_vote_for_selves_invariant|eauto].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleClientRequest_rvr,"['intros', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleTimeout_rvr,"['intros', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'find_apply_hyp_hyp', 'in_crush', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleAppendEntries_rvr,"['intros', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'find_apply_hyp_hyp', 'in_crush', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleAppendEntriesReply_rvr,"['intros', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'find_apply_hyp_hyp', 'in_crush', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_client_request,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'eauto', 'try', 'unfold', 'intros', 'simpl', 'repeat', 'unfold', 'repeat', 'subst', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'assert', 'repeat', 'repeat', 'unfold', 'repeat', 'subst', 'repeat', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'unfold', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'eauto']",4,2,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_timeout,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'repeat', 'repeat', 'simpl', 'auto', 'congruence', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'repeat', 'repeat', 'simpl', 'auto', 'repeat', 'subst', 'intuition', 'congruence', 'unfold', 'intros', 'simpl', 'assert', 'repeat', 'repeat', 'repeat', 'subst', 'repeat', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'unfold', 'simpl', 'repeat', 'subst', 'simpl', 'repeat', 'try', 'intuition']",4,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_append_entries,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'repeat', 'repeat', 'simpl', 'intuition', 'try', 'unfold', 'intros', 'simpl', 'repeat', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'assert', 'assert', 'in_crush', 'repeat', 'repeat', 'unfold', 'repeat', 'subst', 'repeat', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'eauto', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'try', 'eauto']",4,2,0,0,6,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_append_entries_reply,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'repeat', 'repeat', 'simpl', 'intuition', 'try', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'assert', 'assert', 'in_crush', 'repeat', 'repeat', 'repeat', 'subst', 'repeat', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'eauto', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'try', 'eauto']",4,2,0,0,6,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleRequestVote_true_votedFor,"['intros', 'unfold', 'repeat', 'try', 'try', 'simpl', 'subst', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,update_elections_data_requestVote_cronies,"['intros', 'unfold', 'repeat', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleRequestVote_votesReceived,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleRequestVote_currentTerm_same_or_follower,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,update_elections_data_requestVote_votes_preserved,"['intros', 'unfold', 'repeat', 'simpl', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,update_elections_data_requestVote_votedFor,"['intros', 'unfold', 'repeat', 'simpl', 'repeat', 'repeat', 'repeat', 'break_and', 'try', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_request_vote,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'break_if', 'simpl', 'subst', 'eauto', 'rewrite', 'find_copy_apply_lem_hyp', 'repeat', 'find_apply_lem_hyp', 'match', 'try', 'repeat', 'eauto', 'intuition', 'congruence', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'assert', 'in_crush', 'simpl', 'break_if', 'simpl', 'eauto', 'eapply', 'repeat', 'eauto', 'unfold', 'repeat', 'repeat', 'repeat', 'simpl', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'simpl', 'break_if', 'simpl', 'try', 'subst', 'find_apply_lem_hyp', 'intuition', 'repeat', 'apply', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'eauto', 'subst', 'simpl', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'try', 'eauto']",4,1,0,0,7,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleRequestVoteReply_candidate,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'congruence']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleRequestVoteReply_votesReceived,"['intros', 'unfold', 'repeat', 'simpl', 'subst', 'simpl', 'do_bool', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,handleRequestVoteReply_leader,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'try', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_request_vote_reply,"['unfold', 'intros', 'assert', 'assert', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'repeat', 'repeat', 'simpl', 'auto', 'try', 'unfold', 'repeat', 'intuition', 'congruence', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'simpl', 'subst', 'intuition', 'try', 'match', 'symmetry', 'find_copy_apply_lem_hyp', 'auto', 'repeat', 'unfold', 'intuition', 'unfold', 'match', 'intuition', 'match', 'match', 'intuition', 'match', 'symmetry', 'find_copy_apply_lem_hyp', 'auto', 'intuition', '[repeat find_rewrite', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'unfold', 'match', 'clear', 'match', '[|solve [repeat find_rewrite', 'in_crush', 'repeat', 'eauto', 'repeat', 'unfold', 'eauto', 'match', 'symmetry', 'find_copy_apply_lem_hyp', 'auto', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'unfold', 'match', 'clear', 'match', '[|solve [repeat find_rewrite', 'in_crush', 'repeat', 'eauto', 'repeat', 'unfold', 'eauto', 'match', 'symmetry', 'find_copy_apply_lem_hyp', 'auto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'match', 'symmetry', 'find_copy_apply_lem_hyp', 'auto', 'intuition', '[repeat find_rewrite', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'unfold', 'match', 'clear', 'match', '[|solve [repeat find_rewrite', 'in_crush', 'repeat', 'eauto', 'repeat', 'unfold', 'eauto', 'match', 'symmetry', 'find_copy_apply_lem_hyp', 'auto', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'unfold', 'match', 'clear', 'match', '[|solve [repeat find_rewrite', 'in_crush', 'repeat', 'eauto', 'repeat', 'unfold', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'match', 'in_crush', 'clear', 'find_apply_hyp_hyp', 'match', '[intros', 'repeat', 'auto', 'repeat', 'subst', 'unfold', 'repeat', 'subst', 'simpl', 'repeat', 'auto', 'unfold', 'intros', 'simpl', 'repeat', 'break_if', '[|eauto].', 'simpl', 'find_apply_lem_hyp', 'auto', 'intuition', 'subst', 'eauto']",4,2,0,0,7,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,doLeader_st,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,do_leader_rvr,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'in_crush', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_do_leader,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'simpl', 'intros', 'find_apply_lem_hyp', 'repeat', 'repeat', 'simpl', 'repeat', 'intuition', 'repeat', 'match', 'repeat', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'simpl', 'subst', 'eauto', 'match', 'repeat', 'simpl', 'find_apply_hyp_hyp', 'repeat', 'intuition', 'unfold', 'intros', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_apply_hyp_hyp', 'find_higher_order_rewrite', 'break_if', 'auto', 'subst', 'simpl', 'repeat', 'simpl', 'auto', 'unfold', 'intros', 'find_apply_lem_hyp', 'intuition', 'find_higher_order_rewrite', 'simpl', 'repeat', 'simpl', 'subst', 'eauto', 'repeat', 'match', 'reflexivity', 'clear', 'subst', 'eauto']",5,5,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,do_generic_server_pkts,"['intros', 'find_apply_hyp_hyp', 'intuition', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_do_generic_server,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'eauto', 'match', 'reflexivity', 'assert', 'reflexivity', 'clear', 'subst', 'use_applyEntries_spec', 'subst', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'repeat', 'repeat', 'subst', 'simpl', 'eauto', 'try', 'reflexivity', 'assert', 'reflexivity', 'clear', 'subst', 'intuition', 'unfold', 'intros', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_apply_hyp_hyp', 'find_higher_order_rewrite', 'repeat', 'subst', 'simpl', 'auto', 'find_rewrite', 'simpl', 'auto', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'use_applyEntries_spec', 'subst', 'simpl', 'eauto', 'match', 'reflexivity', 'clear', 'subst', 'intuition']",4,3,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_state_same_packet_subset,"['unfold', 'intros', 'unfold', 'intuition', 'unfold', 'intros', 'repeat', 'eauto', 'unfold', 'intros', 'repeat', 'eauto', 'unfold', 'intros', 'repeat', 'eauto', 'unfold', 'intros', 'repeat', 'eauto']",4,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_reboot,"['unfold', 'intros', 'subst', 'unfold', 'intuition', 'unfold', 'intros', 'repeat', 'simpl', 'repeat', 'simpl', 'intuition', 'unfold', 'intros', 'repeat', 'simpl', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'reflexivity', 'assert', 'reflexivity', 'clear', 'subst', 'intuition', 'unfold', 'intros', 'repeat', 'simpl', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'reflexivity', 'assert', 'reflexivity', 'clear', 'subst', 'intuition', 'unfold', 'intros', 'repeat', 'simpl', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'reflexivity', 'assert', 'reflexivity', 'clear', 'subst', 'intuition', 'discriminate']",3,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_init,"['unfold', 'unfold', 'simpl', 'intuition', 'discriminate']",0,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cronies_correct_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesCorrectProof.json,cci,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,findAtIndex_max_thing,"['intros', 'find_copy_apply_lem_hyp', 'pose', 'eapply_prop_hyp', 'unfold', 'intuition', 'match', 'conclude', 'find_apply_lem_hyp', 'eauto', 'omega', 'break_exists_exists', 'intuition', 'apply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,entries_max_thing,"['intros', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'find_rewrite', 'find_apply_lem_hyp', 'unfold', 'intuition', 'destruct', 'simpl', 'try', 'find_apply_hyp_hyp', 'intuition', 'find_inversion', 'find_apply_hyp_hyp', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,deghost_snd,"['intros', 'unfold', 'simpl', 'repeat', 'subst', 'simpl', 'repeat', 'reflexivity']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,lt_committed_committed,"['intros', 'unfold', 'break_exists_exists', 'intuition', 'unfold', 'intuition', 'unfold', 'rewrite', 'match', 'intuition']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,logs_contiguous,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'intuition', 'find_apply_hyp_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,entries_gt_0,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'destruct', 'simpl', 'try', 'find_inversion', 'find_apply_hyp_hyp', 'intuition', 'find_apply_hyp_hyp', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,entries_gt_pli,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'destruct', 'simpl', 'try', 'find_inversion', 'find_apply_hyp_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,sorted_app,"['induction', 'simpl', 'intros', 'intuition', 'apply', 'intuition', 'apply', 'intuition']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,handleInput_applied_entries,"['intros', 'symmetry', 'unfold', 'break_match', 'repeat', 'repeat', 'apply', 'eauto', 'apply', 'eauto', 'destruct', 'auto', 'simpl', 'break_if', 'auto', 'exfalso', 'do_bool', 'find_apply_lem_hyp', 'unfold', 'intuition', 'match', 'omega']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,doGenericServer_applied_entries,"['intros', 'unfold', 'break_let', 'find_inversion', 'use_applyEntries_spec', 'subst', 'simpl', 'unfold', 'simpl', 'break_if', '[|rewrite applied_entries_safe_update', 'simpl', 'eauto', 'do_bool', 'match', 'simpl', 'assert', 'concludes', 'intuition', 'find_rewrite', 'eauto', 'pose', 'intuition', 'repeat', 'eauto', 'match', 'repeat', 'find_apply_lem_hyp', 'intuition', 'match', 'conclude', 'rewrite_update', 'simpl', 'update_destruct_hyp', 'subst', 'rewrite_update', 'simpl', 'apply', 'erewrite', '[|omega].', 'eauto', 'apply', 'match', 'break_exists_exists', 'repeat', 'find_rewrite', 'f_equal', 'erewrite', 'eauto', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'find_copy_apply_lem_hyp', 'eapply', 'eauto', 'intros', 'eapply_prop_hyp', 'intuition']",1,4,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,applied_entries_monotonic',"['intros', 'match', 'unfold', 'repeat', 'subst', 'find_inversion', 'match', 'replace', 'let', 'auto', 'unfold', 'simpl', 'rewrite', 'clear', 'find_copy_apply_lem_hyp', 'find_copy_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'simpl', 'eauto', 'find_apply_lem_hyp', 'auto', '[|destruct p', 'find_rewrite', 'in_crush', 'unfold', 'simpl', 'unfold', 'simpl', 'match', 'repeat', 'repeat', 'eauto', 'unfold', 'repeat', 'subst', 'find_inversion', 'match', 'replace', 'let', 'auto', 'unfold', 'simpl', 'rewrite', 'clear', 'find_copy_apply_lem_hyp', 'find_copy_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'simpl', 'eauto', 'find_apply_lem_hyp', 'auto', 'unfold', 'simpl', 'unfold', 'simpl', 'match', 'repeat', 'repeat', 'eauto', 'exists', 'intuition', 'exists', 'intuition', 'exists', 'intuition', 'exists', 'rewrite', 'apply', 'intros', 'unfold', 'update_destruct_max_simplify', 'auto']",2,3,1,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,applied_entries_monotonic,"['intros', 'find_eapply_lem_hyp', 'eauto', 'break_exists', 'find_rewrite', 'in_crush']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppliedEntriesMonotonicProof.json,aemi,"['split', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_nw_weaken,"['intros', 'unfold', 'intros', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'subst', 'try', 'break_exists', 'intuition', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,lift_logs_sorted,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'simpl', 'break_match', 'eauto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,lift_nextIndex_safety,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,nextIndex_sanity,"['intros', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'assert', 'unfold', 'match', 'intuition', 'unfold', 'specialize', 'unfold', 'intuition', 'match', 'unfold', 'repeat', 'intuition', 'break_exists_exists', 'intuition', 'apply', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,update_elections_data_requestVoteReply_leaderLogs,"['unfold', 'intros', 'repeat', 'auto', 'simpl', 'intuition']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,contiguous_log_property,"['red', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,leaderLogs_contiguous,"['intros', 'pattern', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_appendEntriesReply,"['red', 'unfold', 'intros', 'intuition', 'find_apply_lem_hyp', 'subst', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'find_eapply_lem_hyp', 'subst', 'intuition', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'prove_in', 'copy_eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_requestVote,"['red', 'unfold', 'intros', 'intuition', 'find_apply_lem_hyp', 'subst', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'rewrite', 'eauto', 'find_eapply_lem_hyp', 'subst', 'intuition', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'prove_in', 'copy_eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'rewrite', 'eauto', 'find_false', 'subst', 'simpl', 'subst', 'repeat', 'eauto']",3,3,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_requestVoteReply,"['red', 'unfold', 'intros', 'intuition', 'subst', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'repeat', '[match goal with | H : In _ (log _ ) |- _ => erewrite handleRequestVoteReply_log', 'eauto', 'erewrite', 'eauto', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'apply', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'prove_in', 'copy_eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'apply', 'eauto']",3,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_timeout,"['red', 'unfold', 'intros', 'intuition', 'find_apply_lem_hyp', 'subst', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'rewrite', 'eauto', 'intuition', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'rewrite', 'eauto', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_false', 'repeat', 'repeat', 'eauto']",3,3,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_doGenericServer,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'intuition', 'find_apply_lem_hyp', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'find_apply_lem_hyp', 'subst', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,doLeader_spec,"['intros', 'unfold', 'break_match', 'try', 'simpl', 'intuition', 'break_if', 'try', 'simpl', 'intuition', 'find_inversion', 'simpl', 'do_in_map', 'subst', 'simpl', 'find_inversion', 'intuition', 'match', 'break_match', 'simpl', 'right', 'left', 'eauto', 'destruct', 'intuition', 'right', 'right', 'exists', 'match', 'repeat', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_doLeader,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'intuition', 'unfold', 'intros', 'simpl', 'find_apply_lem_hyp', 'find_higher_order_rewrite', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'break_or_hyp', 'unfold', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'subst', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', '{', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'subst', 'unfold', 'find_apply_lem_hyp', 'intuition', 'eapply_prop_hyp', 'break_exists_exists', 'intuition', 'match', 'intuition', 'eauto', '[find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'rewrite', 'eauto', 'intros', 'eapply', 'eauto', 'break_exists', 'break_and', 'subst', 'unfold', 'find_apply_lem_hyp', 'break_and', 'find_apply_hyp_hyp', 'match', 'destruct', 'destruct', 'break_and', 'destruct', 'intuition', 'exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'auto', 'rewrite', 'rewrite', 'eauto', 'unfold', 'simpl', 'find_rewrite', 'eapply', 'omega', 'eauto', 'left', 'intuition', 'match', 'find_apply_lem_hyp', 'intuition', 'subst', 'match', 'eauto', 'omega', 'unfold', 'simpl', 'find_rewrite', 'do_in_app', 'intuition', 'find_copy_apply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'eauto', 'omega', 'exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'auto', 'rewrite', 'rewrite', 'eauto', 'unfold', 'simpl', 'find_rewrite', 'apply', 'omega', 'eauto', 'right', 'find_apply_lem_hyp', 'left', 'exists', 'intuition', 'subst', 'match', 'eauto', 'omega', 'unfold', 'simpl', 'find_rewrite', 'assert', 'apply', 'repeat', 'eauto', 'eapply', 'eauto', 'try', 'intros', 'match', 'simpl', 'eapply', 'repeat', 'eauto', 'eapply', 'eauto', 'exists', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'apply', 'rewrite', 'eauto', 'unfold', 'simpl', 'find_rewrite', 'assert', 'apply', 'repeat', 'eauto', 'apply', 'auto', '{', 'right', 'left', 'find_apply_lem_hyp', 'exists', 'intuition', 'subst', 'match', '[unfold ghost_data in *', 'simpl', 'find_rewrite_lem', 'assert', 'apply', 'repeat', 'eauto', 'eapply', 'eauto', 'try', 'intros', 'match', 'simpl', 'eapply', 'repeat', 'eauto', 'eapply', 'eauto', 'left', 'intros', 'eapply', 'eauto', '}', 'exfalso', 'break_exists', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'break_exists', 'unfold', 'simpl', 'congruence', '}']",3,5,3,2,7,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_init,"['unfold', 'red', 'intuition', 'unfold', 'intros', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_state_same_packets_subset,"['red', 'unfold', 'intuition', 'unfold', 'intros', 'repeat', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_reverse_higher_order_rewrite', 'auto', 'unfold', 'intros', 'find_apply_hyp_hyp', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'subst', 'repeat', 'auto']",3,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_reboot,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'intuition', 'subst', 'unfold', 'intros', 'repeat', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'unfold', 'simpl', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'simpl', 'auto', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'auto', 'unfold', 'intros', 'find_reverse_rewrite', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'subst', 'repeat', 'auto', 'repeat', 'simpl', 'auto', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'auto']",3,4,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_inductive_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_invariant,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,logs_leaderLogs_nw_invariant,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogsLeaderLogsProof.json,llli,"['split', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedCommitIndexMatchingProof.json,lastApplied_commitIndex_match_invariant,"['intros', 'find_copy_apply_lem_hyp', 'unfold', 'find_copy_apply_lem_hyp', 'unfold', 'find_copy_apply_lem_hyp', 'unfold', 'unfold', 'intuition', 'simpl', 'unfold', 'intuition', 'simpl', 'match', 'forward', 'intuition', 'find_apply_hyp_hyp', 'omega', 'eapply', '[|eapply_prop maxIndex_commitIndex].', 'simpl', 'omega', 'break_exists', 'intuition', 'match', '[intros', 'subst', 'auto', 'eapply_prop', 'unfold', 'intuition', 'simpl', 'intuition', 'unfold', 'intuition', 'simpl', 'match', 'forward', 'intuition', 'find_apply_hyp_hyp', 'omega', 'eapply', '[|eapply_prop maxIndex_lastApplied].', 'simpl', 'omega', 'break_exists', 'intuition', 'match', '[intros', 'subst', 'auto', 'eapply_prop', 'unfold', 'intuition', 'simpl', 'intuition']",0,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedCommitIndexMatchingProof.json,commitIndex_lastApplied_match_invariant,"['intros', 'find_copy_apply_lem_hyp', 'unfold', 'find_copy_apply_lem_hyp', 'unfold', 'find_copy_apply_lem_hyp', 'unfold', 'unfold', 'intuition', 'simpl', 'unfold', 'intuition', 'simpl', 'match', 'forward', 'intuition', 'find_apply_hyp_hyp', 'omega', 'eapply', '[|eapply_prop maxIndex_lastApplied].', 'simpl', 'omega', 'break_exists', 'intuition', 'match', '[intros', 'subst', 'auto', 'eapply_prop', 'unfold', 'intuition', 'simpl', 'intuition', 'unfold', 'intuition', 'simpl', 'match', 'forward', 'intuition', 'find_apply_hyp_hyp', 'omega', 'eapply', '[|eapply_prop maxIndex_commitIndex].', 'simpl', 'omega', 'break_exists', 'intuition', 'match', '[intros', 'subst', 'auto', 'eapply_prop', 'unfold', 'intuition', 'simpl', 'intuition']",0,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedCommitIndexMatchingProof.json,lastApplied_lastApplied_match_invariant,"['intros', 'find_copy_apply_lem_hyp', 'unfold', 'find_copy_apply_lem_hyp', 'unfold', 'find_copy_apply_lem_hyp', 'unfold', 'unfold', 'intuition', 'simpl', 'unfold', 'intuition', 'simpl', 'match', 'forward', 'intuition', 'find_apply_hyp_hyp', 'omega', 'eapply', '[|eapply_prop maxIndex_lastApplied].', 'simpl', 'omega', 'break_exists', 'intuition', 'match', '[intros', 'subst', 'auto', 'eapply_prop', 'unfold', 'intuition', 'simpl', 'intuition', 'unfold', 'intuition', 'simpl', 'match', 'forward', 'intuition', 'find_apply_hyp_hyp', 'omega', 'eapply', '[|eapply_prop maxIndex_lastApplied].', 'simpl', 'omega', 'break_exists', 'intuition', 'match', '[intros', 'subst', 'auto', 'eapply_prop', 'unfold', 'intuition', 'simpl', 'intuition']",0,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedCommitIndexMatchingProof.json,lacimi,"['split', 'exact', 'exact', 'exact', 'Defined']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,match_index_all_entries_init,"['unfold', 'simpl', 'intros', 'intuition']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleClientRequest_matchIndex_log,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'intuition', 'simpl', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,lifted_match_index_leader,"['intros', 'pose', 'find_rewrite_lem', 'concludes', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,lifted_match_index_sanity,"['intros', 'pose', 'find_rewrite_lem', 'concludes', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,lifted_append_entries_reply_sublog,"['intros', 'pose', 'unfold', 'find_apply_lem_hyp', 'eapply_prop_hyp', 'eauto', 'try', 'eauto', 'find_rewrite_lem', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleTimeout_matchIndex,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,allEntries_update_timeout,"['intros', 'update_destruct_simplify_hyp', 'unfold', 'repeat', 'auto', 'auto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleTimeout_sends_RV,"['unfold', 'intros', 'repeat', 'repeat', 'do_in_map', 'subst', 'eauto', 'do_in_map', 'subst', 'eauto', 'simpl', 'intuition']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,match_index_all_entries_timeout,"['unfold', 'simpl', 'intros', 'break_and', 'split', 'unfold', 'simpl', 'intros', 'repeat', 'apply', 'update_destruct_simplify_hyp', 'find_erewrite_lem', 'find_copy_apply_lem_hyp', 'intuition', 'try', 'find_erewrite_lem', 'repeat', 'eapply_prop_hyp', 'eauto', 'congruence', 'eapply_prop_hyp', 'eauto', 'congruence', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'repeat', 'apply', 'update_destruct_simplify_hyp', 'find_erewrite_lem', 'find_copy_apply_lem_hyp', 'intuition', 'try', 'eapply_prop_hyp', 'eauto', 'try', 'eapply_prop_hyp', 'eauto', 'congruence', 'do_in_map', 'find_eapply_lem_hyp', 'eauto', 'break_exists', 'subst', 'simpl', 'discriminate']",2,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleAppendEntries_post_leader_nop,"['unfold', 'intros', 'repeat', 'repeat', 'auto', 'try']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleAppendEntries_leader_was_leader,"['unfold', 'intros', 'repeat', 'repeat', 'auto', 'try']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,lifted_no_AE_to_leader,"['intros', 'pose', 'unfold', 'find_apply_lem_hyp', 'match', 'eauto', 'rewrite', 'rewrite', 'auto']",0,0,0,2,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,lifted_no_AE_to_self,"['intros', 'pose', 'unfold', 'find_apply_lem_hyp', 'match', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleAppendEntries_message,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'repeat', 'eauto', 'eexists', 'f_equal', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,not_empty_true_elim,"['unfold', 'intros', 'break_match', 'congruence']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,not_empty_false_elim,"['unfold', 'intros', 'break_match', 'congruence']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleAppendEntries_success_term,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,lifted_leader_sublog_nw,"['intros', 'pose', 'unfold', 'destruct', 'find_apply_lem_hyp', 'eapply_prop_hyp', 'eauto', 'try', 'try', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,appendEntries_sublog,"['intros', 'find_copy_eapply_lem_hyp', 'eauto', 'break_exists', 'break_and', 'subst', 'find_apply_lem_hyp', 'destruct', 'find_copy_apply_hyp_hyp', 'eapply', 'eauto', '[subst', 'auto', 'find_eapply_lem_hyp', 'auto', 'break_exists', 'break_and', 'pose', 'concludes', 'subst_max', 'concludes', 'break_and', 'subst', 'find_rewrite', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleAppendEntriesReply_spec,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'do_bool', 'intuition', 'unfold', 'break_match', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,update_nop_fst,"['intros', 'update_destruct_simplify_hyp', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleRequestVote_sends_RVR,"['unfold', 'intros', 'repeat', 'repeat', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleRequestVoteReply_spec,"['unfold', 'intros', 'repeat', 'repeat', 'subst', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,handleRequestVoteReply_spec',"['unfold', 'intros', 'repeat', 'repeat', 'do_bool', 'subst', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,doLeader_sends_AE,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'intuition', 'do_in_map', 'subst', 'unfold', 'repeat', 'simpl', 'eauto']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,match_index_all_entries_do_leader,"['unfold', 'intros', 'break_and', 'split', 'unfold', 'simpl', 'intros', 'repeat', 'match', 'auto', 'replace', 'auto', 'clear', 'rewrite', 'update_destruct_simplify_hyp', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'match', 'eauto', 'try', 'repeat', 'match', 'eauto', 'try', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'repeat', 'match', 'auto', 'replace', 'auto', 'clear', 'rewrite', 'find_copy_apply_lem_hyp', 'intuition', 'update_destruct_simplify_hyp', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'match', 'eauto', 'try', 'match', 'eauto', 'try', 'do_in_map', 'find_eapply_lem_hyp', '[|eauto].', 'break_exists', 'subst', 'simpl', 'congruence']",4,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,match_index_all_entries_do_generic_server,"['unfold', 'simpl', 'intros', 'break_and', 'split', 'unfold', 'simpl', 'intros', 'repeat', 'match', 'auto', 'replace', 'auto', 'clear', 'rewrite', 'update_destruct_simplify_hyp', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'match', 'eauto', 'try', 'repeat', 'match', 'eauto', 'try', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'repeat', 'match', 'auto', 'replace', 'auto', 'clear', 'rewrite', 'find_copy_apply_lem_hyp', 'intuition', 'update_destruct_simplify_hyp', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'match', 'eauto', 'try', 'match', 'eauto', 'try', 'do_in_map', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",2,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,match_index_all_entries_state_same_packet_subset,"['unfold', 'simpl', 'intros', 'break_and', 'split', 'unfold', 'intros', 'repeat', 'eauto', 'unfold', 'intros', 'find_apply_hyp_hyp', 'repeat', 'eauto']",4,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,match_index_all_entries_reboot,"['unfold', 'intros', 'break_and', 'subst', 'split', 'unfold', 'intros', 'repeat', 'match', 'auto', 'replace', 'auto', 'clear', 'rewrite', 'update_destruct_simplify_hyp', 'discriminate', 'repeat', 'eauto', 'unfold', 'intros', 'repeat', 'match', 'auto', 'replace', 'auto', 'clear', 'rewrite', 'update_destruct_simplify_hyp', 'discriminate', 'repeat', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,match_index_all_entries_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexAllEntriesProof.json,miaei,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_init,"['start', 'contradiction']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_client_request,"['start', 'eapply', 'eauto', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'unfold', 'break_exists_exists', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'intuition', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'find_inversion', 'exists', 'rewrite_update', 'simpl', 'find_copy_apply_lem_hyp', 'break_and', 'repeat', 'intuition', 'try', 'erewrite', 'eauto', 'eapply', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'unfold', 'break_exists_exists', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'intuition', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'unfold', 'break_exists_exists', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'intuition', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",0,0,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_timeout,"['start', 'eapply', 'eauto', 'repeat', 'assert', '{', 'destruct_update', 'simpl', 'find_rewrite_lem', 'eauto', 'eauto', '}', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', 'simpl', '[|auto].', 'subst', 'split', 'assert', 'intuition', 'find_rewrite', 'auto', 'exfalso', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'intro_refined_invariant', 'eapply_prop_hyp', 'simpl', 'omega', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'intros', 'find_rewrite', 'exfalso', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'intro_refined_invariant', 'eapply_prop_hyp', 'simpl', 'omega']",0,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_append_entries,"['start', 'eapply', 'eauto', 'repeat', 'destruct_update', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_apply_hyp_hyp', 'unfold', 'break_exists_exists', 'destruct_update', '[|auto].', 'simpl', 'subst', 'rewrite', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'congruence', 'subst', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'break_exists_exists', 'destruct_update', '[|auto].', 'simpl', 'subst', 'rewrite', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'congruence', 'find_apply_hyp_hyp', 'unfold', 'break_exists_exists', 'destruct_update', '[|auto].', 'simpl', 'subst', 'rewrite', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'congruence']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_append_entries_reply,"['start', 'eapply', 'eauto', 'repeat', 'assert', '{', 'destruct_update', 'eauto', '}', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', 'simpl', '[|auto].', 'subst', 'split', '[auto|].', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'unfold', 'intros', 'find_rewrite', 'discriminate']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_request_vote,"['start', 'eapply', 'eauto', 'repeat', 'assert', '{', 'destruct_update', 'simpl', 'find_rewrite_lem', 'eauto', 'eauto', '}', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', 'simpl', '[|auto].', 'subst', 'split', 'rewrite', 'auto', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'unfold', 'intros', 'find_rewrite', 'discriminate']",2,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_request_vote_reply,"['start', 'intro_refined_invariant', 'eapply', 'eauto', 'subst', 'repeat', 'find_rewrite_lem', 'simpl', 'destruct_update', 'find_rewrite_lem', 'eauto', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_do_leader,"['start', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eapply', 'eauto', 'find_higher_order_rewrite', 'assert', '{', 'destruct_update', 'simpl', 'eauto', '}', 'unfold', 'find_apply_lem_hyp', 'intuition', 'break_exists_exists', 'destruct_update', 'simpl', 'repeat', 'auto']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_do_generic_server,"['start', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eapply', 'eauto', 'find_higher_order_rewrite', 'assert', '{', 'destruct_update', 'simpl', 'assert', 'eauto', 'eauto', 'eauto', '}', 'unfold', 'find_apply_lem_hyp', 'intuition', 'break_exists_exists', 'destruct_update', 'simpl', 'repeat', 'auto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_state_same_packet_subset,"['start', 'eapply', 'eauto', 'repeat', 'assert', 'unfold', 'break_exists', 'break_and', 'exists', 'repeat', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,allEntries_candidateEntries_reboot,"['start', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eapply', 'eauto', 'repeat', 'unfold', 'destruct_update', 'simpl', 'find_apply_hyp_hyp', 'break_exists_exists', 'destruct_update', 'simpl', 'intuition', 'congruence']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesCandidateEntriesProof.json,aecei,"['constructor', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_init,"['start', 'split', 'unfold', 'intros', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,lifted_leader_sublog_invariant,"['pose', 'unfold', 'intuition', 'unfold', 'repeat', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,lifted_leader_sublog_nw_invariant,"['intros', 'pose', 'unfold', 'destruct', 'find_apply_lem_hyp', 'eapply_prop_hyp', 'eauto', 'try', 'try', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,invalid_index,"['intros', 'intro_refined_invariant', 'find_apply_lem_hyp', 'auto', 'find_rewrite', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_client_request,"['start_update', 'subst', 'find_copy_apply_lem_hyp', 'intuition', 'simpl', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'subst', 'simpl', 'eauto', 'contradict_maxIndex', 'enough', 'eapply', 'repeat', 'eauto', 'find_apply_lem_hyp', 'intuition', 'simpl', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'eauto', 'subst', 'enough', 'eapply', 'repeat', 'eauto', 'find_apply_lem_hyp', 'intuition', 'simpl', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'eauto', 'subst', 'enough', 'eapply', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'intuition', '[|exfalso', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'find_false', 'repeat', 'eauto', 'find_apply_lem_hyp', 'intuition', 'simpl', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'eauto', 'subst', 'enough', 'eapply', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'intuition', '[|exfalso', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'find_false', 'repeat', 'eauto', 'eauto']",0,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_unchanged,"['unfold', 'intros', 'find_higher_order_rewrite', 'do', 'rewrite_update', 'simpl', 'repeat', 'eauto']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_timeout,"['start_update', 'simpl', 'try', 'eauto', 'try', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'exfalso', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'find_false', 'repeat', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,appendEntries_haveNewEntries_false,"['intros', 'unfold', 'do_bool', 'intuition', '[unfold not_empty in *', 'break_match', 'subst', 'simpl', 'intuition', 'congruence', 'break_match', 'try', 'do_bool', 'find_apply_lem_hyp', 'intuition', 'assert', 'subst', 'simpl', 'intuition', 'congruence', 'find_eapply_lem_hyp', 'break_exists', 'intuition', 'find_copy_eapply_lem_hyp', 'eauto', 'match', 'eauto', 'repeat', 'find_eapply_lem_hyp', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_append_entries,"['start_update', 'simpl', 'match', 'intuition', 'repeat', 'simpl', 'intuition', 'subst', 'eauto', 'try', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'do_in_app', 'intuition', 'eauto', 'enough', 'eauto', 'apply', 'eapply', 'eauto', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'eapply', 'eauto', 'do_in_app', 'intuition', 'eapply', 'eauto', 'apply', 'eapply', 'eauto', 'find_apply_lem_hyp', 'enough', 'eauto', 'apply', 'eapply', 'eauto', 'eapply', 'eauto', 'do_in_app', 'intuition', 'eauto', 'match', 'intuition', 'repeat', 'simpl', 'intuition', 'subst', 'eauto', 'try', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'do_in_app', 'intuition', 'eauto', 'enough', 'eauto', 'apply', 'eapply', 'eauto', 'eapply', 'eauto', 'enough', 'eauto', 'apply', 'eapply', 'eauto', 'eapply', 'eauto', 'enough', 'eauto', 'apply', 'eapply', 'eauto', 'eapply', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'simpl', 'eauto', 'do_in_app', 'intuition', 'eauto', 'find_apply_hyp_hyp', 'intuition', '[|exfalso', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'find_false', 'repeat', 'eauto', 'assert', 'match', 'intuition', 'repeat', 'simpl', 'subst', 'intuition', 'eauto', 'find_rewrite_lem', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'apply', 'intuition', 'eauto', 'eauto', 'find_rewrite_lem', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'apply', 'intuition', 'eauto', 'eauto', 'find_rewrite_lem', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'apply', 'intuition', 'eauto', 'eauto', 'find_apply_hyp_hyp', 'intuition', '[|exfalso', 'do_in_map', 'subst', 'simpl', 'eapply', 'eauto', 'intuition', 'repeat', 'repeat', 'eauto', 'eauto']",0,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_append_entries_reply,"['start_update', 'simpl', 'try', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'exfalso', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'subst', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_request_vote,"['start_update', 'simpl', 'try', 'eauto', 'try', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'exfalso', 'subst', 'simpl', 'subst', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'try', 'repeat', 'eauto', 'contradict', 'repeat', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_request_vote_reply,"['start_update', 'simpl', 'try', 'eauto', 'try', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_do_leader,"['start_update', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'try', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_do_generic_server,"['start_update', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'try', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_state_same_packet_subset,"['start_update', 'simpl', 'repeat', 'eauto', 'repeat', 'find_apply_hyp_hyp', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_reboot,"['start_update', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,allEntries_log_matching_inductive_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogMatchingProof.json,aelmi,"['constructor', 'intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'assert', 'repeat', 'intuition', '[in_crush|]', 'exfalso', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'find_inversion', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'eauto', 'find_apply_lem_hyp', 'break_or_hyp', 'try', 'break_and', 'repeat', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'assert', 'find_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'in_crush', 'repeat', 'find_copy_apply_lem_hyp', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'break_or_hyp', 'try', 'break_and', 'repeat', 'eauto']",3,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_request_vote,"['red', 'unfold', 'intros', 'simpl', 'assert', 'repeat', 'intuition', '[in_crush|]', 'exfalso', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'find_inversion', 'find_copy_apply_lem_hyp', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'break_or_hyp', 'try', 'break_and', 'repeat', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'break_and', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'break_or_hyp', 'exfalso', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'try', 'find_apply_lem_hyp', 'eapply_prop_hyp', 'eauto', 'unfold', 'simpl', 'unfold', 'simpl', 'omega', 'do_in_map', 'remember', 'subst', 'simpl', 'intuition', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'break_or_hyp', 'eauto', 'do_in_map', 'subst', 'simpl', 'intuition']",3,4,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_client_request,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'break_or_hyp', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'eauto', 'find_apply_lem_hyp', 'subst', 'eauto', 'intuition']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_do_leader,"['red', 'unfold', 'intros', 'simpl', 'assert', 'intuition', 'do_in_map', 'subst', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'subst', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'break_or_hyp', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'break_and', 'repeat', 'eauto', 'intuition']",3,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'congruence']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,requestVote_maxIndex_maxTerm_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteMaxIndexMaxTermProof.json,rvmimti,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EndToEndLinearizability.json,raft_linearizable,"['intros', 'eapply', 'eauto', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TransitiveCommitProof.json,transitive_commit_invariant,"['unfold', 'intros', 'break_exists_name', 'exists', 'break_exists_name', 'exists', 'intuition', 'eauto', 'eapply', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TransitiveCommitProof.json,tci,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_client_request,"['unfold', 'start_proof', 'erewrite', 'rewrite', 'eauto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_timeout,"['unfold', 'start_proof', 'find_copy_eapply_lem_hyp', 'eauto', 'break_or_hyp', 'auto', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_append_entries,"['unfold', 'start_proof', 'rewrite', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_append_entries_reply,"['unfold', 'start_proof', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_request_vote,"['unfold', 'start_proof', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_apply_hyp_hyp', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_request_vote_reply,"['unfold', 'start_proof', 'find_eapply_lem_hyp', 'eauto', 'eapply', ""[|eapply handleRequestVoteReply_currentTerm'"", 'eauto', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_do_leader,"['unfold', 'start_proof', 'assert', 'auto', 'break_and', 'subst', 'erewrite', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_do_generic_server,"['unfold', 'start_proof', 'assert', 'auto', 'break_and', 'subst', 'erewrite', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_state_same_packet_subset,"['unfold', 'intros', 'repeat', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_reboot,"['unfold', 'start_proof', 'unfold', 'simpl', 'assert', 'auto', 'break_and', 'subst', 'eauto']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,votes_le_current_term_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesLeCurrentTermProof.json,vlcti,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'eauto', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'try', 'eauto', 'rewrite', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'intuition', 'try', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_request_vote,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'intuition', 'try', 'repeat', 'eauto', 'copy_eapply_prop_hyp', 'eauto', 'try', 'break_exists_exists', 'intuition', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'find_apply_lem_hyp', 'rewrite', 'intuition', 'eauto', 'repeat', 'subst', 'find_eapply_lem_hyp', 'eauto', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'find_apply_lem_hyp', 'intuition', 'eauto', 'repeat', 'subst', 'find_eapply_lem_hyp', 'eauto', 'rewrite', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'try', 'repeat', 'simpl', 'intuition', 'subst', 'exists', 'intuition', 'auto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'try', 'repeat', 'simpl', 'intuition', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'apply', 'try', 'auto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'try', 'subst', 'eauto', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'subst', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'congruence']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,votesReceived_moreUpToDate_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesReceivedMoreUpToDateProof.json,vrmutdi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,ghost_packet,"['unfold', 'simpl', 'intuition', 'apply', 'eexists', 'eauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_contiguous_nw_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'intuition', 'find_apply_lem_hyp', 'forward_nw_invariant', 'red', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_gt_0_nw_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'intuition', 'find_apply_lem_hyp', 'forward_nw_invariant', 'break_and', 'find_apply_hyp_hyp', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_sorted_nw_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'intuition', 'find_apply_lem_hyp', 'unfold', 'break_and', 'unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_gt_0_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'intuition', 'match', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_contiguous_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'break_and', 'intros', 'repeat', 'red', 'intuition', 'find_apply_hyp_hyp', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_sorted_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'break_and', 'match', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_match_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'break_and', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_match_nw_1_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'break_and', 'intros', 'repeat', 'match', 'break_and', 'match', 'match', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,entries_match_nw_host_invariant,"['intros', 'pose', 'forward_invariant', 'unfold', 'break_and', 'intros', 'repeat', 'forward_nw_invariant', 'break_and', 'match', 'match', 'repeat', 'break_and', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,allEntries_gt_0_invariant,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RefinedLogMatchingLemmasProof.json,rlmli,"['constructor', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_init,"['start', 'contradiction']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_unchanged,"['unfold', 'intros', 'repeat', 'repeat', 'subst', 'rewrite_update', 'simpl', 'repeat', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_client_request,['unchanged'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_timeout,['unchanged'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_append_entries,['unchanged'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_append_entries_reply,"['start_unchanged', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_request_vote,['unchanged'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,wonElection_length,"['unfold', 'intros', 'find_apply_lem_hyp', 'omega']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,pigeon_nodes,"['intros', 'eapply', 'apply', 'intros', 'apply', 'intros', 'apply', 'apply', 'assumption', 'assumption', 'apply', 'assumption']",2,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,contradiction_case,"['intros', 'unfold', 'find_false', 'simpl', 'find_apply_lem_hyp', 'intro_refined_invariant', 'break_or_hyp', 'repeat', 'break_exists', 'assert', 'intuition', 'break_exists', 'break_and', 'do', 'break_exists', 'break_and', 'intro_refined_invariant', 'do', 'intro_refined_invariant', 'eauto', 'assert', '{', 'eapply', 'intuition', 'apply', 'intuition', 'apply', 'intuition', '}', 'break_exists', 'break_and', 'find_apply_hyp_hyp', 'break_exists', 'break_and', 'intro_refined_invariant', 'apply_prop_hyp', 'find_apply_lem_hyp', 'simpl', 'intro_refined_invariant', 'intro_refined_invariant', 'break_or_hyp', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_request_vote_reply,"['start', 'repeat', 'repeat', 'rewrite_update', 'split', '[subst', 'auto', 'find_copy_eapply_lem_hyp', '[|eauto].', 'pose', 'eapply', '[|eauto].', 'intro_refined_invariant', 'intuition', 'match', 'eauto', 'apply_prop_hyp', 'auto', 'find_copy_apply_lem_hyp', 'intuition', 'unfold', 'simpl', 'subst', 'repeat', 'discriminate', 'find_apply_lem_hyp', 'congruence', 'subst', 'repeat', 'find_apply_lem_hyp', 'contradiction', 'apply_prop_hyp', 'auto', 'find_copy_apply_lem_hyp', 'intuition', 'unfold', 'simpl', 'subst', 'repeat', 'discriminate', 'find_apply_lem_hyp', 'congruence', 'subst', 'repeat', 'find_apply_lem_hyp', 'contradiction', 'subst', 'auto', 'exfalso', 'eapply', 'eauto', 'exfalso', 'eapply', 'eauto', 'eauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_do_leader,"['start_unchanged', 'find_rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_do_generic_server,"['start_unchanged', 'find_rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_state_same_packet_subset,"['start', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_reboot,"['start_update', 'eapply', 'unfold', 'try', 'simpl', 'eauto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,one_leaderLog_per_term_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderLogPerTermProof.json,ollpti,"['split', 'intros', 'intro_refined_invariant', 'red', 'eapply_prop']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_init,"['unfold', 'intros', 'subst', 'simpl', 'intuition']",2,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_update_elections_data_client_request,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_client_request,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'rewrite', 'eauto', 'eauto']",2,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_update_elections_data_timeout,"['unfold', 'intros', 'repeat', 'simpl', 'find_inversion', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_timeout,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'destruct', 'simpl', 'intuition', 'find_inversion', 'erewrite', 'eauto', 'eauto', 'eauto', 'eauto']",2,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_update_elections_data_AE,"['unfold', 'intros', 'repeat', 'subst', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_append_entries,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'rewrite', 'eauto', 'eauto']",2,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_append_entries_reply,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'simpl', 'eauto']",2,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_request_vote,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'unfold', 'repeat', 'simpl', 'intuition', 'repeat', 'eauto', 'erewrite', 'eauto', 'eauto']",2,1,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_update_elections_data_RVR,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_request_vote_reply,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'rewrite', 'eauto', 'eauto']",2,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_do_leader,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'match', 'rewrite', 'simpl', 'eauto', 'eauto']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_do_generic_server,"['unfold', 'intros', 'subst', 'simpl', 'find_higher_order_rewrite', 'update_destruct_simplify', 'match', 'rewrite', 'simpl', 'eauto', 'eauto']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_state_same_packet_subset,"['unfold', 'intros', 'subst', 'simpl', 'find_reverse_higher_order_rewrite', 'eauto']",2,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_reboot,"['unfold', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'match', 'rewrite', 'simpl', 'eauto', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,votesWithLog_sorted_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesWithLogSortedProof.json,vwlsi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_timeout,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'eapply', 'eauto', 'simpl', 'repeat', 'eauto', 'intros', 'do_in_app', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'exfalso', 'do_in_map', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence']",3,4,0,0,7,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_client_request,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'eapply', 'eauto', 'simpl', 'repeat', 'eauto', 'intros', 'do_in_app', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'exfalso', 'do_in_map', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence']",3,4,0,0,7,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_do_leader,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'eapply', 'eauto', 'simpl', 'repeat', 'eauto', 'intros', 'do_in_app', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'exfalso', 'do_in_map', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence']",3,4,0,0,7,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'eapply', 'eauto', 'simpl', 'repeat', 'eauto', 'intros', 'do_in_app', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'exfalso', 'do_in_map', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence']",3,4,0,0,7,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_reboot,"['red', 'unfold', 'intros', 'simpl', 'find_reverse_rewrite', 'find_apply_hyp_hyp', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'subst', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'repeat', 'intuition', 'eapply', '[|eapply StepFailure_reboot with (h0 := h) (failed := [h])]', 'eauto', 'simpl', 'repeat', 'eauto', 'f_equal', 'apply', 'intros', 'repeat', 'unfold', 'repeat', 'subst', 'eauto', 'congruence']",5,2,1,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,subset_reachable,"['intros', 'pose', 'match', 'eapply', '[|eauto].', 'destruct', 'simpl', 'subst', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', ""(exists (mkNetwork (nwPackets net' ++ [{| pSrc := pDst p"", 'pDst', 'pBody', 'repeat', 'intuition', 'eauto', 'repeat', 'break_exists_exists', 'intuition', 'repeat', 'eauto', 'eapply', 'eauto', 'simpl', 'repeat', 'apply', 'eauto', 'simpl', 'intros', 'repeat', 'do_in_app', 'intuition']",5,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,handleAppendEntries_reply_spec,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_append_entries,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', '[|repeat find_rewrite', 'in_crush', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'repeat', 'match', 'rewrite', 'auto', 'clear', 'eapply', 'simpl', 'repeat', 'eauto', 'simpl', 'repeat', 'eauto', 'try', 'eauto', 'intros', 'do_in_app', 'simpl', 'intuition', 'try', 'intuition', 'in_crush', 'subst', 'simpl', 'subst', 'unfold', 'find_eapply_lem_hyp', '[|eapply StepFailure_dup with (failed := [])]', 'eauto', 'remember', 'remember', 'unfold', 'simpl', 'match', 'subst', '(exists pli, plt, ci, n).', 'simpl', 'intuition', 'match', 'eauto', 'simpl', 'repeat', 'simpl', 'repeat', 'eauto', 'repeat', 'eauto', 'intros', 'do_in_app', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'subst', 'auto', 'f_equal', 'f_equal', 'destruct', 'simpl', 'f_equal', 'intuition', 'subst', 'find_apply_lem_hyp', 'auto', 'intuition', 'subst', 'auto']",3,4,0,1,6,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', '[|repeat find_rewrite', 'in_crush', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'repeat', 'match', 'rewrite', 'auto', 'clear', 'eapply', 'simpl', 'repeat', 'eauto', 'simpl', 'repeat', 'eauto', 'try', 'eauto', 'intros', 'do_in_app', 'simpl', 'intuition', 'try', 'intuition', 'in_crush', 'do_in_map', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",3,4,0,1,6,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_request_vote,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', '[|repeat find_rewrite', 'in_crush', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'repeat', 'match', 'rewrite', 'auto', 'clear', 'eapply', 'simpl', 'repeat', 'eauto', 'simpl', 'repeat', 'eauto', 'try', 'eauto', 'intros', 'do_in_app', 'simpl', 'intuition', 'try', 'intuition', 'in_crush', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'find_inversion', 'congruence']",3,4,0,1,7,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,append_entries_request_reply_correspondence_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'copy_eapply_prop_hyp', 'auto', '[|repeat find_rewrite', 'in_crush', 'unfold', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'break_exists_name', 'intuition', 'remember', 'remember', 'unfold', 'simpl', 'exists', 'subst', 'exists', 'simpl', 'intuition', 'repeat', 'match', 'rewrite', 'auto', 'clear', 'eapply', 'simpl', 'repeat', 'eauto', 'simpl', 'repeat', 'eauto', 'try', 'eauto', 'intros', 'do_in_app', 'simpl', 'intuition', 'try', 'intuition', 'in_crush']",3,3,0,1,6,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestReplyCorrespondenceProof.json,aerrci,"['split', 'intros', 'apply', 'auto', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",1,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedHostLogProof.json,eewchli,"['split', 'unfold', 'intros', 'apply', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleClientRequest_spec,"['intros', 'unfold', 'break_match', 'find_inversion', 'intuition', 'simpl', 'intuition', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_client_request,"['unfold', 'intros', 'subst', 'intuition', 'unfold', 'intros', 'simpl', 'eapply', 'try', 'repeat', 'unfold', 'repeat', 'simpl', 'destruct', 'subst', 'rewrite_update', 'unfold', 'repeat', 'simpl', 'simpl', 'find_inversion', 'find_apply_lem_hyp', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'rewrite_update', 'eapply', 'eauto', 'intuition', 'destruct', 'subst', 'rewrite_update', 'auto', 'repeat', 'simpl', 'auto', 'find_apply_lem_hyp', 'unfold', 'exists', 'intuition', 'rewrite_update', 'simpl', 'try', 'repeat', 'simpl', 'repeat', 'simpl', 'eauto', 'rewrite_update', 'find_apply_lem_hyp', 'eapply', 'eauto', 'intuition', 'destruct', 'subst', 'rewrite_update', 'auto', 'tuple_inversion', 'repeat', 'repeat', 'simpl', 'auto', 'unfold', 'intros', 'simpl', 'eapply', 'try', 'find_apply_lem_hyp', 'intuition', 'subst', 'simpl', 'eapply_prop_hyp', 'eauto', 'eapply', 'eauto', 'intuition', 'destruct', 'subst', 'rewrite_update', 'auto', 'unfold', 'repeat', 'simpl', 'auto', 'find_apply_hyp_hyp', 'intuition']",3,2,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,update_elections_data_timeout_leader_cronies_same,"['unfold', 'intros', 'repeat', 'subst', 'simpl', 'auto', 'unfold', 'repeat', 'try', 'repeat', 'simpl', 'unfold', 'congruence']",3,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleTimeout_only_sends_RequestVotes,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleTimeout_not_leader_inc_term,"['unfold', 'intros', 'simpl', 'repeat', 'try', 'repeat', 'auto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,update_elections_data_timeout_cronies,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'break_match', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleTimeout_preserves_candidateEntries,"['intros', 'destruct', 'unfold', 'simpl', 'find_rewrite', 'find_inversion', 'eapply', 'eauto', 'intros', 'repeat', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'unfold', 'break_exists', 'break_and', 'exists', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'split', 'match', 'apply', 'intuition', 'find_rewrite', 'auto', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_apply_lem_hyp', 'auto', 'simpl', 'omega', 'intros', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_apply_lem_hyp', 'auto', 'simpl', 'omega']",1,3,0,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_timeout,"['unfold', 'intros', 'subst', 'intuition', 'simpl', 'unfold', 'intros', 'eapply', 'try', 'repeat', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'simpl', 'find_erewrite_lem', 'find_rewrite_lem_by', 'find_apply_hyp_hyp', 'eauto', 'unfold', 'intros', 'simpl', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'break_or_hyp', 'eapply_prop_hyp', 'eauto', 'eauto', 'do_in_map', 'subst', 'simpl', 'eapply', 'eauto', 'break_exists', 'congruence']",3,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,update_elections_data_appendEntries_cronies_same,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleAppendEntries_term_same_or_type_follower,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleAppendEntries_preserves_candidate_entries,"['unfold', 'intros', 'break_exists', 'break_and', 'exists', 'split', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'destruct', 'subst', 'rewrite_update', 'auto', 'intros', 'rewrite', 'simpl', 'find_rewrite_lem', 'simpl', 'destruct', 'subst', 'rewrite_update', 'auto', 'find_apply_lem_hyp', 'intro', 'intuition', 'repeat', 'auto', 'discriminate']",2,2,0,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,is_append_entries_intro,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_append_entries,"['red', 'unfold', 'intros', 'subst', 'intuition', 'simpl', 'unfold', 'intros', 'eapply', 'eauto', 'repeat', 'find_rewrite_lem', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'eapply', 'eauto', 'find_copy_apply_lem_hyp', 'break_and', 'find_apply_hyp_hyp', 'intuition', 'unfold', 'intros', 'simpl', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eapply', 'eauto', 'subst', 'simpl', 'find_apply_lem_hyp', 'break_and', 'subst', 'exfalso', 'eauto']",3,3,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleAppendEntriesReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleAppendEntriesReply_preserves_candidate_entries,"['unfold', 'intros', 'break_exists', 'break_and', 'exists', 'split', 'rewrite', 'simpl', 'rewrite', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'intros', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'simpl', 'find_apply_lem_hyp', 'intuition', 'repeat', 'intuition', 'congruence']",2,2,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_append_entries_reply,"['red', 'unfold', 'intros', 'intuition', 'unfold', 'intros', 'simpl', 'eapply', 'eauto', 'repeat', 'find_rewrite_lem', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'unfold', 'find_apply_lem_hyp', 'break_and', 'repeat', 'find_apply_hyp_hyp', 'break_exists', 'exists', 'eauto', 'update_destruct', 'intuition', 'subst', 'rewrite_update', 'simpl', 'auto', 'repeat', 'intuition', 'congruence', 'rewrite_update', 'find_apply_hyp_hyp', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'prove_in', 'eapply', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'subst', 'auto', 'exfalso', 'do_in_map', 'find_eapply_lem_hyp', 'eauto', 'subst', 'simpl', 'find_rewrite', 'match', 'repeat', 'eauto']",3,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,update_elections_data_requestVote_cronies_same,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,advanceCurrentTerm_same_or_type_follower,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleRV_advanceCurrentTerm_preserves_candidateEntries,"['intros', 'unfold', 'break_exists', 'break_and', 'exists', 'split', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'simpl', 'rewrite', 'auto', 'intros', 'match', 'intuition', 'try', 'repeat', 'auto']",1,1,0,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleRequestVote_preserves_candidateEntries,"['unfold', 'intros', 'repeat', 'repeat', 'auto', 'eapply', 'eauto', 'intros', 'repeat', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'do_bool', 'intuition', 'congruence', 'unfold', 'break_exists', 'break_and', 'exists', 'simpl', 'split', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'rewrite', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'match', 'intuition', 'try', 'repeat', 'auto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,handleRequestVote_only_sends_RVR,"['unfold', 'intros', 'repeat', 'repeat', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_request_vote,"['red', 'unfold', 'intros', 'subst', 'intuition', 'simpl', 'unfold', 'intros', 'eapply', 'eauto', 'repeat', 'find_rewrite_lem', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'try', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'break_exists', 'discriminate']",3,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_request_vote_reply,"['red', 'unfold', 'intros', 'intuition', 'unfold', 'intros', 'simpl', 'eapply', 'eauto', 'repeat', 'find_rewrite_lem', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'match', 'find_copy_apply_lem_hyp', 'break_and', 'match', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'rewrite_update', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'eapply', 'eauto', 'repeat', 'eapply', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,doLeader_in_entries,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'intuition', 'do_in_map', 'unfold', 'simpl', 'subst', 'simpl', 'find_inversion', 'eauto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,doGenericServer_same_type,"['unfold', 'intros', 'repeat', 'repeat', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,doGenericServer_preserves_candidateEntries,"['intros', 'eapply', 'eauto', 'intros', 'repeat', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'repeat', 'simpl', 'auto', 'find_copy_apply_lem_hyp', 'break_and', 'auto', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_do_generic_server,"['red', 'unfold', 'intros', 'intuition', 'simpl', 'unfold', 'intros', 'eapply', 'eauto', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'find_copy_apply_lem_hyp', 'break_and', 'find_rewrite', 'repeat', 'auto', 'eauto', 'eauto', 'unfold', 'intros', 'simpl', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'find_copy_apply_lem_hyp', 'break_and', 'subst', 'simpl', 'find_apply_hyp_hyp', 'exfalso', 'find_rewrite', 'eauto']",3,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_state_same_packet_subset,"['red', 'unfold', 'intros', 'intuition', 'unfold', 'intros', 'repeat', 'apply', 'eauto', 'unfold', 'intros', 'find_apply_hyp_hyp', 'eapply_prop_hyp', 'eauto', 'apply', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,reboot_log_same,"['unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,reboot_preservers_candidateEntries,"['unfold', 'intros', 'break_exists', 'exists', 'break_and', 'rewrite', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'repeat', 'simpl', 'intuition', 'discriminate']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_reboot,"['red', 'unfold', 'intros', 'intuition', 'unfold', 'intros', 'repeat', 'eapply', 'eauto', 'subst', 'find_rewrite_lem', 'simpl', 'find_rewrite_lem', 'simpl', 'update_destruct', 'subst', 'rewrite_update', 'repeat', 'auto', 'find_apply_hyp_hyp', 'eauto', 'eauto', 'unfold', 'intros', 'repeat', 'eapply_prop_hyp', 'eauto', 'eapply', 'eauto', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_init,"['red', 'unfold', 'unfold', 'intuition', 'repeat', 'intuition']",0,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,candidate_entries_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateEntriesProof.json,cei,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,term_was_created_preserved,"['intros', 'unfold', 'break_exists_exists', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_append_entries,"['red', 'intros', 'unfold', 'intros', 'eapply', '[eapply_prop in_any_log_term_was_created|]', '[| intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'eauto', 'iae_case', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'try', 'repeat', 'eauto', 'repeat', 'do_in_app', 'intuition', 'try', 'eauto', 'find_eapply_lem_hyp', 'find_apply_hyp_hyp', 'intuition', 'match', 'eauto', 'subst', 'simpl', 'find_false', 'unfold', 'break_match', 'try', 'subst', 'repeat', 'eauto', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'eauto']",4,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_request_vote,"['red', 'intros', 'unfold', 'intros', 'eapply', '[eapply_prop in_any_log_term_was_created|]', '[| intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'eauto', 'iae_case', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'repeat', 'eauto', 'find_eapply_lem_hyp', 'find_apply_hyp_hyp', 'intuition', 'match', 'eauto', 'subst', 'simpl', 'find_false', 'unfold', 'break_match', 'try', 'subst', 'repeat', 'eauto', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'eauto']",4,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_append_entries_reply,"['red', 'intros', 'unfold', 'intros', 'eapply', '[eapply_prop in_any_log_term_was_created|]', '[| intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'iae_case', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'repeat', 'eauto', 'find_eapply_lem_hyp', 'find_apply_hyp_hyp', 'intuition', 'match', 'eauto', 'subst', 'simpl', 'intuition', 'repeat', 'destruct_update', 'simpl', 'eauto']",4,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_request_vote_reply,"['red', 'intros', 'unfold', 'intros', 'eapply', '[eapply_prop in_any_log_term_was_created|]', '[|intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'eapply', 'eauto', 'iae_case', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'eauto', 'find_apply_hyp_hyp', 'match', 'eauto', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eauto', 'subst', 'find_rewrite_lem', 'eauto']",4,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_client_request,"['red', 'intros', 'unfold', 'intros', 'iae_case', 'unfold', 'simpl', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'subst', 'repeat', 'try', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'subst', 'find_eapply_lem_hyp', 'eauto', 'match', 'break_exists_exists', 'repeat', 'repeat', 'rewrite', 'auto', 'simpl', 'rewrite', 'auto', 'cr_in_log_in_leader_log', 'cr_in_log_in_leader_log', 'find_apply_hyp_hyp', 'intuition', 'cr_in_aer_in_leader_log', 'do_in_map', 'subst', 'find_eapply_lem_hyp', 'eauto', 'simpl', 'intuition', 'find_false', 'unfold', 'break_match', 'try', 'repeat', 'eauto', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'find_rewrite_lem', 'cr_in_ll_in_leader_log', 'cr_in_ll_in_leader_log']",3,2,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_timeout,"['red', 'intros', 'unfold', 'intros', 'eapply', '[eapply_prop in_any_log_term_was_created|]', '[|intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'eauto', 'iae_case', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_false', 'unfold', 'break_match', 'try', 'repeat', 'eauto', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'eauto']",4,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_do_leader,"['red', 'intros', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eapply', '[eapply_prop in_any_log_term_was_created|]', '[|intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'iae_case', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'break_match', 'try', 'find_inversion', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'destruct_update', 'simpl', 'eauto']",4,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_do_generic_server,"['red', 'intros', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eapply', '[eapply_prop in_any_log_term_was_created|]', '[|intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'iae_case', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition', 'repeat', 'destruct_update', 'simpl', 'eauto']",4,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_state_same_packet_subset,"['red', 'intros', 'unfold', 'intros', 'unfold', 'iae_case', 'repeat', 'find_eapply_lem_hyp', 'eapply_prop_hyp', 'break_exists_exists', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'find_eapply_lem_hyp', 'eauto', 'eapply_prop_hyp', 'break_exists_exists', 'repeat', 'eauto', 'repeat', 'find_eapply_lem_hyp', 'eauto', 'eapply_prop_hyp', 'break_exists_exists', 'repeat', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_reboot,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'iae_case', 'eauto', 'repeat', 'destruct_update', 'simpl', 'find_apply_lem_hyp', 'eapply_prop_hyp', 'break_exists_exists', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'find_eapply_lem_hyp', 'eauto', 'eapply_prop_hyp', 'break_exists_exists', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'destruct_update', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'eapply_prop_hyp', 'break_exists_exists', 'repeat', 'destruct_update', 'simpl', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_init,"['red', 'unfold', 'intros', 'iae_case', 'intuition']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,in_any_log_term_was_created_invariant,"['intros', 'eapply', 'eauto', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/EveryEntryWasCreatedProof.json,eewci,"['split', 'unfold', 'intros', 'apply', 'eauto', 'intros', 'apply', 'auto']",3,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,maxIndex_le,"['intros', 'destruct', 'intuition', 'simpl', 'right', 'destruct', 'intuition', 'find_copy_eapply_lem_hyp', 'simpl', 'eauto', 'unfold', 'simpl', 'intuition', 'destruct', 'intuition', 'eauto', 'destruct', 'intuition', 'exfalso', 'repeat', 'do_bool', 'intuition', 'match', 'conclude_using', 'simpl', 'break_exists', 'intuition', 'subst', 'intuition', 'eapply', 'eauto']",0,1,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,sorted_app_sorted_app_in1_in2,"['intros', 'do_in_app', 'intuition', 'match', 'eauto', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,sorted_app_sorted_app_in1_in2_prefix,"['intros', 'do_in_app', 'intuition', 'find_eapply_lem_hyp', '[|eauto].', 'match', 'eauto', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,sorted_app_in2_in2,"['intros', 'do_in_app', 'intuition', 'match', 'eauto', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,term_ne_in_l2,"['intros', 'assert', 'eauto', 'find_apply_hyp_hyp', 'destruct', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'do_in_app', 'intuition', 'find_apply_hyp_hyp', 'intuition']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,Prefix_maxIndex_eq,"['intros', 'induction', 'simpl', 'intuition', 'break_match', 'intuition', 'subst', 'simpl', 'auto']",0,3,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,sorted_gt_maxIndex,"['intros', 'induction', 'simpl', 'intuition', 'destruct', 'simpl', 'intuition', 'match', 'intuition']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,handleAppendEntriesReply_currentTerm_leaderId,"['intros', 'unfold', 'repeat', 'try', 'simpl', 'do_bool', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'repeat', 'intuition', 'right', 'break_exists_exists', 'repeat', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_request_vote,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'destruct_update', 'simpl', 'eauto', 'try', 'find_apply_hyp_hyp', 'repeat', 'intuition', 'right', 'break_exists_exists', 'intuition', 'repeat', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto']",3,2,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,handleRequestVoteReply_log',['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'try', 'find_apply_hyp_hyp', 'repeat', 'intuition', 'right', 'break_exists_exists', 'repeat', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'apply', 'auto']",3,2,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,update_elections_data_client_request_allEntries',"['intros', 'unfold', 'repeat', 'repeat', 'auto', 'simpl', 'intuition', 'find_inversion', 'repeat', 'intuition']",1,0,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,handleClientRequest_currentTerm_leaderId,"['intros', 'unfold', 'subst', 'break_match', 'try', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_client_request,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'try', 'eauto', '[idtac])', 'intuition', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'try', 'intuition', 'repeat', 'intuition', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'break_exists_exists', 'intuition', 'repeat', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto']",3,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,handleTimeout_currentTerm_leaderId,"['intros', 'unfold', 'subst', 'break_match', 'try', 'simpl', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_timeout,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'try', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'intuition', 'repeat', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto']",3,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,doLeader_currentTerm_leaderId,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'repeat', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,doGenericServer_currentTerm_leaderId,"['intros', 'unfold', 'repeat', 'find_inversion', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'repeat', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_state_same_packet_subset,"['red', 'unfold', 'intros', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'repeat', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'subst', 'unfold', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'repeat', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,allEntries_log_invariant,"['intros', 'apply', 'auto', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLogProof.json,aeli,"['split', 'eauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,handleRequestVoteReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,handleAppendEntries_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,handleAppendEntriesReply_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,handleRequestVote_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,handleClientRequest_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition', 'simpl', 'right', 'eexists', 'simpl', 'intuition', 'reflexivity']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,handleTimeout_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,doGenericServer_type,"['unfold', 'intros', 'repeat', 'repeat', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,doLeader_type,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_appendEntries,"['start', 'find_copy_apply_lem_hyp', 'rewrite', 'intuition', 'try', 'subst', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_appendEntriesReply,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_requestVote,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'rewrite', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_clientRequest,"['start', 'find_copy_apply_lem_hyp', 'intuition', 'try', 'rewrite', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'match', 'concludes', 'break_exists', 'match', 'intuition', 'repeat', 'eauto', 'simpl', 'intuition', 'subst', 'eauto']",0,0,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_timeout,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'rewrite', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_doGenericServer,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'match', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_doLeader,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'match', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_init,"['red', 'unfold', 'intros', 'simpl', 'congruence']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_state_same_packets_subset,"['red', 'unfold', 'intros', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,leaders_have_leaderLogs_strong_reboot,"['start', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsStrongProof.json,lhllsi,"['split', 'intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesVotesWithLogCorrespondProof.json,votes_votesWithLog_correspond_invariant,"['intros', 'apply', 'auto', 'unfold_all', 'simpl', 'split', 'contradiction', 'start', 'unfold', 'finish', 'start', 'unfold', 'finish', 'start', 'unfold', 'finish', 'start', 'subst', 'auto', 'start', 'unfold', 'finish', 'start', 'unfold', 'finish', 'start', 'find_rewrite', 'auto', 'start', 'find_rewrite', 'auto', 'unfold_all', 'split', 'intros', 'break_and', 'repeat', 'eauto', 'unfold_all', 'intuition', 'find_higher_order_rewrite', '(update_destruct', 'subst', 'rewrite_update', '[|eauto])', 'unfold', 'simpl', '(eapply equates_1', '[ match goal with | H : _ |- _ => solve [ eapply H', 'aggressive_rewrite_goal', 'eauto', 'find_rewrite', 'auto']",1,1,1,1,2,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesVotesWithLogCorrespondProof.json,vvci,"['split', 'exact', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,lift_leader_sublog,"['intros', 'pose', 'conclude_using', 'find_apply_hyp_hyp', 'match', 'repeat', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,exists_deghosted_packet,"['unfold', 'simpl', 'intros', 'eexists', 'intuition', 'apply', 'eexists', 'eauto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,lift_leader_sublog_nw,"['intros', 'pose', 'conclude_using', 'find_apply_hyp_hyp', 'find_apply_lem_hyp', 'match', 'break_and', 'match', 'repeat', 'subst', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,findGtIndex_prefix_within_term,"['unfold', 'intros', 'find_apply_lem_hyp', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,handleAppendEntriesReply_entries,"['intros', 'unfold', 'repeat', 'find_inversion', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,update_elections_data_appendEntries_allEntries,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'find_apply_lem_hyp', 'subst', 'do_in_map', 'do_in_app', 'subst', 'intuition', 'do_in_map', 'subst', 'simpl', 'auto', 'left', 'apply', 'eexists', 'eauto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,update_elections_data_clientRequest_allEntries_new,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto', 'intuition', 'subst', 'do_bool', 'find_apply_lem_hyp', 'intuition', 'match', 'repeat', 'simpl', 'omega', 'break_exists', 'intuition', 'repeat', 'find_inversion', 'intuition']",1,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,update_elections_data_clientRequest_allEntries_old,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_union,"['intros', 'unfold', 'intros', 'find_apply_hyp_hyp', 'intuition', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,removeAfterIndex_maxTerm_in,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'break_if', 'eauto', 'do_bool', 'omega', 'break_if', 'eauto', 'do_bool', 'specialize', 'intuition', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,handleClientRequest_log',"['intros', 'find_apply_lem_hyp', 'intuition', 'repeat', 'intuition', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'subst', 'auto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,doLeader_in_entries_in_log,"['intros', 'unfold', 'break_match', 'try', 'simpl', 'intuition', 'break_if', 'try', 'simpl', 'intuition', 'find_inversion', 'do_in_map', 'subst', 'simpl', 'find_inversion', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_subset,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,update_elections_data_requestVoteReply_leaderLogs',"['unfold', 'intros', 'repeat', 'auto', 'simpl', 'intuition', 'find_inversion', 'right', 'eauto']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,update_elections_data_requestVoteReply_allEntries,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_request_vote_reply,"['red', 'unfold', 'intros', 'find_eapply_lem_hyp', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'try', 'eauto', 'find_apply_lem_hyp', 'intuition', 'subst', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'eauto', 'find_apply_lem_hyp', 'intuition', 'subst', 'eauto', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'eauto', 'rewrite', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'match', 'destruct_update', 'simpl', 'eauto', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'match', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'subst', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'match', 'destruct_update', 'simpl', 'eauto', 'repeat', 'eauto']",3,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_append_entries_reply,"['red', 'unfold', 'intros', 'subst', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'destruct_update', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'destruct_update', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'destruct_update', 'simpl', 'repeat', 'eauto']",3,2,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,update_elections_data_timeout_allEntries,"['intros', 'unfold', 'repeat', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_timeout,"['red', 'unfold', 'intros', 'subst', 'find_copy_apply_lem_hyp', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', '[|do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_rewrite', 'intuition', 'find_false', 'repeat', 'eauto', 'match', 'destruct_update', 'simpl', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', '[|do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_rewrite', 'intuition', 'find_false', 'repeat', 'eauto', 'match', 'destruct_update', 'simpl', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', '[|do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_rewrite', 'intuition', 'find_false', 'repeat', 'eauto', 'match', 'destruct_update', 'simpl', 'repeat', 'eauto']",3,2,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,update_elections_data_requestVote_allEntries,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_request_vote,"['red', 'unfold', 'intros', 'subst', 'find_copy_apply_lem_hyp', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', '[|subst', 'simpl', 'find_eapply_lem_hyp', 'subst', 'intuition', 'find_false', 'repeat', 'eauto', 'match', 'destruct_update', 'simpl', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', '[|subst', 'simpl', 'find_eapply_lem_hyp', 'subst', 'intuition', 'find_false', 'repeat', 'eauto', 'match', 'destruct_update', 'simpl', 'try', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', '[|subst', 'simpl', 'find_eapply_lem_hyp', 'subst', 'intuition', 'find_false', 'repeat', 'eauto', 'match', 'destruct_update', 'simpl', 'repeat', 'eauto']",3,2,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_do_generic_server,"['red', 'unfold', 'intros', 'subst', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'repeat', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'destruct_update', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'destruct_update', 'simpl', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'destruct_update', 'simpl', 'repeat', 'eauto']",3,2,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_init,"['red', 'unfold', 'intuition', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_state_same_packet_subset,"['red', 'unfold', 'intros', 'intuition', 'red', 'intros', 'repeat', 'try', 'eauto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_reboot,"['red', 'intros', 'subst', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'unfold', 'unfold', 'intros', 'intros', 'intuition', 'red', 'intros', 'try', 'match', 'match', 'destruct_update', 'simpl', 'eauto']",2,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,prefix_within_term_inductive_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrefixWithinTermProof.json,pwti,"['split', 'intros', 'apply', 'auto', 'apply', 'auto', 'Defined']",1,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,lifted_in_log_in_all_entries_invariant,"['intros', 'unfold', 'intros', 'find_eapply_lem_hyp', '[|intros', 'eapply', 'eauto', 'simpl', 'unfold', 'unfold', 'simpl', 'repeat', 'simpl', 'eauto']",3,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'eauto', 'remember', 'subst_max', 'simpl', 'unfold', 'simpl', 'match', 'find_higher_order_rewrite', 'rewrite_update', 'auto', 'find_eapply_lem_hyp', 'eauto', 'break_exists_exists', 'simpl', 'find_higher_order_rewrite', 'rewrite_update', 'simpl', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'congruence']",3,5,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'eapply_prop_hyp', 'repeat', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'pose', 'simpl', 'find_higher_order_rewrite', 'rewrite_update', 'simpl', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'subst', 'simpl', 'congruence']",3,4,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_request_vote,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'eapply_prop_hyp', 'repeat', 'eauto', 'subst', 'simpl', 'unfold', 'pose', 'simpl', 'find_higher_order_rewrite', 'rewrite_update', 'simpl', 'concludes', 'break_exists_exists', 'find_rewrite_lem', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'congruence']",3,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'repeat', 'find_apply_hyp_hyp', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'pose', 'simpl', 'find_higher_order_rewrite', 'rewrite_update', 'simpl', 'concludes', 'break_exists_exists', 'find_rewrite_lem', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'congruence']",3,3,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'eauto', 'do_in_map', 'unfold', 'do_in_map', 'subst', 'simpl', 'destruct', 'simpl', 'find_inversion', 'simpl', 'unfold', 'pose', 'simpl', 'find_higher_order_rewrite', 'rewrite_update', 'simpl', 'concludes', 'break_exists_exists', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'congruence']",3,3,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'pose', 'simpl', 'find_higher_order_rewrite', 'rewrite_update', 'simpl', 'concludes', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'congruence']",3,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'pose', 'simpl', 'find_higher_order_rewrite', 'rewrite_update', 'simpl', 'concludes', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'congruence']",3,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,ghost_log_allEntries_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogAllEntriesProof.json,glaei,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,doLeader_no_messages_to_self,"['intros', 'unfold', 'repeat', 'try', 'simpl', 'congruence', 'find_inversion', 'do_in_map', 'subst', 'simpl', 'find_apply_lem_hyp', 'intuition', 'subst', 'break_match', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_do_leader,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_do_generic_server,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'subst', 'simpl', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_append_entries,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'intuition', 'find_false', 'repeat', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_append_entries_reply,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'intuition']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_request_vote,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'intuition', 'find_false', 'repeat', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_request_vote_reply,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_client_request,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_false', 'repeat', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_timeout,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_false', 'repeat', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_state_same_packet_subset,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_reboot,"['red', 'red', 'intros', 'simpl', 'find_reverse_rewrite', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_init,"['red', 'red', 'intros', 'simpl', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,no_append_entries_to_self_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesToSelfProof.json,noaetsi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_init,"['start', 'contradiction']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_timeout,"['start', 'eapply', 'eauto', 'repeat', 'assert', '{', 'update_destruct', 'rewrite_update', 'simpl', 'find_rewrite_lem', 'eauto', 'eauto', '}', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', 'simpl', '[|auto].', 'subst', 'split', 'assert', 'intuition', 'find_rewrite', 'auto', 'exfalso', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'intro_refined_invariant', 'eapply_prop_hyp', 'simpl', 'omega', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'intros', 'find_rewrite', 'exfalso', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'intro_refined_invariant', 'eapply_prop_hyp', 'simpl', 'omega']",0,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_append_entries,"['start', 'eapply', 'eauto', 'repeat', 'update_destruct', 'rewrite_update', 'simpl', 'find_rewrite_lem', 'assert', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', '[|auto].', 'simpl', 'subst', 'rewrite', 'split', '[auto|].', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'unfold', 'intros', 'find_rewrite', 'discriminate', 'assert', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', '[|auto].', 'simpl', 'subst', 'rewrite', 'split', '[auto|].', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'unfold', 'intros', 'find_rewrite', 'discriminate']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_append_entries_reply,"['start', 'eapply', 'eauto', 'repeat', 'assert', '{', 'update_destruct', 'rewrite_update', 'eauto', '}', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', 'simpl', '[|auto].', 'subst', 'split', '[auto|].', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'unfold', 'intros', 'find_rewrite', 'discriminate']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_request_vote,"['start', 'eapply', 'eauto', 'repeat', 'assert', '{', 'update_destruct', 'rewrite_update', 'simpl', 'find_rewrite_lem', 'eauto', 'eauto', '}', 'unfold', 'break_exists', 'break_and', 'exists', 'update_destruct', 'rewrite_update', 'simpl', '[|auto].', 'subst', 'split', 'rewrite', 'auto', 'find_apply_lem_hyp', 'break_or_hyp', 'break_and', 'repeat', 'auto', 'unfold', 'intros', 'find_rewrite', 'discriminate']",2,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_request_vote_reply,"['start', 'intro_refined_invariant', 'eapply', 'eauto', 'subst', 'repeat', 'find_rewrite_lem', 'simpl', 'update_destruct', 'rewrite_update', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eapply', 'eauto', 'subst', 'find_erewrite_lem', 'eapply', 'eauto', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_state_same_packet_subset,"['start', 'eapply', 'eauto', 'repeat', 'assert', 'unfold', 'break_exists', 'break_and', 'exists', 'repeat', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,leaderLogs_candidateEntries_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsCandidateEntriesProof.json,llcei,"['constructor', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update_hyp', 'simpl', 'eauto', 'try', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'intuition', 'try', 'repeat', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'find_apply_lem_hyp', 'intuition', 'try', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'repeat', 'destruct_update_hyp', 'simpl', 'eauto', 'intuition', 'try', 'repeat', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update_hyp', 'simpl', 'try', 'eauto', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update_hyp', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', '[repeat find_rewrite', 'eauto', 'subst', 'omega', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'try', 'find_copy_apply_lem_hyp', 'eapply_prop_hyp', 'eauto', 'unfold', 'simpl', 'unfold', 'simpl', 'omega']",3,3,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'find_copy_apply_lem_hyp', 'intuition', 'destruct_update_hyp', 'simpl', 'eauto', 'repeat', 'try', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'congruence']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update_hyp', 'simpl', 'eauto', 'try', 'subst', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update_hyp', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update_hyp', 'simpl', 'eauto', 'congruence']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,votedFor_moreUpToDate_init,"['red', 'unfold', 'intros', 'simpl', 'congruence']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForMoreUpToDateProof.json,vfmutdi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_append_entries,"['red', 'unfold', 'simpl', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'eauto', 'eapply_prop_hyp', 'eauto', 'try', 'omega']",1,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_append_entries_reply,"['red', 'unfold', 'simpl', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'eauto', 'eapply_prop_hyp', 'eauto', 'try', 'omega']",1,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_request_vote_reply,"['red', 'unfold', 'simpl', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'eauto']",1,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_request_vote,"['red', 'unfold', 'simpl', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'eapply', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'eapply_prop_hyp', 'eauto', 'try', 'omega']",1,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_timeout,"['red', 'unfold', 'simpl', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'congruence', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",1,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_client_request,"['red', 'unfold', 'simpl', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'intuition', 'repeat', 'eauto']",1,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,votedFor_term_sanity_init,"['red', 'unfold', 'intros', 'simpl', 'congruence']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotedForTermSanityProof.json,vftsi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_appendEntries,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'rewrite', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_appendEntriesReply,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_requestVote,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'rewrite', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_requestVoteReply,"['start', 'unfold', 'break_match', 'unfold', 'try', 'congruence', 'simpl', 'match', 'intuition', 'break_if', 'intuition', 'simpl', 'repeat', 'eauto', 'congruence']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_clientRequest,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'rewrite', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_timeout,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'rewrite', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_doGenericServer,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'match', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_doLeader,"['start', 'find_apply_lem_hyp', 'intuition', 'try', 'match', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_init,"['red', 'unfold', 'intros', 'simpl', 'congruence']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_state_same_packets_subset,"['red', 'unfold', 'intros', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,leaders_have_leaderLogs_reboot,"['start', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeadersHaveLeaderLogsProof.json,lhlli,"['split', 'intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleAppendEntries_entries_in,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition', 'repeat', 'intuition', 'simpl', 'do_in_app', 'intuition', 'eauto']",1,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,log_matching_hosts_ignores_packets,"['intros', 'unfold', 'intuition', 'repeat', 'eauto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,log_matching_state_same_packet_subset,"['intros', 'split', 'unfold', 'intuition', 'eauto', 'unfold', 'intros', 'match', 'specialize', 'forward', '[solve [repeat eexists', 'eauto', 'conclude', 'repeat', 'break_and', 'match', 'intuition', 'try', 'try', 'repeat', 'intuition', 'match', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,doLeader_log_matching_nw,"['intros', 'find_copy_apply_lem_hyp', 'unfold', 'break_match', 'repeat', 'repeat', 'simpl', 'try', 'eauto', 'intros', 'try', 'match', 'solve', 'subst', 'auto', 'unfold', 'intuition', 'repeat', 'rewrite', 'repeat', 'match', 'unfold', 'intuition', 'use_packet_subset_clear', 'unfold', 'intuition', 'use_nw_invariant', 'break_if', 'match', 'repeat', 'intuition', 'simpl', 'shouldSend_true', 'unfold', 'repeat', 'find_inversion', 'unfold', 'subst', 'simpl', 'find_inversion', 'break_if', 'repeat', 'repeat', 'match', 'eauto', 'repeat', 'rewrite', 'repeat', 'match', 'unfold', 'intuition', 'use_packet_subset_clear', 'unfold', 'use_nw_invariant', 'simpl', 'break_if', 'subst', 'use_log_matching_nw_host', 'repeat', 'intuition', 'shouldSend_true', 'repeat', 'subst', 'simpl', 'do', 'simpl', 'unfold', 'intuition', 'rewrite', 'rewrite', 'do_elim', 'simpl', 'unfold', 'simpl', 'match', 'specialize', 'forward', 'intuition', 'try', 'intuition', 'omega', 'match', 'unfold', 'intuition', 'match', 'repeat', 'omega', '{', 'concludes', 'break_exists', 'intuition', 'eexists', 'intuition', 'break_match', 'f_equal', 'eapply', 'eauto', 'repeat', 'auto', 'exfalso', 'eapply', 'eauto', 'unfold', 'intuition', 'break_if', 'auto', 'unfold', 'subst', 'match', 'assert', 'repeat', 'intuition', '}', 'use_packet_subset_clear', 'unfold', 'intuition', 'unfold', 'intuition', 'use_nw_invariant', 'shouldSend_true', 'repeat', 'subst', 'simpl', 'find_inversion', 'unfold', 'intuition', 'find_inversion', 'match', 'conclude', 'try', 'eapply', 'eauto', 'break_exists', 'eexists', 'intuition', 'eauto', 'eauto', 'unfold', 'apply', 'intuition', 'use_packet_subset_clear', 'unfold', 'intuition', 'use_nw_invariant', 'shouldSend_true', 'simpl', 'clean', 'repeat', 'subst', 'simpl', 'find_inversion', 'do_elim', 'use_packet_subset', 'use_packet_subset_clear', 'unfold', 'intuition', 'use_log_matching_nw_nw', 'shouldSend_true', 'unfold', 'intuition', 'unfold', 'intuition', 'match', 'use_nw_invariant', 'simpl', 'clean', 'repeat', 'simpl', 'do', 'simpl', 'repeat', 'use_log_matching_nw_host_keep', 'repeat', 'intuition', 'match', 'conclude', 'auto', 'repeat', 'eapply', 'eauto', 'apply', 'intuition', 'break_exists', 'intuition', 'match', 'eauto', 'match', 'eauto', 'omega', 'shouldSend_true', 'unfold', 'intuition', 'use_nw_invariant', 'simpl', 'clean', 'repeat', 'simpl', 'do', 'simpl', 'repeat', 'use_log_matching_nw_host', 'repeat', 'intuition', 'unfold', 'apply', 'intuition', 'shouldSend_true', 'simpl', 'clean', 'repeat', 'do', 'simpl', 'repeat', 'unfold', 'apply', 'intuition', 'use_packet_subset', 'use_packet_subset_clear', 'unfold', 'intuition', 'use_log_matching_nw_nw', 'shouldSend_true', 'unfold', 'intuition', 'use_nw_invariant', 'simpl', 'clean', 'repeat', 'simpl', 'do', 'simpl', 'repeat', 'use_log_matching_nw_host', 'repeat', 'intuition', 'break_exists', 'intuition', 'match', '[intros', 'subst', 'intuition', 'eapply', 'eauto', 'shouldSend_true', 'unfold', 'intuition', 'use_nw_invariant', 'simpl', 'clean', 'repeat', 'simpl', 'do', 'simpl', 'break_match', 'repeat', 'find_rewrite', 'use_log_matching_nw_host', 'intuition', 'match', 'auto', 'omega', 'match', '[intros', 'subst', 'intuition', 'eapply', 'eauto', 'exfalso', 'repeat', 'unfold', 'intuition', 'repeat', 'match', 'intuition', 'forwards', '[match goal with | H : forall _, In _ _ -> _ < _ |- context [ (?e : entry) ] => specialize (H e) end', 'concludes', 'omega', 'concludes', 'unfold', 'forwards', '[find_apply_lem_hyp maxIndex_is_max', 'intuition', 'omega', 'concludes', 'break_exists', 'intuition', 'eapply', 'intuition', 'shouldSend_true', 'simpl', 'clean', 'repeat', 'simpl', 'do', 'simpl', 'repeat', 'repeat', 'unfold', 'match', '(intuition eauto using findAtIndex_intro) end.', 'break_match', 'congruence', 'use_packet_subset', 'use_packet_subset_clear', 'unfold', 'intuition', 'use_log_matching_nw_nw', 'shouldSend_true', 'unfold', 'intuition', 'use_nw_invariant', 'repeat', 'do', 'simpl', 'repeat', 'use_log_matching_nw_host', 'intuition', 'break_exists', 'unfold', 'intuition', 'repeat', 'match', 'repeat', 'congruence', 'shouldSend_true', 'unfold', 'intuition', 'use_nw_invariant', 'repeat', 'do', 'simpl', 'repeat', 'use_log_matching_nw_host', 'intuition', 'break_exists', 'intuition', 'repeat', 'unfold', 'match', 'repeat', 'congruence', 'shouldSend_true', 'simpl', 'clean', 'repeat', 'simpl', 'do', 'simpl', 'repeat']",0,3,1,2,7,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,doLeader_doesn't_touch_log,"['intros', 'unfold', 'repeat', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,do_leader_log_matching,"['unfold', 'intuition', 'find_apply_lem_hyp', 'unfold', 'simpl', 'match', 'intuition', 'repeat', 'repeat', 'repeat', 'simpl', 'eauto', 'find_reverse_rewrite', 'eapply', 'eauto', 'eauto', 'unfold', 'auto', 'apply', 'auto']",0,1,1,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,host_independent_log_matching_nw_invariant,"['intros', 'unfold', 'intuition', 'solve', 'eauto', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,doGenericServer_log_matching,"['unfold', 'intros', 'subst', 'unfold', 'break_let', 'repeat', 'eapply', 'eauto', 'intros', 'use_applyEntries_spec', 'subst', 'simpl', 'find_higher_order_rewrite', 'rewrite', 'simpl', 'break_if', 'subst', 'auto', 'find_apply_hyp_hyp', 'intuition']",2,2,0,2,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleClientRequest_log_matching_hosts_entries_match,"['unfold', 'intros', 'intuition', 'simpl', 'intuition', 'unfold', 'subst', 'simpl', 'contradict_leader_sublog', 'subst', 'simpl', 'contradict_leader_sublog', 'subst', 'simpl', 'contradict_maxIndex', 'unfold', 'intuition', 'use_entries_match', 'simpl', 'intuition', 'subst', 'simpl', 'contradict_leader_sublog', 'unfold', 'intuition', 'right', 'use_entries_match']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,leader_sublog_weaken_host,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,logs_sorted_weaken_host,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,client_request_log_matching,"['unfold', 'intros', 'unfold', 'break_match', 'try', 'find_inversion', 'unfold', 'intuition', 'unfold', 'simpl', 'intuition', 'repeat', 'repeat', 'simpl', 'repeat', 'auto', 'subst', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'auto', 'subst', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'auto', 'unfold', 'intuition', 'break_if', 'subst', 'simpl', 'find_apply_lem_hyp', 'intuition', '[|eexists', 'intuition', 'simpl', 'auto', 'unfold', 'intuition', 'assert', 'cut', '[intros', 'break_exists', 'eexists', 'intuition', 'eauto', 'unfold', 'intuition', 'unfold', 'break_if', 'simpl', 'try', 'simpl', 'intuition', 'subst', 'simpl', 'auto', 'unfold', 'intuition', 'simpl', 'repeat', 'repeat', 'simpl', 'break_if', 'subst', '{', 'intuition', 'subst', 'simpl', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'contradict_leader_sublog', 'unfold', 'use_leader_sublog', 'find_apply_hyp_hyp', 'intuition', 'right', 'unfold', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'use_nw_invariant', 'use_log_matching_nw_host', 'intuition', '}', 'unfold', 'find_apply_hyp_hyp', 'intuition', 'use_nw_invariant', 'use_log_matching_nw_host', 'intuition', 'break_if', 'subst', '{', 'intuition', 'subst', 'simpl', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'contradict_leader_sublog', 'unfold', 'use_leader_sublog', 'find_apply_hyp_hyp', 'intuition', 'simpl', 'unfold', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'use_nw_invariant', 'use_log_matching_nw_host', 'intuition', 'break_exists', 'eexists', 'intuition', '}', 'unfold', 'find_apply_hyp_hyp', 'intuition', 'use_nw_invariant', 'use_log_matching_nw_host', 'intuition', 'unfold', 'find_apply_hyp_hyp', 'intuition', 'use_nw_invariant', 'unfold', 'find_apply_hyp_hyp', 'intuition', 'use_nw_invariant', 'unfold', 'do', 'intuition', 'subst', 'use_log_matching_nw_nw', 'unfold', 'do', 'intuition', 'subst', 'use_log_matching_nw_nw', 'unfold', 'do', 'intuition', 'subst', 'use_log_matching_nw_nw']",3,4,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,tryToBecomeLeader_spec,"['intuition', 'unfold', 'find_inversion', 'do_in_map', 'subst', 'simpl', 'congruence']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleTimeout_log_matching,"['unfold', 'intros', 'unfold', 'break_match', 'try', 'eauto', 'do_state_same_packet_subset', 'do_in_map', 'subst', 'simpl', 'exfalso', 'find_apply_hyp_hyp', 'repeat', 'eauto', 'do_state_same_packet_subset', 'repeat', 'break_if', 'simpl', 'subst', 'reflexivity']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleRequestVote_log_matching,"['unfold', 'intros', 'do_state_same_packet_subset', 'find_apply_lem_hyp', 'auto', 'find_rewrite', 'eauto', 'exfalso', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleRequestVoteReply_log_matching,"['unfold', 'intros', 'do_state_same_packet_subset', 'rewrite', 'auto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,log_matching_init,"['unfold', 'simpl', 'intuition', 'omega']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,log_matching_reboot,"['unfold', 'intros', 'unfold', 'subst', 'simpl', 'eapply', 'eauto', 'intros', 'repeat', 'try', 'subst', 'simpl', 'auto']",4,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleAppendEntriesReply_log_matching,"['unfold', 'intros', 'do_state_same_packet_subset', 'eauto', 'find_apply_lem_hyp', 'auto', 'exfalso', 'do_in_map', 'find_eapply_lem_hyp', 'eauto', 'subst', 'simpl', 'find_rewrite', 'match', 'repeat', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleAppendEntries_log_matching_beginning_of_time_entries_match,"['intros', 'unfold', 'use_nw_invariant_keep', 'eapply', 'eauto', 'intuition', 'unfold', 'match', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleAppendEntries_spec,"['intros', 'unfold', 'repeat', 'try', 'intuition', 'simpl', 'do_bool', 'subst', 'intuition', 'break_exists', 'try', 'eauto', 'right', 'right', 'intuition', 'eexists', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,handleAppendEntries_log_matching_middle_of_time_entries_match,"['intros', 'eapply', 'eauto', 'try', 'eapply_prop', 'eauto', 'eapply_prop']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,contiguous_range_exact_lo_weaken_exists,"['unfold', 'intros', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,log_matching_invariant,"['intros', 'apply', 'eauto', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'unfold', 'intros', 'eapply', 'eauto', 'intros', 'find_higher_order_rewrite', 'auto', 'exact']",3,0,1,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogMatchingProof.json,lmi,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_init,"['split', 'unfold', 'simpl', 'contradiction', 'unfold', 'simpl', 'contradiction']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,taifol_no_append_entries,"['intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'eauto', 'unfold', 'do_in_map', 'find_apply_hyp_hyp', 'unfold', 'find_false', 'subst', 'simpl', 'repeat', 'eauto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_client_request,"['red', 'unfold', 'split', 'red', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'break_exists', 'intuition', 'unfold', 'intros', 'repeat', 'simpl', 'break_or_hyp', 'intuition', 'find_apply_lem_hyp', 'find_rewrite', 'eapply_prop', 'congruence', 'eauto', 'eapply', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_timeout,"['red', 'unfold', 'split', 'red', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'find_apply_lem_hyp', 'find_rewrite', 'auto', 'eapply', 'eauto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_app,"['induction', 'auto', 'unfold', 'simpl', 'intros', 'break_or_hyp', 'eauto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_In,"['unfold', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_append_entries_reply,"['red', 'unfold', 'split', 'red', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'find_apply_lem_hyp', 'find_rewrite', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'find_apply_lem_hyp', 'eauto', 'subst', 'contradiction']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_request_vote_reply,"['red', 'unfold', 'split', 'red', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'rewrite_update', 'auto', 'find_apply_lem_hyp', 'subst', 'find_rewrite', 'auto', 'eauto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_do_generic_server,"['red', 'unfold', 'split', 'red', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'find_apply_lem_hyp', 'find_rewrite', 'auto', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'subst', 'intuition', 'eauto', 'do_in_map', 'contradiction']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_state_same_packet_subset,"['red', 'unfold', 'split', 'red', 'simpl', 'intuition', 'find_reverse_higher_order_rewrite', 'auto', 'eauto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_reboot,"['red', 'unfold', 'split', 'red', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'unfold', 'eauto', 'find_reverse_rewrite', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,terms_and_indices_from_one_log_ind_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermsAndIndicesFromOneLogProof.json,taifoli,"['split', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,handleClientRequest_log_In,"['intros', 'find_apply_lem_hyp', 'intuition', 'find_rewrite', 'auto', 'break_exists', 'intuition', 'find_rewrite', 'intuition']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_client_request,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_or_hyp', 'break_if', 'eauto', 'find_copy_apply_lem_hyp', 'break_and', 'repeat', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'exfalso', 'eapply', 'eauto', 'subst', 'simpl', 'find_rewrite', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_timeout,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_or_hyp', 'break_if', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'try', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'erewrite', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'exfalso', 'subst', 'simpl', 'eapply', 'eauto', 'find_rewrite', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,handleAppendEntries_type_log,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_append_entries,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'find_rewrite', 'break_if', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'congruence', 'repeat', 'eapply_prop_hyp', 'eauto', 'find_apply_lem_hyp', 'simpl', 'subst', 'exfalso', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_append_entries_reply,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'find_rewrite', 'break_if', 'eauto', 'find_copy_apply_lem_hyp', 'find_rewrite', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'try', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'exfalso', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_request_vote,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'find_rewrite', 'break_if', 'eauto', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'try', 'eauto', 'find_apply_lem_hyp', 'simpl', 'subst', 'exfalso', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_candidateEntriesTerm_lowered,"['intros', 'pattern', 'apply', 'auto', 'clear', 'intros', 'eapply', 'eauto']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,handleRequestVoteReply_type_term_won,"['unfold', 'intros', 'repeat', 'repeat', 'subst', 'simpl', 'auto', 'do_bool', 'intuition']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_request_vote_reply,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'find_rewrite', 'break_if', 'eauto', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'discriminate', 'exfalso', 'find_apply_lem_hyp', 'intuition', 'try', 'eapply', 'eauto', 'congruence', 'congruence']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_do_leader,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_or_hyp', 'break_if', 'eauto', 'find_copy_apply_lem_hyp', 'break_and', 'find_copy_apply_lem_hyp', 'repeat', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'subst', 'simpl', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'omega', 'break_exists', 'break_and', 'subst', 'exists', 'find_apply_lem_hyp', 'intuition', 'break_if', 'congruence', 'pose', 'unfold', 'break_and', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_do_generic_server,"['unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_or_hyp', 'break_if', 'eauto', 'find_copy_eapply_lem_hyp', 'break_and', 'find_copy_eapply_lem_hyp', 'repeat', 'eauto', 'find_copy_eapply_lem_hyp', 'subst', 'simpl', 'intuition']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_state_same_packet_subset,"['unfold', 'intros', 'find_apply_hyp_hyp', 'repeat', 'eauto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_reboot,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'match', 'eauto', 'break_exists_exists', 'intuition', 'repeat', 'break_if', 'subst', 'simpl', 'auto', 'repeat', 'break_if', 'subst', 'simpl', 'auto', 'discriminate', 'repeat', 'break_if', 'subst', 'simpl', 'auto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,prevLog_leader_sublog_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogLeaderSublogProof.json,pllsi,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderPerTermProof.json,one_leader_per_term_invariant',"['unfold', 'intuition', 'repeat', 'match', 'copy_eapply_prop_hyp', 'match', '[|clear H', 'eauto', 'break_exists', 'intuition', 'eapply_prop', 'eapply_prop', '[eapply_prop votes_received_cronies|]', 'intuition', 'unfold', 'unfold', 'repeat', 'eapply_prop', 'intuition']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderPerTermProof.json,one_leader_per_term_invariant,"['intros', 'apply', 'auto', 'intros', 'apply', 'eauto', 'eauto']",1,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OneLeaderPerTermProof.json,olpti,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,contradicting_leader_logs_on_leader_empty,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'repeat', 'subst', 'simpl', 'intuition', 'congruence']",2,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,contradicting_leader_logs_empty,"['intros', 'induction', 'simpl', 'intuition', 'subst', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'auto']",0,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,minimal_contradicting_leader_log_None,"['intros', 'find_apply_lem_hyp', 'eapply', 'eauto', 'eapply', 'eauto', 'apply']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,In_contradicting_logs_on_leader_elim,"['intros', 'induction', 'simpl', 'intuition', 'repeat', 'subst', 'simpl', 'intuition', 'find_inversion', 'intuition']",0,2,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,in_contradicting_leader_logs,"['induction', 'intros', 'simpl', 'intuition', 'do_in_app', 'intuition', 'do_in_map', 'find_inversion', 'rewrite', 'auto']",2,0,0,1,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,in_contradicting_leader_logs_on_leader_in_leaderLog,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'simpl', 'intuition']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,in_contradicting_leader_logs_on_leader_not_in_log,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'simpl', 'intuition', 'find_inversion', 'auto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,in_contradicting_leader_logs_on_leader_term_lt,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'simpl', 'intuition', 'repeat', 'eauto']",2,0,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,contradicting_leader_logs_on_leader_complete,"['induction', 'intros', 'simpl', 'intuition', 'repeat', 'repeat', 'simpl', 'intuition']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,minimal_contradicting_leader_log_elim,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition', 'eauto', 'eauto', 'eauto', 'destruct', 'auto', 'destruct', 'auto', 'destruct', 'auto', 'find_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', '[|solve [apply all_fin_all]].', 'find_apply_hyp_hyp', 'simpl', 'omega']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,maxTerm_zero_or_entry,"['destruct', 'simpl', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,maxIndex_zero_or_entry,"['destruct', 'simpl', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,leader_completeness_committed_invariant,"['unfold', 'intros', 'break_exists', 'break_and', 'find_copy_apply_lem_hyp', 'unfold', 'match', '[ | |eauto]', '[| omega].', 'assert', 'eauto', 'match', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,leader_completeness_invariant,"['unfold', 'intuition', 'auto', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderCompletenessProof.json,lci,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,update_elections_data_appendEntries_allEntries',"['intros', 'unfold', 'repeat', 'auto', 'simpl', 'do_in_app', 'intuition', 'do_in_map', 'find_inversion', 'right', 'unfold', 'repeat', 'find_inversion', 'simpl', 'do_bool', 'auto']",1,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_append_entries,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_copy_apply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'do', 'simpl', 'try', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto']",3,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,currentTerm_votedFor_votesWithLog_invariant,"['unfold', 'intros', 'eapply', 'eauto', 'break_and', 'eapply', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,handleRequestVote_currentTerm_leaderId',"['intros', 'unfold', 'repeat', 'try', 'simpl', 'auto', 'do_bool', 'auto', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,handleRequestVote_currentTerm,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'do_bool', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,votesWithLog_update_elections_data_request_vote,"['unfold', 'intros', 'repeat', 'repeat', 'intuition', 'simpl', 'intuition', 'tuple_inversion', 'intuition', 'repeat', 'intuition', 'try', 'unfold', 'simpl', 'repeat', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'repeat', 'try', 'intuition']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_request_vote,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'find_rewrite_lem', 'find_copy_apply_lem_hyp', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto', 'subst', 'find_apply_lem_hyp', 'repeat', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'repeat', 'simpl', 'destruct_update', 'simpl', 'intuition', 'try', 'eauto', 'subst', 'find_apply_lem_hyp', 'repeat', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'repeat', 'simpl', 'destruct_update', 'simpl', 'intuition', 'try', 'eauto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto']",3,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'find_rewrite_lem', 'find_eapply_lem_hyp', 'eauto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'eauto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'eauto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,update_elections_data_client_request_allEntries_in_or_term,"['intros', 'intros', 'unfold', 'repeat', 'repeat', 'auto', 'simpl', 'intuition', 'find_inversion', 'repeat', 'intuition', 'unfold', 'break_match', 'find_inversion', 'simpl', 'auto']",1,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_client_request,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'find_eapply_lem_hyp', 'eauto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto', 'subst', 'find_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'simpl', 'omega', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto']",3,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,votesWithLog_update_elections_data_timeout',"['unfold', 'intros', 'repeat', 'simpl', 'intuition', 'repeat', 'intuition', 'unfold', 'repeat', 'repeat', 'simpl', 'intuition', 'unfold', 'repeat', 'repeat', 'simpl', 'congruence']",3,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_timeout,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'find_rewrite_lem', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto', 'subst', 'find_copy_apply_lem_hyp', 'repeat', 'find_apply_lem_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'rewrite', 'auto']",3,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'destruct_update', 'simpl', 'eauto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'destruct_update', 'simpl', 'eauto', 'eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_state_same_packet_subset,"['red', 'unfold', 'intros', 'repeat', 'copy_eapply_prop_hyp', 'eauto', 'intuition', 'right', 'break_exists_exists', 'repeat', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'subst', 'unfold', 'destruct_update', 'simpl', 'eauto', 'copy_eapply_prop_hyp', 'eauto', 'repeat', 'intuition', 'right', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,allEntries_votesWithLog_invariant,"['intros', 'eapply', 'eauto', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesVotesWithLogProof.json,aevwli,"['split', 'eauto', 'Defined']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,handleAppendEntries_currentTerm_monotonic,"['intros', 'unfold', 'repeat', 'simpl', 'do_bool', 'repeat', 'auto', 'try', 'simpl', 'unfold', 'repeat', 'do_bool', 'auto']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'omega']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_append_entries_reply,"['red', 'unfold', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'omega']",2,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_request_vote,"['red', 'unfold', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'omega']",2,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_request_vote_reply,"['red', 'unfold', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'find_apply_hyp_hyp', 'unfold', 'repeat', 'simpl', 'repeat', 'do_bool', 'simpl', 'auto', 'omega']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_client_request,"['red', 'unfold', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'try', 'auto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'simpl', 'try', 'repeat', 'eauto']",2,1,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_timeout,"['red', 'unfold', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",2,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_do_leader,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",2,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_do_generic_server,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",2,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_reboot,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_state_same_packet_subset,"['red', 'unfold', 'intros', 'find_reverse_higher_order_rewrite', 'eauto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,allEntries_term_sanity_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesTermSanityProof.json,aetsi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,update_elections_data_client_request_leaderLogs,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,update_elections_data_timeout_leaderLogs,"['unfold', 'intros', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,update_elections_data_appendEntries_leaderLogs,"['intros', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,update_elections_data_requestVote_leaderLogs,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,handleRequestVoteReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,update_elections_data_requestVoteReply_leaderLogs,"['intros', 'unfold', 'repeat', 'intuition', 'simpl', 'match', 'intuition', 'repeat', 'intuition', 'congruence']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,lift_log_matching,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,logs_contiguous,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'split', 'intros', 'match', 'conclude', 'repeat', 'simpl', 'repeat', 'simpl', 'omega', 'break_exists_exists', 'intuition', 'simpl', 'repeat', 'simpl', 'repeat', 'simpl', 'auto', 'intros', 'cut', 'intros', 'try', 'cut', 'intros', 'eauto', 'simpl', 'repeat', 'simpl', 'repeat', 'simpl', 'auto']",0,1,0,0,3,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_init,"['split', 'simpl', 'intuition']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_client_request,"['start', 'find_rewrite_lem', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_timeout,"['start', 'find_rewrite_lem', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_append_entries,"['start', 'find_rewrite_lem', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_append_entries_reply,['start'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_request_vote,"['start', 'find_rewrite_lem', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_request_vote_reply,"['start', 'match', 'intuition', 'repeat', 'eauto', 'simpl', 'break_or_hyp', 'eauto', 'find_inversion', 'eauto']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_do_leader,"['start', 'replace', 'eauto', 'find_rewrite', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_do_generic_server,"['start', 'replace', 'eauto', 'find_rewrite', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_state_same_packet_subset,"['red', 'unfold', 'intros', 'find_reverse_higher_order_rewrite', 'eauto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_reboot,"['start', 'replace', 'eauto', 'find_rewrite', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,leaderLogs_contiguous_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsContiguousProof.json,llci,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/UniqueIndicesProof.json,UniqueIndices_invariant,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'eauto', 'unfold', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/UniqueIndicesProof.json,uii,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CausalOrderPreservedProof.json,output_before_input_not_key_in_input_trace,"['intros', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'break_exists', 'unfold', 'break_exists', 'do_in_app', 'intuition', '[find_apply_hyp_hyp', 'simpl', 'break_if', 'repeat', 'intuition', 'invcs', 'intuition', 'break_if', 'congruence', 'find_inversion', 'try', 'repeat', 'intuition', 'break_if', 'try', 'find_inversion']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CausalOrderPreservedProof.json,in_applied_entries_entries_ordered,"['intros', 'unfold', 'induction', 'simpl', 'break_exists', 'intuition', 'subst', 'left', 'unfold', 'break_match', 'simpl', 'break_if', 'repeat', 'intuition', 'right', 'intuition', 'apply', 'intuition', 'find_false', 'unfold', 'break_match', 'simpl', 'break_if', 'repeat', 'intuition', 'try', 'subst', 'eexists', 'intuition', 'eauto', 'eapply', 'eexists', 'intuition', 'eauto', 'intuition', 'find_false', 'break_exists_exists', 'intuition']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CausalOrderPreservedProof.json,in_applied_entries_applied_implies_input_state,"['intros', 'unfold', 'break_exists_exists', 'intuition', 'red', 'exists', 'intuition', 'red', 'auto', 'unfold', 'break_match', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'eauto', 'simpl', 'intuition']",1,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CausalOrderPreservedProof.json,causal_order_preserved,"['intros', 'pose', 'concludes', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CausalOrderPreservedProof.json,copi,"['split', 'intros', 'eapply', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,lifted_nextIndex_safety_invariant,"['intros', 'enough', 'simpl', 'repeat', 'simpl', 'auto', 'apply', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_append_entries,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'intuition', 'find_false', 'repeat', 'eauto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_request_vote,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'intuition', 'find_false', 'repeat', 'eauto']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'eauto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,doLeader_replicaMessage,"['unfold', 'intros', 'repeat', 'find_inversion', 'simpl', 'intuition', 'do_in_map', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,doLeader_getNextIndex,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'break_and', 'break_exists', 'subst', 'unfold', 'simpl', 'find_inversion', 'unfold', 'simpl', 'match', 'destruct', 'left', 'intuition', 'eauto', 'break_match', 'intuition', 'find_apply_lem_hyp', 'intuition', 'find_erewrite_lem', 'eauto', 'enough', 'eapply', 'eauto', 'erewrite', 'eauto', 'apply', '[|eapply lifted_entries_sorted_invariant', 'eauto', 'intros', 'eapply', 'eauto', 'right', 'erewrite', 'eauto', 'enough', 'find_copy_apply_lem_hyp', 'intuition', 'auto', 'exists', 'intuition', 'do', 'simpl', 'repeat', 'auto', 'eapply', '[eapply lifted_entries_sorted_invariant', 'eauto', 'eauto', 'intuition', 'repeat', 'erewrite', 'eauto', 'eapply', 'eauto']",3,4,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_client_request,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_timeout,"['red', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'exfalso', 'subst', 'simpl', 'subst', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'intuition', 'find_false', 'repeat', 'eauto']",3,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,ghost_log_correct_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogCorrectProof.json,glci,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_appendEntries,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'repeat', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'eapply', 'eauto', 'eauto']",3,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_appendEntriesReply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'repeat', 'find_copy_apply_lem_hyp', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_requestVote,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'repeat', 'find_copy_apply_lem_hyp', 'repeat', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_requestVoteReply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'rewrite', 'eauto']",3,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,doLeader_same_lastApplied,"['intros', 'unfold', 'repeat', 'simpl', 'find_inversion', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,fold_left_max,"['induction', 'simpl', 'auto', 'intros', 'specialize', 'forward', 'eauto', 'concludes', 'forward', '[eapply le_trans', 'eauto', 'eauto', 'concludes', 'auto']",0,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,advanceCommitIndex_commitIndex,"['intros', 'unfold', 'simpl', 'apply', 'auto', 'intros', 'do_in_map', 'subst', 'find_apply_lem_hyp', 'repeat', 'do_bool']",1,2,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,doLeader_same_commitIndex,"['intros', 'unfold', 'repeat', 'tuple_inversion', 'auto', 'eauto', 'eapply', '[eapply advanceCommitIndex_commitIndex with (h := h0)|]', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_doLeader,"['red', 'unfold', 'intros', 'subst', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'repeat', 'eapply', '[|eauto]', 'eauto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,doGenericServer_lastApplied,"['intros', 'unfold', 'break_let', 'find_inversion', 'simpl', 'break_if', 'simpl', 'do_bool', 'auto', 'use_applyEntries_spec', 'subst', 'simpl', 'eauto', 'use_applyEntries_spec', 'subst', 'simpl', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_doGenericServer,"['red', 'unfold', 'intros', 'subst', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'repeat', 'erewrite', 'eauto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_clientRequest,"['red', 'unfold', 'intros', 'subst', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'repeat', 'eauto']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_timeout,"['red', 'unfold', 'intros', 'subst', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'repeat', 'eauto']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_reboot,"['red', 'unfold', 'intros', 'subst', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_state_same_packet_subset,"['red', 'unfold', 'intros', 'subst', 'simpl', 'repeat', 'auto']",2,2,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_init,"['red', 'unfold', 'intros', 'simpl', 'auto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lastApplied_le_commitIndex_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LastAppliedLeCommitIndexProof.json,lalcii,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,candidate_term_gt_log_lifted,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_term_sanity_unchanged,"['unfold', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'simpl', '[find_rewrite|]', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_term_sanity_request_vote_reply,"['term_sanity_start_update', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'find_eapply_lem_hyp', 'auto', 'unfold', 'simpl', 'subst', 'intuition', 'eauto', 'repeat', 'try', 'find_apply_lem_hyp', 'unfold', 'simpl', 'repeat', 'simpl', 'unfold', 'subst', 'repeat', 'eapply', 'auto']",0,2,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_term_sanity_invariant,"['intros', 'apply', 'auto', 'term_sanity_start', 'contradiction', 'term_sanity_unchanged', 'term_sanity_unchanged', 'term_sanity_unchanged', 'term_sanity_unchanged', 'term_sanity_unchanged', 'apply', 'term_sanity_break_update', 'term_sanity_break_update', 'term_sanity_start', 'find_reverse_higher_order_rewrite', 'eauto', 'term_sanity_break_update']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_unchanged,"['unfold', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'find_rewrite', 'find_apply_hyp_hyp', 'omega', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_init,"['currentTerm_sanity_start', 'contradiction']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_client_request,"['currentTerm_sanity_unchanged', 'apply', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_timeout,"['currentTerm_sanity_unchanged', 'apply', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_append_entries,"['currentTerm_sanity_unchanged', 'apply', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_append_entries_reply,"['currentTerm_sanity_unchanged', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_request_vote,"['currentTerm_sanity_unchanged', 'apply', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_request_vote_reply,"['currentTerm_sanity_start_update', 'simpl', 'find_eapply_lem_hyp', '[|auto].', 'find_copy_apply_lem_hyp', 'intuition', 'find_apply_hyp_hyp', 'repeat', 'auto', 'find_apply_hyp_hyp', 'omega', 'find_apply_hyp_hyp', 'repeat', 'auto', 'subst', 'auto', 'subst', 'auto', 'subst', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_do_leader,"['currentTerm_sanity_unchanged', 'find_rewrite', 'auto', 'find_rewrite', 'simpl', 'find_apply_lem_hyp', 'intuition']",0,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_state_same_packet_subset,"['currentTerm_sanity_start', 'find_reverse_higher_order_rewrite', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_reboot,"['currentTerm_sanity_start_update', 'specialize', 'repeat', 'find_apply_hyp_hyp', 'subst', 'unfold', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_unchanged,"['unfold', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', '[|eauto].', 'simpl', 'repeat', 'intuition', 'find_apply_hyp_hyp', 'omega']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_init,"['ctsc_start', 'contradiction']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_client_request,"['ctsc_unchanged', 'apply', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_timeout,"['ctsc_start_update', 'subst', 'simpl', 'find_rewrite_lem', 'find_apply_lem_hyp', 'intuition', 'repeat', 'find_apply_hyp_hyp', 'omega', 'find_apply_lem_hyp', 'auto', 'repeat', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_append_entries,"['ctsc_unchanged', 'apply', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'intuition', 'right', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_append_entries_reply,"['ctsc_unchanged', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'intuition', 'right', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_request_vote,"['ctsc_unchanged', 'apply', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'intuition', 'right', 'congruence']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_request_vote_reply,"['ctsc_start_update', 'simpl', 'find_eapply_lem_hyp', '[|auto].', 'intuition', 'find_copy_apply_lem_hyp', 'intuition', 'find_rewrite', 'find_apply_hyp_hyp', 'omega', 'find_contradiction', 'find_contradiction', 'subst', 'unfold', 'simpl', 'find_contradiction']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_do_leader,"['ctsc_unchanged', 'find_rewrite', 'auto', 'find_rewrite', 'simpl', 'find_apply_lem_hyp', 'intuition', 'find_rewrite', 'simpl', 'find_apply_lem_hyp', 'intuition']",0,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_do_generic_server,"['ctsc_unchanged', 'find_rewrite', 'auto', 'find_rewrite', 'simpl', 'find_apply_lem_hyp', 'intuition', 'find_rewrite', 'simpl', 'find_apply_lem_hyp', 'intuition']",0,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_state_same_packet_subset,"['ctsc_start', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_reboot,"['ctsc_start_update', 'subst', 'simpl', 'discriminate']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,leaderLogs_currentTerm_sanity_candidate_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsTermSanityProof.json,lltsi,"['split', 'apply', 'apply', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,quorum_preserved,"['intros', 'break_exists_exists', 'intuition', 'find_apply_hyp_hyp', 'break_exists_exists', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'eapply', '[|eauto].', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'auto', 'eapply', '[|eauto].', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'auto']",3,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'eapply', '[|eauto].', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'eapply', '[|eauto].', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,update_elections_data_request_vote_votesWithLog_old,"['intros', 'unfold', 'repeat', 'simpl', 'intuition']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_request_vote,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_rewrite_lem', 'eapply', '[|eauto].', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'eapply', '[|eauto].', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,wonElection_dedup_spec,"['intros', 'exists', 'intuition', 'eauto', 'unfold', 'do_bool', 'omega']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,update_elections_data_timeout_votesWithLog_old,"['intros', 'unfold', 'repeat', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|eapply quorum_preserved', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'apply', 'auto', 'find_rewrite_lem', 'eapply', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'apply', 'auto']",3,1,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|eapply quorum_preserved', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'auto', 'find_rewrite_lem', 'eapply', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'auto']",3,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'solve', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'solve', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'solve', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eapply', '[|eauto]', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,leaderLogs_votesWithLog_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsVotesWithLogProof.json,llvwli,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_predicate_TTLM_preserved,"['unfold', 'intuition', 'repeat', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,handleClientRequest_TTLM,"['unfold', 'intros', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'try', 'break_exists', 'intuition', 'subst', 'repeat', 'auto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_client_request,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'eauto', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",1,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,handleTimeout_TTLM,"['unfold', 'intros', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'try']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_timeout,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'eauto', 'eauto', 'do_in_map', 'find_eapply_lem_hyp', 'eauto', 'subst', 'exfalso', 'eauto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,handleAppendEntries_TTLM,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_append_entries,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'eauto', 'eauto', 'find_apply_lem_hyp', 'subst', 'exfalso', 'eauto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,handleAppendEntriesReply_TTLM,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_append_entries_reply,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'eauto', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",1,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,handleRequestVote_TTLM,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_request_vote,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'eauto', 'eauto', 'find_apply_lem_hyp', 'subst', 'exfalso', 'eauto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,update_elections_data_RVR_ascending_leaderLog,"['unfold', 'intros', 'repeat', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'try', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,doLeader_TTLM,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,doLeader_message_entries,"['intros', 'unfold', 'break_match', 'try', 'simpl', 'intuition', 'break_if', 'try', 'simpl', 'intuition', 'find_inversion', 'simpl', 'do_in_map', 'subst', 'simpl', 'find_inversion', 'eauto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,lifted_one_leader_per_term,"['intros', 'eapply', 'simpl', 'repeat', 'repeat', 'simpl', 'auto', 'simpl', 'repeat', 'simpl', 'auto']",0,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_do_leader,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'match', 'auto', 'eauto', 'eauto', 'do_in_map', 'subst', 'simpl', 'repeat', 'find_copy_eapply_lem_hyp', 'match', 'auto', 'eauto', 'break_and', 'update_destruct_simplify', 'erewrite', 'eauto', 'exfalso', 'eauto']",1,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,doGenericServer_TTLM,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'try', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",3,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_do_generic_server,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'match', 'auto', 'eauto', 'eauto', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",1,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_state_same_packet_subset,"['unfold', 'simpl', 'intros', 'repeat', 'eauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_reboot,"['unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'discriminate', 'eauto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendEntries_leader_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesLeaderProof.json,appendeli,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_client_request,"['unfold', 'simpl', 'intros', 'subst', 'repeat', 'destruct_update', 'simpl', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'rewrite', 'intuition', 'intuition', 'break_exists', 'intuition', 'find_rewrite', 'simpl', 'intuition', 'find_inversion', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', '{', 'destruct_update', 'simpl', 'rewrite', 'intuition', 'intuition', '}', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', '{', 'destruct_update', 'simpl', 'rewrite', 'intuition', 'intuition', '}']",1,4,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_timeout,"['unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'find_rewrite_lem', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'rewrite', 'intuition', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'rewrite', 'intuition', 'intuition']",2,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_append_entries_reply,"['unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'auto', 'intuition']",2,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_request_vote,"['unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'find_rewrite_lem', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'rewrite', 'auto', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'rewrite', 'auto', 'intuition']",2,3,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_request_vote_reply,"['unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'find_rewrite_lem', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'intuition', 'apply', 'auto', 'auto', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'intuition', 'apply', 'auto', 'auto']",2,2,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_do_leader,"['unfold', 'simpl', 'intros', 'repeat', 'match', '(replace d with (snd (nwState net h)) in * by (now rewrite H)))', 'clear', 'destruct_update', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'auto', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'repeat', 'destruct_update', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_do_generic_server,"['unfold', 'simpl', 'intros', 'repeat', 'match', '(replace d with (snd (nwState net h)) in * by (now rewrite H)))', 'clear', 'destruct_update', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'auto', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'repeat', 'destruct_update', 'auto']",2,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_state_same_packet_subset,"['unfold', 'simpl', 'intros', 'find_reverse_higher_order_rewrite', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_reverse_higher_order_rewrite', 'auto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_reboot,"['unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'match', '(replace d with (snd (nwState net h)) in * by (now rewrite H)))', 'clear', 'subst', 'destruct_update', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'intuition', 'auto', 'find_apply_hyp_hyp', 'intuition', 'right', 'break_exists_exists', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'intuition', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,allEntries_leaderLogs_term_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsTermProof.json,aellti,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_nw_packets_unchanged,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_nw_only_new_packets_matter,"['unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_nw_no_append_entries,"['intros', 'eapply', 'eauto', 'unfold', 'intros', 'simpl', 'do_in_map', 'subst', 'simpl', 'find_apply_hyp_hyp', 'exfalso', 'match', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_nw_not_append_entries,"['intros', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'unfold', 'eauto', 'subst', 'exfalso', 'match', 'repeat', 'eauto']",4,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_init,"['unfold', 'intuition', 'unfold', 'intros', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,doLeader_spec,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_do_leader,"['unfold', 'intuition', 'unfold', 'intros', 'simpl', 'find_apply_lem_hyp', 'find_higher_order_rewrite', 'break_if', 'subst', 'intuition', 'repeat', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'unfold', 'repeat', 'repeat', 'try', 'repeat', 'subst', 'simpl', 'find_inversion', 'find_apply_lem_hyp', 'eauto']",3,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,doGenericServer_spec,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'intuition', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_do_generic_server,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'break_match', 'eauto', 'subst', 'repeat', 'eauto', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,handleClientRequest_messages,"['intros', 'unfold', 'break_match', 'find_inversion', 'subst', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_client_request,"['unfold', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'break_if', 'eauto', 'unfold', 'subst', 'break_match', 'find_inversion', 'eauto', 'simpl', 'intuition', 'subst', 'simpl', 'auto', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,handleTimeout_spec,"['intros', 'unfold', 'repeat', 'find_inversion', 'subst', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_timeout,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'break_if', 'eauto', 'subst', 'repeat', 'eapply', '[|eauto]', 'eauto', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,handleAppendEntries_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition', 'try', 'congruence', 'in_crush', 'eauto']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_append_entries,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'break_if', 'eauto', 'subst', 'find_apply_hyp_hyp', 'intuition', 'eapply', '[|eauto]', 'eauto', 'subst', 'eapply_prop', 'eauto', 'match', 'pDst', 'pBody', 'pDst', 'pBody', 'eauto', 'intros', 'find_apply_hyp_hyp', 'find_rewrite', 'in_crush']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_unaffected,"['intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'break_if', 'eauto', 'subst', 'repeat', 'eapply', '[|eauto].', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'intros', 'match', 'in_crush', 'eapply_prop', 'eauto', 'exfalso', 'do_in_map', 'subst', 'simpl', 'find_apply_hyp_hyp', 'find_rewrite', 'repeat', 'eauto']",4,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_unaffected_1,"['intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'break_if', 'eauto', 'subst', 'repeat', 'eapply', '[|eauto].', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'intros', 'match', 'in_crush', 'eapply_prop', 'eauto', 'exfalso', 'subst', 'repeat', 'forwards', 'intuition', 'repeat', 'eauto']",4,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_unaffected_0,"['intros', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'find_higher_order_rewrite', 'break_if', 'eauto', 'subst', 'repeat', 'eapply', '[|eauto].', 'eauto', 'unfold', 'intros', 'simpl', 'find_apply_hyp_hyp', 'match', 'in_crush', 'eapply_prop', 'eauto']",4,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,handleAppendEntriesReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition', 'try', 'congruence', 'in_crush', 'eauto']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_append_entries_reply,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,handleRequestVote_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition', 'try', 'congruence', 'in_crush', 'eauto']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_request_vote,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,handleRequestVoteReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_request_vote_reply,"['unfold', 'intros', 'find_apply_lem_hyp', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_state_same_packet_subset,"['unfold', 'intros', 'intuition', 'repeat', 'eauto', 'find_apply_hyp_hyp', 'eauto']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_reboot,"['unfold', 'intuition', 'repeat', 'simpl', 'subst', 'break_if', 'simpl', 'intuition', 'find_reverse_rewrite', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,no_entries_past_current_term_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/TermSanityProof.json,tsi,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_do_leader,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_do_generic_server,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'subst', 'simpl', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_append_entries,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'subst', 'simpl', 'subst', 'find_eapply_lem_hyp', 'eauto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_append_entries_reply,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'intuition']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_request_vote,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'repeat', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_request_vote_reply,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_client_request,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition']",1,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_timeout,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'simpl', 'match', 'unfold', 'repeat', 'repeat', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_state_same_packet_subset,"['red', 'red', 'intros', 'simpl', 'find_apply_hyp_hyp', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_reboot,"['red', 'red', 'intros', 'simpl', 'find_reverse_rewrite', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_init,"['red', 'red', 'intros', 'simpl', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,no_append_entries_replies_to_self_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/NoAppendEntriesRepliesToSelfProof.json,noaertsi,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_client_request,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto', 'find_apply_lem_hyp', 'intuition', 'find_rewrite', 'eauto', 'break_exists', 'break_and', 'find_rewrite', 'simpl', 'intuition', 'subst', 'omega']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_timeout,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto', 'find_rewrite_lem', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,lifted_taifol_nw,"['intros', 'pose', 'match', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_append_entries,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto', 'find_apply_lem_hyp', 'intuition', 'eapply', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_append_entries_reply,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_request_vote,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto', 'find_rewrite_lem', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_request_vote_reply,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto', 'find_rewrite_lem', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_do_leader,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto', 'match', 'auto', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_do_generic_server,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct_max_simplify', 'eauto', 'match', 'auto', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_state_same_packet_subset,"['unfold', 'intros', 'repeat', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_reboot,"['unfold', 'intros', 'repeat', 'update_destruct_max_simplify', 'eauto', 'match', 'auto', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,allEntries_indices_gt_0_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesIndicesGt0Proof.json,aeigt0,"['constructor', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_client_request,"['unfold', 'intuition', 'simpl', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'start', 'find_rewrite_lem', 'find_erewrite_lem', 'update_destruct_max_simplify', 'destruct', 'eauto', 'simpl', 'right', 'eauto', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_timeout,"['unfold', 'simpl', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'start', 'find_rewrite_lem', 'find_erewrite_lem', 'update_destruct_max_simplify', 'eauto', 'erewrite', 'eauto', 'repeat', 'try', 'find_rewrite_lem', 'eauto', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,handleAppendEntries_leader,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'discriminate']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_append_entries,"['unfold', 'simpl', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'start', 'find_rewrite_lem', 'find_erewrite_lem', 'update_destruct_max_simplify', 'eauto', 'erewrite', 'congruence', 'eauto', 'repeat', 'try', 'find_rewrite_lem', 'eauto', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_append_entries_reply,"['unfold', 'simpl', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'start', 'find_erewrite_lem', 'update_destruct_max_simplify', 'eauto', 'erewrite', 'eauto', 'repeat', 'try', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_request_vote,"['unfold', 'simpl', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'start', 'find_rewrite_lem', 'find_erewrite_lem', 'update_destruct_max_simplify', 'eauto', 'erewrite', 'eauto', 'repeat', 'try', 'find_rewrite_lem', 'eauto', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,handleRequestVoteReply_RVR_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition', 'try', 'congruence']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,contradict_leaderLogs_term_sanity,"['intros', 'find_copy_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_request_vote_reply,"['unfold', 'simpl', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'subst', 'repeat', 'repeat', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'unfold', 'congruence', 'repeat', 'try', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'subst_max', 'repeat', 'discriminate', 'eauto', 'repeat', 'repeat', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'exfalso', 'eauto', 'subst', 'unfold', 'repeat', 'auto', 'repeat', 'exfalso', 'eapply', 'eauto', 'eauto', 'congruence', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eauto', 'subst', 'unfold', 'repeat', 'eapply', 'eauto', 'eauto', 'repeat', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'subst', 'unfold', 'repeat', 'auto', 'repeat', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'subst', 'unfold', 'repeat', 'discriminate', 'eauto']",0,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_do_leader,"['unfold', 'simpl', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'repeat', 'auto', 'find_rewrite_lem', 'match', 'auto', 'match', 'rewrite', 'auto', 'match', 'auto', 'eauto']",0,3,0,2,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_do_generic_server,"['unfold', 'simpl', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'repeat', 'auto', 'find_rewrite_lem', 'match', 'auto', 'match', 'rewrite', 'auto', 'match', 'auto', 'eauto']",0,3,0,2,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_state_same_packet_subset,"['unfold', 'intuition', 'repeat', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_reboot,"['unfold', 'unfold', 'simpl', 'intuition', 'repeat', 'subst', 'repeat', 'simpl', 'try', 'match', 'eauto', 'rewrite', 'eauto']",0,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,leaderLogs_sublog_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsSublogProof.json,llsli,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'assert', 'repeat', 'intuition', '[in_crush|]', 'exfalso', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'find_inversion', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'eapply_prop_hyp', 'eauto', 'omega']",3,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'assert', 'find_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'in_crush', 'repeat', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'eauto', 'eapply_prop_hyp', 'eauto', 'omega']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_request_vote,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'assert', 'in_crush', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'eapply_prop_hyp', 'eauto', 'omega', 'remember', 'subst', 'simpl', 'subst', 'find_copy_apply_lem_hyp', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'assert', 'in_crush', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'eapply_prop_hyp', 'eauto', 'omega', 'remember', 'subst', 'simpl', 'subst', 'find_copy_apply_lem_hyp', 'intuition', 'subst', 'eapply', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'assert', 'in_crush', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_timeout,"['red', 'unfold', 'intros', 'simpl', 'assert', 'intuition', 'exfalso', 'do_in_map', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,3,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_client_request,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_do_leader,"['red', 'unfold', 'intros', 'simpl', 'assert', 'intuition', 'do_in_map', 'subst', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,2,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'congruence']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,requestVoteReply_term_sanity_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyTermSanityProof.json,rvrtsi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_init,"['unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,candidateEntriesTerm_ext,"['unfold', 'intros', 'break_exists_exists', 'repeat', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,candidateEntriesTerm_same,"['unfold', 'intros', 'break_exists_exists', 'repeat', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_client_request,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'eapply', 'eauto', 'eapply', 'eauto', 'intros', 'update_destruct_simplify', 'auto', 'now', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'subst', 'simpl', 'exfalso', 'eapply', 'eauto', 'find_rewrite', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,update_elections_data_timeout_cronies,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'break_match', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,handleClientRequest_preserves_candidateEntriesTerm,"['unfold', 'intros', 'break_exists_exists', 'break_and', 'match', 'eapply', 'break_or_hyp', 'update_destruct_simplify', 'auto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'auto', 'simpl', 'omega', 'update_destruct_simplify', 'auto', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'break_exists', 'find_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'auto', 'intuition', 'subst', 'repeat', 'auto', 'simpl', 'omega']",2,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_timeout,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'eapply', 'eauto', 'eapply', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'subst', 'simpl', 'exfalso', 'eapply', 'eauto', 'find_rewrite', 'eauto']",1,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,handleAppendEntries_preserves_candidateEntriesTerm,"['unfold', 'intros', 'break_exists_exists', 'break_and', 'update_destruct_simplify', 'rewrite', 'find_apply_lem_hyp', 'intuition', 'subst', 'repeat', 'auto', 'discriminate', 'intuition']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_append_entries,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'eapply', 'eauto', 'eapply', 'eauto', 'exfalso', 'eapply', 'eauto', 'simpl', 'subst', 'eauto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,handleAppendEntriesReply_preserves_candidateEntriesTerm,"['unfold', 'intros', 'break_exists_exists', 'find_apply_lem_hyp', 'update_destruct_simplify', 'intuition', 'repeat', 'auto', 'discriminate', 'auto']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_append_entries_reply,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'eapply', 'eauto', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,handleRV_advanceCurrentTerm_preserves_candidateEntriesTerm,"['unfold', 'intros', 'break_exists_exists', 'update_destruct_simplify', 'intuition', 'now', 'intros', 'match', 'intuition', 'repeat', 'auto', 'congruence']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,handleRequestVote_preserves_candidateEntriesTerm,"['unfold', 'intros', 'break_exists_exists', 'update_destruct_simplify', 'intuition', 'now', 'unfold', 'repeat', 'do_bool', 'repeat', 'simpl', 'break_and', 'try', 'auto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_request_vote,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'eapply', 'eauto', 'eapply', 'eauto', 'exfalso', 'eapply', 'eauto', 'simpl', 'subst', 'eauto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,handleRequestVoteReply_preserves_candidateEntriesTerm,"['unfold', 'intros', 'break_exists_exists', 'update_destruct_simplify', 'auto', 'break_and', 'unfold', 'simpl', 'unfold', 'match', 'find_copy_apply_lem_hyp', 'repeat', 'intuition', 'repeat', 'intuition', 'simpl', 'break_if', 'auto', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'match', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'destruct', 'intuition', 'find_apply_lem_hyp', 'auto', 'eapply', 'eauto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_request_vote_reply,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'find_eapply_lem_hyp', '[|solve[eauto]].', 'eapply', 'eauto', 'subst', 'eapply', 'eauto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,doLeader_preserves_candidateEntriesTerm,"['unfold', 'intros', 'break_exists_exists', 'break_and', 'update_destruct_simplify', 'auto', 'split', 'match', 'auto', 'intuition', 'match', 'auto', 'clear', 'find_apply_lem_hyp', 'intuition', 'subst', 'repeat', 'auto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,getNextIndex_ext,"['unfold', 'intros', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,replicaMessage_ext,"['unfold', 'intros', 'repeat', 'repeat', 'repeat', 'erewrite', 'congruence']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_do_leader,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'eapply', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'subst', 'simpl', 'find_copy_eapply_lem_hyp', 'eauto', 'break_and', 'intuition', 'omega', 'break_exists', 'break_and', 'red', 'find_apply_lem_hyp', 'unfold', 'find_apply_lem_hyp', 'break_and', 'match', 'auto', 'replace', 'auto', 'eapply_prop_hyp', 'subst', 'find_eapply_lem_hyp', 'eauto', 'match', 'unfold', 'break_exists_exists', 'find_higher_order_rewrite', 'update_destruct_simplify', 'auto']",1,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,doGenericServer_preserves_candidateEntriesTerm,"['intros', 'find_apply_lem_hyp', 'break_and', 'eapply', 'eauto', 'intros', 'update_destruct_simplify', 'auto', 'find_rewrite', 'simpl', 'auto', 'intros', 'update_destruct_simplify', 'auto', 'repeat', 'auto', 'intros', 'update_destruct_simplify', 'auto', 'repeat', 'auto']",0,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_do_generic_server,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'break_or_hyp', 'eapply', 'eauto', 'eapply', 'eauto', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_state_same_packet_subset,"['unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'eapply', 'auto', 'eauto']",1,2,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_reboot,"['unfold', 'simpl', 'intros', 'eapply', 'eauto', 'repeat', 'find_apply_hyp_hyp', 'unfold', 'break_exists_exists', 'update_destruct_simplify', 'auto', 'repeat', 'simpl', 'intuition', 'discriminate']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,prevLog_candidateEntriesTerm_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/PrevLogCandidateEntriesTermProof.json,plceti,"['constructor', 'apply']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,refined_raft_invariant_handle_message,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', '[eapply_prop refined_raft_net_invariant_request_vote| eapply_prop refined_raft_net_invariant_request_vote_reply| eapply_prop refined_raft_net_invariant_append_entries| eapply_prop refined_raft_net_invariant_append_entries_reply]', 'eauto', 'unfold', 'simpl', 'intros', 'subst', 'auto', 'find_apply_hyp_hyp', 'intuition']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,refined_raft_invariant_handle_input,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', '[eapply_prop refined_raft_net_invariant_timeout| eapply_prop refined_raft_net_invariant_client_request]', 'eauto', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,refined_raft_invariant_handle_message',"['intros', 'unfold', 'break_match', 'repeat', 'repeat', ""[eapply_prop refined_raft_net_invariant_request_vote'| eapply_prop refined_raft_net_invariant_request_vote_reply'| eapply_prop refined_raft_net_invariant_append_entries'| eapply_prop refined_raft_net_invariant_append_entries_reply']"", 'eauto', 'unfold', 'simpl', 'intros', 'subst', 'auto', 'find_apply_hyp_hyp', 'intuition']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,refined_raft_invariant_handle_input',"['intros', 'unfold', 'break_match', 'repeat', 'repeat', ""[eapply_prop refined_raft_net_invariant_timeout'| eapply_prop refined_raft_net_invariant_client_request']"", 'eauto', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,lift_prop,"['intros', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,lower_prop,"['intros', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,deghost_spec,"['intros', 'destruct', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftRefinementProof.json,rri,"['split', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsProof.json,leader_without_missing_entry_invariant,"['intros', 'unfold', 'find_apply_lem_hyp', 'unfold', 'intros', 'copy_eapply_prop_hyp', 'intuition', 'right', 'break_exists', 'intuition', 'repeat', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsProof.json,appendEntriesRequest_exists_leaderLog_invariant,"['intros', 'unfold', 'apply', 'auto']",1,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsProof.json,appendEntriesRequest_leaderLog_not_in_invariant,"['unfold', 'intros', 'find_copy_apply_lem_hyp', 'unfold', 'pose', 'match', 'eauto', 'break_exists', 'break_and', 'pose', 'break_and', 'subst', 'intro', 'match', 'apply', 'right', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'break_and', 'subst', 'omega', 'break_exists', 'intuition', 'subst', 'unfold', 'intuition', 'eapply', 'eauto', 'pose', 'eapply', 'eauto', 'omega', 'subst', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsProof.json,leaderLogs_leader_invariant,"['unfold', 'intros', 'find_apply_lem_hyp', 'auto', 'break_exists_exists', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AllEntriesLeaderLogsProof.json,aelli,"['split', 'intros', 'red', 'intuition', 'auto', 'auto', 'auto', 'auto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,state_machine_safety_deghost,"['intros', 'unfold', 'intuition', 'unfold', 'intros', 'do', 'unfold', 'intuition', 'eauto', 'unfold', 'intros', 'eapply_prop_hyp', 'unfold', 'intuition', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'subst', 'simpl', 'repeat', 'simpl', 'subst', 'eapply_prop_hyp', 'repeat', 'simpl', 'eauto']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_init,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleClientRequest_lastApplied,"['unfold', 'intros', 'repeat', 'find_inversion', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,msg_lifted_sorted_host,"['intros', 'rewrite', 'eapply', 'auto', 'auto']",0,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_sorted_network,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_no_entries_past_current_term_host_invariant,"['intros', 'enough', 'simpl', 'repeat', 'simpl', 'auto', 'apply', 'eauto', 'intros', 'eapply', 'eauto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,all_the_way_deghost_spec,"['intros', 'rewrite', 'rewrite', 'auto']",0,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,all_the_way_simulation_1,['auto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_client_request,"['unfold', 'simpl', 'intros', 'find_copy_apply_lem_hyp', 'intuition', 'simpl', 'repeat', 'update_destruct_simplify', 'auto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'match', 'eapply', 'eauto', 'auto', 'apply', 'auto']",1,2,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_timeout,"['unfold', 'intuition', 'simpl', 'repeat', 'update_destruct_simplify', 'auto', 'erewrite', 'erewrite', 'eauto', 'erewrite', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleAppendEntries_lastApplied,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,sorted_maxIndex_app,"['induction', 'intros', 'simpl', 'intuition', 'destruct', 'intuition', 'simpl', 'specialize', 'conclude', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,max_min_thing,"['intros', 'destruct', 'intuition']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,in_ghost_packet,"['unfold', 'simpl', 'intuition', 'apply', 'eexists', 'eauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,in_mgv_ghost_packet,"['unfold', 'simpl', 'intuition', 'apply', 'eexists', 'eauto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,pBody_deghost_packet,"['unfold', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,pDst_deghost_packet,"['unfold', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,pDst_mgv_deghost_packet,"['unfold', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,pBody_mgv_deghost_packet,"['unfold', 'simpl', 'auto']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,contiguous_range_exact_lo_elim_exists,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,contiguous_range_exact_lo_elim_lt,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_recorded_lift_intro,"['unfold', 'intros', 'rewrite', 'auto']",2,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,msg_commit_recorded_lift_intro,"['unfold', 'intros', 'rewrite', 'rewrite', 'auto']",2,0,0,3,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_entries_contiguous_invariant,"['unfold', 'intros', 'pose', 'find_rewrite_lem', 'auto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_append_entries_reply,"['unfold', 'intuition', 'repeat', 'update_destruct_simplify', 'auto', 'erewrite', 'erewrite', 'auto', 'erewrite', 'erewrite', 'auto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_request_vote,"['unfold', 'intuition', 'repeat', 'update_destruct_simplify', 'auto', 'erewrite', 'erewrite', 'auto', 'erewrite', 'erewrite', 'auto']",0,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_request_vote_reply,"['unfold', 'intuition', 'repeat', 'update_destruct_simplify', 'auto', 'rewrite', 'rewrite', 'auto', 'rewrite', 'rewrite', 'auto']",0,0,0,2,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,doLeader_same_lastApplied,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,fold_left_maximum_le',"['induction', 'intros', 'auto', 'simpl', 'apply', 'apply', 'omega']",1,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,fold_left_maximum_le,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,fold_left_maxmimum_increase_init,"['induction', 'intros', 'auto', 'simpl', 'revert', 'repeat', 'intros', 'eauto', 'assert', 'subst_max', 'eauto', 'subst', 'pose', 'assert', 'eauto', 'subst', 'pose', 'assert', 'assert', 'subst', 'auto']",1,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,fold_left_maximum_cases,"['induction', 'simpl', 'auto', 'intros', 'specialize', 'intuition', 'revert', 'apply', 'intuition', 'intuition', 'break_exists', 'break_and', 'eauto']",0,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,fold_left_maximum_ind,"['intros', 'destruct', 'find_rewrite', 'auto', 'break_exists', 'break_and', 'find_rewrite', 'eauto']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,doLeader_same_commitIndex,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'auto', 'apply', 'auto', 'intros', 'do_in_map', 'find_apply_lem_hyp', 'subst', 'break_and', 'apply', 'eauto', 'intros', 'do_in_map', 'find_apply_lem_hyp', 'break_and', 'subst', 'apply', 'eauto']",3,1,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_do_leader,"['unfold', 'intuition', 'repeat', 'update_destruct_simplify', 'auto', 'erewrite', 'erewrite', 'repeat', 'unfold', 'simpl', 'repeat', 'auto', 'repeat', 'unfold', 'simpl', 'repeat', 'simpl', 'erewrite', 'eauto', 'find_eapply_lem_hyp', 'unfold', 'simpl', 'find_rewrite', 'auto']",0,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,doGenericServer_lastApplied,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'do_bool', 'revert', 'eapply', 'eauto', 'do_bool', 'revert', 'eapply', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_do_generic_server,"['unfold', 'intuition', 'find_higher_order_rewrite', 'update_destruct_simplify', 'auto', 'erewrite', 'repeat', 'repeat', 'simpl', 'find_apply_lem_hyp', 'unfold', 'simpl', 'intuition', 'repeat', 'auto', 'repeat', 'unfold', 'simpl', 'repeat', 'simpl', 'erewrite', 'auto']",0,1,0,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_state_same_packet_subset,"['unfold', 'intuition', 'find_reverse_higher_order_rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_maxIndex_sanity_reboot,"['unfold', 'unfold', 'intuition', 'find_higher_order_rewrite', 'update_destruct_simplify', 'auto', 'repeat', 'unfold', 'simpl', 'repeat', 'simpl', 'auto']",0,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_init,"['unfold', 'split', 'unfold', 'simpl', 'intuition', 'unfold', 'simpl', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,msg_lifted_lastApplied_le_commitIndex,"['intros', 'pose', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'unfold', 'match', 'find_rewrite_lem', 'find_rewrite_lem', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_directly_committed_directly_committed,"['unfold', 'intuition', 'break_exists_exists', 'intuition', 'rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,directly_committed_lifted_directly_committed,"['unfold', 'intuition', 'break_exists_exists', 'intuition', 'find_apply_hyp_hyp', 'find_rewrite_lem', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_committed_committed,"['unfold', 'intros', 'break_exists_exists', 'rewrite', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,committed_lifted_committed,"['unfold', 'intros', 'break_exists_exists', 'find_rewrite_lem', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,msg_deghost_spec',"['unfold', 'intros', 'simpl', 'destruct', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_lower_commit_recorded_committed,"['unfold', 'intuition', 'repeat', 'repeat', 'rewrite', 'apply', 'auto', 'eauto']",0,0,1,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleClientRequest_currentTerm,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleClientRequest_commitIndex,"['unfold', 'intros', 'repeat', 'repeat', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,directly_committed_allEntries_preserved,"['unfold', 'intuition', 'break_exists_exists', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,update_elections_data_client_request_allEntries,"['intros', 'unfold', 'repeat', 'repeat', 'auto', 'simpl', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'do_bool', 'omega', 'right', 'break_exists_exists', 'intuition', 'congruence']",1,0,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,update_elections_data_client_request_allEntries_ind,"['intros', 'find_apply_lem_hyp', 'intuition', 'find_rewrite', 'auto', 'break_exists', 'intuition', 'repeat', 'auto']",0,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,update_elections_data_client_request_preserves_allEntries,"['intros', 'match', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleClientRequest_preservers_log,"['intros', 'destruct', 'intuition']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,committed_log_allEntries_preserved,"['unfold', 'intros', 'break_exists_exists', 'intuition', 'eapply', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_committed_log_allEntries_preserved,"['intros', 'find_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'apply', 'eapply', 'eauto', 'intros', 'repeat', 'rewrite', 'auto']",1,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lift_max_index_sanity,"['intros', 'match', 'clear', 'unfold', 'break_and', 'repeat', 'repeat', 'repeat', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,haveNewEntries_log,"['unfold', 'intros', 'find_rewrite', 'auto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,hCR_preserves_committed,"['intros', 'eapply', 'simpl', 'eauto', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'eauto', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,not_empty_intro,"['unfold', 'intros', 'break_match', 'congruence']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,haveNewEntries_true_intro,"['unfold', 'intros', 'do_bool', 'split', 'auto', 'break_match', 'auto', 'apply', 'do_bool', 'intuition']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_client_request,"['unfold', 'intros', 'split', '{', 'unfold', 'break_and', 'unfold', 'intros', 'simpl', 'repeat', 'rewrite', 'repeat', 'simpl', 'repeat', 'rewrite', 'rewrite', 'match', 'update_destruct_simplify', 'find_copy_apply_lem_hyp', 'break_and', 'break_or_hyp', 'repeat', 'eapply', 'eauto', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'repeat', 'auto', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'eauto', 'break_exists', 'break_and', 'repeat', 'simpl', 'match', 'find_eapply_lem_hyp', 'auto', 'break_and', 'simpl', 'omega', '{', 'eapply', 'eauto', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'repeat', 'auto', 'find_reverse_rewrite', 'eapply', 'eauto', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'eauto', '}', 'eapply', 'eauto', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'repeat', 'eauto', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'eauto', '}', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'eapply', 'eauto', 'simpl', 'subst', 'auto', 'unfold', 'do_in_map', 'unfold', 'do_in_map', 'subst', 'simpl', 'exfalso', 'eapply', 'eauto']",4,3,0,1,5,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleTimeout_preserves_committed,"['intros', 'eapply', 'eauto', 'intros', 'repeat', 'update_destruct_simplify', 'now', 'auto', 'intros', 'repeat', 'update_destruct_simplify', 'now', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_committed_monotonic,"['unfold', 'intros', 'break_exists_exists', 'intuition']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_timeout,"['unfold', 'simpl', 'intuition', 'unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'match', 'match', 'eapply', '[eauto|].', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'eapply', 'eauto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'eapply', 'eauto', 'simpl', 'intros', 'subst', 'auto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'exfalso', 'eauto']",2,4,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,committed_ext,"['unfold', 'simpl', 'intros', 'break_exists_exists', 'find_higher_order_rewrite', 'intuition', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'auto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_committed_ext,"['intros', 'apply', 'find_apply_lem_hyp', 'unfold', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_state_machine_safety_nw'_invariant,"['intros', 'unfold', 'intros', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'match', 'auto', 'eapply', 'eauto', 'eapply', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_entries_sorted_nw,"['intros', 'find_apply_lem_hyp', 'match', 'auto', 'find_eapply_lem_hyp', 'eauto', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,update_elections_data_appendEntries_preserves_allEntries',"['unfold', 'intros', 'break_let', 'break_match', 'auto', 'break_if', 'auto', 'simpl', 'intuition']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_transitive_commit_invariant,"['intros', 'apply', 'find_apply_lem_hyp', 'repeat', 'eapply', 'eauto', 'eapply', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleAppendEntries_currentTerm_le,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'do_bool', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleAppendEntries_log_detailed,"['intros', 'unfold', 'break_if', '[find_inversion', 'subst', 'eauto', 'break_if', '[do_bool', 'break_if', 'find_inversion', 'subst', 'try', 'simpl', 'intuition', 'simpl', 'intuition', 'break_match', '[|find_inversion', 'subst', 'eauto', 'break_if', '[find_inversion', 'subst', 'eauto', 'break_if', '[|find_inversion', 'subst', 'eauto', 'find_inversion', 'subst', 'simpl', 'right', 'right', 'find_apply_lem_hyp', 'intuition', 'do_bool', 'find_apply_lem_hyp', 'intuition', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_entries_gt_0_nw_invariant,"['unfold', 'intros', 'pose', 'unfold', 'find_apply_lem_hyp', 'match', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_entries_sorted_nw'_invariant,"['intros', 'pose', 'find_copy_apply_hyp_hyp', 'unfold', 'intros', 'find_apply_lem_hyp', 'eapply_prop_hyp', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleAppendEntriesReply_preserves_commit,"['intros', 'eapply', 'eauto', 'intros', 'repeat', 'update_destruct_simplify', 'now', 'auto', 'intros', 'repeat', 'update_destruct_simplify', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_append_entries_reply,"['unfold', 'simpl', 'intros', 'split', 'unfold', 'simpl', 'intuition', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'match', 'match', 'eapply', '[eauto|].', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'eapply', 'eauto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'eapply', 'eauto', 'simpl', 'subst', 'auto', 'do_in_map', 'unfold', 'do_in_map', 'subst', 'simpl', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",1,3,0,0,5,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleRequestVote_preserves_committed,"['intros', 'eapply', 'eauto', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'now', 'auto', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'now', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_request_vote,"['unfold', 'simpl', 'intuition', 'unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'match', 'match', 'eapply', 'eauto', 'find_apply_lem_hyp', 'intuition', 'unfold', 'simpl', 'repeat', 'auto', 'eapply', 'eauto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'intuition', 'eapply', 'eauto', 'simpl', 'intros', 'subst', 'auto', 'subst', 'simpl', 'unfold', 'find_apply_lem_hyp', 'subst', 'exfalso', 'eauto']",2,4,0,1,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,handleRequestVoteReply_preserves_committed,"['intros', 'eapply', 'eauto', 'intros', 'repeat', 'update_destruct_simplify', 'erewrite', 'eauto', 'auto', 'intros', 'repeat', 'update_destruct_simplify', 'rewrite', 'auto', 'auto']",1,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_request_vote_reply,"['unfold', 'simpl', 'intuition', 'unfold', 'simpl', 'intuition', 'match', 'destruct', 'subst', 'subst', 'rewrite_update', 'simpl', 'eapply', 'eauto', 'find_copy_apply_lem_hyp', 'subst', 'match', 'match', 'eapply', 'eauto', 'intuition', 'repeat', 'auto', 'rewrite_update', 'eapply', 'eauto', 'simpl', 'subst', 'auto', 'unfold', 'simpl', 'intros', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'simpl', 'subst', 'auto']",1,2,0,0,6,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,committed_ext',"['unfold', 'simpl', 'intros', 'break_exists_exists', 'find_higher_order_rewrite', 'intuition', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'auto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_committed_ext',"['intros', 'apply', 'find_apply_lem_hyp', 'unfold', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,advanceCommitIndex_committed,"['unfold', 'intros', 'simpl', 'match', 'intuition', 'break_exists', 'break_and', 'find_apply_lem_hyp', 'break_exists_name', 'break_and', 'find_apply_lem_hyp', 'break_and', 'find_apply_lem_hyp', 'do_bool', 'break_and', 'do_bool', 'break_and', 'do_bool', 'unfold', 'exists', 'intuition', 'eapply', 'eauto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_advanceCommitIndex_lifted_committed,"['intros', 'find_apply_lem_hyp', 'match', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,and_imp_2,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_leaders_have_leaderLogs_strong_invariant,"['unfold', 'intros', 'pose', 'rewrite', 'auto']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_one_leaderLog_per_term_invariant,"['unfold', 'intros', 'pose', 'repeat', 'auto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_leaderLog_in_log,"['intros', 'find_copy_apply_lem_hyp', 'auto', 'break_exists_name', 'break_exists_name', 'break_and', 'find_eapply_lem_hyp', 'intuition', 'subst', 'unfold', 'simpl', 'repeat', 'intuition']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_leaders_have_leaderLogs_invariant,"['intros', 'pose', 'unfold', 'intros', 'match', 'repeat', 'auto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,msg_lifted_leader_sublog_host_invariant,"['intros', 'pose', 'simpl', 'unfold', 'intuition', 'match', 'repeat', 'repeat', 'auto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_terms_and_indices_from_one_log,"['intros', 'pose', 'unfold', 'rewrite', 'auto']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,doLeader_preserves_committed,"['intros', 'eapply', 'eauto', 'intros', 'find_higher_order_rewrite', 'update_destruct_simplify', 'intros', 'find_higher_order_rewrite', 'erewrite', 'eauto', 'auto', 'repeat', 'auto', 'auto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,doLeader_message_lci,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'intuition', 'do_in_map', 'unfold', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'repeat', 'auto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,doLeader_message_term,"['unfold', 'intros', 'repeat', 'repeat', 'simpl', 'intuition', 'do_in_map', 'subst', 'unfold', 'simpl', 'find_inversion', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,doGenericServer_preserves_committed,"['intros', 'eapply', 'eauto', 'intros', 'repeat', 'update_destruct_simplify', 'auto', 'now']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_do_generic_server,"['unfold', 'simpl', 'intros', 'match', 'auto', 'replace', 'auto', 'clear', 'intuition', 'unfold', 'simpl', 'intros', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'match', 'match', 'eapply', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'eapply', 'eauto', 'unfold', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'eapply', 'eauto', 'do_in_map', 'unfold', 'do_in_map', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",2,3,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_state_same_packet_subset,"['unfold', 'intuition', 'unfold', 'intros', 'repeat', 'destruct', 'simpl', 'eapply', '[|eauto].', 'simpl', 'auto', 'unfold', 'intros', 'find_apply_hyp_hyp', 'destruct', 'simpl', 'eapply', '[|eauto].', 'auto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,reboot_preserves_committed,"['unfold', 'intros', 'eapply', 'eauto', 'intros', 'repeat', 'update_destruct_simplify', 'auto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_invariant_reboot,"['unfold', 'intros', 'match', 'auto', 'replace', 'auto', 'clear', 'intuition', 'unfold', 'intros', 'repeat', 'update_destruct_simplify', 'eapply', 'eauto', 'unfold', 'intros', 'unfold', 'simpl', 'repeat', 'eapply', 'eauto']",4,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,maxIndex_sanity_lift,"['unfold', 'intros', 'intuition', 'repeat', 'repeat', 'repeat', 'auto']",2,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,maxIndex_sanity_lower,"['unfold', 'intuition', 'rewrite', 'rewrite', 'repeat', 'intuition']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_init,"['unfold', 'intuition', 'apply', 'apply', 'apply', 'apply', '[constructor|].', 'apply', 'apply', 'constructor']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_client_request,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'auto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_timeout,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_append_entries,"['unfold', 'intuition', 'eapply', 'eauto', 'intros', 'find_apply_hyp_hyp', 'intuition', 'right', 'subst', 'unfold', 'auto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_append_entries_reply,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_request_vote,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_request_vote_reply,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_do_leader,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_do_generic_server,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,directly_committed_state_same,"['unfold', 'intuition', 'break_exists_exists', 'intuition', 'find_higher_order_rewrite', 'auto']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,lifted_committed_state_same,"['intuition', 'destruct', 'simpl', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,exists_in_mgv_deghost_packet,"['unfold', 'simpl', 'intros', 'do_in_map', 'subst', 'simpl', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,CRC_state_same_packet_subset,"['unfold', 'intros', 'specialize', 'repeat', 'repeat', 'repeat', 'find_apply_hyp_hyp', 'break_exists_exists', 'repeat', 'repeat', 'repeat', 'intuition', 'break_exists_exists', 'intuition', 'find_apply_hyp_hyp', 'repeat', 'repeat', 'repeat', 'auto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_state_same_packet_subset,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'eapply', 'eauto', 'apply', 'auto', 'eapply', 'eauto', 'auto']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_reboot,"['unfold', 'intuition', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'apply', 'auto', 'eapply', 'eauto', 'apply', 'auto']",0,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,everything_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,state_machine_safety_invariant,"['intros', 'apply', 'intros', 'auto', 'apply', 'intros', 'auto', 'find_apply_lem_hyp', 'unfold', 'intuition']",2,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,maxIndex_sanity_invariant,"['intros', 'apply', 'intros', 'eauto', 'apply', 'intros', 'auto', 'find_apply_lem_hyp', 'unfold', 'intuition', 'auto']",2,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,commit_recorded_committed_invariant,"['intros', 'apply', 'intros', 'auto', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'auto']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,smsi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,misi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineSafetyProof.json,crci,"['split', 'intros', 'find_apply_lem_hyp', 'unfold', 'intros', 'find_rewrite_lem', 'intuition', 'repeat', 'repeat', 'auto']",2,0,0,0,2,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestTermSanityProof.json,lift_sorted,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestTermSanityProof.json,logs_sorted_aerts,"['unfold', 'intuition', 'unfold', 'find_apply_lem_hyp', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestTermSanityProof.json,aertsi,"['split', 'intros', 'find_apply_lem_hyp', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,handleClientRequest_spec,"['intros', 'unfold', 'break_match', 'find_inversion', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_client_request,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_apply_lem_hyp', 'repeat', 'repeat', 'simpl', 'eauto']",2,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,handleTimeout_spec,"['intros', 'unfold', 'repeat', 'repeat', 'simpl', 'auto', 'intuition', 'unfold', 'repeat', 'repeat', 'simpl', 'auto', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_timeout,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eapply', '[|eauto]', 'eauto']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,doLeader_spec,"['intros', 'unfold', 'repeat', 'repeat', 'auto']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_do_leader,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_apply_lem_hyp', 'repeat', 'match', '[|rewrite H', 'auto', 'replace', '[|rewrite H', 'auto', 'eauto']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,doGenericServer_spec,"['intros', 'unfold', 'repeat', 'repeat', 'use_applyEntries_spec', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_do_generic_server,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_apply_lem_hyp', 'repeat', 'match', '[|rewrite H', 'auto', 'replace', '[|rewrite H', 'auto', 'eauto']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,handleAppendEntries_spec,"['intros', 'unfold', 'repeat', 'find_inversion', 'simpl', 'do_bool', 'auto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,update_elections_data_appendEntries_spec,"['intros', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_append_entries,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'eapply', '[|eauto]', 'eauto']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,handleAppendEntriesReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'do_bool', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_append_entries_reply,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_apply_lem_hyp', 'eapply', '[|eauto]', 'eauto']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,handleRequestVote_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'do_bool', 'intuition']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,update_elections_data_requestVote_spec,"['intros', 'unfold', 'repeat', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_request_vote,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'find_apply_lem_hyp', 'find_eapply_lem_hyp', 'eauto', 'eapply', '[|eauto]', 'eauto']",2,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,handleRequestVoteReply_spec,"['intros', 'unfold', 'repeat', 'try', 'subst', 'simpl', 'intuition', 'do_bool', 'intuition']",1,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_request_vote_reply,"['unfold', 'intros', 'subst', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'match', 'unfold', 'match', 'find_copy_apply_lem_hyp', 'intuition', 'unfold', 'break_match', 'simpl', 'repeat', 'eauto', 'break_match', 'eauto', 'subst', 'repeat', 'intuition', 'unfold', 'break_match', 'simpl', 'try', 'unfold', 'congruence', 'eapply', '[|eauto]', 'eauto']",2,1,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_init,"['unfold', 'intros', 'simpl', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_reboot,"['unfold', 'intros', 'simpl', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'eauto', 'simpl', 'match', '[|rewrite H', 'auto', 'replace', '[|rewrite H', 'auto', 'eauto']",3,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_state_same_packet_subset,"['unfold', 'intros', 'repeat', 'eauto']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cronies_term_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CroniesTermProof.json,cti,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'assert', 'repeat', 'intuition', '[in_crush|]', 'exfalso', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'find_inversion', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'eapply_prop_hyp', 'eauto', 'omega']",3,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'assert', 'find_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'in_crush', 'repeat', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'find_copy_apply_lem_hyp', 'intuition', 'eauto', 'eapply_prop_hyp', 'eauto', 'omega']",3,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_request_vote,"['red', 'unfold', 'intros', 'simpl', 'subst', 'assert', 'find_apply_hyp_hyp', 'intuition', 'try', 'exfalso', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'find_inversion', 'congruence', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'eapply_prop_hyp', 'eauto', 'omega']",3,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'assert', 'in_crush', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'do_in_map', 'remember', 'subst', 'simpl', 'congruence']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_client_request,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_do_leader,"['red', 'unfold', 'intros', 'simpl', 'assert', 'intuition', 'do_in_map', 'subst', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,2,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'congruence']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,requestVote_term_sanity_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteTermSanityProof.json,rvtsi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_invariant_same_state,"['unfold', 'intros', 'specialize', 'forward', '[apply H1', 'auto', 'intuition', 'rewrite', 'specialize', 'intuition', 'rewrite', 'auto', 'rewrite', 'auto']",2,0,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_do_leader,"['unfold', 'intros', 'unfold', 'break_match', 'try', 'simpl', 'eapply', 'eauto', 'intuition', 'simpl', 'repeat', 'intuition', 'repeat', 'repeat', 'subst', 'intuition', 'break_if', 'unfold', 'find_inversion', 'simpl', 'unfold', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'repeat', 'simpl', 'intuition', 'unfold', 'intros', 'simpl', 'repeat', 'find_apply_hyp_hyp', 'break_if', 'intuition', 'simpl', 'subst', 'intuition', 'simpl', 'repeat', 'subst', 'simpl', 'find_inversion', 'eauto', 'find_inversion', 'unfold', 'intuition', 'find_higher_order_rewrite', 'repeat', 'simpl', 'subst', 'repeat', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto']",4,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_client_request,"['unfold', 'intros', 'unfold', 'intuition', 'break_match', 'find_inversion', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'simpl', 'in_crush_finish', 'intuition', 'in_crush', 'eauto', 'exfalso', 'match', 'assert', 'eauto', 'intuition', 'break_match', 'find_inversion', 'simpl', 'repeat', 'repeat', 'find_apply_hyp_hyp', 'intuition', 'subst', 'simpl', 'in_crush', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_timeout,"['unfold', 'intros', 'unfold', 'intuition', 'simpl', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'solve_by_inversion', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'try', 'in_crush', 'repeat', 'discriminate']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_append_entries,"['unfold', 'intros', 'unfold', 'intuition', 'simpl', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'do_in_app', 'intuition', 'eauto', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'subst', 'try']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_append_entries_reply,"['unfold', 'intros', 'unfold', 'intuition', 'simpl', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'try']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_request_vote,"['unfold', 'intros', 'unfold', 'intuition', 'simpl', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'subst', 'try']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,candidate_entries_lowered',"['unfold', 'intros', 'break_and', 'rewrite', 'apply_prop_hyp', 'eapply', 'auto', 'repeat', 'eauto']",2,0,1,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,candidate_entries_lowered,"['intros', 'pattern', 'apply', 'auto', 'clear', 'intros', 'repeat', 'eapply', 'eauto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,deghost_packet_exists,"['unfold', 'simpl', 'intros', 'do_in_map', 'eauto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,candidate_entries_lowered_rvr',"['unfold', 'intros', 'break_and', 'rewrite', 'find_apply_lem_hyp', 'break_exists', 'break_and', 'subst', 'apply_prop_hyp', 'eapply', 'auto', 'repeat', 'eauto']",2,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,candidate_entries_lowered_rvr,"['intros', 'pattern', 'apply', 'auto', 'clear', 'intros', 'repeat', 'eapply', 'eauto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,candidate_entries_lowered_nw,"['intros', 'pattern', 'apply', 'auto', 'clear', 'intros', 'repeat', 'eapply', 'eauto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,candidate_entries_lowered_nw_rvr,"['intros', 'pattern', 'apply', 'auto', 'clear', 'intros', 'repeat', 'eapply', 'eauto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_request_vote_reply,"['unfold', 'unfold', 'intuition', 'simpl', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'try', 'exfalso', 'eapply', 'eauto', 'rewrite', 'exfalso', 'eapply', 'eauto', 'do_bool', 'find_rewrite', 'f_equal', 'omega', 'repeat', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'subst', 'try', 'exfalso', 'eapply', 'eauto', 'rewrite', 'exfalso', 'eapply', 'eauto', 'do_bool', 'find_rewrite', 'f_equal', 'omega']",0,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_do_generic_server,"['unfold', 'intros', 'unfold', 'intuition', 'simpl', 'repeat', 'repeat', 'repeat', 'use_applyEntries_spec', 'subst', 'simpl', 'intuition', 'try', 'repeat', 'repeat', 'repeat', 'use_applyEntries_spec', 'subst', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'subst', 'try']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_state_same_packet_subset,"['unfold', 'intros', 'unfold', 'intuition', 'repeat', 'intuition']",3,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_reboot,"['unfold', 'intros', 'unfold', 'intuition', 'repeat', 'simpl', 'repeat', 'subst', 'simpl', 'intuition', 'discriminate', 'repeat', 'simpl', 'repeat', 'repeat', 'subst', 'simpl', 'intuition', 'try']",3,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_init,"['unfold', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,leader_sublog_invariant_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderSublogProof.json,lsi,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_appendEntries,"['red', 'unfold', 'intros', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'prove_in', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto', 'rewrite', 'repeat', 'eauto', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'exfalso', 'intuition', 'find_false', 'repeat', 'eauto']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_appendEntriesReply,"['red', 'unfold', 'intros', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'prove_in', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto', 'repeat', 'eauto', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'subst', 'simpl', 'intuition']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_requestVote,"['red', 'unfold', 'intros', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'prove_in', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto', 'rewrite', 'repeat', 'eauto', 'subst', 'simpl', 'subst', 'find_apply_lem_hyp', 'contra']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_clientRequest,"['red', 'unfold', 'intros', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto', 'rewrite', 'repeat', 'eauto', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'contra']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_timeout,"['red', 'unfold', 'intros', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto', 'rewrite', 'repeat', 'eauto', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'contra']",2,2,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_doLeader,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'subst', 'find_eapply_lem_hyp', 'eauto', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_doGenericServer,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'find_apply_hyp_hyp', 'break_exists', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto', 'do_in_map', 'subst', 'simpl', 'find_eapply_lem_hyp', 'subst', 'simpl', 'intuition']",2,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_reboot,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'simpl', 'find_reverse_rewrite', 'find_apply_hyp_hyp', 'repeat', 'update_destruct', 'subst_max', 'rewrite_update', 'simpl', 'eauto', 'subst', 'auto']",2,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_state_same_packet_subset,"['red', 'unfold', 'intros', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'repeat', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,append_entries_came_from_leaders_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestsCameFromLeadersProof.json,aercfli,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_init,"['red', 'unfold', 'simpl', 'discriminate']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_client_request,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'discriminate']",1,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_timeout,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'repeat', 'find_apply_hyp_hyp', 'omega']",1,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_append_entries,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'auto', 'unfold', 'repeat', 'tuple_inversion', 'eauto', 'discriminate']",1,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_append_entries_reply,"['start', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', '[eauto|discriminate].']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_request_vote,"['start', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', '[eauto|discriminate].']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_request_vote_reply,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'update_destruct', 'rewrite_update', 'auto', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', '[eauto|discriminate|discriminate].']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_do_leader,"['start', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_do_generic_server,"['start', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_state_same_packet_subset,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'auto']",2,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_reboot,"['start', 'unfold', 'simpl', 'discriminate']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,candidate_term_gt_log_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CandidateTermGtLogProof.json,ctgli,"['split', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,in_output_changed,"['intros', 'unfold', 'break_exists_exists', 'intuition', 'do_in_app', 'intuition', 'exfalso', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,key_in_output_list_split,"['intros', 'unfold', 'break_exists', 'do_in_app', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,key_in_output_list_empty,"['intuition', 'unfold', 'break_exists', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,handleInput_key_in_output_list,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition', 'unfold', 'break_exists', 'simpl', 'intuition', 'congruence']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,has_key_own_key,"['intros', 'unfold', 'break_match', 'subst', 'simpl', 'break_if', 'repeat', 'intuition']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,has_key_true_necessary,"['intros', 'unfold', 'break_match', 'simpl', 'subst', 'break_if', 'repeat', 'intuition', 'try']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,applyEntries_before,"['induction', 'intros', 'simpl', 'intuition', 'find_inversion', 'simpl', 'intuition', 'repeat', 'subst', 'find_inversion', 'do_in_app', 'intuition', 'do_in_map', 'find_inversion', 'eauto', '{', 'destruct', 'eauto', 'exfalso', 'unfold', 'find_apply_lem_hyp', 'intuition', 'repeat', 'repeat', 'find_inversion', 'do_bool', 'subst_max', 'find_eapply_lem_hyp', 'eauto', 'omega', 'find_eapply_lem_hyp', 'eauto', 'omega', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'simpl', 'eauto', '}', 'simpl', 'find_inversion', '{', 'destruct', 'eauto', 'exfalso', 'unfold', 'find_apply_lem_hyp', 'intuition', 'repeat', 'repeat', 'find_inversion', 'do_bool', 'subst', 'find_eapply_lem_hyp', 'eauto', 'omega', 'find_eapply_lem_hyp', 'eauto', 'omega', 'eapply', 'eauto', 'unfold', 'simpl', 'eauto', 'eapply', 'eauto', 'unfold', 'simpl', 'eauto', '}']",2,1,0,0,4,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,entries_contiguous,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'intuition', 'eauto', 'find_apply_hyp_hyp', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,doGenericServer_key_in_output_list,"['intros', 'find_copy_apply_lem_hyp', 'pose', 'match', 'concludes', 'simpl', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'intuition', 'unfold', 'match', 'unfold', 'break_let', 'simpl', 'find_inversion', 'simpl', 'pose', 'eapply', 'eauto', 'match', 'eauto', '[|intros', 'find_apply_lem_hyp', 'apply', 'intuition', 'unfold', 'break_match', 'break_if', 'repeat', 'intuition', 'simpl', 'eapply_prop_hyp', 'eauto', 'break_exists', 'intuition', 'simpl', 'subst', 'match', 'eauto', 'omega', 'intuition', 'find_rewrite', 'repeat', 'rewrite', 'eapply', 'eauto', 'use_applyEntries_spec', 'subst', 'simpl', 'break_if', 'do_bool', 'erewrite', 'eauto', 'match', 'conclude_using', 'intuition', 'simpl', 'unfold', 'simpl', 'find_rewrite', 'auto', 'unfold', 'break_exists', 'intuition', 'repeat', 'eapply', 'eauto', 'intros', 'find_copy_apply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'apply', 'eauto', 'try', 'find_copy_apply_lem_hyp', 'unfold', 'simpl', 'match', 'eapply_prop_hyp', 'eauto', 'intuition', 'do_bool', 'erewrite', 'eauto', 'match', 'conclude_using', 'intuition', 'simpl', 'unfold', 'simpl', 'find_rewrite', 'auto', 'unfold', 'break_exists', 'intuition', 'repeat', 'eapply', 'eauto', 'intros', 'find_copy_apply_lem_hyp', 'eauto', 'find_apply_lem_hyp', 'apply', 'eauto', 'try', 'find_copy_apply_lem_hyp', 'unfold', 'simpl', 'match', 'eapply_prop_hyp', 'eauto', 'intuition']",0,3,0,1,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,output_implies_greatest,"['intros', 'invcs', 'simpl', 'try', 'break_exists', 'simpl', 'intuition', 'unfold', 'break_exists', 'simpl', 'intuition', 'find_inversion', 'unfold', 'repeat', 'repeat', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_copy_eapply_lem_hyp', 'simpl', 'rewrite_update', 'eauto', 'find_apply_lem_hyp', 'intuition', '[exfalso', 'eapply', 'eauto', 'match', '[|rewrite_update', 'auto', 'find_apply_lem_hyp', 'rewrite_update', 'repeat', 'unfold', 'simpl', 'match', 'rewrite_update', 'auto', 'find_eapply_lem_hyp', '[|idtac|eauto|]', 'eauto', 'simpl', 'find_rewrite_lem', 'auto', 'unfold', 'break_exists', 'simpl', 'intuition', 'find_inversion', 'unfold', 'repeat', 'repeat', 'simpl', 'find_copy_eapply_lem_hyp', 'eauto', 'find_copy_eapply_lem_hyp', 'simpl', 'rewrite_update', 'eauto', 'find_apply_lem_hyp', 'intuition', '[exfalso', 'eapply', 'eauto', 'find_apply_lem_hyp', 'intuition', '[exfalso', 'eapply', 'eauto', 'match', '[|rewrite_update', 'auto', 'find_apply_lem_hyp', 'rewrite_update', 'repeat', 'unfold', 'simpl', 'match', 'rewrite_update', 'auto', 'find_eapply_lem_hyp', '[|idtac|eauto|]', 'eauto', 'simpl', 'find_rewrite_lem', 'auto']",0,2,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,output_greatest_id,"['intros', 'pose', 'concludes', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputGreatestIdProof.json,ogii,"['split', 'unfold', 'intros', 'eauto']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,snd_execute_log',"['induction', 'intros', 'simpl', 'intuition', 'break_let', 'eauto']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,snd_execute_log'_nil,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,clientCache_to_ks_assoc,"['induction', 'intros', 'simpl', 'try', 'break_if', 'eauto', 'subst', 'find_inversion', 'break_let', 'subst', 'simpl', 'break_if', 'try', 'destruct', 'simpl', 'eauto', 'break_let', 'subst', 'simpl', 'break_if', 'try', 'eauto']",2,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,clientCache_to_ks_assoc_getLastId,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,clientCache_to_ks_assoc_none,"['induction', 'intros', 'simpl', 'try', 'break_if', 'eauto', 'try', 'break_let', 'subst', 'simpl', 'break_if', 'try', 'eauto']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,clientCache_to_ks_assoc_getLastId_none,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,cacheApplyEntry_stateMachine_apply,"['intros', 'unfold', 'repeat', 'subst', 'repeat', 'do_bool', 'try', 'simpl', 'auto']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,cacheApplyEntry_cache_apply,"['intros', 'unfold', 'repeat', 'subst', 'repeat', 'do_bool', 'simpl', 'auto', 'omega']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,cacheApplyEntry_stateMachine_apply_none,"['intros', 'unfold', 'repeat', 'subst', 'repeat', 'do_bool', 'try', 'simpl', 'auto', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,cacheApplyEntry_cache_apply_none,"['intros', 'unfold', 'repeat', 'subst', 'repeat', 'do_bool', 'simpl', 'auto', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,cacheApplyEntry_stateMachine_no_apply,"['intros', 'unfold', 'repeat', 'subst', 'repeat', 'do_bool', 'simpl', 'auto', 'try', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,cacheApplyEntry_cache_no_apply,"['intros', 'unfold', 'repeat', 'subst', 'repeat', 'do_bool', 'simpl', 'auto', 'try', 'congruence']",1,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,clientCache_to_ks_assoc_set,"['induction', 'intros', 'simpl', 'intuition', 'simpl', 'break_if', 'simpl', 'eauto', 'f_equal', 'eauto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,applyEntries_lastApplied_commitIndex_log,"['induction', 'simpl', 'intros', 'find_inversion', 'auto', 'repeat', 'find_inversion', 'simpl', 'unfold', 'repeat', 'find_inversion', 'simpl', 'eauto', 'copy_eapply_prop_hyp', 'intuition', 'simpl', 'auto']",1,4,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,filter_false,"['intros', 'induction', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,filter_and,"['intros', 'induction', 'simpl', 'auto', 'repeat', 'do_bool', 'simpl', 'auto', 'f_equal', 'eauto', 'intuition', 'congruence', 'intuition', 'try', 'assert', 'congruence']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,removeAfterIndex_app,"['intros', 'induction', 'simpl', 'auto', 'repeat', 'simpl', 'do_bool', 'intuition', 'try', 'try', 'f_equal', 'repeat', 'rewrite', 'auto', 'intros', 'find_apply_hyp_hyp', 'omega']",0,2,0,1,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_app,"['induction', 'intros', 'simpl', 'auto', 'break_if', 'simpl', 'eauto']",2,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_a_equiv,"['induction', 'intros', 'simpl', 'auto', 'erewrite', 'break_if', 'auto']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_max_id_for_client,"['induction', 'simpl', 'intros', 'auto', 'repeat', 'do_bool', 'rewrite', 'subst', 'auto', 'rewrite', 'now', 'now', 'now']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,max_id_for_client_default_le,"['induction', 'simpl', 'intros', 'auto', 'break_if', 'rewrite', 'subst', 'now', 'intros', 'subst', 'eapply', '[| apply Max.le_max_l].', 'eauto', 'auto']",1,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,max_id_for_client_default_on_max,"['induction', 'simpl', 'intros', 'auto', 'break_if', 'repeat', 'auto', 'zify', 'omega']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,max_id_for_client_default_or_entry,"['induction', 'simpl', 'intuition', 'break_if', 'specialize', 'intuition', 'destruct', 'rewrite', 'right', 'eauto', 'rewrite', 'auto', 'right', 'break_exists', 'break_and', 'rewrite', 'exists', 'intuition', 'specialize', 'intuition', 'right', 'break_exists_exists', 'intuition']",0,1,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,max_id_for_client_default_is_max,"['induction', 'simpl', 'intuition', 'subst', 'break_if', 'try', 'rewrite', 'rewrite', 'apply', 'break_if', 'auto']",0,1,0,2,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,max_id_for_client_default_ge_default,"['induction', 'simpl', 'intuition', 'break_if', 'intuition', 'rewrite', 'apply']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,max_id_for_client_default_ext,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_assoc_default_ks,"['induction', 'intros', 'simpl', 'rewrite', 'auto', 'break_if', 'simpl', 'eauto', 'do_bool', 'destruct', 'simpl', 'auto', 'subst', 'find_rewrite_lem', 'rewrite', 'eauto', 'erewrite', ""[|eapply log_to_ks'_a_equiv"", 'eapply', 'auto', 'eauto']",2,2,1,1,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_assoc_default_assoc_default_le,"['induction', 'intros', 'simpl', 'auto', 'break_if', 'simpl', 'eauto', 'do_bool', 'destruct', 'simpl', 'subst', 'auto', 'eapply', 'eauto', 'eauto', 'match', 'repeat', 'eauto', 'rewrite', 'auto']",2,1,0,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_assoc_default_eq,"['induction', 'intros', 'simpl', 'auto', 'repeat', 'do_bool', 'simpl', 'eauto', 'destruct', 'simpl', 'auto', 'subst', 'match', 'repeat', 'eauto', 'rewrite', 'eapply', 'eauto', 'eapply', '[|eauto]', 'eauto', 'match', 'repeat', 'eauto', 'rewrite', 'auto', 'destruct', 'simpl', 'auto', 'subst', 'match', 'repeat', 'eauto', 'rewrite', 'eapply', 'eauto', 'eapply', '[|eauto]', 'eauto', 'eapply', ""[|eauto using log_to_ks'_assoc_default_assoc_default_le]."", 'omega', 'match', 'repeat', 'eauto', 'rewrite', 'auto']",2,1,0,1,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_assoc_set_diff,"['induction', 'intros', 'simpl', 'rewrite', 'auto', 'repeat', 'simpl', 'eauto', 'do_bool', 'destruct', 'subst', 'simpl', 'rewrite', 'auto', 'erewrite', ""[|apply log_to_ks'_a_equiv"", 'apply', 'eauto', 'do_bool', 'destruct', 'subst', 'simpl', 'rewrite', 'auto', 'rewrite', 'auto', 'omega', 'do_bool', 'destruct', 'subst', 'simpl', 'erewrite', 'eauto', 'rewrite', 'auto', 'omega']",2,2,0,1,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,log_to_ks'_assoc_default_set_diff,"['induction', 'intros', 'simpl', 'auto', 'repeat', 'simpl', 'eauto', 'do_bool', 'destruct', 'subst', 'simpl', 'rewrite', 'auto', 'erewrite', ""[|apply log_to_ks'_a_equiv"", 'apply', 'eauto', 'do_bool', 'destruct', 'subst', 'simpl', 'rewrite', 'auto', 'rewrite', 'auto', 'omega', 'do_bool', 'destruct', 'subst', 'simpl', 'erewrite', 'eauto', 'rewrite', 'auto', 'omega']",2,3,0,1,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,assoc_set_log_to_ks'_le,"['induction', 'intros', 'simpl', 'eauto', 'repeat', 'simpl', 'eauto', 'do_bool', 'destruct', 'subst', 'repeat', 'find_rewrite_lem', 'assert', 'auto', 'eapply', '[|eauto]', 'eauto', 'subst', 'find_apply_hyp_hyp', 'find_rewrite_lem', 'auto', 'eapply', 'eapply', ""[eapply log_to_ks'_a_equiv"", 'eapply', 'auto', 'eapply', 'eauto', 'do_bool', 'destruct', 'subst', 'find_rewrite_lem', 'find_apply_hyp_hyp', 'find_rewrite_lem', 'auto', 'rewrite', 'auto', 'omega', 'do_bool', 'destruct', 'subst', 'find_rewrite_lem', 'rewrite', 'assert', 'subst', 'eauto', 'eapply', 'eauto', 'eapply', '[|eauto].', 'eapply', ""[|eapply log_to_ks'_assoc_default_assoc_default_le]."", 'omega', 'rewrite', 'auto', 'omega']",2,0,1,1,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,in_ks_log_to_ks'_le,"['induction', 'simpl', 'intuition', 'eauto', 'break_if', 'do_bool', 'destruct', 'repeat', 'unfold', 'find_rewrite', 'specialize', 'conclude_using', 'break_exists_exists', 'intuition', 'rewrite', 'auto', 'auto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,handleAppendEntries_preserves_lastApplied_entries',"['intros', 'get_invariant_post', 'unfold', 'intuition', 'unfold', 'intuition', 'match', 'simpl', 'repeat', 'rewrite_update', 'repeat', 'get_invariant_pre', 'unfold', 'intuition', 'match', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'match', 'eauto', 'get_invariant_pre', 'unfold', 'intuition', 'copy_eapply_prop_hyp', 'copy_eapply_prop_hyp', 'eauto', 'intuition', 'try', 'subst', 'find_copy_apply_lem_hyp', 'repeat', 'omega', 'match', 'eauto', 'get_invariant_pre', 'unfold', 'intuition', 'copy_eapply_prop_hyp', 'copy_eapply_prop_hyp', 'eauto', 'intuition', 'apply', 'right', 'apply', 'eauto', 'omega', 'apply', 'right', 'apply', 'eauto', 'omega', 'match', 'intuition', 'repeat', 'find_copy_apply_lem_hyp', 'repeat', 'omega']",0,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,handleAppendEntries_preserves_lastApplied_entries,"['intros', 'find_copy_apply_lem_hyp', 'repeat', 'get_invariant_pre', 'get_invariant_post', 'unfold', 'intuition', 'apply', 'auto', 'unfold', 'simpl', 'match', 'repeat', 'rewrite_update', 'auto', 'intros', 'eauto', 'intros', 'get_invariant_pre', 'unfold', 'intuition', 'enough', 'break_exists', 'intuition', 'find_copy_eapply_lem_hyp', 'repeat', 'eauto', 'enough', 'eapply', 'eauto', 'apply', 'unfold', 'simpl', 'match', 'repeat', 'rewrite_update', 'auto', 'apply', 'auto', 'intuition', 'eauto', 'enough', 'get_invariant_post', 'unfold', 'intuition', 'match', 'simpl', 'repeat', 'rewrite_update', 'auto']",0,1,2,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,removeAfterIndex_cons,"['intros', 'simpl', 'break_if', 'do_bool', 'auto', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,handleClientRequest_preserves_lastApplied_entries,"['intros', 'erewrite', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'repeat', 'erewrite', 'eauto', 'get_invariant_pre', 'unfold', 'intuition', 'match', 'omega']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_clientCache_complete,"['unfold', 'intros', 'unfold', 'enough', 'break_exists_exists', 'intuition', 'find_apply_lem_hyp', 'break_exists_exists', 'intuition', 'erewrite', 'find_apply_lem_hyp', 'auto']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,deduplicate_log'_app,"['induction', 'intros', 'simpl', 'auto', 'repeat', 'simpl', 'eauto', 'try', 'eauto', 'exfalso', 'do_bool', 'find_erewrite_lem', 'omega', 'do_bool', 'find_erewrite_lem', 'rewrite', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'subst', 'auto', 'exfalso', 'do_bool', 'find_erewrite_lem', 'omega']",2,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,deduplicate_log'_a_equiv,"['induction', 'intros', 'simpl', 'auto', 'repeat', 'simpl', 'auto', 'do_bool', 'try', 'eauto', 'match', 'repeat', 'try', 'try', 'omega']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,cacheApplyEntry_getLastId,"['intros', 'unfold', 'repeat', 'try', 'subst', 'auto', 'do_bool', 'unfold', 'break_let', 'find_inversion', 'simpl', 'match', 'simpl', 'destruct', 'try', 'auto', 'subst', 'rewrite', 'find_inversion', 'repeat', 'right', 'intuition', 'find_inversion', 'omega', 'unfold', 'break_let', 'find_inversion', 'simpl', 'match', 'simpl', 'destruct', 'try', 'auto', 'subst', 'rewrite', 'find_inversion', 'repeat', 'right', 'intuition', 'congruence']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,applyEntries_app,"['induction', 'intros', 'simpl', 'try', 'eauto', 'repeat', 'find_inversion', 'find_apply_hyp_hyp', 'break_exists', 'intuition', 'repeat', 'find_inversion', 'repeat', 'eauto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,getLastId_clientCache_to_ks_assoc,"['intros', 'unfold', 'induction', 'simpl', 'congruence', 'simpl', 'break_let', 'subst', 'simpl', 'break_if', 'repeat', 'auto']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,i_lt_assoc_default_0,"['intros', 'unfold', 'break_match', 'intuition', 'eauto', 'omega']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,applyEntries_log_to_ks',"['induction', 'intros', 'simpl', 'intuition', 'find_inversion', 'apply', 'repeat', 'find_inversion', 'break_if', 'do_bool', 'unfold', 'repeat', 'repeat', 'do_bool', 'find_apply_lem_hyp', 'find_erewrite_lem', 'omega', 'find_apply_hyp_hyp', 'subst', 'rewrite', 'eauto', 'eauto', 'subst', 'unfold', 'break_let', 'find_inversion', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'simpl', 'erewrite', 'eauto', 'subst', 'unfold', 'break_let', 'find_inversion', 'find_apply_hyp_hyp', 'eapply', 'eauto', 'simpl', 'erewrite', 'eauto', 'do_bool', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'find_apply_lem_hyp', 'break_exists', 'unfold', 'repeat', 'break_if', 'do_bool', 'try', 'find_inversion', 'eauto']",2,0,0,0,3,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,doGenericServer_spec,"['intros', 'unfold', 'break_let', 'break_if', 'right', 'do_bool', 'find_inversion', 'simpl', 'intuition', 'eauto', 'use_applyEntries_spec', 'subst', 'simpl', 'auto', 'left', 'do_bool', 'find_inversion', 'match', 'simpl', 'find_inversion', 'destruct', 'simpl', 'auto', 'erewrite', 'eauto', 'intros', 'simpl', 'apply', 'intuition', 'do_bool', 'intuition', 'do_bool', 'use_applyEntries_spec', 'subst', 'simpl', 'omega']",2,3,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,deduplicate_log_app,['eauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,execute_log'_trace,"['induction', 'intros', 'simpl', 'find_inversion', 'auto', 'repeat', 'rewrite', 'eauto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,execute_log'_trace_nil,"['intros', 'find_eapply_lem_hyp', 'rewrite', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,hd_error_Some_app,"['intros', 'destruct', 'simpl', 'intuition', 'unfold', 'congruence']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_do_generic_server,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'break_exists', 'intuition', 'find_apply_lem_hyp', 'repeat', 'eapply', 'eauto', 'get_invariant_pre', 'unfold', 'intuition', 'erewrite', 'eauto', 'rewrite', 'rewrite', 'match', 'now', 'apply', 'intros', 'rewrite', 'f_equal', 'apply', 'find_apply_lem_hyp', 'intuition']",2,3,1,3,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_append_entries,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_append_entries_reply,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_request_vote,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_request_vote_reply,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_client_request,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_timeout,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_do_leader,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_reboot,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_state_same_packet_subset,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_reverse_higher_order_rewrite', 'auto']",1,3,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_init,"['red', 'unfold', 'simpl', 'intros', 'apply']",2,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_keys_correct_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_append_entries,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_append_entries_reply,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_request_vote,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_request_vote_reply,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_timeout,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_client_request,"['red', 'unfold', 'simpl', 'intros', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_do_leader,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_reboot,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_state_same_packet_subset,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_reverse_higher_order_rewrite', 'eauto']",1,3,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_init,['now'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_log_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_do_generic_server,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'repeat', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'get_invariant_pre', 'unfold', 'intuition', 'erewrite', 'eauto', 'break_exists', 'intuition', 'find_higher_order_rewrite', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'find_apply_hyp_hyp', 'rewrite', 'eauto', 'unfold', 'break_exists', 'intuition', 'rewrite', 'unfold', 'rewrite', 'match', 'simpl', 'match', 'unfold', 'repeat', 'rewrite', 'break_let', 'get_invariant_pre', 'unfold', 'repeat', 'unfold', 'repeat', 'simpl', 'match', 'intuition', 'f_equal', 'repeat', 'match', 'match', 'apply', 'intros', 'repeat', 'rewrite', 'f_equal', 'symmetry', 'apply', 'find_apply_lem_hyp', 'intuition', 'repeat', 'apply', 'apply', 'apply', 'auto', 'eauto', 'rewrite', 'erewrite', 'eauto']",3,3,4,3,6,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,same_clientCache_same_getLastId,"['intros', 'unfold', 'find_rewrite', 'auto']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_append_entries,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'use_same_client_cache', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_append_entries_reply,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'use_same_client_cache', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_request_vote,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'use_same_client_cache', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_request_vote_reply,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'use_same_client_cache', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_client_request,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'use_same_client_cache', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_timeout,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'use_same_client_cache', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_do_leader,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto', 'use_same_client_cache', 'erewrite', 'eauto', 'erewrite', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_reboot,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_higher_order_rewrite', 'destruct_update', 'simpl', 'eauto']",1,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_state_same_packet_subset,"['red', 'unfold', 'simpl', 'intros', 'subst', 'find_reverse_higher_order_rewrite', 'auto']",1,3,0,2,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_init,"['red', 'unfold', 'simpl', 'intros', 'unfold', 'simpl', 'congruence']",2,3,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,client_cache_correct_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,state_machine_correct_invariant,"['intros', 'red', 'intuition', 'auto', 'auto', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/StateMachineCorrectProof.json,smci,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,msg_refined_raft_invariant_handle_message,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', '[eapply_prop msg_refined_raft_net_invariant_request_vote| eapply_prop msg_refined_raft_net_invariant_request_vote_reply| eapply_prop msg_refined_raft_net_invariant_append_entries| eapply_prop msg_refined_raft_net_invariant_append_entries_reply]', 'eauto', 'unfold', 'simpl', 'intros', 'subst', 'auto', 'find_apply_hyp_hyp', 'intuition']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,msg_refined_raft_invariant_handle_input,"['intros', 'unfold', 'break_match', 'repeat', 'repeat', '[eapply_prop msg_refined_raft_net_invariant_timeout| eapply_prop msg_refined_raft_net_invariant_client_request]', 'eauto', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,msg_refined_raft_invariant_handle_message',"['intros', 'unfold', 'break_match', 'repeat', 'repeat', ""[eapply_prop msg_refined_raft_net_invariant_request_vote'| eapply_prop msg_refined_raft_net_invariant_request_vote_reply'| eapply_prop msg_refined_raft_net_invariant_append_entries'| eapply_prop msg_refined_raft_net_invariant_append_entries_reply']"", 'eauto', 'unfold', 'simpl', 'intros', 'subst', 'auto', 'find_apply_hyp_hyp', 'intuition']",2,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,msg_refined_raft_invariant_handle_input',"['intros', 'unfold', 'break_match', 'repeat', 'repeat', ""[eapply_prop msg_refined_raft_net_invariant_timeout'| eapply_prop msg_refined_raft_net_invariant_client_request']"", 'eauto', 'subst', 'auto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,msg_lift_prop,"['intros', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,step_failure_star_raft_intermediate_reachable_extend,"['intros', 'prep_induction', 'induction', 'intros', 'subst', 'find_inversion', 'auto', 'destruct', 'simpl', 'eapply', '[|eauto].', 'eauto']",1,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,map_subset,"['induction', 'simpl', 'intros', 'exists', 'simpl', 'intuition', 'assert', '{', 'specialize', 'concludes', 'find_apply_lem_hyp', 'firstorder', '}', 'specialize', 'repeat', 'break_and', 'exists', 'simpl', 'intuition', 'congruence']",1,2,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,mgv_deghost_packet_mgv_ghost_packet_partial_inverses,"['intros', 'unfold', 'simpl', 'destruct', 'auto']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,msg_lower_prop,"['intros', 'find_apply_lem_hyp', 'break_exists', 'intuition', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,deghost_spec,"['intros', 'destruct', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,lift_prop_all_the_way,"['intros', 'find_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,lower_prop_all_the_way,"['intros', 'eapply', 'eauto', 'intros', 'pose', 'simpl', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RaftMsgRefinementProof.json,rmri,"['split', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_init,"['unfold', 'intros', 'simpl', 'congruence']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_client_request,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'auto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_timeout,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'auto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_append_entries,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'auto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_append_entries_reply,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'auto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_request_vote,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'auto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_request_vote_reply,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'find_apply_lem_hyp', 'update_destruct', 'subst', 'rewrite_update', 'intuition', 'repeat', 'auto', 'apply', 'find_rewrite', 'discriminate', 'auto']",0,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_do_leader,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'auto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_do_generic_server,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'find_apply_lem_hyp', 'intuition', 'repeat', 'auto', 'auto']",0,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_state_same_packet_subset,"['unfold', 'simpl', 'intuition', 'find_reverse_higher_order_rewrite', 'auto']",0,1,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_reboot,"['unfold', 'simpl', 'intuition', 'find_higher_order_rewrite', 'update_destruct', 'subst', 'rewrite_update', 'unfold', 'simpl', 'congruence', 'auto']",0,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,current_term_gt_zero_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/CurrentTermGtZeroProof.json,ctgzi,"['split', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'assert', 'repeat', 'intuition', '[in_crush|]', 'exfalso', 'subst', 'simpl', 'subst', 'unfold', 'repeat', 'find_inversion', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'try', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'assert', 'find_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'in_crush', 'repeat', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'intuition', 'try', 'repeat', 'eauto']",3,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'rewrite', 'eauto', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'rewrite', 'eauto']",3,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'try', 'repeat', 'simpl', 'intuition', 'subst', 'exists', 'intuition', 'auto', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'try', 'repeat', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'unfold', 'simpl', 'unfold', 'simpl', 'try', '[idtac].', 'find_apply_hyp_hyp', 'intuition', 'exfalso', 'do_in_map', 'remember', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition', 'find_apply_hyp_hyp', 'intuition', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'eauto', 'exfalso', 'do_in_map', 'remember', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence', 'find_apply_hyp_hyp', 'intuition', 'eapply_prop_hyp', 'eauto', 'exfalso', 'do_in_map', 'remember', 'subst', 'simpl', 'unfold', 'repeat', 'find_inversion', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence']",3,4,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_client_request,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'destruct_update', 'simpl', 'eauto', 'try', 'eauto', 'find_apply_lem_hyp', 'subst', 'eauto']",3,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_do_leader,"['red', 'unfold', 'intros', 'simpl', 'assert', 'intuition', 'do_in_map', 'subst', 'unfold', 'repeat', 'find_inversion', 'subst', 'simpl', 'intuition', 'do_in_map', 'subst', 'simpl', 'congruence', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'subst', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'find_copy_apply_lem_hyp', 'subst', 'simpl', 'find_apply_hyp_hyp', 'intuition', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_lem_hyp', 'intuition', 'repeat', 'eauto']",3,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'congruence']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,requestVoteReply_moreUpToDate_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/RequestVoteReplyMoreUpToDateProof.json,rvrmutdi,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|finish].', 'find_eapply_lem_hyp', 'eauto', 'intuition', '[finish|].', 'subst', 'erewrite', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|finish].', 'find_erewrite_lem', 'eauto', 'finish']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'finish']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_request_vote,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|finish].', 'find_erewrite_lem', 'eauto', 'finish']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_do_leader,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'finish']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_do_generic_server,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'finish']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_reboot,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'finish']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|finish].', 'find_erewrite_lem', 'eauto', 'finish']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|finish].', 'find_erewrite_lem', 'eauto', 'finish']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'finish']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,log_properties_hold_on_leader_logs_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LeaderLogsLogPropertiesProof.json,lpholli,"['split', 'auto', 'Defined']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_append_entries_reply,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'erewrite', 'eauto', 'intuition', 'find_apply_hyp_hyp', 'find_higher_order_rewrite', 'auto', 'find_apply_lem_hyp', 'unfold', 'intuition', 'match', 'eauto']",2,3,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_client_request,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'find_eapply_lem_hyp', 'intuition', 'repeat', 'eauto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_request_vote_reply,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'eauto', 'erewrite', 'eauto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_append_entries,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'repeat', 'eauto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_request_vote,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'repeat', 'eauto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_timeout,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'repeat', 'eauto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_do_leader,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'repeat', 'eauto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_do_generic_server,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_copy_apply_lem_hyp', 'unfold', 'intuition', 'repeat', 'eauto']",2,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_reboot,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'destruct_update', 'simpl', 'eauto', 'congruence']",2,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_state_same_packet_subset,"['red', 'unfold', 'simpl', 'intros', 'repeat', 'eauto']",2,3,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,match_index_leader_init,"['red', 'unfold', 'simpl', 'congruence']",0,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/MatchIndexLeaderProof.json,mili,"['split', 'intros', 'apply', 'auto', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact', 'exact']",1,0,2,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,no_entries_past_current_term_host_lifted_invariant,"['unfold', 'pose', 'do', 'repeat', 'eapply', 'eauto', 'intros', 'find_apply_lem_hyp', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_append_entries,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_copy_apply_lem_hyp', 'find_eapply_lem_hyp', 'intuition', 'eauto', 'repeat', 'repeat', 'eauto', 'copy_eapply_prop_hyp', 'repeat', 'auto', 'find_apply_lem_hyp', 'auto', 'repeat', 'eauto', 'subst', 'apply', 'right', 'find_apply_hyp_hyp', 'find_apply_lem_hyp', 'auto', 'eauto', 'subst', 'apply', 'left', 'apply', 'eauto', 'do_in_app', 'intuition', 'subst', 'apply', 'left', 'apply', 'eauto', 'subst', 'apply', 'right', 'find_apply_lem_hyp', 'find_apply_hyp_hyp', 'find_apply_lem_hyp', 'auto', 'eauto']",3,1,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_copy_apply_lem_hyp', 'find_rewrite', 'find_copy_apply_lem_hyp', 'intuition', 'repeat', 'copy_eapply_prop_hyp', 'repeat', 'auto', 'find_apply_lem_hyp', 'auto', 'repeat', 'eauto']",3,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_request_vote,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_copy_apply_lem_hyp', 'find_rewrite', 'find_copy_apply_lem_hyp', 'rewrite', 'intuition', 'repeat', 'copy_eapply_prop_hyp', 'repeat', 'auto', 'find_apply_lem_hyp', 'auto', 'repeat', 'eauto']",3,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_erewrite_lem', 'rewrite', 'match', 'intuition', 'repeat', 'copy_eapply_prop_hyp', 'repeat', 'auto', 'find_apply_lem_hyp', 'auto', 'repeat', 'unfold', 'simpl', 'unfold', 'simpl', 'omega']",3,3,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_do_leader,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_copy_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'repeat', 'copy_eapply_prop_hyp', 'repeat', 'auto']",2,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_do_generic_server,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_copy_apply_lem_hyp', 'intuition', 'find_apply_lem_hyp', 'repeat', 'copy_eapply_prop_hyp', 'repeat', 'auto']",2,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_client_request,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', '[copy_eapply_prop_hyp In In', 'repeat', 'auto', 'break_exists', 'intuition', 'repeat', 'simpl', 'intuition', 'subst', 'auto', 'copy_eapply_prop_hyp', 'repeat', 'auto']",3,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_timeout,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', '[|copy_eapply_prop_hyp In In', 'repeat', 'auto', 'find_copy_apply_lem_hyp', 'rewrite', 'find_apply_lem_hyp', 'intuition', 'repeat', 'copy_eapply_prop_hyp', 'repeat', 'auto', 'find_apply_lem_hyp', 'auto', 'repeat', 'unfold', 'simpl', 'unfold', 'simpl', 'omega']",3,3,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_reboot,"['red', 'unfold', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'simpl', 'repeat', 'destruct_update', 'simpl', 'eauto', 'copy_eapply_prop_hyp', 'repeat', 'auto']",2,1,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'copy_eapply_prop_hyp', 'repeat', 'auto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,log_all_entries_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/LogAllEntriesProof.json,laei,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_append_entries,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'repeat', 'rewrite_update', 'reflexivity', 'eauto']",3,4,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_request_vote,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'eauto']",3,4,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'eauto']",3,4,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'eauto']",3,4,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'eauto']",3,4,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_do_leader,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'eauto']",3,4,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'subst', 'find_apply_hyp_hyp', 'intuition', 'repeat', 'try', 'eauto', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'eauto']",3,4,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_reboot,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eapply_prop_hyp', 'eauto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'eapply_prop_hyp', 'eauto']",3,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,log_properties_hold_on_ghost_logs_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogsLogPropertiesProof.json,lphogli,"['split', 'auto', 'Defined']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,lifted_entries_contiguous_invariant,"['intros', 'enough', 'simpl', 'repeat', 'simpl', 'auto', 'apply', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,lifted_entries_sorted_invariant,"['intros', 'enough', 'simpl', 'repeat', 'simpl', 'auto', 'apply', 'eauto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,lifted_entries_contiguous_nw_invariant,"['intros', 'assert', 'eauto', 'unfold', 'intros', 'simpl', 'repeat', 'simpl', 'auto', 'match', 'eapply', 'simpl', 'eauto', 'apply', 'eexists', 'eauto']",3,2,0,0,4,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,lifted_entries_match_invariant,"['intros', 'unfold', 'intros', 'find_eapply_lem_hyp', '[|intros', 'eapply', 'eauto', 'simpl', 'repeat', 'simpl', 'auto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_sorted,"['assert', 'intros', 'eapply', 'eauto', 'intros', 'find_eapply_lem_hyp', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_contiguous,"['assert', 'intros', 'eapply', 'eauto', 'intros', 'find_eapply_lem_hyp', 'eauto', 'simpl', 'auto']",0,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,lifted_allEntries_leader_sublog_invariant,"['intros', 'unfold', 'intros', 'find_eapply_lem_hyp', '[|intros', 'eapply', 'eauto', 'simpl', 'unfold', 'unfold', 'simpl', 'repeat', 'simpl', 'eauto']",3,3,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_init,"['red', 'split', 'red', 'intros', 'simpl', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,handleAppendEntries_ghost_log,"['intros', 'find_copy_eapply_lem_hyp', 'eauto', 'repeat', 'find_apply_lem_hyp', 'intuition', 'subst', 'auto', 'repeat', 'rewrite', 'auto', '[|eapply ghost_log_sorted', 'eauto', 'intros', 'eapply', 'eauto', 'right', 'repeat', 'break_exists', 'intuition', 'subst', 'replace', 'eapply', 'eauto', 'repeat', 'auto', 'try', 'eauto', 'try', 'eauto', 'try', 'eauto', 'try', 'eauto']",0,0,0,1,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_append_entries,"['red', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'match', 'find_apply_hyp_hyp', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto', 'subst', 'simpl', 'find_eapply_lem_hyp', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'unfold', 'simpl', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'replace', 'nwState', 'find_higher_order_rewrite', 'rewrite_update', 'reflexivity', 'apply', 'auto', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'unfold', 'simpl', 'match', 'eauto', 'intuition', 'find_rewrite', 'eauto', 'find_rewrite', 'eauto', 'subst', 'simpl', 'unfold', 'simpl', 'match', 'eauto', 'intuition', 'find_rewrite', 'eauto', 'find_rewrite', 'eauto', 'subst', 'simpl', 'apply']",1,4,1,1,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_append_entries_reply,"['red', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'erewrite', 'eauto', 'packet_simpl', 'apply', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'packet_simpl', 'erewrite', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'subst', 'simpl', 'do_in_map', 'subst', 'simpl', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'subst', 'simpl', 'repeat', 'subst', 'simpl', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,4,0,0,4,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_request_vote,"['red', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'erewrite', 'eauto', 'packet_simpl', 'auto', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'packet_simpl', 'erewrite', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'intuition', 'eauto', 'subst', 'simpl', 'erewrite', 'eauto', 'subst', 'simpl', 'erewrite', 'eauto', 'subst', 'simpl', 'erewrite', 'eauto']",1,2,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_request_vote_reply,"['red', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'erewrite', 'eauto', 'repeat', 'intuition', 'eauto', 'repeat', 'eauto']",1,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,sorted_entries_match_cons,"['intros', 'simpl', 'intuition', 'unfold', 'split', 'simpl', 'intuition', 'subst_max', 'auto', 'try', 'eauto', 'find_apply_hyp_hyp', 'omega', 'eapply', 'eauto', 'right', 'eapply', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_timeout,"['red', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'erewrite', 'eauto', 'packet_simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'packet_simpl', 'erewrite', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'do_in_map', 'subst', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'repeat', 'subst', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_do_leader,"['red', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'erewrite', 'eauto', 'packet_simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'packet_simpl', 'erewrite', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'do_in_map', 'subst', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'repeat', 'subst', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_do_generic_server,"['red', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'erewrite', 'eauto', 'packet_simpl', 'eauto', 'find_apply_hyp_hyp', 'intuition', 'packet_simpl', 'erewrite', 'eapply', 'eauto', 'find_apply_hyp_hyp', 'find_apply_hyp_hyp', 'intuition', 'do_in_map', 'subst', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'do_in_map', 'subst', 'unfold', 'do_in_map', 'subst', 'simpl', 'erewrite', 'eauto', 'repeat', 'subst', 'unfold', 'repeat', 'subst', 'simpl', 'auto']",1,2,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_reboot,"['red', 'intros', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'repeat', 'destruct_update', 'simpl', 'eauto', 'repeat', 'eauto', 'repeat', 'eauto']",1,0,0,0,3,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_state_same_packet_subset,"['red', 'intros', 'split', 'red', 'intros', 'simpl', 'intuition', 'unfold', 'break_and', 'find_apply_hyp_hyp', 'repeat', 'eauto', 'repeat', 'eauto']",1,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,ghost_log_entries_match_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/GhostLogLogMatchingProof.json,glemi,"['split', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_append_entries_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_erewrite_lem', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_request_vote,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'find_erewrite_lem', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_request_vote_reply,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'find_erewrite_lem', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_timeout,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'rewrite', 'find_erewrite_lem', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_client_request,"['red', 'unfold', 'intros', 'simpl', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'try', 'intuition', 'repeat', 'eauto', 'simpl', 'intuition', 'subst', 'eauto', 'copy_eapply_prop_hyp', 'break_exists_exists', 'eauto']",3,1,0,0,5,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_do_leader,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_erewrite_lem', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_do_generic_server,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto', 'find_erewrite_lem', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_reboot,"['red', 'unfold', 'intros', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'subst', 'repeat', 'destruct_update', 'simpl', 'eauto']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_state_same_packet_subset,"['red', 'unfold', 'intros', 'simpl', 'repeat', 'eauto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,in_log_in_all_entries_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/InLogInAllEntriesProof.json,iliaei,"['split', 'intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,in_output_changed,"['intros', 'unfold', 'break_exists_exists', 'intuition', 'do_in_app', 'intuition', 'exfalso', 'eauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,key_in_output_list_split,"['intros', 'unfold', 'break_exists', 'do_in_app', 'intuition']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,key_in_output_list_empty,"['intuition', 'unfold', 'break_exists', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,doLeader_key_in_output_list,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,handleInput_key_in_output_list,"['intros', 'unfold', 'repeat', 'find_inversion', 'intuition', 'unfold', 'break_exists', 'simpl', 'intuition', 'congruence']",1,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,applyEntries_In,"['induction', 'intros', 'simpl', 'find_inversion', 'simpl', 'intuition', 'simpl', 'repeat', 'repeat', 'find_inversion', 'simpl', 'intuition', 'try', 'simpl', 'try', 'intuition', 'try', 'eauto', 'break_exists_exists', 'intuition', 'try', 'find_inversion', 'eexists', 'eauto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,doGenericServer_key_in_output_list,"['intros', 'unfold', 'match', 'unfold', 'break_let', 'simpl', 'find_inversion', 'simpl', 'pose', 'find_eapply_lem_hyp', 'eauto', 'use_applyEntries_spec', 'subst_max', 'simpl', 'eexists', 'intuition', 'find_apply_lem_hyp', 'find_apply_lem_hyp', 'intuition', 'repeat', 'intuition', 'break_if', 'simpl', 'do_bool', '[|try omega].', 'match', 'forwards', '[simpl in *', 'intuition', 'concludes', 'intuition', 'simpl', 'unfold', 'simpl', 'find_rewrite', 'match', 'break_exists', 'intuition', 'unfold', 'find_rewrite', 'match', 'apply', 'intuition', 'find_copy_apply_lem_hyp', 'find_copy_apply_lem_hyp', 'find_apply_lem_hyp', 'unfold', 'intuition', 'match', 'specialize', 'forward', 'intuition', 'break_exists', 'intuition', 'find_apply_lem_hyp', 'intuition', 'match', '[intros', 'subst', 'auto', 'eapply_prop', 'unfold', 'intuition', 'omega', 'simpl', 'unfold', 'simpl', 'find_rewrite', 'match', 'find_apply_lem_hyp', 'intuition', 'eauto']",1,2,0,1,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,output_implies_applied,"['intros', 'pose', 'concludes', 'intuition']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/OutputImpliesAppliedProof.json,oiai,"['split', 'intros', 'eapply', 'eauto']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,sorted_findGtIndex_0,"['induction', 'intros', 'simpl', 'intuition', 'break_if', 'intuition', 'f_equal', 'auto', 'do_bool', 'specialize', 'intuition', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,entries_gt_0,"['intros', 'find_apply_lem_hyp', 'unfold', 'intuition', 'unfold', 'match', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,Prefix_refl,"['intros', 'induction', 'simpl', 'auto']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,findGtIndex_app_in_1,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'break_if', 'do_bool', 'try', 'eexists', 'repeat', 'intuition', 'specialize', 'intuition', 'conclude', 'intuition', 'break_if', 'do_bool', 'try', 'eexists', 'intuition', 'eauto', 'simpl', 'intuition', 'eapply_prop_hyp', 'eauto', 'break_exists', 'intuition', 'find_rewrite', 'eauto']",2,0,0,0,2,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,sorted_app_in_1,"['induction', 'intros', 'simpl', 'intuition', 'subst', 'destruct', 'simpl', 'auto', 'specialize', 'conclude_using', 'intuition']",2,1,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,findGtIndex_Prefix,"['induction', 'intros', 'simpl', 'intuition', 'break_if', 'simpl', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,findGtIndex_app_in_2,"['induction', 'intros', 'simpl', 'intuition', 'eexists', 'intuition', 'break_if', 'simpl', 'intuition', 'eapply_prop_hyp', 'eauto', 'break_exists', 'intuition', 'find_rewrite', 'eauto', 'do_bool', 'specialize', 'conclude', 'intuition', 'omega']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,findGtIndex_app_eq,"['induction', 'intros', 'simpl', 'destruct', 'simpl', 'intuition', 'subst', 'auto', 'break_if', 'try', 'do_bool', 'find_apply_hyp_hyp', 'intuition', 'omega', 'simpl', 'break_if', 'try', 'do_bool', 'find_inversion', 'intuition']",2,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,append_entries_leaderLogs_init,"['red', 'unfold', 'intros', 'simpl', 'intuition']",3,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,append_entries_leaderLogs_state_same_packets_subset,"['red', 'unfold', 'intros', 'find_apply_hyp_hyp', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'eauto', 'repeat', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,append_entries_leaderLogs_reboot,"['red', 'unfold', 'intros', 'repeat', 'eapply_prop_hyp', 'eauto', 'break_exists_exists', 'intuition', 'eauto', 'repeat', 'update_destruct', 'subst', 'rewrite_update', 'simpl', 'repeat', 'auto']",3,1,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,append_entries_leaderLogs_invariant,"['intros', 'apply', 'auto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",1,0,2,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesRequestLeaderLogsProof.json,aerlli,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesReplySublogProof.json,lower_appendEntries_leader,"['intros', 'apply', 'auto', 'intros', 'find_apply_lem_hyp', 'unfold', 'intros', 'simpl', 'repeat', 'simpl', 'do_in_map', 'subst', 'simpl', 'match', 'reflexivity', 'replace', 'reflexivity', 'clear', 'eapply_prop_hyp', 'eauto']",4,1,1,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesReplySublogProof.json,append_entries_reply_sublog_invariant,"['unfold', 'intros', 'find_apply_lem_hyp', 'eapply_prop_hyp', 'eauto', 'unfold', 'break_exists_name', 'break_exists', 'intuition', 'match', 'assert', 'simpl', 'auto', 'clear', 'match', 'assert', 'intuition', 'match', 'clear', 'eapply', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/AppendEntriesReplySublogProof.json,aersi,"['split', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_client_request,"['unfold', 'split_votes_correct', 'start_proof', 'rewrite', 'find_apply_lem_hyp', 'break_and', 'repeat', 'eauto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_timeout,"['unfold', 'split_votes_correct', 'start_proof', 'find_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'eauto', 'find_apply_lem_hyp', 'auto', 'simpl', 'omega', 'find_apply_lem_hyp', 'auto', 'simpl', 'omega', 'congruence', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'subst', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_apply_lem_hyp', 'do_le_antisym', 'erewrite', 'eauto', 'eapply', 'intuition']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_append_entries,"['unfold', 'split_votes_correct', 'start_proof', 'rewrite', 'eauto', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_apply_lem_hyp', 'subst', 'do_le_antisym', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'break_and', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_append_entries_reply,"['unfold', 'split_votes_correct', 'start_proof', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_apply_lem_hyp', 'subst', 'do_le_antisym', 'erewrite', 'eauto', 'find_copy_eapply_lem_hyp', 'eauto', 'break_and', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_request_vote,"['unfold', 'split_votes_correct', 'start_proof', 'find_eapply_lem_hyp', 'eauto', 'find_eapply_lem_hyp', 'eauto', 'intuition', '[eauto | | | congruence]', 'subst', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_apply_lem_hyp', 'do_le_antisym', 'match', 'conclude_using', 'find_apply_lem_hyp', 'auto', 'intuition', 'find_eapply_lem_hyp', 'eauto', 'intuition', 'subst', 'find_copy_apply_lem_hyp', 'auto', 'find_copy_apply_lem_hyp', 'do_le_antisym', 'find_apply_hyp_hyp', 'find_copy_apply_lem_hyp', 'intuition', 'try', 'try', 'subst', 'find_copy_apply_lem_hyp', 'repeat', 'intuition', 'eauto', 'eauto', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_request_vote_reply,"['unfold', 'split_votes_correct', 'start_proof', 'erewrite', 'eauto', 'erewrite', 'find_copy_apply_lem_hyp', 'auto', 'subst', 'match', 'apply', 'find_copy_apply_lem_hyp', 'intuition', 'try', 'repeat', 'eauto', 'erewrite', 'find_copy_eapply_lem_hyp', 'eauto', 'intuition', 'repeat', 'eauto']",0,0,0,0,2,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_do_leader,"['unfold', 'intros', 'match', 'find_rewrite', 'reflexivity', 'clear', 'split_votes_correct', 'start_proof', 'subst', 'eauto', 'find_apply_lem_hyp', 'break_and', 'repeat', 'eauto', 'find_apply_lem_hyp', 'break_and', 'repeat', 'eauto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_do_generic_server,"['unfold', 'intros', 'match', 'find_rewrite', 'reflexivity', 'clear', 'split_votes_correct', 'start_proof', 'subst', 'eauto', 'find_apply_lem_hyp', 'break_and', 'repeat', 'eauto', 'find_apply_lem_hyp', 'break_and', 'repeat', 'eauto']",2,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_state_same_packet_subset,"['unfold', 'split_votes_correct', 'intros', 'repeat', 'eauto']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_reboot,"['unfold', 'intros', 'match', 'repeat', 'reflexivity', 'clear', 'split_votes_correct', 'start_proof', 'subst', 'simpl', 'eauto']",2,1,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_init,"['unfold', 'split_votes_correct', 'simpl', 'intuition', 'discriminate']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,votes_correct_invariant,"['intros', 'eapply', 'eauto', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply', 'apply']",0,0,1,0,1,0
/mnt/cisk/zmq/dataset/data/verdi-raft/raft-proofs/VotesCorrectProof.json,vci,"['split', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,eq_cardinal_equiv,"['constructor', 'red', 'intro', 'destruct', 'exists', 'red', 'split', 'red', 'intros', 'assumption', 'red', 'intro', 'exists', 'reflexivity', 'red', 'intros', 'destruct', 'inversion', 'destruct', 'destruct', 'exists', 'red', 'split', 'red', 'intros', 'apply', 'apply', 'assumption', 'red', 'intro', 'destruct', 'destruct', 'pose', 'destruct', 'pose', 'destruct', 'exists', 'rewrite', 'assumption', 'red', 'intros', 'destruct', 'apply', 'destruct', 'destruct', 'exists', 'apply', 'exists', 'assumption', 'assumption']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,eq_cardinal_impl_le_cardinal,"['intros', 'destruct', 'exists', 'destruct', 'assumption']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,le_cardinal_preorder,"['constructor', 'red', 'intro', 'apply', 'apply', 'red', 'intros', 'destruct', 'inversion', 'exists', 'red', 'intros', 'apply', 'apply', 'assumption']",1,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,le_cardinal_antisym,"['intros', 'destruct', 'inversion', 'destruct', 'destruct', 'pose', 'destruct', 'exists', 'assumption']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,cantor_diag,"['intros', 'red', 'intro', 'pose', 'pose', 'destruct', 'assert', 'rewrite', 'reflexivity', 'unfold', 'destruct', 'discriminate', 'discriminate']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,P_neq_not_P,"['unfold', 'intros', 'assert', 'unfold', 'intro', 'assert', 'rewrite', 'assumption', 'tauto', 'assert', 'rewrite', 'assumption', 'tauto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,cantor_diag2,"['unfold', 'intros', 'pose', 'pose', 'destruct', 'assert', 'rewrite', 'reflexivity', 'unfold', 'contradiction']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,cardinals_unbounded,"['destruct', 'exists', 'red', 'red', 'split', 'exists', 'red', 'intros', 'rewrite', 'reflexivity', 'unfold', 'intro', 'inversion', 'destruct', 'destruct', 'contradiction']",1,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,surj_le_cardinal,"['intros', 'pose', 'simpl', 'destruct', 'exists', 'red', 'intros', 'congruence']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,partial_injection_preord,"['constructor', 'red', 'intros', 'destruct', 'constructor', 'auto', 'intros', 'assert', 'apply', 'rewrite', 'reflexivity', 'red', 'intros', 'destruct', 'destruct', 'constructor', 'auto', 'intros', 'assert', 'auto', 'transitivity', 'trivial']",0,0,2,0,1,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,partial_injection_chain_ub,"['intros', 'pose', 'assert', 'intros', 'apply', 'destruct', 'destruct', 'destruct', 'exists', 'red', 'split', 'exists', 'split', 'assumption', 'exists', 'reflexivity', 'intros', 'destruct', 'destruct', 'destruct', 'pose', 'case', 'intro', 'rewrite', 'apply', 'assumption', 'intro', 'rewrite', 'symmetry', 'apply', 'assumption', 'assert', 'intros', 'destruct', 'destruct', 'simpl', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'case', 'intro', 'assert', 'apply', 'assumption', 'assert', 'rewrite', 'symmetry', 'apply', 'assumption', 'apply', 'assumption', 'intro', 'assert', 'apply', 'assumption', 'assert', 'rewrite', 'apply', 'assumption', 'apply', 'assumption', 'exists', 'intros', 'constructor', 'simpl', 'red', 'intros', 'constructor', 'exists', 'tauto', 'simpl', 'intros', 'destruct', 'simpl', 'destruct', 'destruct', 'destruct', 'destruct', 'case', 'intro', 'apply', 'assumption', 'intro', 'symmetry', 'apply', 'assumption']",2,1,2,2,1,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,premaximal_partial_injection,"['apply', 'exact', 'exact']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,premaximal_pi_is_full_or_surj,"['intros', 'case', 'left', 'trivial', 'intro', 'assert', 'apply', 'intuition', 'apply', 'apply', 'red', 'split', 'red', 'intros', 'constructor', 'red', 'intros', 'apply', 'intuition', 'apply', 'exists', 'assumption', 'right', 'destruct', 'intros', 'apply', 'intuition', 'pose', 'assert', 'intros', 'apply', 'case', 'intros', 'exists', 'red', 'split', 'left', 'exists', 'reflexivity', 'intros', 'case', 'intro', 'destruct', 'rewrite', 'assert', 'apply', 'rewrite', 'reflexivity', 'intros', 'destruct', 'contradict', 'rewrite', 'assumption', 'intros', 'destruct', 'exists', 'red', 'split', 'right', 'tauto', 'intros', 'case', 'intro', 'destruct', 'contradiction', 'intros', 'symmetry', 'tauto', 'pose', 'assert', 'intros', 'unfold', 'destruct', 'simpl', 'case', 'intros', 'destruct', 'assert', 'apply', 'rewrite', 'assumption', 'intros', 'destruct', 'contradiction', 'rewrite', 'assumption', 'assert', 'intros', 'unfold', 'destruct', 'simpl', 'case', 'intro', 'destruct', 'contradiction', 'tauto', 'assert', 'intros', 'inversion', 'inversion', 'rewrite', 'rewrite', 'apply', 'assumption', 'destruct', 'rewrite', 'rewrite', 'contradiction', 'exists', 'exists', 'assumption', 'destruct', 'rewrite', 'inversion', 'rewrite', 'contradiction', 'exists', 'exists', 'symmetry', 'assumption', 'destruct', 'reflexivity', 'pose', 'assert', 'constructor', 'unfold', 'simpl', 'unfold', 'red', 'intros', 'left', 'assumption', 'intros', 'symmetry', 'apply', 'apply', 'contradiction', 'apply', 'simpl', 'right', 'auto']",3,3,4,2,1,5
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,types_comparable,"['pose', 'destruct', 'apply', 'case', 'left', 'assert', 'rewrite', 'constructor', 'exists', 'red', 'intros', 'apply', 'assumption', 'right', 'assert', 'intro', 'apply', 'pose', 'destruct', 'exists', 'red', 'split', 'assumption', 'intros', 'destruct', 'destruct', 'destruct', 'apply', 'assumption', 'exists', 'red', 'intros', 'destruct', 'destruct', 'simpl', 'destruct', 'destruct', 'destruct', 'assert', 'apply', 'destruct', 'destruct', 'assumption']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Cardinals.json,le_cardinal_total,"['intros', 'destruct', 'destruct', 'pose', 'case', 'left', 'destruct', 'exists', 'assumption', 'right', 'destruct', 'exists', 'assumption']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,True_finite,"['apply', 'constructor', 'constructor', 'exists', 'destruct', 'remember', 'destruct', 'reflexivity', 'exact']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_dec_exists,"['intros', 'apply', 'red', 'intro', 'destruct', 'destruct', 'contradiction', 'revert', 'induction', 'right', 'destruct', 'intros', 'case', 'left', 'destruct', 'exists', 'assumption', 'intro', 'case', 'left', 'exists', 'assumption', 'right', 'destruct', 'apply', 'assumption', 'destruct', 'intros', 'case', 'left', 'destruct', 'exists', 'assumption', 'right', 'intro', 'rewrite', 'apply']",1,0,0,2,0,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_dec_forall,"['intros', 'apply', 'intuition', 'destruct', 'contradiction', 'revert', 'induction', 'left', 'destruct', 'intros', 'case', 'intro', 'case', 'left', 'destruct', 'apply', 'assumption', 'right', 'exists', 'assumption', 'right', 'destruct', 'exists', 'assumption', 'intros', 'destruct', 'case', 'left', 'intro', 'rewrite', 'apply', 'right', 'destruct', 'exists', 'assumption']",1,0,0,2,0,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_eq_dec,"['intros', 'apply', 'induction', 'destruct', 'decide', 'destruct', 'case', 'left', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'right', 'contradict', 'rewrite', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_dep_choice,"['intros', 'revert', 'induction', 'intros', 'exists', 'destruct', 'intros', 'pose', 'destruct', 'pose', 'destruct', 'exists', 'destruct', 'apply', 'assumption', 'intros', 'destruct', 'pose', 'destruct', 'pose', 'pose', 'exists', 'intro', 'unfold', 'simpl', 'generalize', 'pattern', 'rewrite', 'intro', 'rewrite', 'apply']",1,1,0,2,0,5
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_choice,"['intros', 'apply', 'assumption', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,Finite_ens_type,"['intros', 'induction', 'apply', 'constructor', 'assert', 'intro', 'destruct', 'destruct', 'exists', 'destruct', 'destruct', 'destruct', 'assert', 'auto', 'assert', 'auto', 'pose', 'apply', 'apply', 'assumption', 'assert', 'intros', 'apply', 'intuition', 'destruct', 'auto', 'destruct', 'left', 'assumption', 'right', 'destruct', 'reflexivity', 'pose', 'exists', 'intro', 'destruct', 'destruct', 'simpl', 'remember', 'destruct', 'destruct', 'reflexivity', 'contradiction', 'rewrite', 'assumption', 'simpl', 'remember', 'destruct', 'contradiction', 'reflexivity', 'intro', 'unfold', 'destruct', 'destruct', 'simpl', 'generalize', 'intro', 'destruct', 'reflexivity', 'simpl', 'destruct', 'destruct', 'reflexivity']",2,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,FiniteT_img,"['intros', 'induction', 'assert', 'apply', 'red', 'split', 'red', 'intros', 'destruct', 'destruct', 'auto', 'rewrite', 'constructor', 'assert', 'apply', 'assumption', 'intro', 'apply', 'apply', 'case', 'intro', 'pose', 'assert', 'apply', 'red', 'split', 'red', 'intros', 'destruct', 'destruct', 'exists', 'constructor', 'assumption', 'destruct', 'exists', 'constructor', 'transitivity', 'assumption', 'symmetry', 'assumption', 'red', 'intros', 'destruct', 'exists', 'constructor', 'assumption', 'rewrite', 'apply', 'intros', 'pose', 'assert', 'apply', 'red', 'split', 'red', 'intros', 'destruct', 'destruct', 'left', 'exists', 'constructor', 'assumption', 'right', 'auto', 'red', 'intros', 'destruct', 'destruct', 'exists', 'constructor', 'assumption', 'destruct', 'exists', 'constructor', 'reflexivity', 'rewrite', 'constructor', 'apply', 'red', 'intro', 'destruct', 'contradiction', 'symmetry', 'assumption', 'pose', 'assert', 'apply', 'red', 'split', 'red', 'intros', 'destruct', 'destruct', 'rewrite', 'rewrite', 'exists', 'constructor', 'unfold', 'reflexivity', 'red', 'intros', 'destruct', 'exists', 'constructor', 'assumption', 'rewrite', 'apply']",1,0,3,2,1,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,surj_finite,"['intros', 'apply', 'apply', 'apply', 'assumption', 'assumption', 'assert', 'intro', 'destruct', 'exists', 'auto', 'constructor', 'pose', 'exists', 'destruct', 'simpl', 'unfold', 'destruct', 'trivial', 'intros', 'simpl', 'reflexivity']",2,1,1,0,1,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_subtype,"['intros', 'induction', 'apply', 'constructor', 'exists', 'destruct', 'intro', 'destruct', 'destruct', 'destruct', 'pose', 'apply', 'apply', 'apply', 'intro', 'apply', 'pose', 'exists', 'destruct', 'simpl', 'reflexivity', 'simpl', 'reflexivity', 'destruct', 'simpl', 'reflexivity', 'simpl', 'destruct', 'reflexivity', 'pose', 'apply', 'apply', 'intro', 'apply', 'pose', 'exists', 'destruct', 'simpl', 'reflexivity', 'destruct', 'simpl', 'reflexivity', 'contradiction', 'pose', 'apply', 'apply', 'intro', 'apply', 'destruct', 'assert', 'intros', 'rewrite', 'assumption', 'pose', 'exists', 'destruct', 'simpl', 'generalize', 'rewrite', 'intro', 'destruct', 'reflexivity', 'destruct', 'simpl', 'generalize', 'rewrite', 'intro', 'destruct', 'reflexivity']",1,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_inj_surj,"['intros', 'induction', 'red', 'destruct', 'remember', 'destruct', 'assert', 'unfold', 'intros', 'assert', 'apply', 'congruence', 'discriminate', 'pose', 'assert', 'apply', 'red', 'intros', 'remember', 'destruct', 'remember', 'destruct', 'unfold', 'rewrite', 'rewrite', 'destruct', 'assert', 'congruence', 'apply', 'injection', 'trivial', 'unfold', 'rewrite', 'rewrite', 'destruct', 'contradiction', 'symmetry', 'assumption', 'unfold', 'rewrite', 'rewrite', 'destruct', 'contradiction', 'symmetry', 'assumption', 'assert', 'apply', 'congruence', 'injection', 'trivial', 'red', 'intro', 'destruct', 'case', 'exists', 'congruence', 'destruct', 'exists', 'unfold', 'destruct', 'congruence', 'contradiction', 'symmetry', 'assumption', 'destruct', 'exists', 'unfold', 'remember', 'destruct', 'destruct', 'contradiction', 'symmetry', 'assumption', 'reflexivity', 'assert', 'intros', 'remember', 'destruct', 'exists', 'reflexivity', 'assert', 'apply', 'congruence', 'discriminate', 'pose', 'assert', 'apply', 'red', 'intros', 'unfold', 'repeat', 'simpl', 'assert', 'apply', 'congruence', 'injection', 'trivial', 'red', 'intro', 'destruct', 'destruct', 'unfold', 'destruct', 'simpl', 'exists', 'congruence', 'exists', 'symmetry', 'assumption', 'destruct', 'pose', 'assert', 'apply', 'red', 'intros', 'unfold', 'assert', 'congruence', 'apply', 'congruence', 'red', 'intro', 'destruct', 'unfold', 'exists', 'congruence']",3,0,1,2,1,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_sum,"['intros', 'induction', 'apply', 'assumption', 'pose', 'exists', 'intro', 'simpl', 'reflexivity', 'destruct', 'simpl', 'reflexivity', 'destruct', 'pose', 'apply', 'apply', 'assumption', 'pose', 'exists', 'destruct', 'trivial', 'destruct', 'trivial', 'pose', 'destruct', 'pose', 'apply', 'assumption', 'exists', 'destruct', 'trivial', 'simpl', 'rewrite', 'reflexivity', 'destruct', 'trivial', 'simpl', 'rewrite', 'reflexivity']",0,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_prod,"['intros', 'induction', 'apply', 'constructor', 'exists', 'destruct', 'destruct', 'destruct', 'pose', 'pose', 'apply', 'apply', 'assumption', 'assumption', 'exists', 'destruct', 'trivial', 'destruct', 'trivial', 'pose', 'destruct', 'pose', 'apply', 'assumption', 'exists', 'destruct', 'unfold', 'try', 'trivial', 'destruct', 'unfold', 'try', 'trivial']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,finite_exp,"['intros', 'induction', 'pose', 'pose', 'apply', 'apply', 'exists', 'destruct', 'trivial', 'intro', 'extensionality', 'destruct', 'pose', 'pose', 'apply', 'apply', 'assumption', 'assumption', 'exists', 'destruct', 'try', 'try', 'trivial', 'intro', 'extensionality', 'destruct', 'trivial', 'destruct', 'pose', 'apply', 'assumption', 'pose', 'exists', 'intro', 'extensionality', 'unfold', 'unfold', 'simpl', 'rewrite', 'reflexivity', 'intro', 'extensionality', 'unfold', 'unfold', 'simpl', 'rewrite', 'reflexivity']",0,3,1,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,FiniteT_has_nat_cardinal,"['intros', 'apply', 'split', 'apply', 'pose', 'assert', 'apply', 'red', 'split', 'red', 'intros', 'constructor', 'red', 'intros', 'exists', 'constructor', 'trivial', 'rewrite', 'apply', 'assumption', 'intros', 'case', 'tauto', 'red', 'intros', 'apply', 'trivial']",1,0,1,1,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,FiniteT_nat_cardinal_def,"['intros', 'unfold', 'destruct', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,FiniteT_nat_cardinal_cond,"['intros', 'pose', 'destruct', 'red', 'destruct', 'transitivity', 'symmetry', 'apply', 'apply', 'apply', 'trivial']",0,0,2,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,FiniteT_nat_cardinal_False,"['apply', 'assert', 'apply', 'red', 'split', 'auto', 'red', 'intros', 'destruct', 'rewrite', 'constructor']",0,0,1,0,1,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,injection_preserves_cardinal,"['intros', 'induction', 'assert', 'apply', 'split', 'auto', 'red', 'intros', 'destruct', 'destruct', 'rewrite', 'constructor', 'assert', 'apply', 'split', 'red', 'intros', 'destruct', 'symmetry', 'destruct', 'destruct', 'left', 'exists', 'auto', 'destruct', 'right', 'auto', 'red', 'intros', 'destruct', 'destruct', 'exists', 'left', 'auto', 'assumption', 'destruct', 'exists', 'trivial', 'right', 'auto', 'rewrite', 'constructor', 'trivial', 'red', 'intro', 'inversion', 'apply', 'destruct', 'contradiction']",0,0,1,0,3,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,FiniteT_nat_cardinal_option,"['intros', 'apply', 'assert', 'apply', 'split', 'red', 'intros', 'destruct', 'left', 'exists', 'constructor', 'right', 'constructor', 'red', 'intros', 'constructor', 'rewrite', 'constructor', 'apply', 'apply', 'red', 'intros', 'injection', 'trivial', 'red', 'intro', 'inversion', 'discriminate']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,FiniteT_nat_cardinal_bijection,"['intros', 'apply', 'apply', 'destruct', 'assert', 'apply', 'split', 'red', 'intros', 'try', 'destruct', 'exists', 'try', 'auto', 'rewrite', 'apply', 'trivial', 'apply']",1,0,2,1,1,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteTypes.json,unique_FiniteT_nat_cardinal,"['match', 'split', 'exists', 'repeat', 'exact', 'exact', 'exact', 'red', 'intros', 'destruct', 'destruct', 'extensionality', 'extensionality', 'generalize', 'induction', 'intro', 'destruct', 'congruence', 'intro', 'destruct', 'rewrite', 'rewrite', 'rewrite', 'reflexivity', 'intro', 'destruct', 'now']",1,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/Classical_Wf.json,WF_implies_MEP,"['unfold', 'unfold', 'intros', 'destruct', 'revert', 'apply', 'intros', 'case', 'exists', 'split', 'assumption', 'assumption', 'intro', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'apply', 'assumption', 'assumption']",3,1,2,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Classical_Wf.json,MEP_implies_WF,"['unfold', 'unfold', 'intro', 'apply', 'intuition', 'apply', 'destruct', 'assert', 'exists', 'constructor', 'assumption', 'apply', 'destruct', 'destruct', 'destruct', 'contradict', 'constructor', 'intros', 'apply', 'intuition', 'apply', 'constructor', 'assumption', 'assumption']",2,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Classical_Wf.json,WF_implies_DSP,"['unfold', 'intros', 'remember', 'revert', 'apply', 'intros', 'case', 'intro', 'pose', 'assert', 'apply', 'rewrite', 'assumption', 'trivial', 'destruct', 'exists', 'unfold', 'assumption', 'exists', 'assumption']",3,0,3,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/Classical_Wf.json,DSP_implies_WF,"['unfold', 'intro', 'apply', 'unfold', 'intro', 'intros', 'apply', 'intuition', 'assert', 'intros', 'apply', 'intuition', 'assert', 'apply', 'assumption', 'apply', 'exists', 'split', 'assumption', 'intros', 'apply', 'tauto', 'pose', 'assert', 'apply', 'intro', 'destruct', 'simpl', 'pose', 'destruct', 'destruct', 'exists', 'simpl', 'assumption', 'destruct', 'destruct', 'pose', 'simpl', 'pose', 'assert', 'unfold', 'intro', 'simpl', 'apply', 'contradict', 'apply', 'exists', 'apply', 'auto']",3,1,3,0,1,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_le_respects_succ_converse,"['intros', 'inversion_clear', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_le_S_sup_converse,"['intros', 'inversion', 'exists', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_le_trans,"['induction', 'induction', 'induction', 'intros', 'apply', 'apply', 'apply', 'trivial', 'apply', 'trivial', 'intros', 'apply', 'destruct', 'apply', 'apply', 'trivial', 'intros', 'pose', 'apply', 'destruct', 'apply', 'trivial', 'intros', 'pose', 'constructor', 'intro', 'apply', 'trivial']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_le_sup,"['assert', 'induction', 'destruct', 'split', 'apply', 'trivial', 'intros', 'apply', 'trivial', 'split', 'apply', 'intro', 'destruct', 'apply', 'trivial', 'intros', 'apply', 'intro', 'destruct', 'apply', 'apply', 'apply', 'trivial', 'trivial', 'intros', 'destruct', 'apply', 'trivial']",2,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_le_refl,"['induction', 'apply', 'trivial', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_le_S,"['induction', 'apply', 'trivial', 'apply', 'intro', 'apply', 'apply', 'apply', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_lt_le,"['intros', 'apply', 'trivial', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_lt_le_trans,"['intros', 'apply', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_le_lt_trans,"['intros', 'apply', 'trivial', 'apply', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_lt_trans,"['intros', 'apply', 'trivial', 'apply', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_lt_respects_succ,"['intros', 'apply', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_total_order,"['induction', 'induction', 'destruct', 'left', 'apply', 'trivial', 'right', 'left', 'split', 'apply', 'apply', 'apply', 'apply', 'right', 'right', 'apply', 'trivial', 'destruct', 'destruct', 'left', 'apply', 'trivial', 'apply', 'destruct', 'destruct', 'right', 'left', 'split', 'apply', 'apply', 'apply', 'apply', 'intro', 'destruct', 'contradiction', 'exists', 'trivial', 'apply', 'apply', 'trivial', 'assert', 'intros', 'destruct', 'contradiction', 'exists', 'trivial', 'contradiction', 'exists', 'trivial', 'trivial', 'right', 'right', 'apply', 'apply', 'intro', 'apply', 'apply', 'apply', 'induction', 'case', 'intro', 'destruct', 'right', 'right', 'apply', 'trivial', 'apply', 'case', 'intro', 'right', 'left', 'destruct', 'split', 'apply', 'intro', 'destruct', 'apply', 'trivial', 'apply', 'contradiction', 'exists', 'trivial', 'apply', 'apply', 'apply', 'left', 'apply', 'apply', 'intro', 'destruct', 'apply', 'trivial', 'contradiction', 'exists', 'trivial', 'contradiction', 'exists', 'trivial', 'case', 'intro', 'left', 'destruct', 'apply', 'trivial', 'apply', 'case', 'intro', 'destruct', 'right', 'right', 'apply', 'trivial', 'apply', 'right', 'left', 'split', 'apply', 'intro', 'destruct', 'apply', 'trivial', 'apply', 'contradiction', 'exists', 'trivial', 'apply', 'intro', 'destruct', 'contradiction', 'exists', 'trivial', 'apply', 'apply', 'trivial']",1,0,1,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ordinals_well_founded,"['red', 'intro', 'induction', 'constructor', 'intros', 'apply', 'constructor', 'intros', 'destruct', 'apply', 'apply', 'trivial', 'constructor', 'intros', 'apply', 'destruct', 'destruct', 'apply', 'trivial']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_lt_irrefl,"['intro', 'red', 'intro', 'assert', 'intro', 'pose', 'induction', 'red', 'intro', 'symmetry', 'destruct', 'contradiction', 'trivial', 'contradiction', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,ord_successor_or_limit,"['induction', 'left', 'constructor', 'destruct', 'right', 'constructor', 'trivial', 'destruct', 'assert', 'intro', 'destruct', 'contradiction', 'exists', 'trivial', 'apply', 'apply', 'trivial', 'assert', 'split', 'apply', 'trivial', 'apply', 'case', 'intro', 'left', 'apply', 'trivial', 'split', 'apply', 'right', 'apply', 'trivial', 'split', 'apply']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Ordinals.json,successor_ordinal_not_limit,"['intros', 'red', 'intro', 'induction', 'inversion_clear', 'induction', 'assert', 'apply', 'intro', 'apply', 'destruct', 'apply', 'trivial', 'apply', 'apply', 'apply', 'contradiction', 'apply', 'trivial', 'apply', 'apply', 'split', 'apply', '(apply H0 || apply H1).', 'contradiction', 'apply', 'trivial', 'split', 'apply']",1,0,2,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/CountableTypes.json,positive_countable,"['exists', 'red', 'intros', 'apply', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/CountableTypes.json,Z_countable,"['destruct', 'destruct', 'exists', 'red', 'intros', 'destruct', 'destruct', 'apply', 'try', 'trivial', 'injection', 'intro', 'f_equal', 'auto', 'injection', 'intro', 'f_equal', 'auto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/CountableTypes.json,Q_countable,"['destruct', 'destruct', 'destruct', 'exists', 'red', 'intros', 'destruct', 'destruct', 'apply', 'injection', 'intros', 'f_equal', 'auto']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/CountableTypes.json,countable_union,"['intros', 'destruct', 'intro', 'destruct', 'exists', 'trivial', 'destruct', 'destruct', 'exists', 'assumption', 'destruct', 'destruct', 'exists', 'red', 'intros', 'apply', 'injection', 'intros', 'apply', 'revert', 'generalize', 'generalize', 'rewrite', 'intros', 'apply', 'injection', 'apply']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Families.json,empty_family_union,"['apply', 'unfold', 'unfold', 'intuition', 'destruct', 'contradiction', 'contradiction']",0,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Families.json,empty_family_intersection,"['apply', 'unfold', 'unfold', 'intuition', 'constructor', 'constructor', 'intros', 'contradiction']",0,1,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Families.json,subfamily_union,"['unfold', 'intros', 'destruct', 'apply', 'apply', 'assumption', 'assumption']",2,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Families.json,subfamily_intersection,"['unfold', 'intros', 'constructor', 'destruct', 'intros', 'apply', 'apply', 'assumption']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/ZornsLemma.json,tower_is_chain,"['unfold', 'intros', 'revert', 'induction', 'intros', 'case', 'right', 'apply', 'assumption', 'intro', 'apply', 'destruct', 'apply', 'destruct', 'left', 'apply', 'pose', 'tauto', 'apply', 'assumption', 'pose', 'simpl', 'destruct', 'destruct', 'remember', 'assert', 'intros', 'induction', 'case', 'left', 'apply', 'assumption', 'right', 'apply', 'destruct', 'apply', 'destruct', 'apply', 'pose', 'tauto', 'apply', 'assumption', 'assert', 'rewrite', 'apply', 'assumption', 'destruct', 'assert', 'apply', 'assumption', 'case', 'left', 'assumption', 'intro', 'pose', 'simpl', 'assert', 'apply', 'assumption', 'assumption', 'case', 'right', 'rewrite', 'rewrite', 'apply', 'left', 'rewrite', 'apply', 'right', 'apply', 'assumption', 'apply', 'intros', 'case', 'left', 'apply', 'assumption', 'assumption', 'right', 'assumption']",4,0,2,2,1,5
/mnt/cisk/zmq/dataset/data/zorns-lemma/ZornsLemma.json,ZL',"['pose', 'simpl', 'remember', 'assert', 'rewrite', 'constructor', 'auto', 'pose', 'assert', 'constructor', 'assumption', 'pose', 'simpl', 'destruct', 'destruct', 'contradict', 'apply', 'assumption', 'destruct', 'apply', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/ZornsLemma.json,chains_order,"['constructor', 'unfold', 'unfold', 'auto', 'unfold', 'unfold', 'auto', 'unfold', 'unfold', 'intros', 'apply', 'auto']",3,1,1,0,1,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/ZornsLemma.json,chains_sup_def,"['refine', 'red', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'pose', 'destruct', 'destruct', 'simpl', 'destruct', 'simpl', 'destruct', 'apply', 'unfold', 'simpl', 'destruct', 'apply', 'apply', 'exact', 'exact', 'apply', 'exact', 'apply', 'exact', 'assumption', 'Defined']",0,1,3,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/ZornsLemma.json,ZornsLemma,"['pose', 'apply', 'unfold', 'dintuition', 'assert', 'apply', 'exact', 'assert', 'intro', 'apply', 'apply', 'assert', 'intro', 'pose', 'destruct', 'apply', 'exists', 'assumption', 'clear', 'assert', 'intro', 'destruct', 'pose', 'destruct', 'pose', 'destruct', 'pose', 'assert', 'unfold', 'intros', 'case', 'case', 'intros', 'apply', 'assumption', 'assumption', 'intros', 'destruct', 'left', 'apply', 'apply', 'assumption', 'apply', 'intros', 'destruct', 'case', 'right', 'apply', 'apply', 'assumption', 'apply', 'intros', 'destruct', 'left', 'apply', 'exists', 'split', 'unfold', 'simpl', 'unfold', 'intros', 'constructor', 'assumption', 'split', 'intuition', 'injection', 'intro', 'assert', 'rewrite', 'constructor', 'auto', 'contradict', 'apply', 'assumption', 'apply', 'assumption', 'intros', 'destruct', 'unfold', 'simpl', 'unfold', 'simpl', 'case', 'right', 'apply', 'apply', 'split', 'assumption', 'unfold', 'intros', 'case', 'exact', 'intros', 'destruct', 'assumption', 'left', 'apply', 'apply', 'split', 'unfold', 'intros', 'assert', 'apply', 'assumption', 'inversion', 'assumption', 'destruct', 'contradiction', 'assumption', 'apply', 'destruct', 'apply', 'intro', 'apply', 'apply']",4,2,4,0,0,5
/mnt/cisk/zmq/dataset/data/zorns-lemma/ZornsLemma.json,ZornsLemmaForPreorders,"['pose', 'assert', 'constructor', 'red', 'intros', 'split', 'apply', 'trivial', 'red', 'intros', 'destruct', 'destruct', 'split', 'apply', 'trivial', 'red', 'intros', 'destruct', 'split', 'trivial', 'pose', 'let', 'intros', 'assert', 'apply', 'split', 'red', 'intros', 'destruct', 'red', 'simpl', 'red', 'simpl', 'apply', 'trivial', 'apply', 'apply', 'trivial', 'apply', 'destruct', 'red', 'simpl', 'red', 'simpl', 'apply', 'trivial', 'apply', 'apply', 'trivial', 'apply', 'assert', 'rewrite', 'trivial', 'simpl', 'assumption', 'clearbody', 'fold', 'assert', 'apply', 'constructor', 'red', 'intros', 'destruct', 'rewrite', 'apply', 'trivial', 'red', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'rewrite', 'rewrite', 'apply', 'trivial', 'red', 'intros', 'destruct', 'destruct', 'destruct', 'destruct', 'rewrite', 'unfold', 'apply', 'apply', 'trivial', 'split', 'trivial', 'intros', 'pose', 'unshelve', 'red', 'intros', 'pose', 'rewrite', 'destruct', 'destruct', 'apply', 'trivial', 'destruct', 'exists', 'intros', 'destruct', 'destruct', 'rewrite', 'apply', 'constructor', 'exact', 'destruct', 'destruct', 'destruct', 'exists', 'red', 'intros', 'red', 'unshelve', 'rewrite', 'assumption', 'unfold', 'injection', 'intros', 'assert', 'rewrite', 'constructor', 'apply', 'trivial', 'destruct', 'apply']",0,1,3,3,0,6
/mnt/cisk/zmq/dataset/data/zorns-lemma/InfiniteTypes.json,finite_nat_initial_segment,"['intros', 'apply', 'rewrite', 'induction', 'assert', 'apply', 'split', 'auto', 'red', 'intros', 'destruct', 'contradict', 'auto', 'rewrite', 'constructor', 'assert', 'apply', 'split', 'red', 'intros', 'destruct', 'assert', 'auto', 'apply', 'case', 'left', 'constructor', 'trivial', 'right', 'auto', 'red', 'intros', 'case', 'intros', 'destruct', 'constructor', 'auto', 'intros', 'destruct', 'constructor', 'auto', 'rewrite', 'constructor', 'trivial', 'red', 'intro', 'destruct', 'contradict', 'auto']",1,0,2,0,4,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/InfiniteTypes.json,nat_infinite,"['red', 'intro', 'assert', 'apply', 'trivial', 'red', 'intros', 'injection', 'trivial', 'destruct', 'discriminate']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteIntersections.json,finite_intersection_is_finite_indexed_intersection,"['intros', 'induction', 'exists', 'split', 'constructor', 'exists', 'split', 'destruct', 'symmetry', 'apply', 'exists', 'split', 'exact', 'exists', 'split', 'destruct', 'simpl', 'trivial', 'apply', 'split', 'red', 'intros', 'constructor', 'destruct', 'simpl', 'trivial', 'destruct', 'exact', 'destruct', 'destruct', 'exists', 'split', 'apply', 'trivial', 'exists', 'split', 'destruct', 'auto', 'apply', 'split', 'red', 'intros', 'destruct', 'rewrite', 'destruct', 'rewrite', 'destruct', 'constructor', 'destruct', 'auto', 'destruct', 'constructor', 'rewrite', 'constructor', 'intro', 'exact', 'rewrite', 'constructor', 'intro', 'exact']",0,0,1,0,1,6
/mnt/cisk/zmq/dataset/data/zorns-lemma/FiniteIntersections.json,finite_indexed_intersection_is_finite_intersection,"['intros', 'induction', 'rewrite', 'constructor', 'assert', 'apply', 'split', 'red', 'intros', 'destruct', 'constructor', 'constructor', 'trivial', 'trivial', 'destruct', 'constructor', 'destruct', 'destruct', 'trivial', 'rewrite', 'constructor', 'auto', 'constructor', 'trivial', 'destruct', 'assert', 'apply', 'split', 'red', 'intros', 'destruct', 'constructor', 'trivial', 'destruct', 'constructor', 'intro', 'rewrite', 'trivial', 'rewrite', 'auto']",0,0,1,2,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/FunctionProperties.json,unique_inverse,"['intros', 'destruct', 'exists', 'red', 'split', 'tauto', 'intros', 'destruct', 'extensionality', 'transitivity', 'rewrite', 'reflexivity', 'rewrite', 'reflexivity']",1,0,0,0,1,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/FunctionProperties.json,bijective_impl_invertible,"['intros', 'destruct', 'assert', 'intro', 'apply', 'pose', 'destruct', 'exists', 'red', 'split', 'assumption', 'intros', 'apply', 'transitivity', 'auto', 'auto', 'pose', 'pose', 'simpl', 'exists', 'intro', 'apply', 'unfold', 'rewrite', 'reflexivity', 'intro', 'unfold', 'apply']",1,0,2,1,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/FunctionProperties.json,invertible_impl_bijective,"['intros', 'destruct', 'split', 'red', 'intros', 'congruence', 'red', 'intro', 'exists', 'apply']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,R_impl_equality_of_equiv_class,"['destruct', 'intros', 'apply', 'split', 'red', 'intros', 'constructor', 'destruct', 'apply', 'trivial', 'apply', 'trivial', 'destruct', 'constructor', 'apply', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,equality_of_equiv_class_impl_R,"['destruct', 'intros', 'assert', 'constructor', 'apply', 'rewrite', 'destruct', 'apply', 'assumption']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,equiv_class_in_quotient,"['unfold', 'intro', 'apply', 'constructor']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,quotient_projection_correct,['trivial'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,quotient_projection_surjective,"['intro', 'destruct', 'destruct', 'exists', 'unfold', 'pose', 'symmetry', 'destruct', 'f_equal', 'apply']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,quotient_projection_collapses_R,"['intros', 'apply', 'apply', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,quotient_projection_minimally_collapses_R,"['intros', 'apply', 'repeat', 'rewrite', 'reflexivity']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,description_of_fbar,"['intro', 'pose', 'destruct', 'exists', 'unfold', 'split', 'exists', 'tauto', 'intros', 'destruct', 'destruct', 'rewrite', 'apply', 'apply', 'trivial', 'transitivity', 'trivial', 'rewrite', 'rewrite', 'trivial']",1,0,1,2,1,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,induced_function_correct,"['intro', 'unfold', 'destruct', 'simpl', 'destruct', 'destruct', 'rewrite', 'apply', 'apply', 'trivial']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,induced_function_unique,"['intros', 'destruct', 'rewrite', 'rewrite', 'rewrite', 'reflexivity']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,projf_well_defined,"['intros', 'unfold', 'apply', 'trivial', 'apply', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,induced_function2_correct,"['intros', 'unfold', 'rewrite', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,slices_well_defined,"['intros', 'apply', 'apply', 'assumption']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,eq_fn_equiv,"['constructor', 'unfold', 'unfold', 'reflexivity', 'unfold', 'unfold', 'intros', 'transitivity', 'apply', 'apply', 'unfold', 'unfold', 'symmetry', 'apply']",2,1,3,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,well_defined_induced1,"['unfold', 'intros', 'pose', 'destruct', 'rewrite', 'unfold', 'rewrite', 'rewrite', 'apply', 'assumption', 'apply']",2,0,0,4,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,well_defined_eval,"['intros', 'unfold', 'apply']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,induced_function2arg_correct,"['intros', 'unfold', 'unfold', 'unfold', 'rewrite', 'rewrite', 'unfold', 'unfold', 'rewrite', 'reflexivity']",1,1,0,3,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,projf2_well_defined,"['intros', 'apply', 'trivial', 'apply', 'assumption', 'assumption']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/Quotients.json,induced_function3_correct,"['intros', 'unfold', 'rewrite', 'reflexivity']",1,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/DecidableDec.json,exclusive_dec,"['intros', 'assert', 'apply', 'case', 'exists', 'red', 'split', 'assumption', 'destruct', 'reflexivity', 'tauto', 'exists', 'red', 'split', 'assumption', 'destruct', 'tauto', 'reflexivity', 'destruct', 'destruct', 'left', 'assumption', 'right', 'assumption']",0,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/DecidableDec.json,decidable_dec,"['intros', 'apply', 'tauto', 'assumption']",1,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/DecidableDec.json,classic_dec,"['intro', 'apply', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/IndexedFamilies.json,sub_indexed_union,"['unfold', 'intros', 'destruct', 'apply', 'assumption']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/IndexedFamilies.json,sub_indexed_intersection,"['unfold', 'intros', 'constructor', 'destruct', 'intro', 'apply']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/IndexedFamilies.json,empty_indexed_intersection,"['intros', 'apply', 'red', 'split', 'red', 'intros', 'auto', 'constructor', 'constructor', 'destruct']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/IndexedFamilies.json,empty_indexed_union,"['intros', 'apply', 'red', 'split', 'red', 'intros', 'destruct', 'destruct', 'destruct']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/IndexedFamilies.json,indexed_to_family_union,"['apply', 'unfold', 'unfold', 'intuition', 'destruct', 'apply', 'apply', 'constructor', 'reflexivity', 'assumption', 'destruct', 'destruct', 'apply', 'rewrite', 'assumption']",0,1,3,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/IndexedFamilies.json,indexed_to_family_intersection,"['apply', 'unfold', 'unfold', 'intuition', 'constructor', 'intros', 'destruct', 'destruct', 'rewrite', 'apply', 'constructor', 'intro', 'destruct', 'apply', 'apply', 'constructor', 'reflexivity']",0,1,2,1,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/InverseImage.json,inverse_image_increasing,"['intros', 'red', 'intros', 'destruct', 'constructor', 'auto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/InverseImage.json,inverse_image_empty,"['intros', 'apply', 'split', 'red', 'intros', 'destruct', 'destruct']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/InverseImage.json,inverse_image_full,"['intros', 'apply', 'split', 'red', 'intros', 'constructor', 'constructor']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/InverseImage.json,inverse_image_intersection,"['intros', 'apply', 'split', 'red', 'intros', 'destruct', 'inversion', 'constructor', 'constructor', 'trivial', 'destruct', 'constructor', 'constructor', 'trivial']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/InverseImage.json,inverse_image_union,"['intros', 'apply', 'split', 'red', 'intros', 'destruct', 'inversion', 'left', 'constructor', 'trivial', 'right', 'constructor', 'trivial', 'constructor', 'destruct', 'left', 'trivial', 'right', 'trivial']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/InverseImage.json,inverse_image_complement,"['intros', 'apply', 'split', 'red', 'intros', 'red', 'intro', 'destruct', 'destruct', 'contradiction', 'constructor', 'intro', 'contradiction', 'constructor', 'trivial']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/InverseImage.json,inverse_image_composition,"['intros', 'apply', 'split', 'red', 'intros', 'constructor', 'constructor', 'destruct', 'assumption', 'destruct', 'inversion', 'constructor', 'trivial']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/EnsemblesSpec.json,characteristic_function_to_ensemble_is_identity,"['intros', 'apply', 'split', 'red', 'intros', 'destruct', 'exact', 'constructor', 'exact']",1,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/Proj1SigInjective.json,proj1_sig_injective,"['intros', 'destruct', 'destruct', 'simpl', 'apply', 'trivial']",0,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,wo_irrefl,"['intuition', 'assert', 'intros', 'induction', 'intuition', 'rewrite', 'apply', 'trivial', 'trivial', 'pose', 'unfold', 'pose', 'auto']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,wo_antisym,"['intuition', 'assert', 'intros', 'induction', 'intuition', 'rewrite', 'pose', 'tauto', 'rewrite', 'pose', 'tauto', 'pose', 'unfold', 'pose', 'tauto']",0,0,0,0,1,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,wo_transitive,"['intros', 'unfold', 'intros', 'case', 'trivial', 'intro', 'case', 'intro', 'rewrite', 'pose', 'contradict', 'auto', 'intro', 'assert', 'intros', 'induction', 'intuition', 'rewrite', 'pose', 'tauto', 'rewrite', 'pose', 'tauto', 'rewrite', 'pose', 'tauto', 'rewrite', 'pose', 'tauto', 'rewrite', 'pose', 'tauto', 'rewrite', 'pose', 'tauto', 'pose', 'unfold', 'pose', 'tauto']",3,0,0,1,1,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,WO_minimum,"['refine', 'pose', 'unfold', 'pose', 'destruct', 'destruct', 'exists', 'red', 'split', 'split', 'assumption', 'intros', 'case', 'tauto', 'intro', 'case', 'auto', 'intro', 'contradict', 'auto', 'intros', 'destruct', 'case', 'intro', 'pose', 'case', 'trivial', 'intro', 'contradict', 'auto', 'intro', 'case', 'trivial', 'intro', 'contradict', 'auto', 'Defined']",1,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,partial_WO_preord,"['constructor', 'unfold', 'intro', 'destruct', 'constructor', 'simpl', 'auto', 'split', 'trivial', 'trivial', 'auto', 'unfold', 'destruct', 'destruct', 'destruct', 'intros', 'destruct', 'destruct', 'simpl', 'simpl', 'simpl', 'simpl', 'simpl', 'simpl', 'constructor', 'simpl', 'auto', 'intros', 'apply', 'apply', 'auto', 'apply', 'auto', 'intros', 'apply', 'trivial', 'apply', 'trivial', 'auto', 'apply', 'trivial', 'auto', 'apply', 'trivial', 'auto']",2,1,2,0,3,2
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,partial_WO_chain_ub,"['refine', 'intros', 'unfold', 'destruct', 'destruct', 'split', 'constructor', 'exists', 'split', 'assumption', 'pose', 'tauto', 'constructor', 'exists', 'split', 'assumption', 'pose', 'tauto', 'constructor', 'assert', 'intros', 'constructor', 'exists', 'split', 'assumption', 'exact', 'assert', 'intros', 'induction', 'constructor', 'intros', 'destruct', 'destruct', 'unfold', 'simpl', 'assert', 'destruct', 'destruct', 'pose', 'case', 'intro', 'destruct', 'apply', 'assumption', 'pose', 'tauto', 'assumption', 'intro', 'destruct', 'apply', 'pose', 'tauto', 'pose', 'simpl', 'assert', 'apply', 'rewrite', 'apply', 'unfold', 'simpl', 'destruct', 'destruct', 'pose', 'case', 'intros', 'destruct', 'apply', 'assumption', 'assumption', 'assumption', 'intro', 'destruct', 'apply', 'assumption', 'pose', 'tauto', 'pose', 'tauto', 'red', 'intro', 'destruct', 'inversion', 'destruct', 'destruct', 'pose', 'simpl', 'assert', 'apply', 'rewrite', 'apply', 'apply', 'unfold', 'intros', 'destruct', 'destruct', 'unfold', 'simpl', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'destruct', 'case', 'intro', 'assert', 'apply', 'assumption', 'case', 'unfold', 'simpl', 'left', 'exists', 'tauto', 'intro', 'case', 'right', 'left', 'apply', 'injection', 'trivial', 'unfold', 'simpl', 'right', 'right', 'exists', 'tauto', 'intro', 'assert', 'apply', 'assumption', 'case', 'unfold', 'simpl', 'left', 'exists', 'tauto', 'intro', 'case', 'right', 'left', 'apply', 'injection', 'trivial', 'unfold', 'simpl', 'right', 'right', 'exists', 'tauto', 'Defined']",4,1,4,1,0,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,partial_WO_chain_ub_correct,"['intros', 'constructor', 'unfold', 'intros', 'constructor', 'exists', 'tauto', 'intros', 'split', 'intro', 'exists', 'tauto', 'intro', 'destruct', 'destruct', 'case', 'intro', 'destruct', 'apply', 'assumption', 'assumption', 'assumption', 'intro', 'destruct', 'apply', 'assumption', 'pose', 'tauto', 'pose', 'tauto', 'intros', 'destruct', 'destruct', 'case', 'intro', 'destruct', 'apply', 'assumption', 'pose', 'tauto', 'assumption', 'intro', 'apply', 'pose', 'tauto']",3,0,0,0,1,4
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,extend_strictly_partial_WO,"['refine', 'intros', 'case', 'intros', 'split', 'left', 'pose', 'tauto', 'left', 'pose', 'tauto', 'intros', 'destruct', 'split', 'left', 'assumption', 'right', 'rewrite', 'auto', 'constructor', 'red', 'intros', 'assert', 'intro', 'destruct', 'left', 'simpl', 'assumption', 'assert', 'intro', 'pose', 'induction', 'constructor', 'intros', 'destruct', 'destruct', 'unfold', 'simpl', 'assert', 'case', 'intro', 'pose', 'tauto', 'tauto', 'assert', 'case', 'trivial', 'intro', 'destruct', 'contradict', 'rewrite', 'assumption', 'pose', 'simpl', 'assert', 'apply', 'rewrite', 'apply', 'red', 'simpl', 'assumption', 'destruct', 'case', 'intros', 'pose', 'simpl', 'assert', 'apply', 'rewrite', 'assumption', 'intros', 'generalize', 'destruct', 'intro', 'constructor', 'intros', 'unfold', 'destruct', 'simpl', 'case', 'intro', 'contradict', 'pose', 'tauto', 'intros', 'destruct', 'pose', 'simpl', 'assert', 'apply', 'rewrite', 'assumption', 'red', 'intros', 'destruct', 'destruct', 'unfold', 'simpl', 'case', 'case', 'intros', 'case', 'intro', 'red', 'simpl', 'left', 'constructor', 'assumption', 'intro', 'case', 'right', 'left', 'apply', 'injection', 'trivial', 'right', 'right', 'red', 'simpl', 'constructor', 'assumption', 'intros', 'left', 'destruct', 'constructor', 'tauto', 'case', 'intros', 'right', 'right', 'destruct', 'constructor', 'tauto', 'right', 'left', 'apply', 'destruct', 'destruct', 'trivial', 'Defined']",3,1,2,2,2,6
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,extend_strictly_partial_WO_correct,"['intros', 'constructor', 'unfold', 'simpl', 'constructor', 'assumption', 'intros', 'unfold', 'simpl', 'split', 'tauto', 'intro', 'case', 'trivial', 'intro', 'destruct', 'contradict', 'rewrite', 'assumption', 'unfold', 'simpl', 'intros', 'case', 'intro', 'pose', 'tauto', 'intro', 'tauto']",3,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,premaximal_partial_WO_is_full,"['intros', 'apply', 'split', 'unfold', 'intros', 'constructor', 'unfold', 'intros', 'apply', 'unfold', 'intro', 'pose', 'assert', 'apply', 'apply', 'assert', 'simpl', 'constructor', 'auto', 'apply', 'apply', 'assumption']",3,0,3,0,1,0
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,well_orderable,"['assert', 'apply', 'exact', 'intros', 'exists', 'exact', 'destruct', 'exists', 'constructor', 'assert', 'rewrite', 'intro', 'constructor', 'assumption', 'assert', 'intro', 'pose', 'induction', 'destruct', 'simpl', 'unfold', 'simpl', 'constructor', 'intros', 'apply', 'assumption', 'red', 'intro', 'apply', 'red', 'intros', 'assert', 'rewrite', 'intro', 'constructor', 'apply', 'case', 'unfold', 'tauto', 'intro', 'case', 'intro', 'right', 'left', 'injection', 'trivial', 'unfold', 'tauto']",2,2,1,0,0,3
/mnt/cisk/zmq/dataset/data/zorns-lemma/WellOrders.json,WO_implies_AC,"['intros', 'assert', 'intro', 'pose', 'destruct', 'exists', 'constructor', 'assumption', 'exists', 'intro', 'destruct', 'simpl', 'destruct', 'destruct', 'assumption']",0,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/coqrel/OptionRel.json,None_le,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/OptionRel.json,option_le_refl,"['intros', 'intros', 'constructor', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/OptionRel.json,option_le_trans,"['intros', 'intros', 'inversion', 'subst', 'clear', 'constructor', 'etransitivity', 'eassumption', 'constructor', 'constructor']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/OptionRel.json,None_ge,"['intros', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/OptionRel.json,option_ge_refl,"['intros', 'intros', 'constructor', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/OptionRel.json,option_ge_trans,"['intros', 'intros', 'inversion', 'subst', 'clear', 'constructor', 'etransitivity', 'eassumption', 'constructor', 'constructor']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/LogicalRelationsTests.json,rel_pull_2,"['intros', 'rauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/LogicalRelationsTests.json,rel_all_1,"['intros', 'rauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/LogicalRelationsTests.json,rel_ex_1,"['intros', 'rauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/LogicalRelationsTests.json,rel_top_component_refl,"['intros', 'rauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/LogicalRelationsTests.json,rel_top_component_trsym,"['intros', 'rauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Transport.json,set_le_transport,"['intros', 'edestruct', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Transport.json,rel_curry_set_le_transport,"['intros', 'destruct', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Transport.json,rel_curry2_set_le_transport,"['intros', 'destruct', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Transport.json,impl_transport,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Transport.json,transport_in_goal,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,unfold_monotonic_rstep,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,subrel_impl_relim,"['cbv', 'firstorder', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,arrow_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,arrow_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,forall_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,forall_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,flip_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,flip_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelDefinitions.json,flip_rdestruct,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/MorphismsInterop.json,respectful_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/MorphismsInterop.json,respectful_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/MorphismsInterop.json,forall_relation_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/MorphismsInterop.json,forall_relation_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/MorphismsInterop.json,pointwise_relation_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/MorphismsInterop.json,pointwise_relation_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelClasses.json,transitive_rcompose,['assumption'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,k_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,k_relim,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,k1_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,k1_relim,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,k2_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,k2_relim,['tauto'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,klr_box_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,klr_box_relim,"['intros', 'apply', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,klr_diam_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,klr_diam_relim,"['intros', 'eapply', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,rel_kvd_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,rel_kvd_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,klr_pullw_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/KLR.json,klr_pullw_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RDestruct.json,rdestruct_rstep,"['intros', 'firstorder']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RDestruct.json,rdestruct_forget_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RDestruct.json,rdestruct_remember_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,arrow_pointwise_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,arrow_pointwise_relim,"['intros', 'subst', 'firstorder']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,arrow_pointwise_refl,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,forall_pointwise_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,forall_pointwise_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,forallp_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,forallp_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,set_le_refl,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,set_ge_refl,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,sum_rel_refl,"['intros', 'destruct', 'constructor', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,sum_rel_corefl,"['intros', 'f_equal', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,sum_rel_trans,"['intros', 'destruct', 'inversion', 'constructor', 'etransitivity', 'eassumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,sum_rel_sym,"['intros', 'destruct', 'constructor', 'symmetry', 'eassumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,sum_rel_preorder,"['split', 'typeclasses']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,prod_rel_refl,"['intros', 'destruct', 'constructor', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,prod_rel_corefl,"['intros', 'f_equal', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,prod_rel_trans,"['intros', 'destruct', 'inversion', 'constructor', 'etransitivity', 'eassumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,prod_rel_sym,"['intros', 'destruct', 'constructor', 'symmetry', 'eassumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,prod_rel_preorder,"['split', 'typeclasses']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,option_rel_refl,"['intros', 'constructor', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,option_rel_some_inv,"['destruct', 'inversion', 'subst', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,list_rel_refl,"['intros', 'induction', 'constructor', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,list_rel_corefl,"['intros', 'induction', 'f_equal', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,list_rel_sym,"['intros', 'induction', 'constructor', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,list_rel_trans,"['intros', 'revert', 'induction', 'inversion', 'constructor', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Relators.json,fold_impl_rstep,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_rexists_l,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_rexists_r,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_subrel_rexists_l,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_subrel_rexists_r,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_lub,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_refl_l,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_refl_r,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_corefl,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_union_sym,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_rexists,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_subrel_rexists_l,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_subrel_rexists_r,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_glb,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_refl,"['intros', 'split', 'reflexivity']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_corefl_l,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_corefl_r,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_trans,"['intros', 'split', 'etransitivity', 'eassumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_inter_sym,"['intros', 'split', 'symmetry', 'assumption']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,subrel_sym_flip,"['intros', 'symmetry', 'firstorder']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_impl_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_impl_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_impl_subrel_codomain,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_bot_subrel,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_bot_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_top_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_compose_id_left,"['unfold', 'split', 'intros', 'firstorder', 'congruence']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_compose_id_right,"['unfold', 'split', 'intros', 'firstorder', 'congruence']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_compose_assoc,"['unfold', 'split', 'intros', 'firstorder', 'congruence']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_pull_refl,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_pull_sym,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_pull_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_pull_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_push_corefl,"['intros', 'f_equal', 'eauto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_push_fst_rexists,"['intros', 'change', 'change', 'rintro', 'assumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_push_snd_rexists,"['intros', 'change', 'change', 'rintro', 'assumption']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_curry_relim,"['unfold', 'intros', 'subst', 'assumption']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,req_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,req_corefl,"['destruct', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,psat_corefl,"['intros', 'reflexivity']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_all_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_all_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_ex_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_ex_relim,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_incr_rintro,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/RelOperators.json,rel_incr_rdestruct,"['clear', 'intros', 'destruct', 'eapply', 'eauto', 'destruct', 'eapply', 'eauto']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/coqrel/Monotonicity.json,query_params_one,['constructor'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Monotonicity.json,query_params_both,['constructor'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Monotonicity.json,as_is_candidate,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Monotonicity.json,remove_params_candidate,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Monotonicity.json,remove_all_params_candidate,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Monotonicity.json,flip_context_candidate,['firstorder'],0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/coqrel/Monotonicity.json,f_equal_relim,"['intros', 'apply', 'eauto', 'congruence']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,divides_le,"['intros', 'elim', 'intro', 'intro', 'replace', 'try', 'rewrite', 'apply', 'try', 'destruct', 'omega']",0,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,euclide,"['intros', 'apply', 'intros', 'case', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'exists', 'exists', 'split', 'try', 'rewrite', 'trivial', 'elim', 'intros', 'rewrite', 'ring', 'omega', 'exists', 'exists', 'split', 'try', 'ring']",2,0,1,1,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,quo_rem_euclide,"['unfold', 'unfold', 'intros', 'generalize', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'tauto']",4,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,rem_euclide,"['unfold', 'intros', 'generalize', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'tauto']",4,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,euclide_unique,"['intros', 'rewrite', 'case', 'intro', 'case', 'intro', 'rewrite', 'try', 'rewrite', 'assert', 'apply', 'rewrite', 'trivial', 'assert', 'try', 'assert', 'try', 'case', 'intro', 'try', 'rewrite', 'trivial', 'split', 'try', 'rewrite', 'symmetry', 'apply', 'trivial', 'rewrite', 'try', 'rewrite', 'assert', 'apply', 'rewrite', 'trivial', 'assert', 'try', 'assert', 'try', 'case', 'intro', 'try', 'rewrite', 'trivial']",0,0,3,2,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,divides_euclide,"['intros', 'red', 'split', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'elim', 'intro', 'intro', 'assert', 'rewrite', 'simpl', 'trivial', 'assert', 'try', 'generalize', 'intros', 'tauto', 'generalize', 'rewrite', 'rewrite', 'simpl', 'intro', 'exists', 'trivial']",2,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,divides_dec,"['intros', 'case', 'case', 'intros', 'rewrite', 'left', 'apply', 'right', 'rewrite', 'intro', 'elim', 'intro', 'intro', 'simpl', 'apply', 'trivial', 'intro', 'case', '[left | right]', 'intros', 'elim', 'auto']",0,1,0,1,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,dec_impl_lt_dec,"['intros', 'induction', 'right', 'intros', 'inversion', 'case', 'intro', 'left', 'exists', 'split', 'try', 'case', 'intro', 'elim', 'intro', 'intro', 'left', 'exists', 'split', '[omega | tauto].', 'right', 'intros', 'inversion', 'trivial', 'apply', 'omega']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/euclide.json,divides_nat,"['intros', 'case', 'intros', 'case', 'intro', 'case', 'intros', 'right', 'intro', 'tauto', 'left', 'tauto', 'right', 'tauto', 'elim', 'intros', 'left', 'exists', 'split', 'try', 'split', 'try', 'omega', 'case', 'intro', 'rewrite', 'left', 'exists', 'split', 'try', 'discriminate', 'split', 'try', 'discriminate', 'apply', 'right', 'intros', 'case', 'intro', 'case', 'intro', '[red in n0', 'intro', 'apply', 'tauto', 'intro', 'generalize', 'omega']",1,0,0,1,1,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,sqrt_prime_irrat_aux,"['intros', 'intro', 'assert', 'apply', 'trivial', 'exists', 'rewrite', 'ring', 'elim', 'intro', 'intro', 'rewrite', 'rewrite', 'unfold', 'assert', 'apply', 'intro', 'rewrite', 'apply', 'trivial', 'rewrite', 'rewrite', 'ring', 'assert', 'apply', 'trivial', 'unfold', 'apply', 'apply', 'trivial', 'exists', 'trivial', 'assert', 'unfold', 'elim', 'intros', 'apply', 'try', 'apply', 'red', 'tauto', 'elim', 'tauto']",2,0,4,4,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,sqrt_prime_irrat,"['intros', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'intro', 'rewrite', 'replace', 'auto', 'rewrite', 'rewrite', 'assert', 'apply', 'unfold', 'generalize', 'intro', 'intro', 'apply', 'case', 'trivial', 'rewrite', 'ring', 'apply', 'auto', 'apply', 'apply', 'trivial']",2,0,4,2,2,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,sqrt_prime,"['intros', 'replace', 'try', 'apply', 'trivial', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,sqrt_2_irrat,"['intros', 'apply', 'trivial', 'apply']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,nth_root_irrat_aux,"['intros', 'intro', 'assert', 'apply', 'trivial', 'generalize', 'intro', 'elim', 'intro', 'intros', 'rewrite', 'rewrite', 'exists', 'ring', 'assert', 'elim', 'intro', 'intros', 'rewrite', 'rewrite', 'assert', 'rewrite', 'try', 'rewrite', 'rewrite', 'assert', 'intro', 'apply', 'assert', 'apply', 'trivial', 'rewrite', 'trivial', 'rewrite', 'rewrite', 'generalize', 'intro', 'assert', 'apply', 'apply', 'trivial', 'apply', 'trivial', 'apply', 'try', 'trivial', 'rewrite', 'apply', 'trivial', 'elim', 'intros', 'elim', 'intros', 'apply', 'apply', 'try', 'apply', 'red', 'tauto']",2,0,3,3,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,nth_root_irrat,"['intros', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'generalize', 'intro', 'assert', 'try', 'trivial', 'assert', 'try', 'trivial', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'intro', 'generalize', 'intro', 'apply', 'trivial', 'generalize', 'fold', 'apply', 'trivial', 'apply', 'apply', 'trivial']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,nth_root_irrational,"['intros', 'intro', 'rewrite', 'assert', 'apply', 'try', 'try', 'exists', 'rewrite', 'ring', 'assert', 'try', 'elim', 'intro', 'intro', 'rewrite', 'rewrite', 'rewrite', 'assert', 'intro', 'apply', 'generalize', 'intro', 'rewrite', 'trivial', 'rewrite', 'rewrite', 'generalize', 'fold', 'apply', 'trivial']",1,0,1,2,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/nthroot.json,nth_root,"['intros', 'case', 'intro', 'try', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'right', 'intros', 'assert', 'try', 'rewrite', 'apply', 'tauto']",0,0,0,1,1,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,one_min_div,"['intros', 'red', 'exists', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,zero_max_div,"['intros', 'red', 'exists', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,divides_refl,"['intros', 'red', 'exists', 'auto']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,divides_trans,"['unfold', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'exists', 'rewrite', 'auto']",2,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,divides_antisym,"['unfold', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'assert', 'apply', 'replace', 'try', 'case', 'intro', 'rewrite', 'simpl', 'rewrite', 'trivial', 'elim', 'intros', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'simpl', 'symmetry', 'trivial']",2,2,1,3,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,non_div_1,"['intros', 'red', 'intro', 'apply', 'apply', 'trivial', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,divides_plus,"['unfold', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'exists', 'rewrite', 'rewrite', 'ring']",2,0,0,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,divides_mult,"['unfold', 'intros', 'elim', 'intro', 'intro', 'exists', 'rewrite', 'ring']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,divides_minus,"['unfold', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'rewrite', 'exists', 'rewrite', 'rewrite', 'rewrite', 'auto']",2,0,0,3,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,quo_dec,"['intros', 'apply', 'trivial', 'intro', 'case', 'intros', 'exists', 'auto', 'elim', 'intro', 'intro', 'exists', 'replace', 'rewrite', 'rewrite', 'auto', 'symmetry', 'apply', 'elim', 'intros', 'rewrite', 'replace', 'rewrite', 'apply', 'destruct', '[rewrite mult_comm in H2', 'discriminate', 'simpl', 'auto', 'destruct', 'elim', 'simpl', 'intros', 'discriminate', 'omega', 'apply', '[apply divides_refl | trivial].']",2,2,1,4,1,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,quo_is_quo,"['intros', 'unfold', 'generalize', 'intro', 'elim', 'trivial']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/division.json,quo_mult,"['intros', 'generalize', 'intro', 'generalize', 'intro', 'replace', 'symmetry', 'rewrite', 'apply', 'trivial', 'rewrite', 'trivial', 'rewrite', 'trivial']",2,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_unique,"['unfold', 'intros', 'elim', 'elim', 'intros', 'apply', 'auto']",3,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_sym,"['unfold', 'intros', 'elim', 'intros', 'split', 'red', 'red', 'tauto', 'intros', 'apply', 'red', 'red', 'tauto']",4,0,0,0,1,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_zero,"['unfold', 'intro', 'split', 'red', 'split', '[apply zero_max_div | apply divides_refl].', 'unfold', 'tauto']",1,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_one,"['unfold', 'intros', 'split', 'red', 'split', '[apply divides_refl | apply one_min_div].', 'unfold', 'tauto']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_minus,"['intros', 'unfold', 'split', 'intro', 'elim', 'intros', 'split', 'red', 'red', 'elim', 'intros', 'split', 'try', 'apply', 'trivial', 'unfold', 'intros', 'apply', 'red', 'elim', 'intros', 'split', '[tauto | rewrite (le_plus_minus a b H)', 'apply', 'trivial', 'elim', 'unfold', 'intros', 'split', 'split', '[tauto | elim H1', 'intros', 'rewrite', 'apply', 'trivial', 'intros', 'elim', 'intros', 'apply', 'split', 'try', 'trivial']",4,0,1,2,0,5
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_refl,"['unfold', 'intros', 'unfold', 'split', 'try', 'split', 'apply']",3,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_div_l,"['unfold', 'unfold', 'intros', 'tauto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_div_r,"['unfold', 'unfold', 'intros', 'tauto']",2,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,Rwf,"['unfold', 'apply']",0,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_exists_prod,"['apply', 'unfold', 'unfold', 'intros', 'case', 'intro', 'case', 'intro', 'destruct', 'exists', 'apply', 'elim', 'simpl', 'intro', 'intro', 'exists', 'elim', 'try', 'simpl', 'omega', 'rewrite', 'exists', 'apply', 'destruct', 'exists', 'apply', 'apply', 'elim', 'simpl', 'intro', 'intro', 'exists', 'apply', 'elim', 'try', 'simpl', 'omega']",3,1,2,0,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_exists,"['intros', 'elim', 'simpl', 'intro', 'intro', 'exists', 'trivial']",1,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_is_gcd,"['intros', 'unfold', 'generalize', 'intro', 'elim', 'intro', 'trivial']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,rel_prime_sym,"['unfold', 'intros', 'apply', 'trivial']",3,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,rel_prime_1,"['unfold', 'intros', 'apply', 'apply']",3,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_rel_prime,"['unfold', 'intros', 'generalize', 'intro', 'generalize', 'intro', 'unfold', 'split', 'unfold', 'split', 'apply', 'intros', 'elim', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'rewrite', 'assert', 'red', 'elim', 'intros', 'apply', 'red', 'split', '[exists q', 'rewrite', 'ring', 'rewrite', 'ring', 'elim', 'intros', 'exists', 'apply', 'trivial', 'rewrite', 'rewrite', 'auto']",6,0,1,3,0,5
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_non_zero,"['unfold', 'intros', 'elim', 'intros', 'intro', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'simpl', 'auto']",2,2,0,1,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,bezout_aux1,"['intros', 'elim', 'intros', 'apply', 'rewrite', 'rewrite', 'try', 'rewrite', 'trivial']",1,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,bezout_aux2,"['intros', 'elim', 'intros', 'apply', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'trivial']",1,0,1,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,bezout_exists_prod,"['apply', 'unfold', 'unfold', 'intros', 'case', 'intro', 'case', 'intro', 'destruct', 'right', 'exists', 'simpl', 'rewrite', 'rewrite', 'simpl', 'apply', 'elim', 'try', 'simpl', 'elim', 'intro', 'intro', 'left', 'exists', 'simpl', 'apply', 'try', 'elim', 'intro', 'intro', 'right', 'exists', 'simpl', 'apply', 'try', 'simpl', 'omega', 'rewrite', 'left', 'exists', 'simpl', 'rewrite', 'rewrite', 'simpl', 'apply', 'destruct', 'left', 'exists', 'simpl', 'rewrite', 'rewrite', 'simpl', 'apply', 'apply', 'elim', 'try', 'simpl', 'elim', 'intro', 'intro', 'right', 'exists', 'apply', 'simpl', 'apply', 'try', 'elim', 'intro', 'intro', 'left', 'exists', 'apply', 'simpl', 'apply', 'try', 'simpl', 'omega']",2,5,2,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,bezout_exists,"['intros', 'elim', 'intro', 'elim', 'destruct', 'simpl', 'intros', 'left', 'exists', 'exists', 'rewrite', 'rewrite', 'trivial', 'elim', 'destruct', 'simpl', 'intros', 'right', 'exists', 'exists', 'rewrite', 'rewrite', 'trivial']",1,1,0,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,bezout,"['intros', 'elim', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'exists', 'exists', 'left', 'apply', 'trivial', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'exists', 'exists', 'right', 'apply', 'trivial']",0,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,bezout_rel_prime,"['intros', 'unfold', 'split', 'intro', 'apply', 'trivial', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'unfold', 'unfold', 'split', 'split', 'apply', 'intros', 'elim', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'rewrite', 'case', 'intro', 'exists', 'rewrite', 'rewrite', 'rewrite', 'trivial', 'exists', 'rewrite', 'rewrite', 'rewrite', 'trivial']",2,1,1,2,0,6
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_mult,"['unfold', 'unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'split', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'split', '[exists q', 'trivial', 'trivial', 'intros', 'elim', 'intros', 'elim', 'try', 'unfold', 'trivial', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'case', 'intro', ""[exists (q*u-q'*v) | exists (q'*v-q*u)]"", 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'trivial']",2,1,0,2,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gauss,"['unfold', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'case', 'intro', '[exists (q*u-b*v) | exists (b*v-q*u)]', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'auto']",2,0,0,2,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_euclide,"['intros', 'generalize', 'intro', 'red', 'split', 'intro', 'rewrite', 'elim', 'intros', 'unfold', 'unfold', 'elim', 'intros', 'split', 'split', 'try', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'replace', 'assert', 'rewrite', 'rewrite', 'trivial', 'rewrite', 'rewrite', 'exists', 'trivial', 'rewrite', 'trivial', 'intros', 'elim', 'intros', 'apply', 'unfold', 'split', 'try', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'replace', 'rewrite', 'rewrite', 'exists', 'trivial', 'rewrite', 'trivial', 'unfold', 'unfold', 'unfold', 'unfold', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'split', 'split', 'try', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'rewrite', 'replace', 'rewrite', 'rewrite', 'exists', 'trivial', 'rewrite', 'trivial', 'intros', 'apply', 'split', 'try', 'elim', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'assert', 'rewrite', 'trivial', 'rewrite', 'exists', 'rewrite', 'rewrite', 'rewrite', 'trivial']",4,1,1,3,0,6
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_exists_prod_bis,"['apply', 'unfold', 'unfold', 'intros', 'case', 'intro', 'case', 'intro', 'case', 'intro', 'rewrite', 'exists', 'apply', 'elim', 'simpl', 'intro', 'intro', 'exists', 'apply', 'elim', 'auto', 'generalize', 'try', 'rewrite', 'exists', 'apply', 'case', 'intro', 'rewrite', 'exists', 'apply', 'apply', 'elim', 'simpl', 'intro', 'intro', 'exists', 'elim', 'auto', 'generalize', 'try']",3,1,2,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,gcd_exists_bis,"['intros', 'elim', 'intro', 'simpl', 'intros', 'exists', 'trivial']",1,1,0,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,rel_prime_dec,"['intros', 'unfold', 'generalize', 'intro', 'case', 'intro', 'left', 'rewrite', 'trivial', 'right', 'intro', 'apply', 'apply', 'trivial']",2,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,rel_prime_mult,"['intros', 'split', 'split', 'try', 'intros', 'elim', 'intros', 'case', 'intro', 'assert', 'apply', 'trivial', 'elim', 'intros', 'apply', 'unfold', 'tauto', 'generalize', 'intro', 'assert', 'intro', 'apply', 'unfold', 'rewrite', 'trivial', 'generalize', 'intro', 'generalize', 'intro', 'assert', 'apply', '[apply H2 | apply H7].', 'elim', 'apply', 'apply', 'elim', 'intros', 'apply', 'unfold', 'tauto']",2,0,3,1,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,mult_rel_prime,"['intros', 'split', 'split', '[split | intros | split | intros]', 'try', 'elim', 'intros', 'elim', 'intros', 'apply', 'split', 'trivial', 'elim', 'intro', 'intro', 'rewrite', '[exists (q*c) | exists (q*b)]', 'ring']",1,0,0,1,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,rel_prime_power,"['induction', 'simpl', 'intros', 'unfold', 'apply', 'apply', 'generalize', 'intro', 'apply', 'trivial']",3,2,2,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,power_rel_prime,"['destruct', 'simpl', 'intros', 'inversion', 'elim', 'auto']",1,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/gcd.json,power_power_rel_prime,"['split', 'intro', 'apply', 'trivial', 'apply', 'apply', 'trivial', 'apply', 'trivial', 'apply', 'apply', 'apply', 'apply', 'trivial']",0,0,1,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,square_mult_lemma,"['unfold', 'intros', 'ring']",2,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_mult_lemma1,"['induction', 'simpl', 'trivial', 'intros', 'rewrite', 'ring']",0,1,0,1,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_plus_lemma1,"['induction', 'simpl', 'intros', 'auto', 'rewrite', 'ring']",1,2,0,0,1,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_divides_lemma1,"['induction', 'simpl', 'intros', 'inversion', 'exists', 'trivial']",1,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_power_lemma1,"['induction', 'simpl', 'intros', 'induction', 'simpl', 'auto', 'rewrite', 'ring', 'rewrite', 'rewrite', 'rewrite', 'trivial']",1,3,0,1,1,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_zero,"['induction', 'simpl', 'intros', 'discriminate', 'case', 'auto']",1,2,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_lt,"['induction', 'simpl', 'try', 'intros', 'destruct', 'simpl', 'try', 'simpl', 'assert', 'apply', 'auto', 'rewrite', 'apply', 'try', 'apply', 'try']",0,1,3,1,1,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_one,"['induction', 'simpl', 'trivial', 'rewrite', 'ring']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/power.json,power_divides_power,"['intros', 'case', 'trivial', 'intro', 'generalize', 'intro', 'rewrite', 'try', 'elim', 'intro', 'rewrite', 'intro', 'assert', 'apply', 'intro', 'generalize', 'omega', 'rewrite', 'rewrite', 'ring', 'symmetry', 'elim', 'intros', 'case', 'intro', 'try', 'assert', 'try', 'apply', '[apply one_min_div | rewrite <- H4', 'apply', 'omega']",2,0,2,2,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_snoc,"['induction', 'simpl', 'apply', 'simpl', 'apply', 'auto']",0,3,1,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_in,"['intros', 'induction', 'simpl', 'tauto']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_inclusion,"['induction', 'simpl', 'try', 'intros', 'inversion', 'simpl', 'try', 'case', 'try', 'right', 'auto']",0,1,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,in_insertion,"['induction', 'simpl', 'try', 'intros', 'case', 'intro', 'rewrite', 'exists', 'apply', 'elim', 'intro', 'intro', 'exists', 'apply', 'trivial']",0,1,0,1,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,in_insertion_inv,"['intros', 'induction', 'simpl', 'case', 'intro', 'try', 'tauto', 'case', 'simpl', 'intro', 'tauto']",1,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,is_set_insertion,"['induction', 'intros', 'inversion', 'trivial', 'inversion', 'apply', 'apply', 'trivial', 'intro', 'apply', 'apply', 'trivial']",1,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,is_set_insertion_in,"['induction', 'simpl', 'try', 'intros', 'inversion', 'rewrite', 'inversion', 'simpl', 'trivial', 'intro', 'case', 'intro', 'apply', 'rewrite', 'eapply', 'apply', 'elim']",0,1,2,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,is_set_eq_impl_permutation,"['induction', 'intros', 'simpl', 'destruct', 'apply', 'elim', 'intros', 'elim', 'simpl', 'tauto', 'inversion', 'symmetry', 'rewrite', 'elim', 'intros', 'rewrite', 'rewrite', 'assert', 'auto', 'elim', 'intro', 'intro', 'apply', 'trivial', 'apply', 'trivial', 'split', 'intro', 'elim', 'intros', 'elim', 'auto', 'intro', 'rewrite', 'rewrite', 'tauto', 'elim', 'intros', 'case', 'try', 'apply', 'trivial', 'intro', 'rewrite', 'elim', 'trivial', 'eapply', 'eauto']",2,0,1,3,1,8
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,is_permutation_refl,"['induction', 'apply', 'eapply', '[apply IHl | apply head_insertion].']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_is_permutation,"['induction', 'apply', '[apply is_permutation_refl | apply head_insertion].', 'apply', '[apply is_permutation_refl | apply tail_insertion', 'trivial']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_trans,"['induction', 'intros', 'inversion', 'exists', 'split', '[apply head_insertion | apply tail_insertion', 'apply', 'exists', 'split', '[trivial | apply head_insertion].', 'inversion', 'exists', 'split', '[apply head_insertion | apply tail_insertion', 'apply', 'trivial', 'elim', 'intro', 'intro', 'elim', 'intros', 'exists', 'split', '[apply tail_insertion | apply tail_insertion]', 'trivial']",1,0,0,0,0,6
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,permutation_insertion,"['induction', 'intros', 'inversion', 'inversion', 'apply', 'inversion', 'apply', 'trivial', 'apply', 'trivial', 'elim', 'intro', 'intro', 'elim', 'intros', 'apply', 'trivial', 'eapply', 'eauto']",2,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,is_permutation_sym,"['induction', '[apply nil_is_permutation | eapply permutation_insertion', 'eauto', 'apply']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,permutation_in,"['induction', 'simpl', 'intros', 'inversion', 'simpl', 'tauto', 'inversion', 'simpl', 'split', 'intro', 'case', 'intro', 'eapply', 'rewrite', 'apply', 'elim', 'intros', 'eapply', 'eauto', 'case', 'intro', 'rewrite', 'tauto', 'elim', 'intros', 'right', 'auto']",1,2,1,2,1,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,permutation_insertion_aux,"['intros', 'eapply', 'eauto', 'apply']",0,0,0,0,1,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,length_recursion,"['intros', 'apply', 'unfold', 'auto']",1,0,1,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_length,"['induction', 'simpl', 'trivial', 'rewrite', 'trivial']",0,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,permutation_length,"['induction', 'simpl', 'trivial', 'generalize', 'intro', 'congruence']",1,1,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_permutation_eq,"['induction', 'intros', 'inversion', 'inversion', 'apply', 'rewrite', 'destruct', 'inversion', 'generalize', 'intro', 'assert', 'eapply', 'apply', 'case', 'intro', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'assert', 'eapply', 'eauto', 'eapply', 'eauto', 'apply', 'elim', 'intro', 'intro', 'generalize', 'intro', 'assert', 'eapply', 'eauto', 'apply', 'auto', 'eapply', 'eauto', 'rewrite', 'inversion', 'rewrite', 'apply', 'trivial', 'assert', 'eapply', 'eauto', 'eapply', 'eauto', 'apply']",2,0,3,3,2,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,is_permutation_impl_is_permutation_reverse,"['intros', 'apply', 'rewrite', 'rewrite', 'trivial']",1,0,1,1,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_append,"['induction', 'simpl', 'intros', 'apply', 'intros', 'simpl', 'apply', 'apply']",4,3,2,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_map,"['induction', 'intros', 'exists', 'simpl', 'split', 'subst', 'subst', 'auto', 'apply', 'destruct', 'discriminate', 'simpl', 'injection', 'clear', 'intros', 'elim', 'intro', 'intros', 'elim', 'clear', 'intros', 'exists', 'simpl', 'split', 'subst', 'subst', 'auto', 'apply', 'auto']",1,0,1,0,1,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,is_permutation_map,"['induction', 'intros', 'destruct', 'try', 'exists', 'split', 'apply', 'reflexivity', 'intros', 'destruct', 'try', 'simpl', 'injection', 'clear', 'intros', 'subst', 'elim', 'intro', 'intros', 'elim', 'clear', 'intros', 'subst', 'elim', 'intros', 'elim', 'clear', 'intros', 'exists', 'split', 'auto', 'eapply', 'eauto']",1,0,0,1,1,7
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,insertion_append_decompose,"['induction', 'exists', 'exists', 'split', 'try', 'elim', 'intro', 'intro', 'elim', 'intro', 'intros', 'elim', 'clear', 'intros', 'exists', 'exists', 'subst', 'subst', 'split', 'try']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/permutation.json,permutation_impl_Permutation,"['induction', 'apply', 'elim', 'intro', 'intros', 'elim', 'intro', 'intros', 'elim', 'clear', 'intros', 'subst', 'subst', 'apply', 'auto']",0,0,1,1,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_lemma1,"['intros', 'rewrite', 'induction', 'simpl', 'auto', 'elim', 'trivial']",0,2,0,1,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_lemma2,"['intros', 'induction', 'tauto', 'simpl', 'right', 'assert', 'try', 'rewrite', 'auto']",0,0,0,1,1,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_lemma3,"['intros', 'rewrite', 'induction', 'inversion', 'simpl', 'assert', 'try', 'inversion', 'try', 'assert', 'try', 'assert', 'try', 'generalize', 'omega']",0,0,0,1,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_lemma4,"['intros', 'case', 'left', 'trivial', 'intros', 'right', 'destruct', 'rewrite', 'discriminate', 'destruct', 'trivial', 'assert', 'apply', 'intros', 'auto', 'rewrite', 'elim']",1,0,2,0,1,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_lemma5,"['induction', 'simpl', 'intros', 'try', 'induction', 'rewrite', 'simpl', 'discriminate', 'assert', 'apply', 'discriminate', 'assert', 'reflexivity', 'rewrite', 'rewrite', 'assert', 'omega', 'split', 'trivial', 'inversion', 'rewrite', 'simpl', 'omega']",1,3,1,1,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,plus_minus_lemma1,"['induction', 'intros', 'rewrite', 'simpl', 'auto', 'rewrite', 'apply']",1,2,0,2,1,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_minus_lemma1,"['intros', 'induction', 'simpl', 'trivial', 'replace', 'try', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'trivial']",0,3,0,1,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_lemma6,"['induction', 'intros', 'rewrite', 'generalize', 'intros', 'elim', 'intros', '(auto || elim H', 'auto', 'intros', 'rewrite', 'simpl', 'rewrite', 'intro', 'assert', 'apply', 'auto', 'assert', 'rewrite', 'rewrite', 'rewrite', 'trivial', 'assert', 'apply', 'trivial', 'rewrite', 'rewrite', 'trivial', 'destruct', 'simpl', 'rewrite', 'rewrite', 'rewrite', 'simpl', 'elim', 'trivial', 'rewrite', 'auto']",2,2,2,3,1,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_lemma7,"['intros', 'ring']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,minus_lemma1,"['intros', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,minus_lemma2,"['intros', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,mult_minus_lemma2,"['intros', 'case', 'intro', 'rewrite', 'rewrite', 'simpl', 'rewrite', 'trivial', 'auto', 'assert', 'rewrite', 'try', 'replace', 'rewrite', 'rewrite', 'trivial', 'rewrite', 'trivial']",0,2,0,2,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,plus_minus_lemma2,"['intros', 'rewrite', 'try', 'rewrite', 'rewrite', 'rewrite', 'trivial']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,minus_minus_lemma1,"['intros', 'rewrite', 'trivial', 'rewrite', 'rewrite', 'rewrite', 'trivial']",0,0,0,2,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,minus_minus_lemma2,"['induction', 'simpl', 'trivial', 'intros', 'case', 'simpl', 'trivial']",0,2,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/missing.json,minus_lt_lemma1,"['intros', 'omega']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,not_prime_zero,"['unfold', 'intro', 'elim', 'intros', 'case', 'try', 'intro', 'discriminate']",1,0,0,0,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,is_prime_2,"['unfold', 'split', 'intro', 'discriminate', 'intros', 'elim', 'destruct', 'rewrite', 'intro', 'discriminate', 'simpl', 'case', 'simpl', 'rewrite', 'simpl', 'intro', 'discriminate', 'intros', 'inversion', 'symmetry', 'case', 'intro', 'elim', 'intros', 'left', 'rewrite', 'trivial', 'elim', 'intros', 'right', 'rewrite', 'trivial']",1,3,0,0,0,5
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_div_gcd,"['unfold', 'unfold', 'intros', 'unfold', 'unfold', 'split', 'split', 'apply', 'intros', 'elim', 'intros', 'elim', 'intros', 'case', 'intro', 'rewrite', 'apply', 'rewrite', 'tauto']",4,1,2,2,1,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_gcd,"['unfold', 'intros', 'elim', 'intros', 'apply', 'elim', 'intros', 'elim', 'trivial']",3,0,0,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_rel_prime,"['unfold', 'intros', 'generalize', 'intros', 'case', 'intro', 'rewrite', 'try', 'elim', 'intros', 'elim', 'trivial']",4,0,0,1,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_mult,"['intros', 'generalize', 'intro', 'case', 'intro', 'rewrite', 'right', 'apply', 'trivial', 'red', 'elim', 'intros', 'red', 'tauto']",2,0,0,1,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_square,"['unfold', 'intros', 'case', 'trivial']",2,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_power,"['induction', 'simpl', 'intros', 'elim', 'intros', 'elim', 'apply', 'trivial', 'apply', 'case', 'trivial', 'intro', 'apply', 'trivial']",1,2,0,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_power_qn,"['induction', 'simpl', 'intros', 'apply', 'rewrite', 'assert', 'apply', 'trivial', 'elim', 'intros', 'exists', 'rewrite', 'ring', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'elim', 'intros', 'assert', 'intro', 'generalize', 'intro', 'apply', 'rewrite', 'trivial', 'rewrite', 'generalize', 'intro', 'assert', 'inversion', '[exists 0 | exists m]', 'trivial', 'elim', 'intro', 'intro', 'rewrite', 'simpl', 'assert', 'case', 'trivial', 'rewrite', 'exists', 'ring', 'intro', 'apply', 'trivial', 'elim', 'intros', 'rewrite', 'rewrite', 'exists', 'ring']",3,3,2,3,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,divides_prime,"['intros', 'intro', 'elim', 'intro', 'intro', 'elim', 'intros', 'elim', 'intros', 'unfold', 'elim', 'intros', 'unfold', 'elim', 'intros', 'case', 'auto']",1,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,gcd_prime,"['intros', 'split', 'try', 'intro', 'intro', 'assert', 'unfold', 'unfold', 'split', '[split', '[apply divides_refl | tauto] | tauto].', 'eapply', 'apply']",0,1,1,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_cond,"['split', 'intros', 'elim', 'intros', 'split', 'try', 'intros', 'case', 'intro', 'try', 'case', 'intro', 'try', 'elim', 'elim', 'intros', 'split', 'try', 'intros', 'intro', 'elim', 'auto']",0,0,0,0,0,7
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_dec,"['intro', 'case', 'intro', 'elim', 'intros', 'right', 'intro', 'unfold', 'elim', 'intros', 'elim', 'try', 'case', 'intro', 'right', 'unfold', 'tauto', 'left', 'unfold', 'split', 'trivial', 'intros', 'case', 'try', 'case', 'try', 'intros', 'elim']",0,0,0,0,0,4
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,not_prime_impl_prime_divides,"['intro', 'apply', 'intros', 'case', 'try', 'intro', 'case', 'intro', 'left', 'exists', 'split', '[apply is_prime_2 | rewrite e', 'apply', 'case', 'intro', 'elim', 'intro', 'intro', 'elim', 'intros', 'elim', 'intros', 'assert', 'generalize', 'omega', 'case', 'intro', 'left', 'exists', 'tauto', 'elim', 'try', 'intro', 'elim', 'intro', 'intro', 'left', 'exists', 'split', 'try', 'apply', 'try', 'elim', 'intros', 'elim', 'apply', 'auto']",1,0,3,0,0,6
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,nat_factor,"['intros', 'apply', 'intros', 'case', 'intro', 'generalize', 'intro', 'elim', 'intro', 'intros', 'exists', 'elim', 'intros', 'elim', 'intros', 'rewrite', 'rewrite', 'rewrite', 'split', 'simpl', 'exists', 'trivial', 'rewrite', 'simpl', 'rewrite', 'rewrite', 'intro', 'elim', 'intros', 'rewrite', 'assert', 'intro', 'rewrite', 'apply', 'trivial', 'assert', 'apply', 'trivial', 'rewrite', 'rewrite', 'ring', 'rewrite', 'rewrite', 'apply', 'rewrite', 'simpl', 'exists', 'trivial', 'rewrite', 'rewrite', 'apply', 'intro', 'apply', 'rewrite', 'rewrite', 'trivial', 'elim', 'intros', 'destruct', 'omega', 'intro', 'apply', 'rewrite', 'rewrite', 'ring', 'exists', 'simpl', 'split', 'apply', 'rewrite', 'simpl', 'rewrite', 'simpl', 'trivial']",3,2,3,4,0,7
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,nat_factor_prime,"['intros', 'case', 'intro', 'exists', 'exists', 'exists', 'simpl', 'split', 'try', 'split', 'try', 'split', 'try', 'split', 'try', 'apply', 'apply', 'elim', 'intro', 'try', 'elim', 'intro', 'intro', 'elim', 'intros', 'elim', 'intro', 'intro', 'elim', 'intros', 'exists', 'exists', 'exists', 'split', 'trivial', 'split', 'destruct', 'try', 'elim', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'trivial', 'split', 'apply', 'generalize', 'intro', 'assert', 'case', 'trivial', 'apply', 'trivial', 'intro', 'rewrite', 'elim', 'intros', 'elim', 'intros', 'elim', 'rewrite', 'simpl', 'generalize', 'intro', 'elim', 'intros', 'rewrite', 'exists', 'rewrite', 'ring', 'rewrite', 'trivial', 'generalize', 'intro', 'split', 'trivial', 'rewrite', 'rewrite', 'apply', 'intro', 'apply', 'rewrite', 'rewrite', 'ring', 'red', 'apply', 'destruct', 'elim', 'destruct', 'try', 'elim', 'tauto', 'destruct', 'try', 'elim', 'simpl', 'rewrite', 'simpl', 'rewrite', 'simpl', 'trivial', 'trivial']",2,2,3,4,0,9
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,factorisation,"['intro', 'case', 'intro', 'right', 'trivial', 'case', 'intro', 'left', 'exists', 'split', '[apply nil_is_wf | simpl', 'trivial', 'generalize', 'apply', 'intros', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'case', 'intro', 'left', 'exists', 'simpl', 'rewrite', 'split', 'trivial', 'apply', 'auto', 'try', 'unfold', 'simpl', 'rewrite', 'trivial', 'assert', 'intro', 'rewrite', 'rewrite', 'simpl', 'auto', 'elim', 'intro', 'elim', 'intro', 'intro', 'elim', 'intros', 'left', 'exists', 'simpl', 'rewrite', 'split', 'trivial', 'apply', 'auto', 'rewrite', 'unfold', 'trivial', 'intro', 'tauto']",1,4,2,3,1,5
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,factor_divides_refactor,"['induction', 'simpl', 'try', 'intro', 'case', 'intro', 'destruct', 'rewrite', 'simpl', 'exists', 'trivial', 'destruct', 'elim', 'intros', 'rewrite', 'exists', 'ring']",0,2,0,1,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_divides_refactor,"['induction', 'simpl', 'intros', 'assert', 'apply', 'trivial', 'apply', 'rewrite', 'elim', 'tauto', 'destruct', 'case', 'intro', 'generalize', 'intro', 'assert', 'inversion', 'elim', 'intros', 'elim', 'intros', 'case', 'try', 'try', 'exists', 'rewrite', 'left', 'trivial', 'inversion', 'elim', 'intros', 'exists', 'tauto', 'apply', 'trivial', 'apply', 'apply', 'trivial']",2,2,3,0,1,6
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,in_wf,"['induction', 'simpl', 'try', 'intros', 'destruct', 'inversion', 'case', 'intros', 'inversion', 'rewrite', 'rewrite', 'try', 'apply', 'trivial']",0,1,1,1,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,rel_prime_wf,"['induction', 'simpl', 'intros', 'try', 'destruct', 'inversion', 'case', 'intro', 'rewrite', 'simpl', 'elim', 'trivial', 'intros', 'elim', 'intros', 'apply', 'apply', 'trivial', 'apply', 'trivial', 'apply', 'trivial', 'inversion', 'trivial', 'simpl', 'elim', 'auto']",2,3,1,1,0,3
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,wf_impl_pwd,"['induction', 'intro', 'apply', 'destruct', 'inversion', 'apply', 'auto', 'intros', 'intro', 'assert', 'eapply', '[apply H7 | apply H].', 'generalize', 'intro', 'unfold', 'assert', 'eapply', 'eauto', 'rewrite', 'elim', 'tauto']",2,0,1,0,2,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,prime_power_divides_refactor,"['induction', 'simpl', 'intros', 'try', 'case', 'intro', 'rewrite', 'rewrite', 'inversion', 'generalize', 'intro', 'rewrite', 'generalize', 'intro', 'apply', 'trivial', 'destruct', 'elim', 'elim', 'omega', 'destruct', 'inversion', 'apply', 'trivial', 'apply', 'trivial', 'apply', 'apply', 'apply', 'apply', 'trivial']",2,2,1,2,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,factorisation_unique_upto_equiv_aux,"['intros', 'intro', 'intro', 'intro', 'intros', 'intro', 'elim', 'intros', 'generalize', 'simpl', 'intro', 'rewrite', 'assert', 'apply', '[trivial | apply power_divides_lemma1', 'auto', 'elim', 'intro', 'intro', 'cut', 'intro', 'rewrite', 'trivial', 'apply', 'eapply', 'eauto', 'generalize', 'simpl', 'intro', 'rewrite', 'apply', 'auto', 'elim', 'trivial']",2,0,2,2,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,pwd_impl_set,"['induction', '[apply nil_is_set | apply cons_is_set', 'auto']",0,0,0,0,0,0
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,factorisation_unique_upto_perm,"['intros', 'assert', 'apply', 'trivial', 'assert', 'apply', 'auto', 'apply', 'intros', '(try (apply pwd_impl_set', 'apply', 'trivial', 'destruct', 'split', 'auto']",1,0,3,0,2,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,factorisation_exists,"['intros', 'case', 'intros', 'try']",0,0,0,0,0,1
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,factorisation_unique_upto_permutation,"['unfold', 'intros', 'elim', 'intros', 'elim', 'intros', 'apply', 'auto', 'congruence']",3,0,1,0,0,2
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,wf_power_dec,"['intro', 'induction', 'simpl', 'intros', 'left', 'exists', 'rewrite', 'trivial', 'destruct', 'assert', 'try', 'generalize', 'intro', 'case', 'intro', 'rewrite', 'rewrite', 'simpl', 'case', 'intros', 'trivial', 'inversion', 'trivial', 'elim', 'intro', 'intro', 'rewrite', 'left', 'rewrite', 'rewrite', 'rewrite', 'rewrite', 'exists', 'trivial', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intro', 'intro', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'elim', 'intros', 'right', 'exists', 'exists', 'exists', 'rewrite', 'rewrite', 'rewrite', 'exists', 'split', 'trivial', 'split', 'trivial', 'split', 'trivial', 'split', 'trivial', 'apply', 'trivial', 'inversion', 'rewrite', 'elim', 'intros', 'apply', 'apply', 'apply', 'trivial', 'rewrite', 'auto', 'right', 'exists', 'exists', 'exists', 'rewrite', 'rewrite', 'exists', 'elim', 'intros', 'split', 'trivial', 'split', 'trivial', 'destruct', 'try', 'auto', 'split', 'trivial', 'apply', 'split', 'trivial', 'inversion', 'trivial', 'simpl', 'tauto', 'trivial']",3,3,1,3,0,6
/mnt/cisk/zmq/dataset/data/fundamental-arithmetics/primes.json,is_power_m_dec,"['intros', 'intro', 'case', 'intro', 'left', 'exists', 'destruct', 'simpl', 'try', 'trivial', 'generalize', 'intro', 'elim', 'intro', 'intro', 'elim', 'intros', 'rewrite', 'apply', 'trivial']",1,0,0,2,0,2
